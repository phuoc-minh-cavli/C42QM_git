#===============================================================================
# QMI SLIM Interface
#
# GENERAL DESCRIPTION
#    QMI SLIM Client build file
#
# Copyright (c) 2019 Qualcomm Technologies, Inc.
# All Rights Reserved.
# Confidential and Proprietary - Qualcomm Technologies, Inc.
#===============================================================================
from glob import glob
from os.path import join, basename

Import('env')
env = env.Clone()

#-------------------------------------------------------------------------------
# Source PATH
#-------------------------------------------------------------------------------
SRCPATH = "${BUILD_ROOT}/location/slim/client/src"

env.VariantDir('${BUILDPATH}', SRCPATH, duplicate=0)

#-------------------------------------------------------------------------------
# Internal depends within CoreBSP
#-------------------------------------------------------------------------------
CBSP_API = [
   'DAL',
   'HAL',
   'DEBUGTOOLS',
   'MPROC',
   'POWER',
   'SERVICES',
   'SYSTEMDRIVERS',
   'KERNEL'
]

env.RequirePublicApi(CBSP_API, 'core')
env.RequireRestrictedApi(CBSP_API)

#-------------------------------------------------------------------------------
# Sources, libraries
#-------------------------------------------------------------------------------

INC_DIRS = []

INC_DIRS = [
   '${INC_ROOT}/location/api/inc',
   '${INC_ROOT}/location/core/inc',
   '${INC_ROOT}/location/izat_core/inc',
   '${INC_ROOT}/location/loc_api/loc_api_v02/inc',
   '${INC_ROOT}/location/utils/inc',
   '${INC_ROOT}/location/slim/qmimsgs/inc',
   '${INC_ROOT}/location/slim/client/inc',
   '${INC_ROOT}/location/slim/client/src',
   '${INC_ROOT}/location/slim/provider/qmislim/inc',
   '${INC_ROOT}/location/slim/common/core/inc',
   '${INC_ROOT}/location/slim/common/osal/inc',
   '${INC_ROOT}/location/slim/common/client/inc',
   '${INC_ROOT}/location/slim/utils/inc',
   '${INC_ROOT}/location/slim/qmislim/common/inc',
   '${INC_ROOT}/location/slim/qmislim/qmiclient/inc',
   '${INC_ROOT}/location/slim/qmislim/qmiservice/inc',
   '${INC_ROOT}/location/slim/qmislim/monitor/inc',
   '${INC_ROOT}/api/common/api',
   '${INC_ROOT}/core/api/dal',
   '${INC_ROOT}/core/api/mproc',
   '${INC_ROOT}/core/api/services',
   '${INC_ROOT}/core/api/systemdrivers',
   '${INC_ROOT}/core/api/kernel/devcfg',
   '${INC_ROOT}/core/api/kernel/qurt',
   '${INC_ROOT}/core/api/kernel/threadx',
   '${INC_ROOT}/core/kernel/dlfwk/rtld/inc',
   '${INC_ROOT}/core/api/services',
]

env.PublishPrivateApi('LOC_API_V02', INC_DIRS)

# Whitelist of files to compile and ship
COMPILE_LIST  =  ['SlimClientBase.cpp',
                  'QmiSlimClient.cpp',
                 ]
SLIM_CLIENT_SOURCES = env.GenerateCompileList(SRCPATH, COMPILE_LIST)

# All other files are considered no ship and need to be removed
BLACK_LIST = [basename(fname) for fname in glob(join(env.subst(SRCPATH), '*.cpp')) if basename(fname) not in COMPILE_LIST] + \
             [basename(fname) for fname in glob(join(env.subst(SRCPATH), '*.h')) if basename(fname) not in COMPILE_LIST]
env.CleanPack('CLEANPACK_TARGET', env.FindFiles(BLACK_LIST, SRCPATH))

#-------------------------------------------------------------------------------
# Add Libraries to image
#-------------------------------------------------------------------------------
IMG_LIST = ['APPS_IMAGE', 'CBSP_APPS_IMAGE']

env.AddBinaryLibrary(IMG_LIST, ('${BUILDPATH}/slim/client'), SLIM_CLIENT_SOURCES)

