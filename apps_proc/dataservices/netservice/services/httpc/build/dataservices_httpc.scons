#===============================================================================
#
# HTTP client 
#
# GENERAL DESCRIPTION
# HTTP client build script.
#
# Copyright (c) 2012-2020 by QUALCOMM Technologies, Inc. All Rights Reserved.
#
#-------------------------------------------------------------------------------
#                      EDIT HISTORY FOR FILE
#
#  $Header: 
#  $DateTime: 2021/03/26 04:11:03 $
#                      
#  This section contains comments describing changes made to the module.
#  Notice that changes are listed in reverse chronological order.
#  
# when       who     what, where, why
# --------   ---     ---------------------------------------------------------
# 25Jan2017 vpulimi  Created the module. First version of the file.
#===============================================================================
Import('env')
env = env.Clone()

if 'USES_MOB' in env:
  env.RequirePublicApi('STUB')

if 'USES_ENABLE_HTTPC' not in env:
	Return()

#env.Append(CPPDEFINES=["MHI_TEST_VIRTIO_ENV"])

env.RequirePublicApi('KERNEL', area='core')
env.RequirePublicApi('SERVICES', area='core')
env.RequirePublicApi('DEBUGTOOLS', area='core')
env.RequirePublicApi('SYSTEMDRIVERS', area='core')
env.RequirePublicApi('HWENGINES', area='core')
env.RequirePublicApi('DAL', area='core')
env.RequirePublicApi('MEMORY', area='core')
env.RequirePublicApi('POWER', area='core')
env.RequirePublicApi('MPROC', area='core')
env.RequirePublicApi('STORAGE', area='core')
env.RequirePublicApi('WIREDCONNECTIVITY', area='core')
env.RequirePublicApi('WDS', area='api')
env.RequirePublicApi('WDS_EXT', area='api')
env.RequirePublicApi('DPM', area='api')
env.RequirePublicApi('COMMON', area='api')

env.RequirePublicApi(['QAPI'])
env.RequirePublicApi('NICHESTACK')
env.RequirePublicApi('NICHESTACK_PORT')
env.RequirePublicApi(['NICHESTACK'])
env.RequirePublicApi(['HTTPC'])
env.RequirePublicApi('UTILS_EXT')
env.RequirePublicApi(['UTILS'], area='dataservices')

DATASERVICES_RESTRICTED_APIS = [
  'DS_UTILS'
  ]

env.RequireRestrictedApi(DATASERVICES_RESTRICTED_APIS)
env.RequireRestrictedApi(['NET_UTILS'])

SRCPATH = '${BUILD_ROOT}/dataservices/netservice/services'
env.VariantDir('${BUILDPATH}', SRCPATH, duplicate=0)

ROM_SOURCES = []
RAM_SOURCES = [
               '${BUILDPATH}/httpc/http_client_req.c',
			   '${BUILDPATH}/httpc/http_client_rsp.c',
              ]
    
# The following objects are to be placed in XIP
DATASERVICES_SOURCES = [
                ROM_SOURCES,
                RAM_SOURCES,
                ]

IMAGES = ['DATA_TN', 'APPS_PROC', 'APPS_IMAGE','MOB_DATASERVICES']
env.AddBinaryLibrary(IMAGES, ('${BUILDPATH}/httpc'), DATASERVICES_SOURCES)

#-------------------------------------------------------------------------------
# RCINIT Task and Init Fields and Initialization
#-------------------------------------------------------------------------------
RCINIT_INIT_HTTPC_TASK_INIT = {
  'sequence_group'             : 'RCINIT_GROUP_2',           # required
  'init_name'                  : 'http_client_init',                      # required
  'init_function'              : 'http_client_init',           # required
  'dependencies'               : ['netmain']
}


if 'USES_RCINIT' in env:
  RCINIT_IMG = ['CBSP_APPS_IMAGE', 'APPS_IMAGE', 'MOB_DATASERVICES']
  env.AddRCInitFunc( RCINIT_IMG, RCINIT_INIT_HTTPC_TASK_INIT )

#-------------------------------------------------------------------------------
# Load the rest of the software units
#-------------------------------------------------------------------------------
env.LoadSoftwareUnits()
