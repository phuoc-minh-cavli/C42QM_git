#===============================================================================
#
# TX sensor module app scons script
#
# GENERAL DESCRIPTION
#    build script
#
# Copyright (c) 2017 by QUALCOMM Technologies, Inc. All Rights Reserved.
#
#-------------------------------------------------------------------------------
#                      EDIT HISTORY FOR FILE
#
#  $Header: //components/rel/dataservices.tx/6.0/sensor/build/sensor.scons#2 $
#  $DateTime: 2020/04/13 23:04:46 $
#
#  This section contains comments describing changes made to the module.
#  Notice that changes are listed in reverse chronological order.
#===============================================================================
Import('env')
env = env.Clone()
env.Append(CPPDEFINES = 'INCLUDE_SSLDEMO')
env.Append(CPPDEFINES = 'ENABLE_SSL')

#The following flag is globally defined when compiling a module
env.Append(CPPDEFINES = [
   "TXM_MODULE",
   "QAPI_TXM_MODULE",
   "TX_DAM_QC_CUSTOMIZATIONS",
    "FX_FILEX_PRESENT",
   ])

env.Append(CFLAGS = ['-DLWM2M_LITTLE_ENDIAN'])

env.RequirePublicApi('KERNEL', area='core')
env.RequirePublicApi('SERVICES', area='core')
env.RequirePublicApi('DEBUGTOOLS', area='core')
env.RequirePublicApi('SYSTEMDRIVERS', area='core')
env.RequirePublicApi('HWENGINES', area='core')
env.RequirePublicApi('DAL', area='core')
env.RequirePublicApi('MEMORY', area='core')
env.RequirePublicApi('POWER', area='core')
env.RequirePublicApi('MPROC', area='core')
env.RequirePublicApi('STORAGE', area='core')
env.RequirePublicApi('WIREDCONNECTIVITY', area='core')
env.RequirePublicApi('COMMON', area='api')
env.RequirePublicApi('STORAGE_FILESYSTEM', area='core')
env.RequirePublicApi('STORAGE_FLASH', area='core')
env.RequirePublicApi('BUSES', area='core')
env.RequirePublicApi('WDS', area='API')
env.RequirePublicApi(['DSS_NET'],area='dataservices')
env.RequirePublicApi(['QAPI'])
env.RequirePublicApi(['PSM_CLIENT'], area="ril")
env.RequirePublicApi(['QCMAP'], area='dataservices')
env.RequireRestrictedApi(['QCLI_DEMO'])
env.RequirePublicApi('QCMAP_EXT')
env.RequirePublicApi('ATFWD_EXT')
env.RequirePublicApi(['DATASERVICES_NET_IPSTACK'])
env.RequirePublicApi('UTILS_EXT')
DATASERVICES_RESTRICTED_APIS = [
    'DS_UTILS',
    ]

env.RequirePublicApi(['QFLOG_EXT'])

env.RequireRestrictedApi(DATASERVICES_RESTRICTED_APIS)

env.RequireRestrictedApi(['NET_UTILS'])

env.RequirePublicApi([
        'NICHESTACK',
        'SHARKSSL',
        'MISC_NETSERVICES',
        ])


env.PublishPrivateApi('SENSOR_DAM_DEMO_H', [
        "${BUILD_ROOT}/dataservices/sensor/src/demo",
   ])

SRCPATH = '${BUILD_ROOT}/dataservices/sensor/src'
env.VariantDir('${BUILDPATH}', SRCPATH, duplicate=0)

if 'USES_ARM' in env:
	SENSOR_DEMO_SOURCES = [
	'${BUILDPATH}/txm_module_preamble.S',
    '${BUILDPATH}/demo/test_app_module.c',
	'${BUILDPATH}/demo/test_main_module.c',
    '${BUILDPATH}/demo/test_utils.c',
]
else:
	SENSOR_DEMO_SOURCES = [
	'${BUILDPATH}/txm_module_preamble_llvm.S',
    '${BUILDPATH}/demo/test_app_module.c',
	'${BUILDPATH}/demo/test_main_module.c',
    '${BUILDPATH}/demo/test_utils.c',
]
env.AddObject(['SENSOR_DEMO'], SENSOR_DEMO_SOURCES)
#-------------------------------------------------------------------------------
# Load the rest of the software units
#-------------------------------------------------------------------------------
env.LoadSoftwareUnits()

# Fix ARMTOOLS License
# if 'USES_ARM' in env:
# 	env.Append(CCFLAGS = "--diag_error=warning")
# else:
# 	"do nothing"