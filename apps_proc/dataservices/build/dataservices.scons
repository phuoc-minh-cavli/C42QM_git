#===============================================================================
#
# Dataservices APSS TX Include Paths
#
# GENERAL DESCRIPTION
#    build script
#
# Copyright (c) 2012-2021 by QUALCOMM Technologies, Inc. All Rights Reserved.
#
#-------------------------------------------------------------------------------
#                      EDIT HISTORY FOR FILE
#
#  $Header: //components/rel/dataservices.tx/6.0/build/dataservices.scons#5 $
#  $DateTime: 2021/06/22 06:37:50 $
#                      
#  This section contains comments describing changes made to the module.
#  Notice that changes are listed in reverse chronological order.
#  
#===============================================================================
import os

Import('env')

#-------------------------------------------------------------------------------
# Disable the flag to remove COAP from build.
#-------------------------------------------------------------------------------
if 'USES_DATAFLAGS_DISABLE' not in env:
	env.Replace(USES_ENABLE_COAP = True)

if 'USES_ENABLE_COAP' in env:
	env.Append(CFLAGS = ['-DENABLE_COAP'])
		
#-------------------------------------------------------------------------------
# Enable LwM2M only if CoAP is enabled
# Disable the flag to remove LwM2M from build.
#-------------------------------------------------------------------------------
if 'USES_ENABLE_COAP' in env:
	env.Replace(USES_ENABLE_LWM2M = True)
	
#-------------------------------------------------------------------------------
# Disable the flag to remove MQTT from build.
#-------------------------------------------------------------------------------

if 'USES_DATAFLAGS_DISABLE' not in env:
	env.Replace(USES_ENABLE_MQTT = True)

if 'USES_ENABLE_MQTT' in env:
	env.Append(CFLAGS = ['-DMQTT_ENABLE'])
	
#-------------------------------------------------------------------------------
# Disable the flag to remove HTTPC from build.
#-------------------------------------------------------------------------------

if 'USES_DATAFLAGS_DISABLE' not in env:
	env.Replace(USES_ENABLE_HTTPC = True)

if 'USES_ENABLE_HTTPC' in env:
	env.Append(CFLAGS = ['-DHTTPC_ENABLE'])
	
	
env.AddUsesFlags('USES_ENABLE_SSL_NETLIB')

#env.AddUsesFlags('USES_MINI_QCLI')

if 'USES_MINI_QCLI' in env:
	env.Append(CFLAGS = ['-DMINI_QCLI'])
	
#-------------------------------------------------------------------------------
# Disable the flag for Apps Packet logging in external build
#-------------------------------------------------------------------------------

if 'USES_EXT_BUILD_FLAVORS' not in env:
	env.Append(CFLAGS = ['-DAPPS_PACKET_LOGGING_ENABLE'])


#-------------------------------------------------------------------------------
# Disable the flag to remove QTI from build.
#-------------------------------------------------------------------------------
	
env.AddUsesFlags('USES_QTI')

if 'USES_QTI' in env:
	env.Append(CFLAGS = ['-DQTI_ENABLE'])

#-------------------------------------------------------------------------------
# Disable the flag to remove QTI_BRIDGE from build.
#-------------------------------------------------------------------------------

env.AddUsesFlags('USES_QTI_BRIDGE')

if 'USES_QTI_BRIDGE' in env:
	env.Append(CFLAGS = ['-DQTI_BRIDGE_ENABLE'])
	
#-------------------------------------------------------------------------------
# Disable the flag to remove MOBILE_AP from build.
#-------------------------------------------------------------------------------

env.AddUsesFlags('USES_ECM')

if 'USES_ECM' in env:
	env.Append(CFLAGS = ['-DECM_ENABLE'])
	
	
if env['CHIPSET'] in ['mdm9205']:
	env.Append(CFLAGS = ['-DCHILTEPIN_UART_PORT'])
	

if 'USES_ENABLE_LWM2M' in env and 'USES_MINI_QCLI' not in env:
	env.Append(CFLAGS = ['-DLWM2M_ENABLE'])

#-------------------------------------------------------------------------------
# Disable the flag to remove LwM2M PSM from build.
#-------------------------------------------------------------------------------

env.Replace(LWM2M_PSM_ENABLED = True)

#-------------------------------------------------------------------------------
# Disable the flag to remove LwM2M PSM from build.
#-------------------------------------------------------------------------------
env.Append(CFLAGS = ['-DPSM_LWM2M'])

#-------------------------------------------------------------------------------
# Disable the flag USES_TRACKER_APP to remove tracker ref app from build.
#-------------------------------------------------------------------------------
if 'USES_MOB' not in env:
	env.AddUsesFlags('USES_TRACKER_APP')

if 'USES_TRACKER_APP' in env:
	env.Append(CFLAGS = ['-DTRACKER_REF_APP'])


#env.Append(CPPDEFINES=["MHI_TEST_VIRTIO_ENV"])


#-------------------------------------------------------------------------------
# Enable the flag to enable Ulog logging 
#-------------------------------------------------------------------------------
	
#env.Replace(USES_ENABLE_ULOG = True)

if 'USES_ENABLE_ULOG' in env:
	env.Append(CFLAGS = ['-DTX_DATA_ENABLE_ULOG'])
	
#-------------------------------------------------------------------------------
# Enabling the CFLAG to make dataservices compiler warning free 
#-------------------------------------------------------------------------------

if 'USES_ARM' in env:
	env.Append(CFLAGS = "--diag_error=warning")
else:
    "do nothing"

if 'USES_MOB' in env:
	env.Append(CPPDEFINES = ["MOB_TX","FEATURE_SSL_TA_KEYMASTER"])
	env.RequirePublicApi(['QTF'], area ='MOB')
	env.RequireRestrictedApi(['MOB'])
	inc_root = env.get('INC_ROOT')
	env.Replace(INC_ROOT=inc_root+'/../..')

#-------------------------------------------------------------------------------
# Load cleanpack script for pack process to kick in!
#-------------------------------------------------------------------------------
if os.path.exists('dataservices_cleanpack.py'):
   env.LoadToolScript('dataservices_cleanpack.py')

#-------------------------------------------------------------------------------
# Load the rest of the software units
#-------------------------------------------------------------------------------
env.LoadSoftwareUnits()

if 'USES_MOB' in env:
	env.Replace(INC_ROOT=inc_root)

