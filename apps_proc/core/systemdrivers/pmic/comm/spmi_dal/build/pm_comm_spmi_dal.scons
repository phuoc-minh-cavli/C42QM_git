#===============================================================================
#
#
# GENERAL DESCRIPTION
#
# Copyright (c) 2011 - 2012 Qualcomm Technologies Incorporated. All Rights Reserved
#
# Qualcomm Proprietary
#
# Export of this technology or software is regulated by the U.S. Government.
# Diversion contrary to U.S. law prohibited.
#
# All ideas, data and information contained in or disclosed by
# this document are confidential and proprietary information of
# Qualcomm Technologies Incorporated and all rights therein are expressly reserved.
# By accepting this material the recipient agrees that this material
# and the information contained therein are held in confidence and in
# trust and will not be used, copied, reproduced in whole or in part,
# nor its contents revealed in any manner to others without the express
# written permission of Qualcomm Technologies Incorporated.
#
#-------------------------------------------------------------------------------
#
# $Header: //components/rel/core.tx/6.0/systemdrivers/pmic/comm/spmi_dal/build/pm_comm_spmi_dal.scons#1 $
# $DateTime: 2020/01/30 22:49:35 $ 
#
#                      EDIT HISTORY FOR FILE
#                      
#  This section contains comments describing changes made to the module.
#  Notice that changes are listed in reverse chronological order.
#  
# when       who     what, where, why
# --------   ---     ---------------------------------------------------------
# 06/25/12   hs      Moved to core\systemdrivers.
# 03/21/12   hs      Created
#===============================================================================

Import('env')

LIB_NAME        = 'pm_comm_spmi_dal'
IMAGE_SOURCES   = ['MODEM_MODEM','CORE_MODEM','CORE_QDSP6_SW','SBL3_BOOT_IMAGE', 'RPM_IMAGE', 'PMIC_BOOT_DRIVER', 'MODEM_APPS']

LIB_SRC         = 'src'
LIB_PROTECTED   = 'protected'


from glob import glob

env = env.Clone()

# Method to abort processing of this file, if not required for current air interface mode, etc
#if ( (USES_TEST_FLAG1 in env and USES_TEST_FLAG2 not in env) or USES_TEST_FLAG3 not in env)):
#   Return( )

#-------------------------------------------------------------------------------
# Source PATH:  
#-------------------------------------------------------------------------------
SRCPATH = ".."

#BUILDPATH =  image_name / processor_name, eg modem_libs / arm11 = directory where built objects stored
env.VariantDir('${BUILDPATH}', SRCPATH , duplicate=0)

    
env.RequirePublicApi([
    'BUSES',
    'DAL',
    'SERVICES',
    'SYSTEMDRIVERS',
    ],
    area='CORE')

env.RequireProtectedApi([        
    'PMIC_COMM',
    'PMIC_DRIVERS',
    'PMIC_DEVICES',
    'PMIC_TARGET_COMMON',
    'PMIC_TARGET_WCNPROC',
    'PMIC_TARGET_RPM_SBL1',
    'PMIC_TARGET_APPSPROC_SBL3',
    ])

env.PublishPrivateApi('SYSTEMDRIVERS_PMIC', [
  "${BUILD_ROOT}/core/systemdrivers/pmic/comm/src",
  "${BUILD_ROOT}/core/systemdrivers/pmic/pmic_devices/common/src",
  "${BUILD_ROOT}/core/systemdrivers/pmic/utils/src",
  "${BUILD_ROOT}/core/systemdrivers/pmic/comm/spmi_dal/src",
  "${BUILD_ROOT}/core/buses/api/spmi",
])

#uncomment this section if src directory is added

LIB_SOURCES = [ ]  #empy list

SOURCE_FILES = [ ] 

#find all .c
SOURCE_FILES.extend(glob(SRCPATH + '/'+LIB_SRC+'/*.c'))

#find all .cpp files 
SOURCE_FILES.extend(glob(SRCPATH + '/'+LIB_SRC+'/*.cpp'))

#find all .s files
SOURCE_FILES.extend(glob(SRCPATH + '/'+LIB_SRC+'/*.s'))


for filename in SOURCE_FILES:
        LIB_SOURCES.append('${BUILDPATH}/' + filename.replace(SRCPATH,''))

PACK_FILES = env.FindFiles(['*.xml', '*.c', '*.cpp', '*.s'], (SRCPATH + '/'+LIB_SRC)) 
env.CleanPack(IMAGE_SOURCES, PACK_FILES)

#this statement must appear outside of 'USES_NO_STRIP_NO_ODM' test so that the pre-built library will be added to the list file
env.AddBinaryLibrary(IMAGE_SOURCES, '${BUILDPATH}/'+LIB_NAME+'_src',[
    LIB_SOURCES,
    ])

