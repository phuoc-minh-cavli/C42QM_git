#===============================================================================
#
#
# GENERAL DESCRIPTION
#
# Copyright (c) 2023 Qualcomm Technologies Incorporated. All Rights Reserved
#
# Qualcomm Proprietary
#
# Export of this technology or software is regulated by the U.S. Government.
# Diversion contrary to U.S. law prohibited.
#
# All ideas, data and information contained in or disclosed by
# this document are confidential and proprietary information of
# Qualcomm Technologies Incorporated and all rights therein are expressly reserved.
# By accepting this material the recipient agrees that this material
# and the information contained therein are held in confidence and in
# trust and will not be used, copied, reproduced in whole or in part,
# nor its contents revealed in any manner to others without the express
# written permission of Qualcomm Technologies Incorporated.
#
#-------------------------------------------------------------------------------
#
# $Header: 
# $DateTime: 
#
#                      EDIT HISTORY FOR FILE
#                      
#  This section contains comments describing changes made to the module.
#  Notice that changes are listed in reverse chronological order.
#  
# when       who     what, where, why
# --------   ---     ---------------------------------------------------------
# 05/29/17     kcs     created.
#
#===============================================================================
import os.path
Import('env')
#import pdb;pdb.set_trace()
LIB_NAME        = 'pm_qapi'

if 'USES_AWARE' not in env:
    SOURCE_FILES = env.FindFiles(['qapi_pmic_user.c'],
  '${BUILD_ROOT}/core/systemdrivers/pmic/application/qapi_pm/src/')
    env.CleanPack(['CORE_APPS'], SOURCE_FILES)

from glob import glob

env = env.Clone()

# Method to abort processing of this file, if not required for current air interface mode, etc
#if ( (USES_TEST_FLAG1 in env and USES_TEST_FLAG2 not in env) or USES_TEST_FLAG3 not in env)):
#   Return( )

#-------------------------------------------------------------------------------
# Source PATH:  
#-------------------------------------------------------------------------------
SRCPATH = ".."

#BUILDPATH =  image_name / processor_name, eg modem_libs / arm11 = directory where built objects stored
env.VariantDir('${BUILDPATH}', SRCPATH , duplicate=0)

env.Append(CPPDEFINES = [
   "TXM_MODULE",
   "QAPI_TXM_MODULE",
   "TX_DAM_QC_CUSTOMIZATIONS",
   ])

    
env.RequireProtectedApi([        
    'PMIC_APPLICATION',
    'PMIC_COMM',
    'PMIC_DRIVERS',
    'PMIC_DEVICES',
    'PMIC_FRAMEWORK',
    'PMIC_NPA',
    'PMIC_UTILS',
    ])

env.RequirePublicApi([
    'BUSES',
    'DAL',
    'SERVICES',
    'SYSTEMDRIVERS',
    'KERNEL',
	'PRODUCTS_DSR',
	'QAPI'
    ],
    area='CORE')


QAPI_DEST_IMAGES = [
  'CORE_APPS',               
]

#-----------------------------------------------------------------------------
# source files
#-----------------------------------------------------------------------------

#QAPI_SOURCES = [
#    '${BUILD_ROOT}/core/systemdrivers/pmic/application/qapi_pm/src/qapi_pmic_status.c',
#]
#env.AddLibrary(QAPI_DEST_IMAGES,'${BUILD_ROOT}/core/systemdrivers/pmic/application/qapi_pm/build/qapi', QAPI_SOURCES)


# Creating a separate library QAPI source files to be shipped as binary
SRCPATH = '${BUILD_ROOT}/core/systemdrivers/pmic/application/qapi_pm'
env.VariantDir('${BUILDPATH}', SRCPATH, duplicate=0)

QAPI_SOURCES = [
#${BUILD_ROOT}/core/systemdrivers/pmic/application/qapi_pm/src/qapi_pmic_status.c',
  '${BUILDPATH}/src/qapi_pmic_user.c',]


if 'USES_ARM' in env:
	env.AddLibrary(['TXM_MODULES'], '${BUILD_ROOT}/core/systemdrivers/pmic/application/qapi_pm/build/pm_dam', QAPI_SOURCES)
else:
	env.AddLibrary(['TXM_MODULES_LLVM'], '${BUILD_ROOT}/core/systemdrivers/pmic/application/qapi_pm/build/LLVM/pm_dam', QAPI_SOURCES)

env.LoadSoftwareUnits()

