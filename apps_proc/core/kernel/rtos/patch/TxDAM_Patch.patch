diff -au --ignore-file-name-case orig/txm_block_allocate.c modified/txm_block_allocate.c
--- orig/txm_block_allocate.c	2023-07-24 00:57:00.063440600 -0700
+++ modified/txm_block_allocate.c	2023-07-24 00:57:00.063440600 -0700
@@ -21,6 +21,24 @@
 /*                                                                        */
 /**************************************************************************/
 
+/*==============================================================================
+  Copyright (c) 2020 Qualcomm Technologies, Inc.
+  All rights reserved. Qualcomm Proprietary and Confidential.
+==============================================================================*/
+/*======================================================================
+ *
+ *                       EDIT HISTORY FOR FILE
+ *
+ *   This section contains comments describing changes made to the
+ *   module. Notice that changes are listed in reverse chronological
+ *   order.
+ *   
+ *
+ *
+ * when         who       what, where, why
+ * ----------   ---       ------------------------------------------------
+ * 2020-07-22    NT       conditionally defining TXM_MODULE
+ ======================================================================*/
 
 /**************************************************************************/
 /**************************************************************************/
@@ -32,7 +50,10 @@
 /**************************************************************************/
 /**************************************************************************/
 
+#ifndef TX_DAM_QC_CUSTOMIZATIONS
 #define TXM_MODULE
+#endif
+
 #include "txm_module.h"
 
 /**************************************************************************/ 
diff -au --ignore-file-name-case orig/txm_block_pool_create.c modified/txm_block_pool_create.c
--- orig/txm_block_pool_create.c	2023-07-24 00:57:00.064453600 -0700
+++ modified/txm_block_pool_create.c	2023-07-24 00:57:00.065444600 -0700
@@ -21,6 +21,24 @@
 /*                                                                        */
 /**************************************************************************/
 
+/*==============================================================================
+  Copyright (c) 2020 Qualcomm Technologies, Inc.
+  All rights reserved. Qualcomm Proprietary and Confidential.
+==============================================================================*/
+/*======================================================================
+ *
+ *                       EDIT HISTORY FOR FILE
+ *
+ *   This section contains comments describing changes made to the
+ *   module. Notice that changes are listed in reverse chronological
+ *   order.
+ *   
+ *
+ *
+ * when         who       what, where, why
+ * ----------   ---       ------------------------------------------------
+ * 2020-07-22    NT       conditionally defining TXM_MODULE
+ ======================================================================*/
 
 /**************************************************************************/
 /**************************************************************************/
@@ -32,7 +50,10 @@
 /**************************************************************************/
 /**************************************************************************/
 
+#ifndef TX_DAM_QC_CUSTOMIZATIONS
 #define TXM_MODULE
+#endif
+
 #include "txm_module.h"
 
 /**************************************************************************/ 
diff -au --ignore-file-name-case orig/txm_block_pool_delete.c modified/txm_block_pool_delete.c
--- orig/txm_block_pool_delete.c	2023-07-24 00:57:00.065444600 -0700
+++ modified/txm_block_pool_delete.c	2023-07-24 00:57:00.066445500 -0700
@@ -21,6 +21,24 @@
 /*                                                                        */
 /**************************************************************************/
 
+/*==============================================================================
+  Copyright (c) 2020 Qualcomm Technologies, Inc.
+  All rights reserved. Qualcomm Proprietary and Confidential.
+==============================================================================*/
+/*======================================================================
+ *
+ *                       EDIT HISTORY FOR FILE
+ *
+ *   This section contains comments describing changes made to the
+ *   module. Notice that changes are listed in reverse chronological
+ *   order.
+ *   
+ *
+ *
+ * when         who       what, where, why
+ * ----------   ---       ------------------------------------------------
+ * 2020-07-22    NT       conditionally defining TXM_MODULE
+ ======================================================================*/
 
 /**************************************************************************/
 /**************************************************************************/
@@ -32,7 +50,10 @@
 /**************************************************************************/
 /**************************************************************************/
 
+#ifndef TX_DAM_QC_CUSTOMIZATIONS
 #define TXM_MODULE
+#endif
+
 #include "txm_module.h"
 
 /**************************************************************************/ 
diff -au --ignore-file-name-case orig/txm_block_pool_info_get.c modified/txm_block_pool_info_get.c
--- orig/txm_block_pool_info_get.c	2023-07-24 00:57:00.066445500 -0700
+++ modified/txm_block_pool_info_get.c	2023-07-24 00:57:00.067450500 -0700
@@ -21,6 +21,24 @@
 /*                                                                        */
 /**************************************************************************/
 
+/*==============================================================================
+  Copyright (c) 2020 Qualcomm Technologies, Inc.
+  All rights reserved. Qualcomm Proprietary and Confidential.
+==============================================================================*/
+/*======================================================================
+ *
+ *                       EDIT HISTORY FOR FILE
+ *
+ *   This section contains comments describing changes made to the
+ *   module. Notice that changes are listed in reverse chronological
+ *   order.
+ *   
+ *
+ *
+ * when         who       what, where, why
+ * ----------   ---       ------------------------------------------------
+ * 2020-07-22    NT       conditionally defining TXM_MODULE
+ ======================================================================*/
 
 /**************************************************************************/
 /**************************************************************************/
@@ -32,7 +50,10 @@
 /**************************************************************************/
 /**************************************************************************/
 
+#ifndef TX_DAM_QC_CUSTOMIZATIONS
 #define TXM_MODULE
+#endif
+
 #include "txm_module.h"
 
 /**************************************************************************/ 
diff -au --ignore-file-name-case orig/txm_block_pool_performance_info_get.c modified/txm_block_pool_performance_info_get.c
--- orig/txm_block_pool_performance_info_get.c	2023-07-24 00:57:00.068445300 -0700
+++ modified/txm_block_pool_performance_info_get.c	2023-07-24 00:57:00.068445300 -0700
@@ -21,6 +21,24 @@
 /*                                                                        */
 /**************************************************************************/
 
+/*==============================================================================
+  Copyright (c) 2020 Qualcomm Technologies, Inc.
+  All rights reserved. Qualcomm Proprietary and Confidential.
+==============================================================================*/
+/*======================================================================
+ *
+ *                       EDIT HISTORY FOR FILE
+ *
+ *   This section contains comments describing changes made to the
+ *   module. Notice that changes are listed in reverse chronological
+ *   order.
+ *   
+ *
+ *
+ * when         who       what, where, why
+ * ----------   ---       ------------------------------------------------
+ * 2020-07-22    NT       conditionally defining TXM_MODULE
+ ======================================================================*/
 
 /**************************************************************************/
 /**************************************************************************/
@@ -32,7 +50,10 @@
 /**************************************************************************/
 /**************************************************************************/
 
+#ifndef TX_DAM_QC_CUSTOMIZATIONS
 #define TXM_MODULE
+#endif
+
 #include "txm_module.h"
 
 /**************************************************************************/ 
diff -au --ignore-file-name-case orig/txm_block_pool_performance_system_info_get.c modified/txm_block_pool_performance_system_info_get.c
--- orig/txm_block_pool_performance_system_info_get.c	2023-07-24 00:57:00.069448400 -0700
+++ modified/txm_block_pool_performance_system_info_get.c	2023-07-24 00:57:00.069448400 -0700
@@ -21,6 +21,24 @@
 /*                                                                        */
 /**************************************************************************/
 
+/*==============================================================================
+  Copyright (c) 2020 Qualcomm Technologies, Inc.
+  All rights reserved. Qualcomm Proprietary and Confidential.
+==============================================================================*/
+/*======================================================================
+ *
+ *                       EDIT HISTORY FOR FILE
+ *
+ *   This section contains comments describing changes made to the
+ *   module. Notice that changes are listed in reverse chronological
+ *   order.
+ *   
+ *
+ *
+ * when         who       what, where, why
+ * ----------   ---       ------------------------------------------------
+ * 2020-07-22    NT       conditionally defining TXM_MODULE
+ ======================================================================*/
 
 /**************************************************************************/
 /**************************************************************************/
@@ -32,7 +50,10 @@
 /**************************************************************************/
 /**************************************************************************/
 
+#ifndef TX_DAM_QC_CUSTOMIZATIONS
 #define TXM_MODULE
+#endif
+
 #include "txm_module.h"
 
 /**************************************************************************/ 
diff -au --ignore-file-name-case orig/txm_block_pool_prioritize.c modified/txm_block_pool_prioritize.c
--- orig/txm_block_pool_prioritize.c	2023-07-24 00:57:00.070447400 -0700
+++ modified/txm_block_pool_prioritize.c	2023-07-24 00:57:00.071450100 -0700
@@ -21,6 +21,24 @@
 /*                                                                        */
 /**************************************************************************/
 
+/*==============================================================================
+  Copyright (c) 2020 Qualcomm Technologies, Inc.
+  All rights reserved. Qualcomm Proprietary and Confidential.
+==============================================================================*/
+/*======================================================================
+ *
+ *                       EDIT HISTORY FOR FILE
+ *
+ *   This section contains comments describing changes made to the
+ *   module. Notice that changes are listed in reverse chronological
+ *   order.
+ *   
+ *
+ *
+ * when         who       what, where, why
+ * ----------   ---       ------------------------------------------------
+ * 2020-07-22    NT       conditionally defining TXM_MODULE
+ ======================================================================*/
 
 /**************************************************************************/
 /**************************************************************************/
@@ -32,7 +50,10 @@
 /**************************************************************************/
 /**************************************************************************/
 
+#ifndef TX_DAM_QC_CUSTOMIZATIONS
 #define TXM_MODULE
+#endif
+
 #include "txm_module.h"
 
 /**************************************************************************/ 
diff -au --ignore-file-name-case orig/txm_block_release.c modified/txm_block_release.c
--- orig/txm_block_release.c	2023-07-24 00:57:00.071450100 -0700
+++ modified/txm_block_release.c	2023-07-24 00:57:00.072452100 -0700
@@ -21,6 +21,24 @@
 /*                                                                        */
 /**************************************************************************/
 
+/*==============================================================================
+  Copyright (c) 2020 Qualcomm Technologies, Inc.
+  All rights reserved. Qualcomm Proprietary and Confidential.
+==============================================================================*/
+/*======================================================================
+ *
+ *                       EDIT HISTORY FOR FILE
+ *
+ *   This section contains comments describing changes made to the
+ *   module. Notice that changes are listed in reverse chronological
+ *   order.
+ *   
+ *
+ *
+ * when         who       what, where, why
+ * ----------   ---       ------------------------------------------------
+ * 2020-07-22    NT       conditionally defining TXM_MODULE
+ ======================================================================*/
 
 /**************************************************************************/
 /**************************************************************************/
@@ -32,7 +50,10 @@
 /**************************************************************************/
 /**************************************************************************/
 
+#ifndef TX_DAM_QC_CUSTOMIZATIONS
 #define TXM_MODULE
+#endif
+
 #include "txm_module.h"
 
 /**************************************************************************/ 
diff -au --ignore-file-name-case orig/txm_byte_allocate.c modified/txm_byte_allocate.c
--- orig/txm_byte_allocate.c	2023-07-24 00:57:00.072452100 -0700
+++ modified/txm_byte_allocate.c	2023-07-24 00:57:00.073450000 -0700
@@ -21,6 +21,24 @@
 /*                                                                        */
 /**************************************************************************/
 
+/*==============================================================================
+  Copyright (c) 2020 Qualcomm Technologies, Inc.
+  All rights reserved. Qualcomm Proprietary and Confidential.
+==============================================================================*/
+/*======================================================================
+ *
+ *                       EDIT HISTORY FOR FILE
+ *
+ *   This section contains comments describing changes made to the
+ *   module. Notice that changes are listed in reverse chronological
+ *   order.
+ *   
+ *
+ *
+ * when         who       what, where, why
+ * ----------   ---       ------------------------------------------------
+ * 2020-07-22    NT       conditionally defining TXM_MODULE
+ ======================================================================*/
 
 /**************************************************************************/
 /**************************************************************************/
@@ -32,7 +50,10 @@
 /**************************************************************************/
 /**************************************************************************/
 
+#ifndef TX_DAM_QC_CUSTOMIZATIONS
 #define TXM_MODULE
+#endif
+
 #include "txm_module.h"
 
 /**************************************************************************/ 
diff -au --ignore-file-name-case orig/txm_byte_pool_create.c modified/txm_byte_pool_create.c
--- orig/txm_byte_pool_create.c	2023-07-24 00:57:00.074453100 -0700
+++ modified/txm_byte_pool_create.c	2023-07-24 00:57:00.075452100 -0700
@@ -21,6 +21,24 @@
 /*                                                                        */
 /**************************************************************************/
 
+/*==============================================================================
+  Copyright (c) 2020 Qualcomm Technologies, Inc.
+  All rights reserved. Qualcomm Proprietary and Confidential.
+==============================================================================*/
+/*======================================================================
+ *
+ *                       EDIT HISTORY FOR FILE
+ *
+ *   This section contains comments describing changes made to the
+ *   module. Notice that changes are listed in reverse chronological
+ *   order.
+ *   
+ *
+ *
+ * when         who       what, where, why
+ * ----------   ---       ------------------------------------------------
+ * 2020-07-22    NT       conditionally defining TXM_MODULE
+ ======================================================================*/
 
 /**************************************************************************/
 /**************************************************************************/
@@ -32,7 +50,10 @@
 /**************************************************************************/
 /**************************************************************************/
 
+#ifndef TX_DAM_QC_CUSTOMIZATIONS
 #define TXM_MODULE
+#endif
+
 #include "txm_module.h"
 
 /**************************************************************************/ 
diff -au --ignore-file-name-case orig/txm_byte_pool_delete.c modified/txm_byte_pool_delete.c
--- orig/txm_byte_pool_delete.c	2023-07-24 00:57:00.075452100 -0700
+++ modified/txm_byte_pool_delete.c	2023-07-24 00:57:00.076455200 -0700
@@ -21,6 +21,24 @@
 /*                                                                        */
 /**************************************************************************/
 
+/*==============================================================================
+  Copyright (c) 2020 Qualcomm Technologies, Inc.
+  All rights reserved. Qualcomm Proprietary and Confidential.
+==============================================================================*/
+/*======================================================================
+ *
+ *                       EDIT HISTORY FOR FILE
+ *
+ *   This section contains comments describing changes made to the
+ *   module. Notice that changes are listed in reverse chronological
+ *   order.
+ *   
+ *
+ *
+ * when         who       what, where, why
+ * ----------   ---       ------------------------------------------------
+ * 2020-07-22    NT       conditionally defining TXM_MODULE
+ ======================================================================*/
 
 /**************************************************************************/
 /**************************************************************************/
@@ -32,7 +50,10 @@
 /**************************************************************************/
 /**************************************************************************/
 
+#ifndef TX_DAM_QC_CUSTOMIZATIONS
 #define TXM_MODULE
+#endif
+
 #include "txm_module.h"
 
 /**************************************************************************/ 
diff -au --ignore-file-name-case orig/txm_byte_pool_info_get.c modified/txm_byte_pool_info_get.c
--- orig/txm_byte_pool_info_get.c	2023-07-24 00:57:00.076455200 -0700
+++ modified/txm_byte_pool_info_get.c	2023-07-24 00:57:00.077455700 -0700
@@ -21,6 +21,24 @@
 /*                                                                        */
 /**************************************************************************/
 
+/*==============================================================================
+  Copyright (c) 2020 Qualcomm Technologies, Inc.
+  All rights reserved. Qualcomm Proprietary and Confidential.
+==============================================================================*/
+/*======================================================================
+ *
+ *                       EDIT HISTORY FOR FILE
+ *
+ *   This section contains comments describing changes made to the
+ *   module. Notice that changes are listed in reverse chronological
+ *   order.
+ *   
+ *
+ *
+ * when         who       what, where, why
+ * ----------   ---       ------------------------------------------------
+ * 2020-07-22    NT       conditionally defining TXM_MODULE
+ ======================================================================*/
 
 /**************************************************************************/
 /**************************************************************************/
@@ -32,7 +50,10 @@
 /**************************************************************************/
 /**************************************************************************/
 
+#ifndef TX_DAM_QC_CUSTOMIZATIONS
 #define TXM_MODULE
+#endif
+
 #include "txm_module.h"
 
 /**************************************************************************/ 
diff -au --ignore-file-name-case orig/txm_byte_pool_performance_info_get.c modified/txm_byte_pool_performance_info_get.c
--- orig/txm_byte_pool_performance_info_get.c	2023-07-24 00:57:00.078457300 -0700
+++ modified/txm_byte_pool_performance_info_get.c	2023-07-24 00:57:00.078457300 -0700
@@ -21,6 +21,24 @@
 /*                                                                        */
 /**************************************************************************/
 
+/*==============================================================================
+  Copyright (c) 2020 Qualcomm Technologies, Inc.
+  All rights reserved. Qualcomm Proprietary and Confidential.
+==============================================================================*/
+/*======================================================================
+ *
+ *                       EDIT HISTORY FOR FILE
+ *
+ *   This section contains comments describing changes made to the
+ *   module. Notice that changes are listed in reverse chronological
+ *   order.
+ *   
+ *
+ *
+ * when         who       what, where, why
+ * ----------   ---       ------------------------------------------------
+ * 2020-07-22    NT       conditionally defining TXM_MODULE
+ ======================================================================*/
 
 /**************************************************************************/
 /**************************************************************************/
@@ -32,7 +50,10 @@
 /**************************************************************************/
 /**************************************************************************/
 
+#ifndef TX_DAM_QC_CUSTOMIZATIONS
 #define TXM_MODULE
+#endif
+
 #include "txm_module.h"
 
 /**************************************************************************/ 
diff -au --ignore-file-name-case orig/txm_byte_pool_performance_system_info_get.c modified/txm_byte_pool_performance_system_info_get.c
--- orig/txm_byte_pool_performance_system_info_get.c	2023-07-24 00:57:00.079468800 -0700
+++ modified/txm_byte_pool_performance_system_info_get.c	2023-07-24 00:57:00.080464300 -0700
@@ -21,6 +21,24 @@
 /*                                                                        */
 /**************************************************************************/
 
+/*==============================================================================
+  Copyright (c) 2020 Qualcomm Technologies, Inc.
+  All rights reserved. Qualcomm Proprietary and Confidential.
+==============================================================================*/
+/*======================================================================
+ *
+ *                       EDIT HISTORY FOR FILE
+ *
+ *   This section contains comments describing changes made to the
+ *   module. Notice that changes are listed in reverse chronological
+ *   order.
+ *   
+ *
+ *
+ * when         who       what, where, why
+ * ----------   ---       ------------------------------------------------
+ * 2020-07-22    NT       conditionally defining TXM_MODULE
+ ======================================================================*/
 
 /**************************************************************************/
 /**************************************************************************/
@@ -32,7 +50,10 @@
 /**************************************************************************/
 /**************************************************************************/
 
+#ifndef TX_DAM_QC_CUSTOMIZATIONS
 #define TXM_MODULE
+#endif
+
 #include "txm_module.h"
 
 /**************************************************************************/ 
diff -au --ignore-file-name-case orig/txm_byte_pool_prioritize.c modified/txm_byte_pool_prioritize.c
--- orig/txm_byte_pool_prioritize.c	2023-07-24 00:57:00.080464300 -0700
+++ modified/txm_byte_pool_prioritize.c	2023-07-24 00:57:00.081465600 -0700
@@ -21,6 +21,24 @@
 /*                                                                        */
 /**************************************************************************/
 
+/*==============================================================================
+  Copyright (c) 2020 Qualcomm Technologies, Inc.
+  All rights reserved. Qualcomm Proprietary and Confidential.
+==============================================================================*/
+/*======================================================================
+ *
+ *                       EDIT HISTORY FOR FILE
+ *
+ *   This section contains comments describing changes made to the
+ *   module. Notice that changes are listed in reverse chronological
+ *   order.
+ *   
+ *
+ *
+ * when         who       what, where, why
+ * ----------   ---       ------------------------------------------------
+ * 2020-07-22    NT       conditionally defining TXM_MODULE
+ ======================================================================*/
 
 /**************************************************************************/
 /**************************************************************************/
@@ -32,7 +50,10 @@
 /**************************************************************************/
 /**************************************************************************/
 
+#ifndef TX_DAM_QC_CUSTOMIZATIONS
 #define TXM_MODULE
+#endif
+
 #include "txm_module.h"
 
 /**************************************************************************/ 
diff -au --ignore-file-name-case orig/txm_byte_release.c modified/txm_byte_release.c
--- orig/txm_byte_release.c	2023-07-24 00:57:00.081465600 -0700
+++ modified/txm_byte_release.c	2023-07-24 00:57:00.082458800 -0700
@@ -21,6 +21,24 @@
 /*                                                                        */
 /**************************************************************************/
 
+/*==============================================================================
+  Copyright (c) 2020 Qualcomm Technologies, Inc.
+  All rights reserved. Qualcomm Proprietary and Confidential.
+==============================================================================*/
+/*======================================================================
+ *
+ *                       EDIT HISTORY FOR FILE
+ *
+ *   This section contains comments describing changes made to the
+ *   module. Notice that changes are listed in reverse chronological
+ *   order.
+ *   
+ *
+ *
+ * when         who       what, where, why
+ * ----------   ---       ------------------------------------------------
+ * 2020-07-22    NT       conditionally defining TXM_MODULE
+ ======================================================================*/
 
 /**************************************************************************/
 /**************************************************************************/
@@ -32,7 +50,10 @@
 /**************************************************************************/
 /**************************************************************************/
 
+#ifndef TX_DAM_QC_CUSTOMIZATIONS
 #define TXM_MODULE
+#endif
+
 #include "txm_module.h"
 
 /**************************************************************************/ 
diff -au --ignore-file-name-case orig/txm_event_flags_create.c modified/txm_event_flags_create.c
--- orig/txm_event_flags_create.c	2023-07-24 00:57:00.082458800 -0700
+++ modified/txm_event_flags_create.c	2023-07-24 00:57:00.083460100 -0700
@@ -21,6 +21,24 @@
 /*                                                                        */
 /**************************************************************************/
 
+/*==============================================================================
+  Copyright (c) 2020 Qualcomm Technologies, Inc.
+  All rights reserved. Qualcomm Proprietary and Confidential.
+==============================================================================*/
+/*======================================================================
+ *
+ *                       EDIT HISTORY FOR FILE
+ *
+ *   This section contains comments describing changes made to the
+ *   module. Notice that changes are listed in reverse chronological
+ *   order.
+ *   
+ *
+ *
+ * when         who       what, where, why
+ * ----------   ---       ------------------------------------------------
+ * 2020-07-22    NT       conditionally defining TXM_MODULE
+ ======================================================================*/
 
 /**************************************************************************/
 /**************************************************************************/
@@ -32,7 +50,10 @@
 /**************************************************************************/
 /**************************************************************************/
 
+#ifndef TX_DAM_QC_CUSTOMIZATIONS
 #define TXM_MODULE
+#endif
+
 #include "txm_module.h"
 
 /**************************************************************************/ 
diff -au --ignore-file-name-case orig/txm_event_flags_delete.c modified/txm_event_flags_delete.c
--- orig/txm_event_flags_delete.c	2023-07-24 00:57:00.084473800 -0700
+++ modified/txm_event_flags_delete.c	2023-07-24 00:57:00.084473800 -0700
@@ -21,6 +21,24 @@
 /*                                                                        */
 /**************************************************************************/
 
+/*==============================================================================
+  Copyright (c) 2020 Qualcomm Technologies, Inc.
+  All rights reserved. Qualcomm Proprietary and Confidential.
+==============================================================================*/
+/*======================================================================
+ *
+ *                       EDIT HISTORY FOR FILE
+ *
+ *   This section contains comments describing changes made to the
+ *   module. Notice that changes are listed in reverse chronological
+ *   order.
+ *   
+ *
+ *
+ * when         who       what, where, why
+ * ----------   ---       ------------------------------------------------
+ * 2020-07-22    NT       conditionally defining TXM_MODULE
+ ======================================================================*/
 
 /**************************************************************************/
 /**************************************************************************/
@@ -32,7 +50,10 @@
 /**************************************************************************/
 /**************************************************************************/
 
+#ifndef TX_DAM_QC_CUSTOMIZATIONS
 #define TXM_MODULE
+#endif
+
 #include "txm_module.h"
 
 /**************************************************************************/ 
diff -au --ignore-file-name-case orig/txm_event_flags_get.c modified/txm_event_flags_get.c
--- orig/txm_event_flags_get.c	2023-07-24 00:57:00.085463700 -0700
+++ modified/txm_event_flags_get.c	2023-07-24 00:57:00.086464500 -0700
@@ -21,6 +21,24 @@
 /*                                                                        */
 /**************************************************************************/
 
+/*==============================================================================
+  Copyright (c) 2020 Qualcomm Technologies, Inc.
+  All rights reserved. Qualcomm Proprietary and Confidential.
+==============================================================================*/
+/*======================================================================
+ *
+ *                       EDIT HISTORY FOR FILE
+ *
+ *   This section contains comments describing changes made to the
+ *   module. Notice that changes are listed in reverse chronological
+ *   order.
+ *   
+ *
+ *
+ * when         who       what, where, why
+ * ----------   ---       ------------------------------------------------
+ * 2020-07-22    NT       conditionally defining TXM_MODULE
+ ======================================================================*/
 
 /**************************************************************************/
 /**************************************************************************/
@@ -32,7 +50,10 @@
 /**************************************************************************/
 /**************************************************************************/
 
+#ifndef TX_DAM_QC_CUSTOMIZATIONS
 #define TXM_MODULE
+#endif
+
 #include "txm_module.h"
 
 /**************************************************************************/ 
diff -au --ignore-file-name-case orig/txm_event_flags_info_get.c modified/txm_event_flags_info_get.c
--- orig/txm_event_flags_info_get.c	2023-07-24 00:57:00.086464500 -0700
+++ modified/txm_event_flags_info_get.c	2023-07-24 00:57:00.087465400 -0700
@@ -21,6 +21,24 @@
 /*                                                                        */
 /**************************************************************************/
 
+/*==============================================================================
+  Copyright (c) 2020 Qualcomm Technologies, Inc.
+  All rights reserved. Qualcomm Proprietary and Confidential.
+==============================================================================*/
+/*======================================================================
+ *
+ *                       EDIT HISTORY FOR FILE
+ *
+ *   This section contains comments describing changes made to the
+ *   module. Notice that changes are listed in reverse chronological
+ *   order.
+ *   
+ *
+ *
+ * when         who       what, where, why
+ * ----------   ---       ------------------------------------------------
+ * 2020-07-22    NT       conditionally defining TXM_MODULE
+ ======================================================================*/
 
 /**************************************************************************/
 /**************************************************************************/
@@ -32,7 +50,10 @@
 /**************************************************************************/
 /**************************************************************************/
 
+#ifndef TX_DAM_QC_CUSTOMIZATIONS
 #define TXM_MODULE
+#endif
+
 #include "txm_module.h"
 
 /**************************************************************************/ 
diff -au --ignore-file-name-case orig/txm_event_flags_performance_info_get.c modified/txm_event_flags_performance_info_get.c
--- orig/txm_event_flags_performance_info_get.c	2023-07-24 00:57:00.087465400 -0700
+++ modified/txm_event_flags_performance_info_get.c	2023-07-24 00:57:00.088466300 -0700
@@ -21,6 +21,24 @@
 /*                                                                        */
 /**************************************************************************/
 
+/*==============================================================================
+  Copyright (c) 2020 Qualcomm Technologies, Inc.
+  All rights reserved. Qualcomm Proprietary and Confidential.
+==============================================================================*/
+/*======================================================================
+ *
+ *                       EDIT HISTORY FOR FILE
+ *
+ *   This section contains comments describing changes made to the
+ *   module. Notice that changes are listed in reverse chronological
+ *   order.
+ *   
+ *
+ *
+ * when         who       what, where, why
+ * ----------   ---       ------------------------------------------------
+ * 2020-07-22    NT       conditionally defining TXM_MODULE
+ ======================================================================*/
 
 /**************************************************************************/
 /**************************************************************************/
@@ -32,7 +50,10 @@
 /**************************************************************************/
 /**************************************************************************/
 
+#ifndef TX_DAM_QC_CUSTOMIZATIONS
 #define TXM_MODULE
+#endif
+
 #include "txm_module.h"
 
 /**************************************************************************/ 
diff -au --ignore-file-name-case orig/txm_event_flags_performance_system_info_get.c modified/txm_event_flags_performance_system_info_get.c
--- orig/txm_event_flags_performance_system_info_get.c	2023-07-24 00:57:00.088466300 -0700
+++ modified/txm_event_flags_performance_system_info_get.c	2023-07-24 00:57:00.089467500 -0700
@@ -21,6 +21,24 @@
 /*                                                                        */
 /**************************************************************************/
 
+/*==============================================================================
+  Copyright (c) 2020 Qualcomm Technologies, Inc.
+  All rights reserved. Qualcomm Proprietary and Confidential.
+==============================================================================*/
+/*======================================================================
+ *
+ *                       EDIT HISTORY FOR FILE
+ *
+ *   This section contains comments describing changes made to the
+ *   module. Notice that changes are listed in reverse chronological
+ *   order.
+ *   
+ *
+ *
+ * when         who       what, where, why
+ * ----------   ---       ------------------------------------------------
+ * 2020-07-22    NT       conditionally defining TXM_MODULE
+ ======================================================================*/
 
 /**************************************************************************/
 /**************************************************************************/
@@ -32,7 +50,10 @@
 /**************************************************************************/
 /**************************************************************************/
 
+#ifndef TX_DAM_QC_CUSTOMIZATIONS
 #define TXM_MODULE
+#endif
+
 #include "txm_module.h"
 
 /**************************************************************************/ 
diff -au --ignore-file-name-case orig/txm_event_flags_set.c modified/txm_event_flags_set.c
--- orig/txm_event_flags_set.c	2023-07-24 00:57:00.090468400 -0700
+++ modified/txm_event_flags_set.c	2023-07-24 00:57:00.090468400 -0700
@@ -21,6 +21,24 @@
 /*                                                                        */
 /**************************************************************************/
 
+/*==============================================================================
+  Copyright (c) 2020 Qualcomm Technologies, Inc.
+  All rights reserved. Qualcomm Proprietary and Confidential.
+==============================================================================*/
+/*======================================================================
+ *
+ *                       EDIT HISTORY FOR FILE
+ *
+ *   This section contains comments describing changes made to the
+ *   module. Notice that changes are listed in reverse chronological
+ *   order.
+ *   
+ *
+ *
+ * when         who       what, where, why
+ * ----------   ---       ------------------------------------------------
+ * 2020-07-22    NT       conditionally defining TXM_MODULE
+ ======================================================================*/
 
 /**************************************************************************/
 /**************************************************************************/
@@ -32,7 +50,10 @@
 /**************************************************************************/
 /**************************************************************************/
 
+#ifndef TX_DAM_QC_CUSTOMIZATIONS
 #define TXM_MODULE
+#endif
+
 #include "txm_module.h"
 
 /**************************************************************************/ 
diff -au --ignore-file-name-case orig/txm_event_flags_set_notify.c modified/txm_event_flags_set_notify.c
--- orig/txm_event_flags_set_notify.c	2023-07-24 00:57:00.091469200 -0700
+++ modified/txm_event_flags_set_notify.c	2023-07-24 00:57:00.091469200 -0700
@@ -21,6 +21,24 @@
 /*                                                                        */
 /**************************************************************************/
 
+/*==============================================================================
+  Copyright (c) 2020 Qualcomm Technologies, Inc.
+  All rights reserved. Qualcomm Proprietary and Confidential.
+==============================================================================*/
+/*======================================================================
+ *
+ *                       EDIT HISTORY FOR FILE
+ *
+ *   This section contains comments describing changes made to the
+ *   module. Notice that changes are listed in reverse chronological
+ *   order.
+ *   
+ *
+ *
+ * when         who       what, where, why
+ * ----------   ---       ------------------------------------------------
+ * 2020-07-22    NT       conditionally defining TXM_MODULE
+ ======================================================================*/
 
 /**************************************************************************/
 /**************************************************************************/
@@ -32,7 +50,10 @@
 /**************************************************************************/
 /**************************************************************************/
 
+#ifndef TX_DAM_QC_CUSTOMIZATIONS
 #define TXM_MODULE
+#endif
+
 #include "txm_module.h"
 
 /**************************************************************************/ 
diff -au --ignore-file-name-case orig/txm_module.h modified/txm_module.h
--- orig/txm_module.h	2023-07-24 00:57:00.185559100 -0700
+++ modified/txm_module.h	2023-07-24 00:57:00.186559900 -0700
@@ -21,6 +21,15 @@
 /*                                                                        */
 /**************************************************************************/
 
+/*======================================================================
+                            txm_module.h
+
+GENERAL DESCRIPTION
+    This file defines the basic module constants, interface structures,
+    and function prototypes. 
+
+Copyright (c) 2020-2022 by Qualcomm Technologies, Inc. All Rights Reserved.
+======================================================================*/
 
 /**************************************************************************/ 
 /**************************************************************************/ 
@@ -183,6 +192,10 @@
 
 #ifdef FX_FILEX_PRESENT
 #include "fx_api.h"
+typedef struct _FX_MEDIA { 
+  unsigned long long _bSpace[256];
+} FX_MEDIA;
+
 #endif
 
 
@@ -286,6 +299,14 @@
 #define TXM_MODULE_MANAGER_THREAD_RESET_PORT_COMPLETION(thread_ptr, module_instance)
 #endif
 
+/* Define the struct for last ran thread info.  */
+typedef struct TXM_MODULE_LAST_RUN_THREAD_STRUCT
+{
+    TX_THREAD           *thread_ptr;
+    ULONG               sp;
+    ULONG               lr;
+    ULONG               pc;
+} TXM_MODULE_LAST_RUN_THREAD;
 
 /* Define object types for object search requests.  */
 
@@ -449,74 +470,75 @@
 
 #define TXM_APPLICATION_REQUEST_ID_BASE                     0x10000
 
+static ULONG txm_debug_marker = 0;
+
+typedef enum TXM_ERROR_CAUSE
+{
+    ERR_FILE_OPEN = 0,
+    ERR_MODULE_MEM_ALLOCATE = 1,
+    ERR_MODULE_IMAGE_TYPE = 2,
+    ERR_ELF_HEADER_READ = 3,
+    ERR_INVALID_FILE_LOADED = 4,
+    ERR_CODE_MEM_ALLOC = 5,
+    ERR_MDT_EXTRACT = 6,
+    ERR_INVALID_PREAMBLE = 7,
+    ERR_MODULE_INIT = 8,
+    ERR_INVALID_MODULE_PTR = 9,
+    ERR_INVALID_MODULE_PREAMBLE = 10,
+ 	ERR_INVALID_OFFSET = 11,
+ 	ERR_INVALID_PREAMBLE_SIZE_PARAMS = 12,
+ 	ERR_MODULE_DATA_ALLOC = 13,
+ 	ERR_SIZE_DATA_SECT = 14,
+ 	ERR_SIZE_PREAMBLE_SHELL_ENTRY = 15,
+ 	ERR_SIZE_CODE_START = 16,
+ 	ERR_SIZE_CALLBACK = 17,
+ 	ERR_MODULE_ALREADY_LOADED = 18,
+ 	
+}TXM_ERROR_CAUSE;
 
 /* Define the overlay for the module's preamble.  */
 
 typedef struct TXM_MODULE_PREAMBLE_STRUCT
 {
-                                                                        /* Meaning                                      */
-    ULONG               txm_module_preamble_id;                         /* Download Module ID (0x54584D44)              */
-    ULONG               txm_module_preamble_version_major;              /* Major Version ID                             */
-    ULONG               txm_module_preamble_version_minor;              /* Minor Version ID                             */
-    ULONG               txm_module_preamble_preamble_size;              /* Module Preamble Size, in 32-bit words        */
-    ULONG               txm_module_preamble_application_module_id;      /* Module ID (application defined)              */
-    ULONG               txm_module_preamble_property_flags;             /* Properties Bit Map                           */
-    ULONG               txm_module_preamble_shell_entry_function;       /* Module shell Entry Function                  */
-    ULONG               txm_module_preamble_start_function;             /* Module Thread Start Function                 */
-    ULONG               txm_module_preamble_stop_function;              /* Module Thread Stop Function                  */ 
-    ULONG               txm_module_preamble_start_stop_priority;        /* Module Start/Stop Thread Priority            */
-    ULONG               txm_module_preamble_start_stop_stack_size;      /* Module Start/Stop Thread Priority            */
-    ULONG               txm_module_preamble_callback_function;          /* Module Callback Thread Function              */
-    ULONG               txm_module_preamble_callback_priority;          /* Module Callback Thread Priority              */
-    ULONG               txm_module_preamble_callback_stack_size;        /* Module Callback Thread Stack Size            */
-    ULONG               txm_module_preamble_code_size;                  /* Module Instruction Area Size                 */
-    ULONG               txm_module_preamble_data_size;                  /* Module Data Area Size                        */
-    ULONG               txm_module_preamble_reserved_0;                 /* Reserved                                     */
-    ULONG               txm_module_preamble_reserved_1;                 /* Reserved                                     */
-    ULONG               txm_module_preamble_reserved_2;                 /* Reserved                                     */
-    ULONG               txm_module_preamble_reserved_3;                 /* Reserved                                     */
-    ULONG               txm_module_preamble_reserved_4;                 /* Reserved                                     */
-    ULONG               txm_module_preamble_reserved_5;                 /* Reserved                                     */
-    ULONG               txm_module_preamble_reserved_6;                 /* Reserved                                     */
-    ULONG               txm_module_preamble_reserved_7;                 /* Reserved                                     */
-    ULONG               txm_module_preamble_reserved_8;                 /* Reserved                                     */
-    ULONG               txm_module_preamble_reserved_9;                 /* Reserved                                     */
-    ULONG               txm_module_preamble_reserved_10;                /* Reserved                                     */
-    ULONG               txm_module_preamble_reserved_11;                /* Reserved                                     */
-    ULONG               txm_module_preamble_reserved_12;                /* Reserved                                     */
-    ULONG               txm_module_preamble_reserved_13;                /* Reserved                                     */
-    ULONG               txm_module_preamble_reserved_14;                /* Reserved                                     */
-    ULONG               txm_module_preamble_checksum;                   /* Module Instruction Area Checksum [Optional]  */
+                                                                        /* Offset        Size            Meaning                                */
+    ULONG               txm_module_preamble_id;                         /*     0          4        Download Module ID (0x54584D44)              */
+    ULONG               txm_module_preamble_version_major;              /*     4          4        Major Version ID                             */
+    ULONG               txm_module_preamble_version_minor;              /*     8          4        Minor Version ID                             */
+    ULONG               txm_module_preamble_preamble_size;              /*    12          4        Module Preamble Size, in 32-bit words        */
+    ULONG               txm_module_preamble_application_module_id;      /*    16          4        Module ID (application defined)              */
+    ULONG               txm_module_preamble_property_flags;             /*    20          4        Properties Bit Map                           */
+    ULONG               txm_module_preamble_shell_entry_function;       /*    24          4        Module shell Entry Function                  */
+    ULONG               txm_module_preamble_start_function;             /*    28          4        Module Thread Start Function                 */
+    ULONG               txm_module_preamble_stop_function;              /*    32          4        Module Thread Stop Function                  */ 
+    ULONG               txm_module_preamble_start_stop_priority;        /*    36          4        Module Start/Stop Thread Priority            */
+    ULONG               txm_module_preamble_start_stop_stack_size;      /*    40          4        Module Start/Stop Thread Priority            */
+    ULONG               txm_module_preamble_callback_function;          /*    44          4        Module Callback Thread Function              */
+    ULONG               txm_module_preamble_callback_priority;          /*    48          4        Module Callback Thread Priority              */
+    ULONG               txm_module_preamble_callback_stack_size;        /*    52          4        Module Callback Thread Stack Size            */
+    ULONG               txm_module_preamble_code_size;                  /*    56          4        Module Instruction Area Size                 */
+    ULONG               txm_module_preamble_data_size;                  /*    60          4        Module Data Area Size                        */
+    ULONG               txm_module_preamble_reserved_0;                 /*    64          4        Reserved                                     */
+    ULONG               txm_module_preamble_reserved_1;                 /*    68          4        Reserved                                     */
+    ULONG               txm_module_preamble_reserved_2;                 /*    72          4        Reserved                                     */
+    ULONG               txm_module_preamble_reserved_3;                 /*    76          4        Reserved                                     */
+    ULONG               txm_module_preamble_reserved_4;                 /*    80          4        Reserved                                     */
+    ULONG               txm_module_preamble_reserved_5;                 /*    84          4        Reserved                                     */
+    ULONG               txm_module_preamble_reserved_6;                 /*    88          4        Reserved                                     */
+    ULONG               txm_module_preamble_reserved_7;                 /*    92          4        Reserved                                     */
+    ULONG               txm_module_preamble_reserved_8;                 /*    96          4        Reserved                                     */
+    ULONG               txm_module_preamble_reserved_9;                 /*   100          4        Reserved                                     */
+    ULONG               txm_module_preamble_debug_enable;               /*   104          4        Reserved                                     */
+    ULONG               txm_module_preamble_reserved_11;                /*   108          4        Reserved                                     */
+    ULONG               txm_module_preamble_reserved_12;                /*   112          4        Reserved                                     */
+    ULONG               txm_module_preamble_reserved_13;                /*   116          4        Reserved                                     */
+    ULONG               txm_module_preamble_reserved_14;                /*   120          4        Reserved                                     */
+    ULONG               txm_module_preamble_checksum;                   /*   124          4        Module Instruction Area Checksum [Optional]  */
 
 } TXM_MODULE_PREAMBLE;
 
 
 struct TXM_MODULE_ALLOCATED_OBJECT_STRUCT;
 
-
-/* Define the callback notification structure used to communicate between the module's callback handling thread
-   and the module manager.  */
-
-typedef struct TXM_MODULE_CALLBACK_MESSAGE_STRUCT
-{
-    ULONG               txm_module_callback_message_type;
-    ULONG               txm_module_callback_message_activation_count;
-    VOID                (*txm_module_callback_message_application_function)(VOID);
-    ALIGN_TYPE          txm_module_callback_message_param_1;
-    ALIGN_TYPE          txm_module_callback_message_param_2;
-    ALIGN_TYPE          txm_module_callback_message_param_3;
-    ALIGN_TYPE          txm_module_callback_message_param_4;
-    ALIGN_TYPE          txm_module_callback_message_param_5;
-    ALIGN_TYPE          txm_module_callback_message_param_6;
-    ALIGN_TYPE          txm_module_callback_message_param_7;
-    ALIGN_TYPE          txm_module_callback_message_param_8;
-    ALIGN_TYPE          txm_module_callback_message_reserved1;
-    ALIGN_TYPE          txm_module_callback_message_reserved2;
-} TXM_MODULE_CALLBACK_MESSAGE;
-
-
-/* Define the module's instance for the manager.  */
-
 typedef struct TXM_MODULE_INSTANCE_STRUCT
 {
     ULONG               txm_module_instance_id;
@@ -551,7 +573,11 @@
     TX_THREAD           txm_module_instance_start_stop_thread;
     TX_THREAD           txm_module_instance_callback_request_thread;
     TX_QUEUE            txm_module_instance_callback_request_queue;
+#ifdef TX_DAM_QC_CUSTOMIZATIONS
+	ULONG               txm_module_instance_callback_request_queue_area[TXM_MODULE_CALLBACKS_QUEUE_DEPTH * TXM_MODULE_CALLBACKS_MESSAGE_SIZE];
+#else
     ULONG               txm_module_instance_callback_request_queue_area[TXM_MODULE_CALLBACKS_QUEUE_DEPTH * (sizeof(TXM_MODULE_CALLBACK_MESSAGE)/sizeof(ULONG))];
+#endif
     ULONG               txm_module_instance_start_stop_stack_size;
     ULONG               txm_module_instance_start_stop_priority;
     ULONG               txm_module_instance_callback_stack_size;
@@ -569,6 +595,58 @@
                         *txm_module_instance_loaded_previous;  
 } TXM_MODULE_INSTANCE;
 
+/* Define the callback notification structure used to communicate between the module's callback handling thread
+   and the module manager.  */
+typedef struct TXM_MODULE_CALLBACK_MESSAGE_STRUCT
+{
+    ULONG               txm_module_callback_message_type;
+    ULONG               txm_module_callback_message_activation_count;
+    
+#ifdef TX_DAM_QC_CUSTOMIZATIONS
+    ULONG               txm_module_callback_index;
+	TXM_MODULE_INSTANCE *txm_module_callback_module_instance;
+	VOID                *txm_module_callback_saved_app_cb;
+	struct TXM_MODULE_CALLBACK_MESSAGE_STRUCT
+                        *txm_module_callback_next,
+                        *txm_module_callback_previous;
+	VOID                *txm_module_callback_message_application_function;					
+#else 
+	VOID                (*txm_module_callback_message_application_function)(VOID);
+#endif
+    ALIGN_TYPE          txm_module_callback_message_param_1;
+    ALIGN_TYPE          txm_module_callback_message_param_2;
+    ALIGN_TYPE          txm_module_callback_message_param_3;
+    ALIGN_TYPE          txm_module_callback_message_param_4;
+    ALIGN_TYPE          txm_module_callback_message_param_5;
+    ALIGN_TYPE          txm_module_callback_message_param_6;
+    ALIGN_TYPE          txm_module_callback_message_param_7;
+    ALIGN_TYPE          txm_module_callback_message_param_8;
+    ALIGN_TYPE          txm_module_callback_message_reserved1;
+    ALIGN_TYPE          txm_module_callback_message_reserved2;
+} TXM_MODULE_CALLBACK_MESSAGE;
+
+
+
+
+
+/* Define maximum number of active module callbacks that can be handled at the 
+   same time.  Valid values are 16, 32, 64, and 128.  */
+   
+#ifndef TXM_MODULE_MAX_CALLBACKS
+#define TXM_MODULE_MAX_CALLBACKS                            16
+#endif
+
+#if TXM_MODULE_MAX_CALLBACKS != 16
+#if TXM_MODULE_MAX_CALLBACKS != 32
+#if TXM_MODULE_MAX_CALLBACKS != 64
+#if TXM_MODULE_MAX_CALLBACKS != 128
+#error "Invalid number of callbacks!  "
+#endif
+#endif
+#endif
+#endif
+
+extern VOID                                         *_txm_module_manager_callback_handler_array[TXM_MODULE_MAX_CALLBACKS];
 
 /* Determine if the thread entry info control block has an extension defined. If not, define the extension to 
    whitespace.  */
@@ -625,6 +703,18 @@
 extern ALIGN_TYPE (*_txm_module_kernel_call_dispatcher)(ULONG type, ALIGN_TYPE param_1, ALIGN_TYPE param_2, ALIGN_TYPE param3);
 
 
+/* Define the system call functions that assist on calls with larger numbers of parameters.  */
+
+ULONG  _txm_module_system_call4( ULONG request, ULONG param_1, ULONG param_2, ULONG param_3, ULONG param_4);
+ULONG  _txm_module_system_call5( ULONG request, ULONG param_1, ULONG param_2, ULONG param_3, ULONG param_4, ULONG param_5);
+ULONG  _txm_module_system_call6( ULONG request, ULONG param_1, ULONG param_2, ULONG param_3, ULONG param_4, ULONG param_5, ULONG param_6);
+ULONG  _txm_module_system_call7( ULONG request, ULONG param_1, ULONG param_2, ULONG param_3, ULONG param_4, ULONG param_5, ULONG param_6, ULONG param_7);
+ULONG  _txm_module_system_call8( ULONG request, ULONG param_1, ULONG param_2, ULONG param_3, ULONG param_4, ULONG param_5, ULONG param_6, ULONG param_7, ULONG param_8);
+ULONG  _txm_module_system_call9( ULONG request, ULONG param_1, ULONG param_2, ULONG param_3, ULONG param_4, ULONG param_5, ULONG param_6, ULONG param_7, ULONG param_8, ULONG param_9);
+ULONG  _txm_module_system_call10(ULONG request, ULONG param_1, ULONG param_2, ULONG param_3, ULONG param_4, ULONG param_5, ULONG param_6, ULONG param_7, ULONG param_8, ULONG param_9, ULONG param_10);
+ULONG  _txm_module_system_call11(ULONG request, ULONG param_1, ULONG param_2, ULONG param_3, ULONG param_4, ULONG param_5, ULONG param_6, ULONG param_7, ULONG param_8, ULONG param_9, ULONG param_10, ULONG param_11);
+ULONG  _txm_module_system_call12(ULONG request, ULONG param_1, ULONG param_2, ULONG param_3, ULONG param_4, ULONG param_5, ULONG param_6, ULONG param_7, ULONG param_8, ULONG param_9, ULONG param_10, ULONG param_11, ULONG param12);
+
 /* Define specific module function prototypes.  */
 
 #define txm_module_application_request                  _txm_module_application_request
@@ -712,7 +802,7 @@
 UINT  _txm_module_manager_internal_load(TXM_MODULE_INSTANCE *module_instance, CHAR *name, VOID *module_location, 
                                         ULONG code_size, VOID *code_allocation_ptr, ULONG code_allocation_size);
 ALIGN_TYPE _txm_module_manager_kernel_dispatch(ULONG kernel_request, ALIGN_TYPE param_0, ALIGN_TYPE param_1, ALIGN_TYPE param_2);
-UINT  _txm_module_manager_object_allocate(VOID **object_ptr_ptr, ULONG object_size, TXM_MODULE_INSTANCE *module_instance);
+UINT _txm_module_manager_object_allocate(VOID **object_ptr_ptr, ULONG object_size, TXM_MODULE_INSTANCE *module_instance);
 UINT  _txm_module_manager_object_deallocate(VOID *object_ptr);
 UINT  _txm_module_manager_object_pointer_get(UINT object_type, CHAR *name, VOID **object_ptr);
 UINT  _txm_module_manager_object_pointer_get_extended(UINT object_type, CHAR *name, UINT name_length, VOID **object_ptr);
@@ -729,6 +819,7 @@
 UINT  _txm_module_manager_thread_reset(TX_THREAD *thread_ptr);
 VOID  _txm_module_manager_name_build(CHAR *module_name, CHAR *thread_name, CHAR *combined_name);
 VOID  _txm_module_manager_thread_stack_build(TX_THREAD *thread_ptr, VOID (*shell_function)(TX_THREAD *, TXM_MODULE_INSTANCE *));
+VOID   _txm_module_initialize(VOID);
 UINT  _txm_module_manager_unload(TXM_MODULE_INSTANCE *module_instance);
 ALIGN_TYPE  _txm_module_manager_user_mode_entry(ULONG kernel_request, ALIGN_TYPE param_1, ALIGN_TYPE param_2, ALIGN_TYPE param_3);
 UINT  _txm_module_manager_maximum_module_priority_set(TXM_MODULE_INSTANCE *module_instance, UINT priority);
diff -au --ignore-file-name-case orig/txm_module_application_request.c modified/txm_module_application_request.c
--- orig/txm_module_application_request.c	2023-07-24 00:57:00.092468200 -0700
+++ modified/txm_module_application_request.c	2023-07-24 00:57:00.093471300 -0700
@@ -21,6 +21,24 @@
 /*                                                                        */ 
 /**************************************************************************/ 
 
+/*==============================================================================
+  Copyright (c) 2020 Qualcomm Technologies, Inc.
+  All rights reserved. Qualcomm Proprietary and Confidential.
+==============================================================================*/
+/*======================================================================
+ *
+ *                       EDIT HISTORY FOR FILE
+ *
+ *   This section contains comments describing changes made to the
+ *   module. Notice that changes are listed in reverse chronological
+ *   order.
+ *   
+ *
+ *
+ * when         who     what, where, why
+ * ----------   ---     ------------------------------------------------
+ * 2020-07-22    NT     correction in function name
+ ======================================================================*/
 
 /**************************************************************************/ 
 /**************************************************************************/ 
@@ -32,14 +50,17 @@
 /**************************************************************************/ 
 /**************************************************************************/ 
 
+#ifndef TX_DAM_QC_CUSTOMIZATIONS
 #define TXM_MODULE
+#endif
+
 #include "txm_module.h"
 
 /**************************************************************************/ 
 /*                                                                        */ 
 /*  FUNCTION                                               RELEASE        */ 
 /*                                                                        */ 
-/*    txm_module_application_request                      PORTABLE C      */ 
+/*    _txm_module_application_request                      PORTABLE C      */ 
 /*                                                           5.9          */ 
 /*  AUTHOR                                                                */ 
 /*                                                                        */ 
@@ -80,7 +101,11 @@
 /*                                            resulting in version 5.9    */ 
 /*                                                                        */ 
 /**************************************************************************/ 
+#ifdef TX_DAM_QC_CUSTOMIZATIONS
+UINT _txm_module_application_request(ULONG request, ALIGN_TYPE param_1, ALIGN_TYPE param_2, ALIGN_TYPE param_3)
+#else
 UINT txm_module_application_request(ULONG request, ALIGN_TYPE param_1, ALIGN_TYPE param_2, ALIGN_TYPE param_3)
+#endif
 {
 
 UINT   return_value;
diff -au --ignore-file-name-case orig/txm_module_callback_request_thread_entry.c modified/txm_module_callback_request_thread_entry.c
--- orig/txm_module_callback_request_thread_entry.c	2023-07-24 00:57:00.094472600 -0700
+++ modified/txm_module_callback_request_thread_entry.c	2023-07-24 00:57:00.094472600 -0700
@@ -21,6 +21,20 @@
 /*                                                                        */ 
 /**************************************************************************/ 
 
+/*======================================================================
+                 txm_module_callback_request_thread_entry.c 
+
+GENERAL DESCRIPTION
+  Module callback request processing
+
+ EXTERNALIZED FUNCTIONS
+  none
+
+ INITIALIZATION AND SEQUENCING REQUIREMENTS
+  none
+
+ Copyright (c) 2020, 2023  by Qualcomm Technologies, Inc.  All Rights Reserved.
+ ======================================================================*/
 
 /**************************************************************************/ 
 /**************************************************************************/ 
@@ -46,6 +60,9 @@
 #include "txm_module.h"
 #include "tx_queue.h"
 
+#ifdef TX_DAM_QC_CUSTOMIZATIONS
+#include "qapi_txm_base.h"
+#endif 
 
 /* Define the global module entry pointer from the start thread of the module. 
    This structure contains the pointer to the request queue as well as the
@@ -153,59 +170,59 @@
             /* Decrement the activation count.  */
             activation_count--;
 
-            /* Now dispatch the callback function.  */
+        /* Now dispatch the callback function.  */
             switch (callback_message.txm_module_callback_message_type)
-            {
+			{
        
-            case TXM_TIMER_CALLBACK:
+			case TXM_TIMER_CALLBACK:
 
-                /* Setup timer callback pointer.  */
+				/* Setup timer callback pointer.  */
                 timer_callback =  (void (*)(ULONG)) callback_message.txm_module_callback_message_application_function;
 
-                /* Call application's timer callback.  */
+				/* Call application's timer callback.  */
                 (timer_callback)((ULONG) callback_message.txm_module_callback_message_param_1);
 
-                break;
+				break;
 
-            case TXM_EVENTS_SET_CALLBACK:
+			case TXM_EVENTS_SET_CALLBACK:
 
-                /* Setup events set callback pointer.  */
+				/* Setup events set callback pointer.  */
                 events_set_notify =  (void (*)(TX_EVENT_FLAGS_GROUP *)) callback_message.txm_module_callback_message_application_function;
 
-                /* Call events set notify callback.  */
+				/* Call events set notify callback.  */
                 (events_set_notify)((TX_EVENT_FLAGS_GROUP *) callback_message.txm_module_callback_message_param_1);
 
-                break;
+				break;
     
-            case TXM_QUEUE_SEND_CALLBACK:
+			case TXM_QUEUE_SEND_CALLBACK:
 
-                /* Setup queue send callback pointer.  */
+				/* Setup queue send callback pointer.  */
                 queue_send_notify =  (void (*)(TX_QUEUE *)) callback_message.txm_module_callback_message_application_function;
 
-                /* Call queue send notify callback.  */
+				/* Call queue send notify callback.  */
                 (queue_send_notify)((TX_QUEUE *) callback_message.txm_module_callback_message_param_1);
 
-                break;
+				break;
 
-            case TXM_SEMAPHORE_PUT_CALLBACK:
+			case TXM_SEMAPHORE_PUT_CALLBACK:
 
-                /* Setup semaphore put callback pointer.  */
+				/* Setup semaphore put callback pointer.  */
                 semaphore_put_notify =  (void (*)(TX_SEMAPHORE *)) callback_message.txm_module_callback_message_application_function;
 
-                /* Call semaphore put notify callback.  */
+				/* Call semaphore put notify callback.  */
                 (semaphore_put_notify)((TX_SEMAPHORE *) callback_message.txm_module_callback_message_param_1);
 
-                break;
+				break;
 
-            case TXM_THREAD_ENTRY_EXIT_CALLBACK:
+			case TXM_THREAD_ENTRY_EXIT_CALLBACK:
 
-                /* Setup thread entry/exit callback pointer.  */
+				/* Setup thread entry/exit callback pointer.  */
                 thread_entry_exit_notify =  (void (*)(TX_THREAD *, UINT)) callback_message.txm_module_callback_message_application_function;
 
-                /* Call thread entry/exit notify callback.  */
+				/* Call thread entry/exit notify callback.  */
                 (thread_entry_exit_notify)((TX_THREAD *) callback_message.txm_module_callback_message_param_1, (UINT) callback_message.txm_module_callback_message_param_2);
         
-                break;
+				break;
 
             default:
 
@@ -262,10 +279,41 @@
                     /* Call the USBX callback function.  */
                     _txm_module_usbx_callback_request(&callback_message);
                 }
-#endif
-        
-                break;
-            }
+#endif		
+/* All custom callback request comes here */
+#ifdef TX_DAM_QC_CUSTOMIZATIONS
+
+				{
+				
+					pFn_app_cb_dispatcher_t  app_cb_dispatcher;
+				
+					/* Extract the dispathcer function (which is stored as application callback function pointer)
+					   from message payload */
+					app_cb_dispatcher = (pFn_app_cb_dispatcher_t)callback_message.txm_module_callback_message_application_function;
+					
+					/* Invoke dispatcher function with application callback function as input argument so that
+					   dispatcher can invoke actual application callback function after required typecasts. */
+					if(app_cb_dispatcher) {
+						status = (app_cb_dispatcher)(callback_message.txm_module_callback_message_type,
+						   (void *)callback_message.txm_module_callback_saved_app_cb,
+						   (UINT)callback_message.txm_module_callback_message_param_1,
+						   (UINT)callback_message.txm_module_callback_message_param_2,
+						   (UINT)callback_message.txm_module_callback_message_param_3,
+						   (UINT)callback_message.txm_module_callback_message_param_4,
+						   (UINT)callback_message.txm_module_callback_message_param_5,
+						   (UINT)callback_message.txm_module_callback_message_param_6,
+						   (UINT)callback_message.txm_module_callback_message_param_7,
+						   (UINT)callback_message.txm_module_callback_message_param_8);
+					}
+					else
+					{
+						// TBD: Error handling
+					}
+				}
+
+#endif // TX_DAM_QC_CUSTOMIZATIONS
+				break;
+			}
         }
     }
 }
diff -au --ignore-file-name-case orig/txm_module_manager_alignment_adjust.c modified/txm_module_manager_alignment_adjust.c
--- orig/txm_module_manager_alignment_adjust.c	2023-07-24 00:57:00.039421500 -0700
+++ modified/txm_module_manager_alignment_adjust.c	2023-07-24 00:57:00.040420900 -0700
@@ -1,6 +1,6 @@
 /**************************************************************************/ 
 /*                                                                        */ 
-/*            Copyright (c) 1996-2020 by Express Logic Inc.               */ 
+/*            Copyright (c) 1996-2017 by Express Logic Inc.               */ 
 /*                                                                        */ 
 /*  This software is copyrighted by and is the sole property of Express   */ 
 /*  Logic, Inc.  All rights, title, ownership, or other interests         */ 
@@ -98,7 +98,7 @@
     local_code_size =       *code_size;
     local_code_alignment =  TXM_MODULE_MEMORY_ALIGNMENT;
     local_data_size =       *data_size;
-    local_data_alignment =  TXM_MODULE_MEMORY_ALIGNMENT;
+	local_data_alignment =  TXM_MODULE_MEMORY_ALIGNMENT;
 
     /* Return all the information to the caller.  */
     *code_size =        ((local_code_size + TXM_MODULE_MEMORY_ALIGNMENT - 1)/TXM_MODULE_MEMORY_ALIGNMENT) * TXM_MODULE_MEMORY_ALIGNMENT;
diff -au --ignore-file-name-case orig/txm_module_manager_application_request.c modified/txm_module_manager_application_request.c
--- orig/txm_module_manager_application_request.c	2023-07-24 00:57:00.041419800 -0700
+++ modified/txm_module_manager_application_request.c	2023-07-24 00:57:00.041419800 -0700
@@ -21,6 +21,14 @@
 /*                                                                        */ 
 /**************************************************************************/ 
 
+/*======================================================================
+              txm_module_manager_application_request.c
+
+GENERAL DESCRIPTION
+	Application specific module request processing function.
+
+Copyright (c) 2020 by Qualcomm Technologies, Inc. All Rights Reserved.
+======================================================================*/
 
 /**************************************************************************/ 
 /**************************************************************************/ 
@@ -37,7 +45,12 @@
 
 #include "tx_api.h"
 #include "txm_module.h"
+#ifdef TX_DAM_QC_CUSTOMIZATIONS
+#include "qurt_txm_qapi_fwk.h"
 
+extern UINT qurt_qapi_fwk_handler(ULONG request_id, ULONG param_1, ULONG param_2, ULONG param_3);
+extern UINT qc_oem_api_handler(ULONG request_id, ULONG param_1, ULONG param_2, ULONG param_3) __attribute__((weak));
+#endif
 
 /**************************************************************************/ 
 /*                                                                        */ 
@@ -58,10 +71,10 @@
 /*                                                                        */ 
 /*  INPUT                                                                 */ 
 /*                                                                        */ 
-/*    request_id                        Module request ID                 */ 
-/*    param_1                           First parameter                   */ 
-/*    param_2                           Second parameter                  */ 
-/*    param_3                           Third parameter                   */ 
+/*    request_id                            Module request ID             */ 
+/*    param_1                               First parameter               */ 
+/*    param_2                               Second parameter              */ 
+/*    param_3                               Third parameter               */ 
 /*                                                                        */ 
 /*  OUTPUT                                                                */ 
 /*                                                                        */ 
@@ -79,12 +92,12 @@
 /*                                                                        */ 
 /*    DATE              NAME                      DESCRIPTION             */ 
 /*                                                                        */ 
-/*  06-01-2013      William E. Lamie        Initial Version 5.3           */ 
-/*  01-01-2014      William E. Lamie        Modified comment(s),          */ 
+/*  06-01-2013     William E. Lamie         Initial Version 5.3           */ 
+/*  01-01-2014     William E. Lamie         Modified comment(s),          */ 
 /*                                            resulting in version 5.4    */ 
-/*  01-01-2016      William E. Lamie        Modified comment(s),          */ 
+/*  01-01-2016     William E. Lamie         Modified comment(s),          */ 
 /*                                            resulting in version 5.5    */ 
-/*  08-15-2016      William E. Lamie        Modified comment(s),          */ 
+/*  08-15-2016     William E. Lamie         Modified comment(s),          */ 
 /*                                            resulting in version 5.6    */ 
 /*  02-01-2018      Scott Larson            Modified comment(s),          */ 
 /*                                            resulting in version 5.8    */ 
@@ -94,10 +107,28 @@
 /*                                            resulting in version 5.9    */ 
 /*                                                                        */ 
 /**************************************************************************/ 
-UINT  _txm_module_manager_application_request(ULONG request_id, ALIGN_TYPE param_1, ALIGN_TYPE param_2, ALIGN_TYPE param_3)
+UINT  _txm_module_manager_application_request(ULONG request_id, ULONG param_1, ULONG param_2, ULONG param_3)
 {
+#ifdef TX_DAM_QC_CUSTOMIZATIONS
+  UINT input_request;
 
-    /* By default, simply return the status of not available.  */
+  /* Derive actual input request which was offsetted by TXM_APPLICATION_REQUEST_ID_BASE
+     by Module manager framework while calling application_request function.
+  */
+  input_request = request_id + TXM_APPLICATION_REQUEST_ID_BASE;
+  
+  /* Invoke OEM API handler if input ID falls in OEM API range */
+  if((input_request >= TXM_QC_OEM_API_BASE) && (input_request < TXM_QC_OEM_API_END))
+  {
+	return qc_oem_api_handler(input_request, param_1, param_2, param_3);
+  }
+  else
+  { 
+	/* QuRT QAPI framework uses offsetted ID, so pass request_id as-is. */
+	return qurt_qapi_fwk_handler(request_id, param_1, param_2, param_3); 
+  }
+#else 
+  /* By default, simply return the status of not available.  */
     return(TX_NOT_AVAILABLE); 
+#endif
 }
-
diff -au --ignore-file-name-case orig/txm_module_manager_callback_handlers.c modified/txm_module_manager_callback_handlers.c
--- orig/txm_module_manager_callback_handlers.c	2023-07-24 00:57:00.042422600 -0700
+++ modified/txm_module_manager_callback_handlers.c	2023-07-24 00:57:00.043423800 -0700
@@ -21,6 +21,14 @@
 /*                                                                        */
 /**************************************************************************/
 
+/*======================================================================
+                    txm_module_manager_callback_handlers.c
+
+GENERAL DESCRIPTION
+	Contains the callback handlers.
+
+Copyright (c) 2020 by Qualcomm Technologies, Inc. All Rights Reserved.
+======================================================================*/
 
 /**************************************************************************/
 /**************************************************************************/
@@ -38,142 +46,660 @@
 #include "tx_api.h"
 #include "txm_module.h"
 
+extern VOID  _txm_module_manager_callback_trampoline(ULONG index, ULONG parameter_1, ULONG parameter_2,
+                                              ULONG parameter_3, ULONG parameter_4,
+                                              ULONG parameter_5, ULONG parameter_6,
+                                              ULONG parameter_7, ULONG parameter_8);
 
 /* Define external references.  */
 
-VOID  _txm_module_manager_callback_handler_0(ULONG parameter_1, ULONG parameter_2);
-VOID  _txm_module_manager_callback_handler_1(ULONG parameter_1, ULONG parameter_2);
-VOID  _txm_module_manager_callback_handler_2(ULONG parameter_1, ULONG parameter_2);
-VOID  _txm_module_manager_callback_handler_3(ULONG parameter_1, ULONG parameter_2);
-VOID  _txm_module_manager_callback_handler_4(ULONG parameter_1, ULONG parameter_2);
-VOID  _txm_module_manager_callback_handler_5(ULONG parameter_1, ULONG parameter_2);
-VOID  _txm_module_manager_callback_handler_6(ULONG parameter_1, ULONG parameter_2);
-VOID  _txm_module_manager_callback_handler_7(ULONG parameter_1, ULONG parameter_2);
-VOID  _txm_module_manager_callback_handler_8(ULONG parameter_1, ULONG parameter_2);
-VOID  _txm_module_manager_callback_handler_9(ULONG parameter_1, ULONG parameter_2);
-VOID  _txm_module_manager_callback_handler_10(ULONG parameter_1, ULONG parameter_2);
-VOID  _txm_module_manager_callback_handler_11(ULONG parameter_1, ULONG parameter_2);
-VOID  _txm_module_manager_callback_handler_12(ULONG parameter_1, ULONG parameter_2);
-VOID  _txm_module_manager_callback_handler_13(ULONG parameter_1, ULONG parameter_2);
-VOID  _txm_module_manager_callback_handler_14(ULONG parameter_1, ULONG parameter_2);
-VOID  _txm_module_manager_callback_handler_15(ULONG parameter_1, ULONG parameter_2);
-VOID  _txm_module_manager_callback_handler_16(ULONG parameter_1, ULONG parameter_2);
-VOID  _txm_module_manager_callback_handler_16(ULONG parameter_1, ULONG parameter_2);
+VOID  _txm_module_manager_callback_handler_0(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8);
+
+VOID  _txm_module_manager_callback_handler_1(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8);
+
+VOID  _txm_module_manager_callback_handler_2(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8);
+
+
+VOID  _txm_module_manager_callback_handler_3(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8);
+
+VOID  _txm_module_manager_callback_handler_4(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8);
+
+VOID  _txm_module_manager_callback_handler_5(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8);
+
+VOID  _txm_module_manager_callback_handler_6(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8);
+
+VOID  _txm_module_manager_callback_handler_7(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8);
+
+VOID  _txm_module_manager_callback_handler_8(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8);
+
+VOID  _txm_module_manager_callback_handler_9(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8);
+
+VOID  _txm_module_manager_callback_handler_10(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8);
+
+VOID  _txm_module_manager_callback_handler_11(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8);
+
+VOID  _txm_module_manager_callback_handler_12(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8);
+
+VOID  _txm_module_manager_callback_handler_13(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8);
+
+VOID  _txm_module_manager_callback_handler_14(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8);
+
+VOID  _txm_module_manager_callback_handler_15(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8);
+
 #if TXM_MODULE_MAX_CALLBACKS > 16
-VOID  _txm_module_manager_callback_handler_17(ULONG parameter_1, ULONG parameter_2);
-VOID  _txm_module_manager_callback_handler_18(ULONG parameter_1, ULONG parameter_2);
-VOID  _txm_module_manager_callback_handler_19(ULONG parameter_1, ULONG parameter_2);
-VOID  _txm_module_manager_callback_handler_20(ULONG parameter_1, ULONG parameter_2);
-VOID  _txm_module_manager_callback_handler_21(ULONG parameter_1, ULONG parameter_2);
-VOID  _txm_module_manager_callback_handler_22(ULONG parameter_1, ULONG parameter_2);
-VOID  _txm_module_manager_callback_handler_23(ULONG parameter_1, ULONG parameter_2);
-VOID  _txm_module_manager_callback_handler_24(ULONG parameter_1, ULONG parameter_2);
-VOID  _txm_module_manager_callback_handler_25(ULONG parameter_1, ULONG parameter_2);
-VOID  _txm_module_manager_callback_handler_26(ULONG parameter_1, ULONG parameter_2);
-VOID  _txm_module_manager_callback_handler_27(ULONG parameter_1, ULONG parameter_2);
-VOID  _txm_module_manager_callback_handler_28(ULONG parameter_1, ULONG parameter_2);
-VOID  _txm_module_manager_callback_handler_29(ULONG parameter_1, ULONG parameter_2);
-VOID  _txm_module_manager_callback_handler_30(ULONG parameter_1, ULONG parameter_2);
-VOID  _txm_module_manager_callback_handler_31(ULONG parameter_1, ULONG parameter_2);
+
+VOID  _txm_module_manager_callback_handler_16(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8);
+
+VOID  _txm_module_manager_callback_handler_17(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8);
+
+VOID  _txm_module_manager_callback_handler_18(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8);
+
+VOID  _txm_module_manager_callback_handler_19(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8);
+
+VOID  _txm_module_manager_callback_handler_20(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8);
+
+VOID  _txm_module_manager_callback_handler_21(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8);
+
+VOID  _txm_module_manager_callback_handler_22(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8);
+
+VOID  _txm_module_manager_callback_handler_23(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8);
+
+VOID  _txm_module_manager_callback_handler_24(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8);
+
+VOID  _txm_module_manager_callback_handler_25(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8);
+
+VOID  _txm_module_manager_callback_handler_26(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8);
+
+VOID  _txm_module_manager_callback_handler_27(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8);
+
+VOID  _txm_module_manager_callback_handler_28(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8);
+
+VOID  _txm_module_manager_callback_handler_29(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8);
+
+VOID  _txm_module_manager_callback_handler_30(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8);
+
+VOID  _txm_module_manager_callback_handler_31(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8);
+
 #if TXM_MODULE_MAX_CALLBACKS > 32
-VOID  _txm_module_manager_callback_handler_31(ULONG parameter_1, ULONG parameter_2);
-VOID  _txm_module_manager_callback_handler_32(ULONG parameter_1, ULONG parameter_2);
-VOID  _txm_module_manager_callback_handler_33(ULONG parameter_1, ULONG parameter_2);
-VOID  _txm_module_manager_callback_handler_34(ULONG parameter_1, ULONG parameter_2);
-VOID  _txm_module_manager_callback_handler_35(ULONG parameter_1, ULONG parameter_2);
-VOID  _txm_module_manager_callback_handler_36(ULONG parameter_1, ULONG parameter_2);
-VOID  _txm_module_manager_callback_handler_37(ULONG parameter_1, ULONG parameter_2);
-VOID  _txm_module_manager_callback_handler_38(ULONG parameter_1, ULONG parameter_2);
-VOID  _txm_module_manager_callback_handler_39(ULONG parameter_1, ULONG parameter_2);
-VOID  _txm_module_manager_callback_handler_40(ULONG parameter_1, ULONG parameter_2);
-VOID  _txm_module_manager_callback_handler_41(ULONG parameter_1, ULONG parameter_2);
-VOID  _txm_module_manager_callback_handler_42(ULONG parameter_1, ULONG parameter_2);
-VOID  _txm_module_manager_callback_handler_43(ULONG parameter_1, ULONG parameter_2);
-VOID  _txm_module_manager_callback_handler_44(ULONG parameter_1, ULONG parameter_2);
-VOID  _txm_module_manager_callback_handler_45(ULONG parameter_1, ULONG parameter_2);
-VOID  _txm_module_manager_callback_handler_46(ULONG parameter_1, ULONG parameter_2);
-VOID  _txm_module_manager_callback_handler_47(ULONG parameter_1, ULONG parameter_2);
-VOID  _txm_module_manager_callback_handler_48(ULONG parameter_1, ULONG parameter_2);
-VOID  _txm_module_manager_callback_handler_49(ULONG parameter_1, ULONG parameter_2);
-VOID  _txm_module_manager_callback_handler_50(ULONG parameter_1, ULONG parameter_2);
-VOID  _txm_module_manager_callback_handler_51(ULONG parameter_1, ULONG parameter_2);
-VOID  _txm_module_manager_callback_handler_52(ULONG parameter_1, ULONG parameter_2);
-VOID  _txm_module_manager_callback_handler_53(ULONG parameter_1, ULONG parameter_2);
-VOID  _txm_module_manager_callback_handler_54(ULONG parameter_1, ULONG parameter_2);
-VOID  _txm_module_manager_callback_handler_55(ULONG parameter_1, ULONG parameter_2);
-VOID  _txm_module_manager_callback_handler_56(ULONG parameter_1, ULONG parameter_2);
-VOID  _txm_module_manager_callback_handler_57(ULONG parameter_1, ULONG parameter_2);
-VOID  _txm_module_manager_callback_handler_58(ULONG parameter_1, ULONG parameter_2);
-VOID  _txm_module_manager_callback_handler_59(ULONG parameter_1, ULONG parameter_2);
-VOID  _txm_module_manager_callback_handler_60(ULONG parameter_1, ULONG parameter_2);
-VOID  _txm_module_manager_callback_handler_61(ULONG parameter_1, ULONG parameter_2);
-VOID  _txm_module_manager_callback_handler_62(ULONG parameter_1, ULONG parameter_2);
-VOID  _txm_module_manager_callback_handler_63(ULONG parameter_1, ULONG parameter_2);
+
+VOID  _txm_module_manager_callback_handler_32(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8);
+
+VOID  _txm_module_manager_callback_handler_33(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8);
+
+VOID  _txm_module_manager_callback_handler_34(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8);
+
+VOID  _txm_module_manager_callback_handler_35(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8);
+
+VOID  _txm_module_manager_callback_handler_36(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8);
+
+VOID  _txm_module_manager_callback_handler_37(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8);
+
+VOID  _txm_module_manager_callback_handler_38(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8);
+
+VOID  _txm_module_manager_callback_handler_39(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8);
+
+VOID  _txm_module_manager_callback_handler_40(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8);
+
+VOID  _txm_module_manager_callback_handler_41(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8);
+
+VOID  _txm_module_manager_callback_handler_42(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8);
+
+VOID  _txm_module_manager_callback_handler_43(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8);
+
+VOID  _txm_module_manager_callback_handler_44(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8);
+
+VOID  _txm_module_manager_callback_handler_45(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8);
+
+VOID  _txm_module_manager_callback_handler_46(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8);
+
+VOID  _txm_module_manager_callback_handler_47(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8);
+
+VOID  _txm_module_manager_callback_handler_48(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8);
+
+VOID  _txm_module_manager_callback_handler_49(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8);
+
+VOID  _txm_module_manager_callback_handler_50(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8);
+
+VOID  _txm_module_manager_callback_handler_51(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8);
+
+VOID  _txm_module_manager_callback_handler_52(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8);
+
+VOID  _txm_module_manager_callback_handler_53(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8);
+
+VOID  _txm_module_manager_callback_handler_54(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8);
+
+VOID  _txm_module_manager_callback_handler_55(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8);
+
+VOID  _txm_module_manager_callback_handler_56(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8);
+
+VOID  _txm_module_manager_callback_handler_57(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8);
+
+VOID  _txm_module_manager_callback_handler_58(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8);
+
+VOID  _txm_module_manager_callback_handler_59(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8);
+
+VOID  _txm_module_manager_callback_handler_60(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8);
+
+VOID  _txm_module_manager_callback_handler_61(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8);
+
+VOID  _txm_module_manager_callback_handler_62(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8);
+
+VOID  _txm_module_manager_callback_handler_63(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8);
+
 #if TXM_MODULE_MAX_CALLBACKS > 64
-VOID  _txm_module_manager_callback_handler_64(ULONG parameter_1, ULONG parameter_2);
-VOID  _txm_module_manager_callback_handler_65(ULONG parameter_1, ULONG parameter_2);
-VOID  _txm_module_manager_callback_handler_66(ULONG parameter_1, ULONG parameter_2);
-VOID  _txm_module_manager_callback_handler_67(ULONG parameter_1, ULONG parameter_2);
-VOID  _txm_module_manager_callback_handler_68(ULONG parameter_1, ULONG parameter_2);
-VOID  _txm_module_manager_callback_handler_69(ULONG parameter_1, ULONG parameter_2);
-VOID  _txm_module_manager_callback_handler_70(ULONG parameter_1, ULONG parameter_2);
-VOID  _txm_module_manager_callback_handler_71(ULONG parameter_1, ULONG parameter_2);
-VOID  _txm_module_manager_callback_handler_72(ULONG parameter_1, ULONG parameter_2);
-VOID  _txm_module_manager_callback_handler_73(ULONG parameter_1, ULONG parameter_2);
-VOID  _txm_module_manager_callback_handler_74(ULONG parameter_1, ULONG parameter_2);
-VOID  _txm_module_manager_callback_handler_75(ULONG parameter_1, ULONG parameter_2);
-VOID  _txm_module_manager_callback_handler_76(ULONG parameter_1, ULONG parameter_2);
-VOID  _txm_module_manager_callback_handler_77(ULONG parameter_1, ULONG parameter_2);
-VOID  _txm_module_manager_callback_handler_78(ULONG parameter_1, ULONG parameter_2);
-VOID  _txm_module_manager_callback_handler_79(ULONG parameter_1, ULONG parameter_2);
-VOID  _txm_module_manager_callback_handler_80(ULONG parameter_1, ULONG parameter_2);
-VOID  _txm_module_manager_callback_handler_81(ULONG parameter_1, ULONG parameter_2);
-VOID  _txm_module_manager_callback_handler_82(ULONG parameter_1, ULONG parameter_2);
-VOID  _txm_module_manager_callback_handler_83(ULONG parameter_1, ULONG parameter_2);
-VOID  _txm_module_manager_callback_handler_84(ULONG parameter_1, ULONG parameter_2);
-VOID  _txm_module_manager_callback_handler_85(ULONG parameter_1, ULONG parameter_2);
-VOID  _txm_module_manager_callback_handler_86(ULONG parameter_1, ULONG parameter_2);
-VOID  _txm_module_manager_callback_handler_87(ULONG parameter_1, ULONG parameter_2);
-VOID  _txm_module_manager_callback_handler_88(ULONG parameter_1, ULONG parameter_2);
-VOID  _txm_module_manager_callback_handler_89(ULONG parameter_1, ULONG parameter_2);
-VOID  _txm_module_manager_callback_handler_90(ULONG parameter_1, ULONG parameter_2);
-VOID  _txm_module_manager_callback_handler_91(ULONG parameter_1, ULONG parameter_2);
-VOID  _txm_module_manager_callback_handler_92(ULONG parameter_1, ULONG parameter_2);
-VOID  _txm_module_manager_callback_handler_93(ULONG parameter_1, ULONG parameter_2);
-VOID  _txm_module_manager_callback_handler_94(ULONG parameter_1, ULONG parameter_2);
-VOID  _txm_module_manager_callback_handler_95(ULONG parameter_1, ULONG parameter_2);
-VOID  _txm_module_manager_callback_handler_96(ULONG parameter_1, ULONG parameter_2);
-VOID  _txm_module_manager_callback_handler_97(ULONG parameter_1, ULONG parameter_2);
-VOID  _txm_module_manager_callback_handler_98(ULONG parameter_1, ULONG parameter_2);
-VOID  _txm_module_manager_callback_handler_99(ULONG parameter_1, ULONG parameter_2);
-VOID  _txm_module_manager_callback_handler_100(ULONG parameter_1, ULONG parameter_2);
-VOID  _txm_module_manager_callback_handler_101(ULONG parameter_1, ULONG parameter_2);
-VOID  _txm_module_manager_callback_handler_102(ULONG parameter_1, ULONG parameter_2);
-VOID  _txm_module_manager_callback_handler_103(ULONG parameter_1, ULONG parameter_2);
-VOID  _txm_module_manager_callback_handler_104(ULONG parameter_1, ULONG parameter_2);
-VOID  _txm_module_manager_callback_handler_105(ULONG parameter_1, ULONG parameter_2);
-VOID  _txm_module_manager_callback_handler_106(ULONG parameter_1, ULONG parameter_2);
-VOID  _txm_module_manager_callback_handler_107(ULONG parameter_1, ULONG parameter_2);
-VOID  _txm_module_manager_callback_handler_108(ULONG parameter_1, ULONG parameter_2);
-VOID  _txm_module_manager_callback_handler_109(ULONG parameter_1, ULONG parameter_2);
-VOID  _txm_module_manager_callback_handler_110(ULONG parameter_1, ULONG parameter_2);
-VOID  _txm_module_manager_callback_handler_111(ULONG parameter_1, ULONG parameter_2);
-VOID  _txm_module_manager_callback_handler_112(ULONG parameter_1, ULONG parameter_2);
-VOID  _txm_module_manager_callback_handler_113(ULONG parameter_1, ULONG parameter_2);
-VOID  _txm_module_manager_callback_handler_114(ULONG parameter_1, ULONG parameter_2);
-VOID  _txm_module_manager_callback_handler_115(ULONG parameter_1, ULONG parameter_2);
-VOID  _txm_module_manager_callback_handler_116(ULONG parameter_1, ULONG parameter_2);
-VOID  _txm_module_manager_callback_handler_117(ULONG parameter_1, ULONG parameter_2);
-VOID  _txm_module_manager_callback_handler_118(ULONG parameter_1, ULONG parameter_2);
-VOID  _txm_module_manager_callback_handler_119(ULONG parameter_1, ULONG parameter_2);
-VOID  _txm_module_manager_callback_handler_120(ULONG parameter_1, ULONG parameter_2);
-VOID  _txm_module_manager_callback_handler_121(ULONG parameter_1, ULONG parameter_2);
-VOID  _txm_module_manager_callback_handler_122(ULONG parameter_1, ULONG parameter_2);
-VOID  _txm_module_manager_callback_handler_123(ULONG parameter_1, ULONG parameter_2);
-VOID  _txm_module_manager_callback_handler_124(ULONG parameter_1, ULONG parameter_2);
-VOID  _txm_module_manager_callback_handler_125(ULONG parameter_1, ULONG parameter_2);
-VOID  _txm_module_manager_callback_handler_126(ULONG parameter_1, ULONG parameter_2);
-VOID  _txm_module_manager_callback_handler_127(ULONG parameter_1, ULONG parameter_2);
+
+VOID  _txm_module_manager_callback_handler_64(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8);
+
+VOID  _txm_module_manager_callback_handler_65(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8);
+
+VOID  _txm_module_manager_callback_handler_66(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8);
+
+VOID  _txm_module_manager_callback_handler_67(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8);
+
+VOID  _txm_module_manager_callback_handler_68(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8);
+
+VOID  _txm_module_manager_callback_handler_69(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8);
+
+VOID  _txm_module_manager_callback_handler_70(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8);
+
+VOID  _txm_module_manager_callback_handler_71(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8);
+
+VOID  _txm_module_manager_callback_handler_72(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8);
+
+VOID  _txm_module_manager_callback_handler_73(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8);
+
+VOID  _txm_module_manager_callback_handler_74(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8);
+
+VOID  _txm_module_manager_callback_handler_75(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8);
+
+VOID  _txm_module_manager_callback_handler_76(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8);
+
+VOID  _txm_module_manager_callback_handler_77(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8);
+
+VOID  _txm_module_manager_callback_handler_78(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8);
+
+VOID  _txm_module_manager_callback_handler_79(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8);
+
+VOID  _txm_module_manager_callback_handler_80(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8);
+
+VOID  _txm_module_manager_callback_handler_81(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8);
+
+VOID  _txm_module_manager_callback_handler_82(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8);
+
+VOID  _txm_module_manager_callback_handler_83(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8);
+
+VOID  _txm_module_manager_callback_handler_84(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8);
+
+VOID  _txm_module_manager_callback_handler_85(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8);
+
+VOID  _txm_module_manager_callback_handler_86(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8);
+
+VOID  _txm_module_manager_callback_handler_87(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8);
+
+VOID  _txm_module_manager_callback_handler_88(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8);
+
+VOID  _txm_module_manager_callback_handler_89(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8);
+
+VOID  _txm_module_manager_callback_handler_90(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8);
+
+VOID  _txm_module_manager_callback_handler_91(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8);
+
+VOID  _txm_module_manager_callback_handler_92(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8);
+
+VOID  _txm_module_manager_callback_handler_93(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8);
+
+VOID  _txm_module_manager_callback_handler_94(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8);
+
+VOID  _txm_module_manager_callback_handler_95(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8);
+
+VOID  _txm_module_manager_callback_handler_96(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8);
+
+VOID  _txm_module_manager_callback_handler_97(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8);
+
+VOID  _txm_module_manager_callback_handler_98(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8);
+
+VOID  _txm_module_manager_callback_handler_99(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8);
+
+VOID  _txm_module_manager_callback_handler_100(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8);
+
+VOID  _txm_module_manager_callback_handler_101(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8);
+
+VOID  _txm_module_manager_callback_handler_102(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8);
+
+VOID  _txm_module_manager_callback_handler_103(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8);
+
+VOID  _txm_module_manager_callback_handler_104(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8);
+
+VOID  _txm_module_manager_callback_handler_105(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8);
+
+VOID  _txm_module_manager_callback_handler_106(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8);
+
+VOID  _txm_module_manager_callback_handler_107(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8);
+
+VOID  _txm_module_manager_callback_handler_108(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8);
+
+VOID  _txm_module_manager_callback_handler_109(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8);
+
+VOID  _txm_module_manager_callback_handler_110(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8);
+
+VOID  _txm_module_manager_callback_handler_111(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8);
+
+VOID  _txm_module_manager_callback_handler_112(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8);
+
+VOID  _txm_module_manager_callback_handler_113(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8);
+
+VOID  _txm_module_manager_callback_handler_114(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8);
+
+VOID  _txm_module_manager_callback_handler_115(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8);
+
+VOID  _txm_module_manager_callback_handler_116(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8);
+
+VOID  _txm_module_manager_callback_handler_117(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8);
+
+VOID  _txm_module_manager_callback_handler_118(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8);
+
+VOID  _txm_module_manager_callback_handler_119(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8);
+
+VOID  _txm_module_manager_callback_handler_120(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8);
+
+VOID  _txm_module_manager_callback_handler_121(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8);
+
+VOID  _txm_module_manager_callback_handler_122(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8);
+
+VOID  _txm_module_manager_callback_handler_123(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8);
+
+VOID  _txm_module_manager_callback_handler_124(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8);
+
+VOID  _txm_module_manager_callback_handler_125(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8);
+
+VOID  _txm_module_manager_callback_handler_126(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8);
+
+VOID  _txm_module_manager_callback_handler_127(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8);
+
 #endif
 #endif
 #endif
@@ -347,7 +873,7 @@
 /*                                                                        */ 
 /*  CALLS                                                                 */ 
 /*                                                                        */ 
-/*    _txm_module_manager_callback_transfer Transfer callback to module   */ 
+/*    _txm_module_manager_callback_trampoline Transfer callback to module   */ 
 /*                                                                        */ 
 /*  CALLED BY                                                             */ 
 /*                                                                        */ 
@@ -366,878 +892,1497 @@
 /*                                            resulting in version 5.6    */ 
 /*                                                                        */ 
 /**************************************************************************/ 
-VOID  _txm_module_manager_callback_handler_0(ULONG parameter_1, ULONG parameter_2)
+VOID  _txm_module_manager_callback_handler_0(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8)
 {
-
     /* Transfer this callback to module.  */
-    _txm_module_manager_callback_transfer(0, parameter_1, parameter_2);
+    _txm_module_manager_callback_trampoline(0, parameter_1, parameter_2,
+	                                         parameter_3, parameter_4,
+                                             parameter_5, parameter_6,
+                                             parameter_7, parameter_8);
 }
 
-VOID  _txm_module_manager_callback_handler_1(ULONG parameter_1, ULONG parameter_2)
+VOID  _txm_module_manager_callback_handler_1(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8)
 {
-
     /* Transfer this callback to module.  */
-    _txm_module_manager_callback_transfer(1, parameter_1, parameter_2);
+    _txm_module_manager_callback_trampoline(1, parameter_1, parameter_2,
+	                                         parameter_3, parameter_4,
+                                             parameter_5, parameter_6,
+                                             parameter_7, parameter_8);
 }
 
-VOID  _txm_module_manager_callback_handler_2(ULONG parameter_1, ULONG parameter_2)
+VOID  _txm_module_manager_callback_handler_2(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8)
 {
-
     /* Transfer this callback to module.  */
-    _txm_module_manager_callback_transfer(2, parameter_1, parameter_2);
+    _txm_module_manager_callback_trampoline(2, parameter_1, parameter_2,
+	                                         parameter_3, parameter_4,
+                                             parameter_5, parameter_6,
+                                             parameter_7, parameter_8);
 }
 
-VOID  _txm_module_manager_callback_handler_3(ULONG parameter_1, ULONG parameter_2)
+VOID  _txm_module_manager_callback_handler_3(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8)
 {
-
     /* Transfer this callback to module.  */
-    _txm_module_manager_callback_transfer(3, parameter_1, parameter_2);
+    _txm_module_manager_callback_trampoline(3, parameter_1, parameter_2,
+	                                         parameter_3, parameter_4,
+                                             parameter_5, parameter_6,
+                                             parameter_7, parameter_8);
 }
 
-VOID  _txm_module_manager_callback_handler_4(ULONG parameter_1, ULONG parameter_2)
+VOID  _txm_module_manager_callback_handler_4(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8)
 {
-
     /* Transfer this callback to module.  */
-    _txm_module_manager_callback_transfer(4, parameter_1, parameter_2);
+    _txm_module_manager_callback_trampoline(4, parameter_1, parameter_2,
+	                                         parameter_3, parameter_4,
+                                             parameter_5, parameter_6,
+                                             parameter_7, parameter_8);
 }
 
-VOID  _txm_module_manager_callback_handler_5(ULONG parameter_1, ULONG parameter_2)
+VOID  _txm_module_manager_callback_handler_5(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8)
 {
-
     /* Transfer this callback to module.  */
-    _txm_module_manager_callback_transfer(5, parameter_1, parameter_2);
+    _txm_module_manager_callback_trampoline(5, parameter_1, parameter_2,
+	                                         parameter_3, parameter_4,
+                                             parameter_5, parameter_6,
+                                             parameter_7, parameter_8);
 }
 
-VOID  _txm_module_manager_callback_handler_6(ULONG parameter_1, ULONG parameter_2)
+VOID  _txm_module_manager_callback_handler_6(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8)
 {
-
     /* Transfer this callback to module.  */
-    _txm_module_manager_callback_transfer(6, parameter_1, parameter_2);
+    _txm_module_manager_callback_trampoline(6, parameter_1, parameter_2,
+	                                         parameter_3, parameter_4,
+                                             parameter_5, parameter_6,
+                                             parameter_7, parameter_8);
 }
 
-VOID  _txm_module_manager_callback_handler_7(ULONG parameter_1, ULONG parameter_2)
+VOID  _txm_module_manager_callback_handler_7(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8)
 {
-
     /* Transfer this callback to module.  */
-    _txm_module_manager_callback_transfer(7, parameter_1, parameter_2);
+    _txm_module_manager_callback_trampoline(7, parameter_1, parameter_2,
+	                                         parameter_3, parameter_4,
+                                             parameter_5, parameter_6,
+                                             parameter_7, parameter_8);
 }
 
-VOID  _txm_module_manager_callback_handler_8(ULONG parameter_1, ULONG parameter_2)
+VOID  _txm_module_manager_callback_handler_8(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8)
 {
-
     /* Transfer this callback to module.  */
-    _txm_module_manager_callback_transfer(8, parameter_1, parameter_2);
+    _txm_module_manager_callback_trampoline(8, parameter_1, parameter_2,
+	                                         parameter_3, parameter_4,
+                                             parameter_5, parameter_6,
+                                             parameter_7, parameter_8);
 }
 
-VOID  _txm_module_manager_callback_handler_9(ULONG parameter_1, ULONG parameter_2)
+VOID  _txm_module_manager_callback_handler_9(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8)
 {
-
     /* Transfer this callback to module.  */
-    _txm_module_manager_callback_transfer(9, parameter_1, parameter_2);
+    _txm_module_manager_callback_trampoline(9, parameter_1, parameter_2,
+	                                         parameter_3, parameter_4,
+                                             parameter_5, parameter_6,
+                                             parameter_7, parameter_8);
 }
 
-VOID  _txm_module_manager_callback_handler_10(ULONG parameter_1, ULONG parameter_2)
+VOID  _txm_module_manager_callback_handler_10(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8)
 {
-
     /* Transfer this callback to module.  */
-    _txm_module_manager_callback_transfer(10, parameter_1, parameter_2);
+    _txm_module_manager_callback_trampoline(10, parameter_1, parameter_2,
+	                                         parameter_3, parameter_4,
+                                             parameter_5, parameter_6,
+                                             parameter_7, parameter_8);
 }
 
-VOID  _txm_module_manager_callback_handler_11(ULONG parameter_1, ULONG parameter_2)
+VOID  _txm_module_manager_callback_handler_11(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8)
 {
-
     /* Transfer this callback to module.  */
-    _txm_module_manager_callback_transfer(11, parameter_1, parameter_2);
+    _txm_module_manager_callback_trampoline(11, parameter_1, parameter_2,
+	                                         parameter_3, parameter_4,
+                                             parameter_5, parameter_6,
+                                             parameter_7, parameter_8);
 }
 
-VOID  _txm_module_manager_callback_handler_12(ULONG parameter_1, ULONG parameter_2)
+VOID  _txm_module_manager_callback_handler_12(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8)
 {
-
     /* Transfer this callback to module.  */
-    _txm_module_manager_callback_transfer(12, parameter_1, parameter_2);
+    _txm_module_manager_callback_trampoline(12, parameter_1, parameter_2,
+	                                         parameter_3, parameter_4,
+                                             parameter_5, parameter_6,
+                                             parameter_7, parameter_8);
 }
 
-VOID  _txm_module_manager_callback_handler_13(ULONG parameter_1, ULONG parameter_2)
+VOID  _txm_module_manager_callback_handler_13(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8)
 {
-
     /* Transfer this callback to module.  */
-    _txm_module_manager_callback_transfer(13, parameter_1, parameter_2);
+    _txm_module_manager_callback_trampoline(13, parameter_1, parameter_2,
+	                                         parameter_3, parameter_4,
+                                             parameter_5, parameter_6,
+                                             parameter_7, parameter_8);
 }
 
-VOID  _txm_module_manager_callback_handler_14(ULONG parameter_1, ULONG parameter_2)
+VOID  _txm_module_manager_callback_handler_14(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8)
 {
-
     /* Transfer this callback to module.  */
-    _txm_module_manager_callback_transfer(14, parameter_1, parameter_2);
+    _txm_module_manager_callback_trampoline(14, parameter_1, parameter_2,
+	                                         parameter_3, parameter_4,
+                                             parameter_5, parameter_6,
+                                             parameter_7, parameter_8);
 }
 
-VOID  _txm_module_manager_callback_handler_15(ULONG parameter_1, ULONG parameter_2)
+VOID  _txm_module_manager_callback_handler_15(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8)
 {
-
     /* Transfer this callback to module.  */
-    _txm_module_manager_callback_transfer(15, parameter_1, parameter_2);
+    _txm_module_manager_callback_trampoline(15, parameter_1, parameter_2,
+	                                         parameter_3, parameter_4,
+                                             parameter_5, parameter_6,
+                                             parameter_7, parameter_8);
 }
 
 #if TXM_MODULE_MAX_CALLBACKS > 16
 
-VOID  _txm_module_manager_callback_handler_16(ULONG parameter_1, ULONG parameter_2)
+VOID  _txm_module_manager_callback_handler_16(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8)
 {
-
     /* Transfer this callback to module.  */
-    _txm_module_manager_callback_transfer(16, parameter_1, parameter_2);
+    _txm_module_manager_callback_trampoline(16, parameter_1, parameter_2,
+	                                         parameter_3, parameter_4,
+                                             parameter_5, parameter_6,
+                                             parameter_7, parameter_8);
 }
 
-VOID  _txm_module_manager_callback_handler_17(ULONG parameter_1, ULONG parameter_2)
+VOID  _txm_module_manager_callback_handler_17(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8)
 {
-
     /* Transfer this callback to module.  */
-    _txm_module_manager_callback_transfer(17, parameter_1, parameter_2);
+    _txm_module_manager_callback_trampoline(17, parameter_1, parameter_2,
+	                                         parameter_3, parameter_4,
+                                             parameter_5, parameter_6,
+                                             parameter_7, parameter_8);
 }
 
-VOID  _txm_module_manager_callback_handler_18(ULONG parameter_1, ULONG parameter_2)
+VOID  _txm_module_manager_callback_handler_18(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8)
 {
-
     /* Transfer this callback to module.  */
-    _txm_module_manager_callback_transfer(18, parameter_1, parameter_2);
+    _txm_module_manager_callback_trampoline(18, parameter_1, parameter_2,
+	                                         parameter_3, parameter_4,
+                                             parameter_5, parameter_6,
+                                             parameter_7, parameter_8);
 }
 
-VOID  _txm_module_manager_callback_handler_19(ULONG parameter_1, ULONG parameter_2)
+VOID  _txm_module_manager_callback_handler_19(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8)
 {
-
     /* Transfer this callback to module.  */
-    _txm_module_manager_callback_transfer(19, parameter_1, parameter_2);
+    _txm_module_manager_callback_trampoline(19, parameter_1, parameter_2,
+	                                         parameter_3, parameter_4,
+                                             parameter_5, parameter_6,
+                                             parameter_7, parameter_8);
 }
 
-VOID  _txm_module_manager_callback_handler_20(ULONG parameter_1, ULONG parameter_2)
+VOID  _txm_module_manager_callback_handler_20(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8)
 {
-
     /* Transfer this callback to module.  */
-    _txm_module_manager_callback_transfer(20, parameter_1, parameter_2);
+    _txm_module_manager_callback_trampoline(20, parameter_1, parameter_2,
+	                                         parameter_3, parameter_4,
+                                             parameter_5, parameter_6,
+                                             parameter_7, parameter_8);
 }
 
-VOID  _txm_module_manager_callback_handler_21(ULONG parameter_1, ULONG parameter_2)
+VOID  _txm_module_manager_callback_handler_21(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8)
 {
-
     /* Transfer this callback to module.  */
-    _txm_module_manager_callback_transfer(21, parameter_1, parameter_2);
+    _txm_module_manager_callback_trampoline(21, parameter_1, parameter_2,
+	                                         parameter_3, parameter_4,
+                                             parameter_5, parameter_6,
+                                             parameter_7, parameter_8);
 }
 
-VOID  _txm_module_manager_callback_handler_22(ULONG parameter_1, ULONG parameter_2)
+VOID  _txm_module_manager_callback_handler_22(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8)
 {
-
     /* Transfer this callback to module.  */
-    _txm_module_manager_callback_transfer(22, parameter_1, parameter_2);
+    _txm_module_manager_callback_trampoline(22, parameter_1, parameter_2,
+	                                         parameter_3, parameter_4,
+                                             parameter_5, parameter_6,
+                                             parameter_7, parameter_8);
 }
 
-VOID  _txm_module_manager_callback_handler_23(ULONG parameter_1, ULONG parameter_2)
+VOID  _txm_module_manager_callback_handler_23(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8)
 {
-
     /* Transfer this callback to module.  */
-    _txm_module_manager_callback_transfer(23, parameter_1, parameter_2);
+    _txm_module_manager_callback_trampoline(23, parameter_1, parameter_2,
+	                                         parameter_3, parameter_4,
+                                             parameter_5, parameter_6,
+                                             parameter_7, parameter_8);
 }
 
-VOID  _txm_module_manager_callback_handler_24(ULONG parameter_1, ULONG parameter_2)
+VOID  _txm_module_manager_callback_handler_24(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8)
 {
-
     /* Transfer this callback to module.  */
-    _txm_module_manager_callback_transfer(24, parameter_1, parameter_2);
+    _txm_module_manager_callback_trampoline(24, parameter_1, parameter_2,
+	                                         parameter_3, parameter_4,
+                                             parameter_5, parameter_6,
+                                             parameter_7, parameter_8);
 }
 
-VOID  _txm_module_manager_callback_handler_25(ULONG parameter_1, ULONG parameter_2)
+VOID  _txm_module_manager_callback_handler_25(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8)
 {
-
     /* Transfer this callback to module.  */
-    _txm_module_manager_callback_transfer(25, parameter_1, parameter_2);
+    _txm_module_manager_callback_trampoline(25, parameter_1, parameter_2,
+	                                         parameter_3, parameter_4,
+                                             parameter_5, parameter_6,
+                                             parameter_7, parameter_8);
 }
 
-VOID  _txm_module_manager_callback_handler_26(ULONG parameter_1, ULONG parameter_2)
+VOID  _txm_module_manager_callback_handler_26(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8)
 {
-
     /* Transfer this callback to module.  */
-    _txm_module_manager_callback_transfer(26, parameter_1, parameter_2);
+    _txm_module_manager_callback_trampoline(26, parameter_1, parameter_2,
+	                                         parameter_3, parameter_4,
+                                             parameter_5, parameter_6,
+                                             parameter_7, parameter_8);
 }
 
-VOID  _txm_module_manager_callback_handler_27(ULONG parameter_1, ULONG parameter_2)
+VOID  _txm_module_manager_callback_handler_27(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8)
 {
-
     /* Transfer this callback to module.  */
-    _txm_module_manager_callback_transfer(27, parameter_1, parameter_2);
+    _txm_module_manager_callback_trampoline(27, parameter_1, parameter_2,
+	                                         parameter_3, parameter_4,
+                                             parameter_5, parameter_6,
+                                             parameter_7, parameter_8);
 }
 
-VOID  _txm_module_manager_callback_handler_28(ULONG parameter_1, ULONG parameter_2)
+VOID  _txm_module_manager_callback_handler_28(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8)
 {
-
     /* Transfer this callback to module.  */
-    _txm_module_manager_callback_transfer(28, parameter_1, parameter_2);
+    _txm_module_manager_callback_trampoline(28, parameter_1, parameter_2,
+	                                         parameter_3, parameter_4,
+                                             parameter_5, parameter_6,
+                                             parameter_7, parameter_8);
 }
 
-VOID  _txm_module_manager_callback_handler_29(ULONG parameter_1, ULONG parameter_2)
+VOID  _txm_module_manager_callback_handler_29(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8)
 {
-
     /* Transfer this callback to module.  */
-    _txm_module_manager_callback_transfer(29, parameter_1, parameter_2);
+    _txm_module_manager_callback_trampoline(29, parameter_1, parameter_2,
+	                                         parameter_3, parameter_4,
+                                             parameter_5, parameter_6,
+                                             parameter_7, parameter_8);
 }
 
-VOID  _txm_module_manager_callback_handler_30(ULONG parameter_1, ULONG parameter_2)
+VOID  _txm_module_manager_callback_handler_30(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8)
 {
-
     /* Transfer this callback to module.  */
-    _txm_module_manager_callback_transfer(30, parameter_1, parameter_2);
+    _txm_module_manager_callback_trampoline(30, parameter_1, parameter_2,
+	                                         parameter_3, parameter_4,
+                                             parameter_5, parameter_6,
+                                             parameter_7, parameter_8);
 }
 
-VOID  _txm_module_manager_callback_handler_31(ULONG parameter_1, ULONG parameter_2)
+VOID  _txm_module_manager_callback_handler_31(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8)
 {
-
     /* Transfer this callback to module.  */
-    _txm_module_manager_callback_transfer(31, parameter_1, parameter_2);
+    _txm_module_manager_callback_trampoline(31, parameter_1, parameter_2,
+	                                         parameter_3, parameter_4,
+                                             parameter_5, parameter_6,
+                                             parameter_7, parameter_8);
 }
 
 #if TXM_MODULE_MAX_CALLBACKS > 32
-
-VOID  _txm_module_manager_callback_handler_32(ULONG parameter_1, ULONG parameter_2)
+VOID  _txm_module_manager_callback_handler_32(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8)
 {
-
     /* Transfer this callback to module.  */
-    _txm_module_manager_callback_transfer(32, parameter_1, parameter_2);
+    _txm_module_manager_callback_trampoline(32, parameter_1, parameter_2,
+	                                         parameter_3, parameter_4,
+                                             parameter_5, parameter_6,
+                                             parameter_7, parameter_8);
 }
 
-VOID  _txm_module_manager_callback_handler_33(ULONG parameter_1, ULONG parameter_2)
+VOID  _txm_module_manager_callback_handler_33(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8)
 {
-
     /* Transfer this callback to module.  */
-    _txm_module_manager_callback_transfer(33, parameter_1, parameter_2);
+    _txm_module_manager_callback_trampoline(33, parameter_1, parameter_2,
+	                                         parameter_3, parameter_4,
+                                             parameter_5, parameter_6,
+                                             parameter_7, parameter_8);
 }
 
-VOID  _txm_module_manager_callback_handler_34(ULONG parameter_1, ULONG parameter_2)
+VOID  _txm_module_manager_callback_handler_34(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8)
 {
-
     /* Transfer this callback to module.  */
-    _txm_module_manager_callback_transfer(34, parameter_1, parameter_2);
+    _txm_module_manager_callback_trampoline(34, parameter_1, parameter_2,
+	                                         parameter_3, parameter_4,
+                                             parameter_5, parameter_6,
+                                             parameter_7, parameter_8);
 }
 
-VOID  _txm_module_manager_callback_handler_35(ULONG parameter_1, ULONG parameter_2)
+VOID  _txm_module_manager_callback_handler_35(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8)
 {
-
     /* Transfer this callback to module.  */
-    _txm_module_manager_callback_transfer(35, parameter_1, parameter_2);
+    _txm_module_manager_callback_trampoline(35, parameter_1, parameter_2,
+	                                         parameter_3, parameter_4,
+                                             parameter_5, parameter_6,
+                                             parameter_7, parameter_8);
 }
 
-VOID  _txm_module_manager_callback_handler_36(ULONG parameter_1, ULONG parameter_2)
+VOID  _txm_module_manager_callback_handler_36(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8)
 {
-
     /* Transfer this callback to module.  */
-    _txm_module_manager_callback_transfer(36, parameter_1, parameter_2);
+    _txm_module_manager_callback_trampoline(36, parameter_1, parameter_2,
+	                                         parameter_3, parameter_4,
+                                             parameter_5, parameter_6,
+                                             parameter_7, parameter_8);
 }
 
-VOID  _txm_module_manager_callback_handler_37(ULONG parameter_1, ULONG parameter_2)
+VOID  _txm_module_manager_callback_handler_37(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8)
 {
-
     /* Transfer this callback to module.  */
-    _txm_module_manager_callback_transfer(37, parameter_1, parameter_2);
+    _txm_module_manager_callback_trampoline(37, parameter_1, parameter_2,
+	                                         parameter_3, parameter_4,
+                                             parameter_5, parameter_6,
+                                             parameter_7, parameter_8);
 }
 
-VOID  _txm_module_manager_callback_handler_38(ULONG parameter_1, ULONG parameter_2)
+VOID  _txm_module_manager_callback_handler_38(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8)
 {
-
     /* Transfer this callback to module.  */
-    _txm_module_manager_callback_transfer(38, parameter_1, parameter_2);
+    _txm_module_manager_callback_trampoline(38, parameter_1, parameter_2,
+	                                         parameter_3, parameter_4,
+                                             parameter_5, parameter_6,
+                                             parameter_7, parameter_8);
 }
 
-VOID  _txm_module_manager_callback_handler_39(ULONG parameter_1, ULONG parameter_2)
+VOID  _txm_module_manager_callback_handler_39(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8)
 {
-
     /* Transfer this callback to module.  */
-    _txm_module_manager_callback_transfer(39, parameter_1, parameter_2);
+    _txm_module_manager_callback_trampoline(39, parameter_1, parameter_2,
+	                                         parameter_3, parameter_4,
+                                             parameter_5, parameter_6,
+                                             parameter_7, parameter_8);
 }
 
-VOID  _txm_module_manager_callback_handler_40(ULONG parameter_1, ULONG parameter_2)
+VOID  _txm_module_manager_callback_handler_40(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8)
 {
-
     /* Transfer this callback to module.  */
-    _txm_module_manager_callback_transfer(40, parameter_1, parameter_2);
+    _txm_module_manager_callback_trampoline(40, parameter_1, parameter_2,
+	                                         parameter_3, parameter_4,
+                                             parameter_5, parameter_6,
+                                             parameter_7, parameter_8);
 }
 
-VOID  _txm_module_manager_callback_handler_41(ULONG parameter_1, ULONG parameter_2)
+VOID  _txm_module_manager_callback_handler_41(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8)
 {
-
     /* Transfer this callback to module.  */
-    _txm_module_manager_callback_transfer(41, parameter_1, parameter_2);
+    _txm_module_manager_callback_trampoline(41, parameter_1, parameter_2,
+	                                         parameter_3, parameter_4,
+                                             parameter_5, parameter_6,
+                                             parameter_7, parameter_8);
 }
 
-VOID  _txm_module_manager_callback_handler_42(ULONG parameter_1, ULONG parameter_2)
+VOID  _txm_module_manager_callback_handler_42(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8)
 {
-
     /* Transfer this callback to module.  */
-    _txm_module_manager_callback_transfer(42, parameter_1, parameter_2);
+    _txm_module_manager_callback_trampoline(42, parameter_1, parameter_2,
+	                                         parameter_3, parameter_4,
+                                             parameter_5, parameter_6,
+                                             parameter_7, parameter_8);
 }
 
-VOID  _txm_module_manager_callback_handler_43(ULONG parameter_1, ULONG parameter_2)
+VOID  _txm_module_manager_callback_handler_43(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8)
 {
-
     /* Transfer this callback to module.  */
-    _txm_module_manager_callback_transfer(43, parameter_1, parameter_2);
+    _txm_module_manager_callback_trampoline(43, parameter_1, parameter_2,
+	                                         parameter_3, parameter_4,
+                                             parameter_5, parameter_6,
+                                             parameter_7, parameter_8);
 }
 
-VOID  _txm_module_manager_callback_handler_44(ULONG parameter_1, ULONG parameter_2)
+VOID  _txm_module_manager_callback_handler_44(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8)
 {
-
     /* Transfer this callback to module.  */
-    _txm_module_manager_callback_transfer(44, parameter_1, parameter_2);
+    _txm_module_manager_callback_trampoline(44, parameter_1, parameter_2,
+	                                         parameter_3, parameter_4,
+                                             parameter_5, parameter_6,
+                                             parameter_7, parameter_8);
 }
 
-VOID  _txm_module_manager_callback_handler_45(ULONG parameter_1, ULONG parameter_2)
+VOID  _txm_module_manager_callback_handler_45(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8)
 {
-
     /* Transfer this callback to module.  */
-    _txm_module_manager_callback_transfer(45, parameter_1, parameter_2);
+    _txm_module_manager_callback_trampoline(45, parameter_1, parameter_2,
+	                                         parameter_3, parameter_4,
+                                             parameter_5, parameter_6,
+                                             parameter_7, parameter_8);
 }
 
-VOID  _txm_module_manager_callback_handler_46(ULONG parameter_1, ULONG parameter_2)
+VOID  _txm_module_manager_callback_handler_46(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8)
 {
-
     /* Transfer this callback to module.  */
-    _txm_module_manager_callback_transfer(46, parameter_1, parameter_2);
+    _txm_module_manager_callback_trampoline(46, parameter_1, parameter_2,
+	                                         parameter_3, parameter_4,
+                                             parameter_5, parameter_6,
+                                             parameter_7, parameter_8);
 }
 
-VOID  _txm_module_manager_callback_handler_47(ULONG parameter_1, ULONG parameter_2)
+VOID  _txm_module_manager_callback_handler_47(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8)
 {
-
     /* Transfer this callback to module.  */
-    _txm_module_manager_callback_transfer(47, parameter_1, parameter_2);
+    _txm_module_manager_callback_trampoline(47, parameter_1, parameter_2,
+	                                         parameter_3, parameter_4,
+                                             parameter_5, parameter_6,
+                                             parameter_7, parameter_8);
 }
 
-VOID  _txm_module_manager_callback_handler_48(ULONG parameter_1, ULONG parameter_2)
+VOID  _txm_module_manager_callback_handler_48(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8)
 {
-
     /* Transfer this callback to module.  */
-    _txm_module_manager_callback_transfer(48, parameter_1, parameter_2);
+    _txm_module_manager_callback_trampoline(48, parameter_1, parameter_2,
+	                                         parameter_3, parameter_4,
+                                             parameter_5, parameter_6,
+                                             parameter_7, parameter_8);
 }
 
-VOID  _txm_module_manager_callback_handler_49(ULONG parameter_1, ULONG parameter_2)
+VOID  _txm_module_manager_callback_handler_49(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8)
 {
-
     /* Transfer this callback to module.  */
-    _txm_module_manager_callback_transfer(49, parameter_1, parameter_2);
+    _txm_module_manager_callback_trampoline(49, parameter_1, parameter_2,
+	                                         parameter_3, parameter_4,
+                                             parameter_5, parameter_6,
+                                             parameter_7, parameter_8);
 }
 
-VOID  _txm_module_manager_callback_handler_50(ULONG parameter_1, ULONG parameter_2)
+VOID  _txm_module_manager_callback_handler_50(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8)
 {
-
     /* Transfer this callback to module.  */
-    _txm_module_manager_callback_transfer(50, parameter_1, parameter_2);
+    _txm_module_manager_callback_trampoline(50, parameter_1, parameter_2,
+	                                         parameter_3, parameter_4,
+                                             parameter_5, parameter_6,
+                                             parameter_7, parameter_8);
 }
 
-VOID  _txm_module_manager_callback_handler_51(ULONG parameter_1, ULONG parameter_2)
+VOID  _txm_module_manager_callback_handler_51(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8)
 {
-
     /* Transfer this callback to module.  */
-    _txm_module_manager_callback_transfer(51, parameter_1, parameter_2);
+    _txm_module_manager_callback_trampoline(51, parameter_1, parameter_2,
+	                                         parameter_3, parameter_4,
+                                             parameter_5, parameter_6,
+                                             parameter_7, parameter_8);
 }
 
-VOID  _txm_module_manager_callback_handler_52(ULONG parameter_1, ULONG parameter_2)
+VOID  _txm_module_manager_callback_handler_52(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8)
 {
-
     /* Transfer this callback to module.  */
-    _txm_module_manager_callback_transfer(52, parameter_1, parameter_2);
+    _txm_module_manager_callback_trampoline(52, parameter_1, parameter_2,
+	                                         parameter_3, parameter_4,
+                                             parameter_5, parameter_6,
+                                             parameter_7, parameter_8);
 }
 
-VOID  _txm_module_manager_callback_handler_53(ULONG parameter_1, ULONG parameter_2)
+VOID  _txm_module_manager_callback_handler_53(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8)
 {
-
     /* Transfer this callback to module.  */
-    _txm_module_manager_callback_transfer(53, parameter_1, parameter_2);
+    _txm_module_manager_callback_trampoline(53, parameter_1, parameter_2,
+	                                         parameter_3, parameter_4,
+                                             parameter_5, parameter_6,
+                                             parameter_7, parameter_8);
 }
 
-VOID  _txm_module_manager_callback_handler_54(ULONG parameter_1, ULONG parameter_2)
+VOID  _txm_module_manager_callback_handler_54(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8)
 {
-
     /* Transfer this callback to module.  */
-    _txm_module_manager_callback_transfer(54, parameter_1, parameter_2);
+    _txm_module_manager_callback_trampoline(54, parameter_1, parameter_2,
+	                                         parameter_3, parameter_4,
+                                             parameter_5, parameter_6,
+                                             parameter_7, parameter_8);
 }
 
-VOID  _txm_module_manager_callback_handler_55(ULONG parameter_1, ULONG parameter_2)
+VOID  _txm_module_manager_callback_handler_55(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8)
 {
-
     /* Transfer this callback to module.  */
-    _txm_module_manager_callback_transfer(55, parameter_1, parameter_2);
+    _txm_module_manager_callback_trampoline(55, parameter_1, parameter_2,
+	                                         parameter_3, parameter_4,
+                                             parameter_5, parameter_6,
+                                             parameter_7, parameter_8);
 }
 
-VOID  _txm_module_manager_callback_handler_56(ULONG parameter_1, ULONG parameter_2)
+VOID  _txm_module_manager_callback_handler_56(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8)
 {
-
     /* Transfer this callback to module.  */
-    _txm_module_manager_callback_transfer(56, parameter_1, parameter_2);
+    _txm_module_manager_callback_trampoline(56, parameter_1, parameter_2,
+	                                         parameter_3, parameter_4,
+                                             parameter_5, parameter_6,
+                                             parameter_7, parameter_8);
 }
 
-VOID  _txm_module_manager_callback_handler_57(ULONG parameter_1, ULONG parameter_2)
+VOID  _txm_module_manager_callback_handler_57(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8)
 {
-
     /* Transfer this callback to module.  */
-    _txm_module_manager_callback_transfer(57, parameter_1, parameter_2);
+    _txm_module_manager_callback_trampoline(57, parameter_1, parameter_2,
+	                                         parameter_3, parameter_4,
+                                             parameter_5, parameter_6,
+                                             parameter_7, parameter_8);
 }
 
-VOID  _txm_module_manager_callback_handler_58(ULONG parameter_1, ULONG parameter_2)
+VOID  _txm_module_manager_callback_handler_58(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8)
 {
-
     /* Transfer this callback to module.  */
-    _txm_module_manager_callback_transfer(58, parameter_1, parameter_2);
+    _txm_module_manager_callback_trampoline(58, parameter_1, parameter_2,
+	                                         parameter_3, parameter_4,
+                                             parameter_5, parameter_6,
+                                             parameter_7, parameter_8);
 }
 
-VOID  _txm_module_manager_callback_handler_59(ULONG parameter_1, ULONG parameter_2)
+VOID  _txm_module_manager_callback_handler_59(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8)
 {
-
     /* Transfer this callback to module.  */
-    _txm_module_manager_callback_transfer(59, parameter_1, parameter_2);
+    _txm_module_manager_callback_trampoline(59, parameter_1, parameter_2,
+	                                         parameter_3, parameter_4,
+                                             parameter_5, parameter_6,
+                                             parameter_7, parameter_8);
 }
 
-VOID  _txm_module_manager_callback_handler_60(ULONG parameter_1, ULONG parameter_2)
+VOID  _txm_module_manager_callback_handler_60(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8)
 {
-
     /* Transfer this callback to module.  */
-    _txm_module_manager_callback_transfer(60, parameter_1, parameter_2);
+    _txm_module_manager_callback_trampoline(60, parameter_1, parameter_2,
+	                                         parameter_3, parameter_4,
+                                             parameter_5, parameter_6,
+                                             parameter_7, parameter_8);
 }
 
-VOID  _txm_module_manager_callback_handler_61(ULONG parameter_1, ULONG parameter_2)
+VOID  _txm_module_manager_callback_handler_61(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8)
 {
-
     /* Transfer this callback to module.  */
-    _txm_module_manager_callback_transfer(61, parameter_1, parameter_2);
+    _txm_module_manager_callback_trampoline(61, parameter_1, parameter_2,
+	                                         parameter_3, parameter_4,
+                                             parameter_5, parameter_6,
+                                             parameter_7, parameter_8);
 }
 
-VOID  _txm_module_manager_callback_handler_62(ULONG parameter_1, ULONG parameter_2)
+VOID  _txm_module_manager_callback_handler_62(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8)
 {
-
     /* Transfer this callback to module.  */
-    _txm_module_manager_callback_transfer(62, parameter_1, parameter_2);
+    _txm_module_manager_callback_trampoline(62, parameter_1, parameter_2,
+	                                         parameter_3, parameter_4,
+                                             parameter_5, parameter_6,
+                                             parameter_7, parameter_8);
 }
 
-VOID  _txm_module_manager_callback_handler_63(ULONG parameter_1, ULONG parameter_2)
+VOID  _txm_module_manager_callback_handler_63(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8)
 {
-
     /* Transfer this callback to module.  */
-    _txm_module_manager_callback_transfer(63, parameter_1, parameter_2);
+    _txm_module_manager_callback_trampoline(63, parameter_1, parameter_2,
+	                                         parameter_3, parameter_4,
+                                             parameter_5, parameter_6,
+                                             parameter_7, parameter_8);
 }
 
 #if TXM_MODULE_MAX_CALLBACKS > 64
 
-VOID  _txm_module_manager_callback_handler_64(ULONG parameter_1, ULONG parameter_2)
+VOID  _txm_module_manager_callback_handler_64(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8)
 {
-
     /* Transfer this callback to module.  */
-    _txm_module_manager_callback_transfer(64, parameter_1, parameter_2);
+    _txm_module_manager_callback_trampoline(64, parameter_1, parameter_2,
+	                                         parameter_3, parameter_4,
+                                             parameter_5, parameter_6,
+                                             parameter_7, parameter_8);
 }
 
-VOID  _txm_module_manager_callback_handler_65(ULONG parameter_1, ULONG parameter_2)
+VOID  _txm_module_manager_callback_handler_65(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8)
 {
-
     /* Transfer this callback to module.  */
-    _txm_module_manager_callback_transfer(65, parameter_1, parameter_2);
+    _txm_module_manager_callback_trampoline(65, parameter_1, parameter_2,
+	                                         parameter_3, parameter_4,
+                                             parameter_5, parameter_6,
+                                             parameter_7, parameter_8);
 }
 
-VOID  _txm_module_manager_callback_handler_66(ULONG parameter_1, ULONG parameter_2)
+VOID  _txm_module_manager_callback_handler_66(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8)
 {
-
     /* Transfer this callback to module.  */
-    _txm_module_manager_callback_transfer(66, parameter_1, parameter_2);
+    _txm_module_manager_callback_trampoline(66, parameter_1, parameter_2,
+	                                         parameter_3, parameter_4,
+                                             parameter_5, parameter_6,
+                                             parameter_7, parameter_8);
 }
 
-VOID  _txm_module_manager_callback_handler_67(ULONG parameter_1, ULONG parameter_2)
+VOID  _txm_module_manager_callback_handler_67(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8)
 {
-
     /* Transfer this callback to module.  */
-    _txm_module_manager_callback_transfer(67, parameter_1, parameter_2);
+    _txm_module_manager_callback_trampoline(67, parameter_1, parameter_2,
+	                                         parameter_3, parameter_4,
+                                             parameter_5, parameter_6,
+                                             parameter_7, parameter_8);
 }
 
-VOID  _txm_module_manager_callback_handler_68(ULONG parameter_1, ULONG parameter_2)
+VOID  _txm_module_manager_callback_handler_68(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8)
 {
-
     /* Transfer this callback to module.  */
-    _txm_module_manager_callback_transfer(68, parameter_1, parameter_2);
+    _txm_module_manager_callback_trampoline(68, parameter_1, parameter_2,
+	                                         parameter_3, parameter_4,
+                                             parameter_5, parameter_6,
+                                             parameter_7, parameter_8);
 }
 
-VOID  _txm_module_manager_callback_handler_69(ULONG parameter_1, ULONG parameter_2)
+VOID  _txm_module_manager_callback_handler_69(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8)
 {
-
     /* Transfer this callback to module.  */
-    _txm_module_manager_callback_transfer(69, parameter_1, parameter_2);
+    _txm_module_manager_callback_trampoline(69, parameter_1, parameter_2,
+	                                         parameter_3, parameter_4,
+                                             parameter_5, parameter_6,
+                                             parameter_7, parameter_8);
 }
 
-VOID  _txm_module_manager_callback_handler_70(ULONG parameter_1, ULONG parameter_2)
+VOID  _txm_module_manager_callback_handler_70(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8)
 {
-
     /* Transfer this callback to module.  */
-    _txm_module_manager_callback_transfer(70, parameter_1, parameter_2);
+    _txm_module_manager_callback_trampoline(70, parameter_1, parameter_2,
+	                                         parameter_3, parameter_4,
+                                             parameter_5, parameter_6,
+                                             parameter_7, parameter_8);
 }
 
-VOID  _txm_module_manager_callback_handler_71(ULONG parameter_1, ULONG parameter_2)
+VOID  _txm_module_manager_callback_handler_71(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8)
 {
-
     /* Transfer this callback to module.  */
-    _txm_module_manager_callback_transfer(71, parameter_1, parameter_2);
+    _txm_module_manager_callback_trampoline(71, parameter_1, parameter_2,
+	                                         parameter_3, parameter_4,
+                                             parameter_5, parameter_6,
+                                             parameter_7, parameter_8);
 }
 
-VOID  _txm_module_manager_callback_handler_72(ULONG parameter_1, ULONG parameter_2)
+VOID  _txm_module_manager_callback_handler_72(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8)
 {
-
     /* Transfer this callback to module.  */
-    _txm_module_manager_callback_transfer(72, parameter_1, parameter_2);
+    _txm_module_manager_callback_trampoline(72, parameter_1, parameter_2,
+	                                         parameter_3, parameter_4,
+                                             parameter_5, parameter_6,
+                                             parameter_7, parameter_8);
 }
 
-VOID  _txm_module_manager_callback_handler_73(ULONG parameter_1, ULONG parameter_2)
+VOID  _txm_module_manager_callback_handler_73(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8)
 {
-
     /* Transfer this callback to module.  */
-    _txm_module_manager_callback_transfer(73, parameter_1, parameter_2);
+    _txm_module_manager_callback_trampoline(73, parameter_1, parameter_2,
+	                                         parameter_3, parameter_4,
+                                             parameter_5, parameter_6,
+                                             parameter_7, parameter_8);
 }
 
-VOID  _txm_module_manager_callback_handler_74(ULONG parameter_1, ULONG parameter_2)
+VOID  _txm_module_manager_callback_handler_74(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8)
 {
-
     /* Transfer this callback to module.  */
-    _txm_module_manager_callback_transfer(74, parameter_1, parameter_2);
+    _txm_module_manager_callback_trampoline(74, parameter_1, parameter_2,
+	                                         parameter_3, parameter_4,
+                                             parameter_5, parameter_6,
+                                             parameter_7, parameter_8);
 }
 
-VOID  _txm_module_manager_callback_handler_75(ULONG parameter_1, ULONG parameter_2)
+VOID  _txm_module_manager_callback_handler_75(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8)
 {
-
     /* Transfer this callback to module.  */
-    _txm_module_manager_callback_transfer(75, parameter_1, parameter_2);
+    _txm_module_manager_callback_trampoline(75, parameter_1, parameter_2,
+	                                         parameter_3, parameter_4,
+                                             parameter_5, parameter_6,
+                                             parameter_7, parameter_8);
 }
 
-VOID  _txm_module_manager_callback_handler_76(ULONG parameter_1, ULONG parameter_2)
+VOID  _txm_module_manager_callback_handler_76(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8)
 {
-
     /* Transfer this callback to module.  */
-    _txm_module_manager_callback_transfer(76, parameter_1, parameter_2);
+    _txm_module_manager_callback_trampoline(76, parameter_1, parameter_2,
+	                                         parameter_3, parameter_4,
+                                             parameter_5, parameter_6,
+                                             parameter_7, parameter_8);
 }
 
-VOID  _txm_module_manager_callback_handler_77(ULONG parameter_1, ULONG parameter_2)
+VOID  _txm_module_manager_callback_handler_77(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8)
 {
-
     /* Transfer this callback to module.  */
-    _txm_module_manager_callback_transfer(77, parameter_1, parameter_2);
+    _txm_module_manager_callback_trampoline(77, parameter_1, parameter_2,
+	                                         parameter_3, parameter_4,
+                                             parameter_5, parameter_6,
+                                             parameter_7, parameter_8);
 }
 
-VOID  _txm_module_manager_callback_handler_78(ULONG parameter_1, ULONG parameter_2)
+VOID  _txm_module_manager_callback_handler_78(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8)
 {
-
     /* Transfer this callback to module.  */
-    _txm_module_manager_callback_transfer(78, parameter_1, parameter_2);
+    _txm_module_manager_callback_trampoline(78, parameter_1, parameter_2,
+	                                         parameter_3, parameter_4,
+                                             parameter_5, parameter_6,
+                                             parameter_7, parameter_8);
 }
 
-VOID  _txm_module_manager_callback_handler_79(ULONG parameter_1, ULONG parameter_2)
+VOID  _txm_module_manager_callback_handler_79(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8)
 {
-
     /* Transfer this callback to module.  */
-    _txm_module_manager_callback_transfer(79, parameter_1, parameter_2);
+    _txm_module_manager_callback_trampoline(79, parameter_1, parameter_2,
+	                                         parameter_3, parameter_4,
+                                             parameter_5, parameter_6,
+                                             parameter_7, parameter_8);
 }
 
-VOID  _txm_module_manager_callback_handler_80(ULONG parameter_1, ULONG parameter_2)
+VOID  _txm_module_manager_callback_handler_80(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8)
 {
-
     /* Transfer this callback to module.  */
-    _txm_module_manager_callback_transfer(80, parameter_1, parameter_2);
+    _txm_module_manager_callback_trampoline(80, parameter_1, parameter_2,
+	                                         parameter_3, parameter_4,
+                                             parameter_5, parameter_6,
+                                             parameter_7, parameter_8);
 }
 
-VOID  _txm_module_manager_callback_handler_81(ULONG parameter_1, ULONG parameter_2)
+VOID  _txm_module_manager_callback_handler_81(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8)
 {
-
     /* Transfer this callback to module.  */
-    _txm_module_manager_callback_transfer(81, parameter_1, parameter_2);
+    _txm_module_manager_callback_trampoline(81, parameter_1, parameter_2,
+	                                         parameter_3, parameter_4,
+                                             parameter_5, parameter_6,
+                                             parameter_7, parameter_8);
 }
 
-VOID  _txm_module_manager_callback_handler_82(ULONG parameter_1, ULONG parameter_2)
+VOID  _txm_module_manager_callback_handler_82(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8)
 {
-
     /* Transfer this callback to module.  */
-    _txm_module_manager_callback_transfer(82, parameter_1, parameter_2);
+    _txm_module_manager_callback_trampoline(82, parameter_1, parameter_2,
+	                                         parameter_3, parameter_4,
+                                             parameter_5, parameter_6,
+                                             parameter_7, parameter_8);
 }
 
-VOID  _txm_module_manager_callback_handler_83(ULONG parameter_1, ULONG parameter_2)
+VOID  _txm_module_manager_callback_handler_83(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8)
 {
-
     /* Transfer this callback to module.  */
-    _txm_module_manager_callback_transfer(83, parameter_1, parameter_2);
+    _txm_module_manager_callback_trampoline(83, parameter_1, parameter_2,
+	                                         parameter_3, parameter_4,
+                                             parameter_5, parameter_6,
+                                             parameter_7, parameter_8);
 }
 
-VOID  _txm_module_manager_callback_handler_84(ULONG parameter_1, ULONG parameter_2)
+VOID  _txm_module_manager_callback_handler_84(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8)
 {
-
     /* Transfer this callback to module.  */
-    _txm_module_manager_callback_transfer(84, parameter_1, parameter_2);
+    _txm_module_manager_callback_trampoline(84, parameter_1, parameter_2,
+	                                         parameter_3, parameter_4,
+                                             parameter_5, parameter_6,
+                                             parameter_7, parameter_8);
 }
 
-VOID  _txm_module_manager_callback_handler_85(ULONG parameter_1, ULONG parameter_2)
+VOID  _txm_module_manager_callback_handler_85(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8)
 {
-
     /* Transfer this callback to module.  */
-    _txm_module_manager_callback_transfer(85, parameter_1, parameter_2);
+    _txm_module_manager_callback_trampoline(85, parameter_1, parameter_2,
+	                                         parameter_3, parameter_4,
+                                             parameter_5, parameter_6,
+                                             parameter_7, parameter_8);
 }
 
-VOID  _txm_module_manager_callback_handler_86(ULONG parameter_1, ULONG parameter_2)
+VOID  _txm_module_manager_callback_handler_86(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8)
 {
-
     /* Transfer this callback to module.  */
-    _txm_module_manager_callback_transfer(86, parameter_1, parameter_2);
+    _txm_module_manager_callback_trampoline(86, parameter_1, parameter_2,
+	                                         parameter_3, parameter_4,
+                                             parameter_5, parameter_6,
+                                             parameter_7, parameter_8);
 }
 
-VOID  _txm_module_manager_callback_handler_87(ULONG parameter_1, ULONG parameter_2)
+VOID  _txm_module_manager_callback_handler_87(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8)
 {
-
     /* Transfer this callback to module.  */
-    _txm_module_manager_callback_transfer(87, parameter_1, parameter_2);
+    _txm_module_manager_callback_trampoline(87, parameter_1, parameter_2,
+	                                         parameter_3, parameter_4,
+                                             parameter_5, parameter_6,
+                                             parameter_7, parameter_8);
 }
 
-VOID  _txm_module_manager_callback_handler_88(ULONG parameter_1, ULONG parameter_2)
+VOID  _txm_module_manager_callback_handler_88(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8)
 {
-
     /* Transfer this callback to module.  */
-    _txm_module_manager_callback_transfer(88, parameter_1, parameter_2);
+    _txm_module_manager_callback_trampoline(88, parameter_1, parameter_2,
+	                                         parameter_3, parameter_4,
+                                             parameter_5, parameter_6,
+                                             parameter_7, parameter_8);
 }
 
-VOID  _txm_module_manager_callback_handler_89(ULONG parameter_1, ULONG parameter_2)
+VOID  _txm_module_manager_callback_handler_89(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8)
 {
-
     /* Transfer this callback to module.  */
-    _txm_module_manager_callback_transfer(89, parameter_1, parameter_2);
+    _txm_module_manager_callback_trampoline(89, parameter_1, parameter_2,
+	                                         parameter_3, parameter_4,
+                                             parameter_5, parameter_6,
+                                             parameter_7, parameter_8);
 }
 
-VOID  _txm_module_manager_callback_handler_90(ULONG parameter_1, ULONG parameter_2)
+VOID  _txm_module_manager_callback_handler_90(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8)
 {
-
     /* Transfer this callback to module.  */
-    _txm_module_manager_callback_transfer(90, parameter_1, parameter_2);
+    _txm_module_manager_callback_trampoline(90, parameter_1, parameter_2,
+	                                         parameter_3, parameter_4,
+                                             parameter_5, parameter_6,
+                                             parameter_7, parameter_8);
 }
 
-VOID  _txm_module_manager_callback_handler_91(ULONG parameter_1, ULONG parameter_2)
+VOID  _txm_module_manager_callback_handler_91(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8)
 {
-
     /* Transfer this callback to module.  */
-    _txm_module_manager_callback_transfer(91, parameter_1, parameter_2);
+    _txm_module_manager_callback_trampoline(91, parameter_1, parameter_2,
+	                                         parameter_3, parameter_4,
+                                             parameter_5, parameter_6,
+                                             parameter_7, parameter_8);
 }
 
-VOID  _txm_module_manager_callback_handler_92(ULONG parameter_1, ULONG parameter_2)
+VOID  _txm_module_manager_callback_handler_92(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8)
 {
-
     /* Transfer this callback to module.  */
-    _txm_module_manager_callback_transfer(92, parameter_1, parameter_2);
+    _txm_module_manager_callback_trampoline(92, parameter_1, parameter_2,
+	                                         parameter_3, parameter_4,
+                                             parameter_5, parameter_6,
+                                             parameter_7, parameter_8);
 }
 
-VOID  _txm_module_manager_callback_handler_93(ULONG parameter_1, ULONG parameter_2)
+VOID  _txm_module_manager_callback_handler_93(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8)
 {
-
     /* Transfer this callback to module.  */
-    _txm_module_manager_callback_transfer(93, parameter_1, parameter_2);
+    _txm_module_manager_callback_trampoline(93, parameter_1, parameter_2,
+	                                         parameter_3, parameter_4,
+                                             parameter_5, parameter_6,
+                                             parameter_7, parameter_8);
 }
 
-VOID  _txm_module_manager_callback_handler_94(ULONG parameter_1, ULONG parameter_2)
+VOID  _txm_module_manager_callback_handler_94(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8)
 {
-
     /* Transfer this callback to module.  */
-    _txm_module_manager_callback_transfer(94, parameter_1, parameter_2);
+    _txm_module_manager_callback_trampoline(94, parameter_1, parameter_2,
+	                                         parameter_3, parameter_4,
+                                             parameter_5, parameter_6,
+                                             parameter_7, parameter_8);
 }
 
-VOID  _txm_module_manager_callback_handler_95(ULONG parameter_1, ULONG parameter_2)
+VOID  _txm_module_manager_callback_handler_95(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8)
 {
-
     /* Transfer this callback to module.  */
-    _txm_module_manager_callback_transfer(95, parameter_1, parameter_2);
+    _txm_module_manager_callback_trampoline(95, parameter_1, parameter_2,
+	                                         parameter_3, parameter_4,
+                                             parameter_5, parameter_6,
+                                             parameter_7, parameter_8);
 }
 
-VOID  _txm_module_manager_callback_handler_96(ULONG parameter_1, ULONG parameter_2)
+VOID  _txm_module_manager_callback_handler_96(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8)
 {
-
     /* Transfer this callback to module.  */
-    _txm_module_manager_callback_transfer(96, parameter_1, parameter_2);
+    _txm_module_manager_callback_trampoline(96, parameter_1, parameter_2,
+	                                         parameter_3, parameter_4,
+                                             parameter_5, parameter_6,
+                                             parameter_7, parameter_8);
 }
 
-VOID  _txm_module_manager_callback_handler_97(ULONG parameter_1, ULONG parameter_2)
+VOID  _txm_module_manager_callback_handler_97(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8)
 {
-
     /* Transfer this callback to module.  */
-    _txm_module_manager_callback_transfer(97, parameter_1, parameter_2);
+    _txm_module_manager_callback_trampoline(97, parameter_1, parameter_2,
+	                                         parameter_3, parameter_4,
+                                             parameter_5, parameter_6,
+                                             parameter_7, parameter_8);
 }
 
-VOID  _txm_module_manager_callback_handler_98(ULONG parameter_1, ULONG parameter_2)
+VOID  _txm_module_manager_callback_handler_98(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8)
 {
-
     /* Transfer this callback to module.  */
-    _txm_module_manager_callback_transfer(98, parameter_1, parameter_2);
+    _txm_module_manager_callback_trampoline(98, parameter_1, parameter_2,
+	                                         parameter_3, parameter_4,
+                                             parameter_5, parameter_6,
+                                             parameter_7, parameter_8);
 }
 
-VOID  _txm_module_manager_callback_handler_99(ULONG parameter_1, ULONG parameter_2)
+VOID  _txm_module_manager_callback_handler_99(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8)
 {
-
     /* Transfer this callback to module.  */
-    _txm_module_manager_callback_transfer(99, parameter_1, parameter_2);
+    _txm_module_manager_callback_trampoline(99, parameter_1, parameter_2,
+	                                         parameter_3, parameter_4,
+                                             parameter_5, parameter_6,
+                                             parameter_7, parameter_8);
 }
 
-VOID  _txm_module_manager_callback_handler_100(ULONG parameter_1, ULONG parameter_2)
+VOID  _txm_module_manager_callback_handler_100(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8)
 {
-
     /* Transfer this callback to module.  */
-    _txm_module_manager_callback_transfer(100, parameter_1, parameter_2);
+    _txm_module_manager_callback_trampoline(100, parameter_1, parameter_2,
+	                                         parameter_3, parameter_4,
+                                             parameter_5, parameter_6,
+                                             parameter_7, parameter_8);
 }
 
-VOID  _txm_module_manager_callback_handler_101(ULONG parameter_1, ULONG parameter_2)
+VOID  _txm_module_manager_callback_handler_101(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8)
 {
-
     /* Transfer this callback to module.  */
-    _txm_module_manager_callback_transfer(101, parameter_1, parameter_2);
+    _txm_module_manager_callback_trampoline(101, parameter_1, parameter_2,
+	                                         parameter_3, parameter_4,
+                                             parameter_5, parameter_6,
+                                             parameter_7, parameter_8);
 }
 
-VOID  _txm_module_manager_callback_handler_102(ULONG parameter_1, ULONG parameter_2)
+VOID  _txm_module_manager_callback_handler_102(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8)
 {
-
     /* Transfer this callback to module.  */
-    _txm_module_manager_callback_transfer(102, parameter_1, parameter_2);
+    _txm_module_manager_callback_trampoline(102, parameter_1, parameter_2,
+	                                         parameter_3, parameter_4,
+                                             parameter_5, parameter_6,
+                                             parameter_7, parameter_8);
 }
 
-VOID  _txm_module_manager_callback_handler_103(ULONG parameter_1, ULONG parameter_2)
+VOID  _txm_module_manager_callback_handler_103(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8)
 {
-
     /* Transfer this callback to module.  */
-    _txm_module_manager_callback_transfer(103, parameter_1, parameter_2);
+    _txm_module_manager_callback_trampoline(103, parameter_1, parameter_2,
+	                                         parameter_3, parameter_4,
+                                             parameter_5, parameter_6,
+                                             parameter_7, parameter_8);
 }
 
-VOID  _txm_module_manager_callback_handler_104(ULONG parameter_1, ULONG parameter_2)
+VOID  _txm_module_manager_callback_handler_104(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8)
 {
-
     /* Transfer this callback to module.  */
-    _txm_module_manager_callback_transfer(104, parameter_1, parameter_2);
+    _txm_module_manager_callback_trampoline(104, parameter_1, parameter_2,
+	                                         parameter_3, parameter_4,
+                                             parameter_5, parameter_6,
+                                             parameter_7, parameter_8);
 }
 
-VOID  _txm_module_manager_callback_handler_105(ULONG parameter_1, ULONG parameter_2)
+VOID  _txm_module_manager_callback_handler_105(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8)
 {
-
     /* Transfer this callback to module.  */
-    _txm_module_manager_callback_transfer(105, parameter_1, parameter_2);
+    _txm_module_manager_callback_trampoline(105, parameter_1, parameter_2,
+	                                         parameter_3, parameter_4,
+                                             parameter_5, parameter_6,
+                                             parameter_7, parameter_8);
 }
 
-VOID  _txm_module_manager_callback_handler_106(ULONG parameter_1, ULONG parameter_2)
+VOID  _txm_module_manager_callback_handler_106(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8)
 {
-
     /* Transfer this callback to module.  */
-    _txm_module_manager_callback_transfer(106, parameter_1, parameter_2);
+    _txm_module_manager_callback_trampoline(106, parameter_1, parameter_2,
+	                                         parameter_3, parameter_4,
+                                             parameter_5, parameter_6,
+                                             parameter_7, parameter_8);
 }
 
-VOID  _txm_module_manager_callback_handler_107(ULONG parameter_1, ULONG parameter_2)
+VOID  _txm_module_manager_callback_handler_107(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8)
 {
-
     /* Transfer this callback to module.  */
-    _txm_module_manager_callback_transfer(107, parameter_1, parameter_2);
+    _txm_module_manager_callback_trampoline(107, parameter_1, parameter_2,
+	                                         parameter_3, parameter_4,
+                                             parameter_5, parameter_6,
+                                             parameter_7, parameter_8);
 }
 
-VOID  _txm_module_manager_callback_handler_108(ULONG parameter_1, ULONG parameter_2)
+VOID  _txm_module_manager_callback_handler_108(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8)
 {
-
     /* Transfer this callback to module.  */
-    _txm_module_manager_callback_transfer(108, parameter_1, parameter_2);
+    _txm_module_manager_callback_trampoline(108, parameter_1, parameter_2,
+	                                         parameter_3, parameter_4,
+                                             parameter_5, parameter_6,
+                                             parameter_7, parameter_8);
 }
 
-VOID  _txm_module_manager_callback_handler_109(ULONG parameter_1, ULONG parameter_2)
+VOID  _txm_module_manager_callback_handler_109(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8)
 {
-
     /* Transfer this callback to module.  */
-    _txm_module_manager_callback_transfer(109, parameter_1, parameter_2);
+    _txm_module_manager_callback_trampoline(109, parameter_1, parameter_2,
+	                                         parameter_3, parameter_4,
+                                             parameter_5, parameter_6,
+                                             parameter_7, parameter_8);
 }
 
-VOID  _txm_module_manager_callback_handler_110(ULONG parameter_1, ULONG parameter_2)
+VOID  _txm_module_manager_callback_handler_110(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8)
 {
-
     /* Transfer this callback to module.  */
-    _txm_module_manager_callback_transfer(110, parameter_1, parameter_2);
+    _txm_module_manager_callback_trampoline(110, parameter_1, parameter_2,
+	                                         parameter_3, parameter_4,
+                                             parameter_5, parameter_6,
+                                             parameter_7, parameter_8);
 }
 
-VOID  _txm_module_manager_callback_handler_111(ULONG parameter_1, ULONG parameter_2)
+VOID  _txm_module_manager_callback_handler_111(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8)
 {
-
     /* Transfer this callback to module.  */
-    _txm_module_manager_callback_transfer(111, parameter_1, parameter_2);
+    _txm_module_manager_callback_trampoline(111, parameter_1, parameter_2,
+	                                         parameter_3, parameter_4,
+                                             parameter_5, parameter_6,
+                                             parameter_7, parameter_8);
 }
 
-VOID  _txm_module_manager_callback_handler_112(ULONG parameter_1, ULONG parameter_2)
+VOID  _txm_module_manager_callback_handler_112(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8)
 {
-
     /* Transfer this callback to module.  */
-    _txm_module_manager_callback_transfer(112, parameter_1, parameter_2);
+    _txm_module_manager_callback_trampoline(112, parameter_1, parameter_2,
+	                                         parameter_3, parameter_4,
+                                             parameter_5, parameter_6,
+                                             parameter_7, parameter_8);
 }
 
-VOID  _txm_module_manager_callback_handler_113(ULONG parameter_1, ULONG parameter_2)
+VOID  _txm_module_manager_callback_handler_113(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8)
 {
-
     /* Transfer this callback to module.  */
-    _txm_module_manager_callback_transfer(113, parameter_1, parameter_2);
+    _txm_module_manager_callback_trampoline(113, parameter_1, parameter_2,
+	                                         parameter_3, parameter_4,
+                                             parameter_5, parameter_6,
+                                             parameter_7, parameter_8);
 }
 
-VOID  _txm_module_manager_callback_handler_114(ULONG parameter_1, ULONG parameter_2)
+VOID  _txm_module_manager_callback_handler_114(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8)
 {
-
     /* Transfer this callback to module.  */
-    _txm_module_manager_callback_transfer(114, parameter_1, parameter_2);
+    _txm_module_manager_callback_trampoline(114, parameter_1, parameter_2,
+	                                         parameter_3, parameter_4,
+                                             parameter_5, parameter_6,
+                                             parameter_7, parameter_8);
 }
 
-VOID  _txm_module_manager_callback_handler_115(ULONG parameter_1, ULONG parameter_2)
+VOID  _txm_module_manager_callback_handler_115(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8)
 {
-
     /* Transfer this callback to module.  */
-    _txm_module_manager_callback_transfer(115, parameter_1, parameter_2);
+    _txm_module_manager_callback_trampoline(115, parameter_1, parameter_2,
+	                                         parameter_3, parameter_4,
+                                             parameter_5, parameter_6,
+                                             parameter_7, parameter_8);
 }
 
-VOID  _txm_module_manager_callback_handler_116(ULONG parameter_1, ULONG parameter_2)
+VOID  _txm_module_manager_callback_handler_116(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8)
 {
-
     /* Transfer this callback to module.  */
-    _txm_module_manager_callback_transfer(116, parameter_1, parameter_2);
+    _txm_module_manager_callback_trampoline(116, parameter_1, parameter_2,
+	                                         parameter_3, parameter_4,
+                                             parameter_5, parameter_6,
+                                             parameter_7, parameter_8);
 }
 
-VOID  _txm_module_manager_callback_handler_117(ULONG parameter_1, ULONG parameter_2)
+VOID  _txm_module_manager_callback_handler_117(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8)
 {
-
     /* Transfer this callback to module.  */
-    _txm_module_manager_callback_transfer(117, parameter_1, parameter_2);
+    _txm_module_manager_callback_trampoline(117, parameter_1, parameter_2,
+	                                         parameter_3, parameter_4,
+                                             parameter_5, parameter_6,
+                                             parameter_7, parameter_8);
 }
 
-VOID  _txm_module_manager_callback_handler_118(ULONG parameter_1, ULONG parameter_2)
+VOID  _txm_module_manager_callback_handler_118(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8)
 {
-
     /* Transfer this callback to module.  */
-    _txm_module_manager_callback_transfer(118, parameter_1, parameter_2);
+    _txm_module_manager_callback_trampoline(118, parameter_1, parameter_2,
+	                                         parameter_3, parameter_4,
+                                             parameter_5, parameter_6,
+                                             parameter_7, parameter_8);
 }
 
-VOID  _txm_module_manager_callback_handler_119(ULONG parameter_1, ULONG parameter_2)
+VOID  _txm_module_manager_callback_handler_119(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8)
 {
-
     /* Transfer this callback to module.  */
-    _txm_module_manager_callback_transfer(119, parameter_1, parameter_2);
+    _txm_module_manager_callback_trampoline(119, parameter_1, parameter_2,
+	                                         parameter_3, parameter_4,
+                                             parameter_5, parameter_6,
+                                             parameter_7, parameter_8);
 }
 
-VOID  _txm_module_manager_callback_handler_120(ULONG parameter_1, ULONG parameter_2)
+VOID  _txm_module_manager_callback_handler_120(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8)
 {
-
     /* Transfer this callback to module.  */
-    _txm_module_manager_callback_transfer(120, parameter_1, parameter_2);
+    _txm_module_manager_callback_trampoline(120, parameter_1, parameter_2,
+	                                         parameter_3, parameter_4,
+                                             parameter_5, parameter_6,
+                                             parameter_7, parameter_8);
 }
 
-VOID  _txm_module_manager_callback_handler_121(ULONG parameter_1, ULONG parameter_2)
+VOID  _txm_module_manager_callback_handler_121(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8)
 {
-
     /* Transfer this callback to module.  */
-    _txm_module_manager_callback_transfer(121, parameter_1, parameter_2);
+    _txm_module_manager_callback_trampoline(121, parameter_1, parameter_2,
+	                                         parameter_3, parameter_4,
+                                             parameter_5, parameter_6,
+                                             parameter_7, parameter_8);
 }
 
-VOID  _txm_module_manager_callback_handler_122(ULONG parameter_1, ULONG parameter_2)
+VOID  _txm_module_manager_callback_handler_122(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8)
 {
-
     /* Transfer this callback to module.  */
-    _txm_module_manager_callback_transfer(122, parameter_1, parameter_2);
+    _txm_module_manager_callback_trampoline(122, parameter_1, parameter_2,
+	                                         parameter_3, parameter_4,
+                                             parameter_5, parameter_6,
+                                             parameter_7, parameter_8);
 }
 
-VOID  _txm_module_manager_callback_handler_123(ULONG parameter_1, ULONG parameter_2)
+VOID  _txm_module_manager_callback_handler_123(ULONG parameter_1, ULONG parameter_2,
+                                             ULONG parameter_3, ULONG parameter_4,
+                                             ULONG parameter_5, ULONG parameter_6,
+                                             ULONG parameter_7, ULONG parameter_8)
 {
-
     /* Transfer this callback to module.  */
-    _txm_module_manager_callback_transfer(123, parameter_1, parameter_2);
+    _txm_module_manager_callback_trampoline(123, parameter_1, parameter_2,
+	                                         parameter_3, parameter_4,
+                                             parameter_5, parameter_6,
+                                             parameter_7, parameter_8);
 }
 #endif
 #endif
diff -au --ignore-file-name-case orig/txm_module_manager_callback_request.c modified/txm_module_manager_callback_request.c
--- orig/txm_module_manager_callback_request.c	2023-07-24 00:57:00.043423800 -0700
+++ modified/txm_module_manager_callback_request.c	2023-07-24 00:57:00.044424300 -0700
@@ -21,6 +21,14 @@
 /*                                                                        */ 
 /**************************************************************************/ 
 
+/*======================================================================
+                    txm_module_manager_callback_request.c
+
+GENERAL DESCRIPTION
+	Sends a notify callback function request to the module.
+
+Copyright (c) 2020 by Qualcomm Technologies, Inc. All Rights Reserved.
+======================================================================*/
 
 /**************************************************************************/ 
 /**************************************************************************/ 
@@ -38,6 +46,14 @@
 #include "tx_queue.h"
 #include "tx_thread.h"
 #include "txm_module.h"
+
+#ifdef TX_DAM_QC_CUSTOMIZATIONS
+//#define RELEASE_CB_HANDLER           /* This flag needs to be enabled to free up/release callback handler after sending the callback message */
+
+extern TXM_MODULE_CALLBACK_MESSAGE* _txm_callback_message_created;
+extern ULONG _txm_callback_message_count;
+extern CHAR _txm_callback_handler[TXM_MODULE_MAX_CALLBACKS];
+#endif
                 
 
 /**************************************************************************/ 
@@ -91,9 +107,18 @@
 TX_INTERRUPT_SAVE_AREA
 
 TXM_MODULE_CALLBACK_MESSAGE      *queued_message;
+#ifdef TX_DAM_QC_CUSTOMIZATIONS
+TXM_MODULE_CALLBACK_MESSAGE      *curr_callback_message;
+TXM_MODULE_CALLBACK_MESSAGE      *next_callback;
+TXM_MODULE_CALLBACK_MESSAGE      *previous_callback;
+#endif
 UINT                            enqueued;
 UINT                            found;
 UINT                            status;
+#ifdef TX_DAM_QC_CUSTOMIZATIONS
+UINT                            active_callbacks;
+UINT                            i;
+#endif
 
 
     /* Lockout interrupts.  */
@@ -120,6 +145,9 @@
         
             /* Does this entry match the new callback message?  */
             if ((queued_message -> txm_module_callback_message_application_function == callback_message -> txm_module_callback_message_application_function) &&
+#ifdef TX_DAM_QC_CUSTOMIZATIONS
+			    (queued_message -> txm_module_callback_saved_app_cb == callback_message -> txm_module_callback_saved_app_cb) &&
+#endif
                 (queued_message -> txm_module_callback_message_param_1 == callback_message -> txm_module_callback_message_param_1) &&
                 (queued_message -> txm_module_callback_message_param_2 == callback_message -> txm_module_callback_message_param_2) &&
                 (queued_message -> txm_module_callback_message_param_3 == callback_message -> txm_module_callback_message_param_3) &&
@@ -175,7 +203,61 @@
                 _txm_module_manager_callback_error_count++;
             }
         }
-        
+ 
+#ifdef RELEASE_CB_HANDLER
+        /*  Note: Most drivers call qurt_qapi_callback_framework one time and
+		    continues to use the manager callback kernel provided, for all future 
+			callback transactions. Freeing this handler and the callback message
+			can cause issues when drivers try to invoke the manager callback 
+			once it was actually freed, without configuring the callback again.
+		*/
+		TX_DISABLE
+		
+		/* Mark the handler as free */
+		_txm_callback_handler[callback_message -> txm_module_callback_index] = 0;
+		
+		/* Search to see if the callback_message is already present.  */
+	    curr_callback_message = _txm_callback_message_created;
+	    active_callbacks = _txm_callback_message_count;
+	    for(i=0; i<active_callbacks; i++)
+	    {
+			if(curr_callback_message -> txm_module_callback_index == callback_message -> txm_module_callback_index)
+			{
+				/* See if the callback is the only one on the list.  */
+                if ((--_txm_callback_message_count) == 0)
+				{
+
+                    /* Only activated callback, just set the activated list to NULL.  */
+                    _txm_callback_message_created =  TX_NULL;
+					break;
+                }
+                else
+                {
+
+					/* Otherwise, not the only activated module, link-up the neighbors.  */
+					next_callback =                                  callback_message -> txm_module_callback_next;
+					previous_callback =                              callback_message -> txm_module_callback_previous;
+					next_callback -> txm_module_callback_previous =  previous_callback;
+					previous_callback -> txm_module_callback_next =  next_callback;
+
+					/* See if we have to update the activated list head pointer.  */
+					if (_txm_callback_message_created == callback_message)
+					{
+									
+						/* Yes, move the head pointer to the next link. */
+						_txm_callback_message_created =  next_callback; 
+					}
+					break;
+				}
+			}
+			curr_callback_message = curr_callback_message -> txm_module_callback_next;
+		}
+		
+		/* Release the memory */
+		free(callback_message);
+		
+		TX_RESTORE
+#endif
         /* Increment the total number of callbacks.  */
         _txm_module_manager_callback_total_count++;
     }
diff -au --ignore-file-name-case orig/txm_module_manager_dispatch.h modified/txm_module_manager_dispatch.h
--- orig/txm_module_manager_dispatch.h	2023-07-24 00:57:00.045425200 -0700
+++ modified/txm_module_manager_dispatch.h	2023-07-24 00:57:00.046424900 -0700
@@ -21,6 +21,14 @@
 /*                                                                        */
 /**************************************************************************/
 
+/*======================================================================
+              txm_module_manager_dispatch.h
+
+GENERAL DESCRIPTION
+	Contains dispatcher functions for tx system calls.
+
+Copyright (c) 2020 by Qualcomm Technologies, Inc. All Rights Reserved.
+======================================================================*/
 
 /**************************************************************************/
 /**************************************************************************/
@@ -790,7 +798,8 @@
 static ALIGN_TYPE _txm_module_manager_tx_event_flags_set_notify_dispatch(TXM_MODULE_INSTANCE *module_instance, ALIGN_TYPE param_0, ALIGN_TYPE param_1)
 {
 
-ALIGN_TYPE return_value;
+ALIGN_TYPE return_value = TX_FEATURE_NOT_ENABLED;
+#ifndef TX_DISABLE_NOTIFY_CALLBACKS
 TX_EVENT_FLAGS_GROUP *event_flags_ptr = (TX_EVENT_FLAGS_GROUP *)param_0;
 VOID (*events_set_notify)(TX_EVENT_FLAGS_GROUP *);
 
@@ -824,6 +833,8 @@
         (TX_EVENT_FLAGS_GROUP *) param_0,
         (VOID (*)(TX_EVENT_FLAGS_GROUP *)) events_set_notify
     );
+#endif
+
     return(return_value);
 }
 
@@ -1427,7 +1438,8 @@
 static ALIGN_TYPE _txm_module_manager_tx_queue_send_notify_dispatch(TXM_MODULE_INSTANCE *module_instance, ALIGN_TYPE param_0, ALIGN_TYPE param_1)
 {
 
-ALIGN_TYPE return_value;
+ALIGN_TYPE return_value = TX_FEATURE_NOT_ENABLED;
+#ifndef TX_DISABLE_NOTIFY_CALLBACKS
 TX_QUEUE *queue_ptr = (TX_QUEUE *) param_0;
 VOID (*queue_send_notify)(TX_QUEUE *);
 
@@ -1461,6 +1473,8 @@
         (TX_QUEUE *) param_0,
         (VOID (*)(TX_QUEUE *notify_queue_ptr)) queue_send_notify
     );
+#endif
+
     return(return_value);
 }
 
@@ -1727,7 +1741,8 @@
 static ALIGN_TYPE _txm_module_manager_tx_semaphore_put_notify_dispatch(TXM_MODULE_INSTANCE *module_instance, ALIGN_TYPE param_0, ALIGN_TYPE param_1)
 {
 
-ALIGN_TYPE return_value;
+ALIGN_TYPE return_value = TX_FEATURE_NOT_ENABLED;
+#ifndef TX_DISABLE_NOTIFY_CALLBACKS
 TX_SEMAPHORE *semaphore_ptr = (TX_SEMAPHORE *) param_0;
 VOID (*semaphore_put_notify)(TX_SEMAPHORE *);
 
@@ -1761,6 +1776,7 @@
         (TX_SEMAPHORE *) param_0,
         (VOID (*)(TX_SEMAPHORE *notify_semaphore_ptr)) semaphore_put_notify
     );
+#endif
     return(return_value);
 }
 
@@ -1822,6 +1838,9 @@
 {
 
 ALIGN_TYPE return_value;
+#ifdef TX_DAM_QC_CUSTOMIZATIONS
+TX_THREAD* thread_ptr;
+#endif
 
     if (module_instance -> txm_module_instance_property_flags & TXM_MODULE_MEMORY_PROTECTION)
     {
@@ -1836,6 +1855,15 @@
     /* Deallocate object memory.  */
     if (return_value == TX_SUCCESS)
     {
+#ifdef TX_DAM_QC_CUSTOMIZATIONS	
+	    /* Pickup the thread pointer.  */
+		thread_ptr =  (TX_THREAD *) param_0;
+		
+		/* Remove the object corresponding to the kernel stack from the module object list and
+		   release the memory back to the object pool */
+		_txm_module_manager_object_deallocate(thread_ptr->tx_thread_module_kernel_stack_start); 
+#endif
+		   
         return_value = _txm_module_manager_object_deallocate((VOID *) param_0);
     }
     return(return_value);
@@ -1848,7 +1876,8 @@
 static ALIGN_TYPE _txm_module_manager_tx_thread_entry_exit_notify_dispatch(TXM_MODULE_INSTANCE *module_instance, ALIGN_TYPE param_0, ALIGN_TYPE param_1)
 {
 
-ALIGN_TYPE return_value;
+ALIGN_TYPE return_value = TX_FEATURE_NOT_ENABLED;
+#ifndef TX_DISABLE_NOTIFY_CALLBACKS
 TX_THREAD *thread_ptr = (TX_THREAD *) param_0;
 TXM_MODULE_THREAD_ENTRY_INFO *thread_entry_info_ptr;
 VOID (*thread_entry_exit_notify)(TX_THREAD *, UINT);
@@ -1887,6 +1916,7 @@
         (TX_THREAD *) param_0,
         (VOID (*)(TX_THREAD *notify_thread_ptr, UINT type)) thread_entry_exit_notify
     );
+#endif
     return(return_value);
 }
 
@@ -2469,7 +2499,7 @@
 static ALIGN_TYPE _txm_module_manager_tx_timer_create_dispatch(TXM_MODULE_INSTANCE *module_instance, ALIGN_TYPE param_0, ALIGN_TYPE param_1, ALIGN_TYPE *extra_parameters)
 {
 
-ALIGN_TYPE return_value;
+ALIGN_TYPE return_value = TX_FEATURE_NOT_ENABLED;
 TX_TIMER *timer_ptr;
 VOID (*expiration_function)(ULONG);
 
@@ -2488,7 +2518,6 @@
     }
     else
     {
-
         /* Set trampoline callback.  */
         expiration_function = _txm_module_manager_timer_notify_trampoline;
     }
diff -au --ignore-file-name-case orig/txm_module_manager_file_load.c modified/txm_module_manager_file_load.c
--- orig/txm_module_manager_file_load.c	2023-07-24 00:57:00.046424900 -0700
+++ modified/txm_module_manager_file_load.c	2023-07-24 00:57:00.047424600 -0700
@@ -21,6 +21,14 @@
 /*                                                                        */
 /**************************************************************************/
 
+/*======================================================================
+                    txm_module_manager_file_load.c
+
+GENERAL DESCRIPTION
+	Loads the module from the file.
+
+Copyright (c) 2020 - 2022 by Qualcomm Technologies, Inc. All Rights Reserved.
+======================================================================*/
 
 /**************************************************************************/
 /**************************************************************************/
@@ -44,7 +52,26 @@
 #include "fx_api.h"
 #include "txm_module.h"
 #include "txm_module_manager_util.h"
+#include "fs_public.h"
 
+#ifdef TX_DAM_QC_CUSTOMIZATIONS
+#include "qurt_parser.h"
+#include "qurt_storage_cfg.h"
+
+extern INT* image_open(TXM_MODULE_INSTANCE *module_ptr,void* name, int oflag );
+extern INT image_close (TXM_MODULE_INSTANCE *module_ptr,void* image_handle);
+extern INT image_read (TXM_MODULE_INSTANCE *module_ptr,void* image_handle, void* address,int size,unsigned int offset);
+extern UINT qurt_txm_extract_elf_headers (TXM_MODULE_INSTANCE *module_ptr,module_img_t *module_image_handle,void* image_handle);
+extern UINT qurt_txm_extract_MDT(TXM_MODULE_INSTANCE *module_ptr,module_img_t *module_image_handle , void *image_handle);
+extern INT qurt_txm_module_get_storage_type (TXM_MODULE_INSTANCE *module_ptr);
+extern UINT qurt_txm_check_module_img_type (TXM_MODULE_INSTANCE *module_ptr,module_img_t *module_image_handle, void* image_handle);
+
+
+ULONG                   data_allocation_size;
+ULONG                   data_size_all;
+ULONG                   start_stop_stack_size;
+ULONG                   callback_stack_size;
+#endif
 
 /**************************************************************************/
 /*                                                                        */
@@ -128,7 +155,9 @@
 
 
 TXM_MODULE_PREAMBLE     *module_preamble;
+#ifndef TX_DAM_QC_CUSTOMIZATIONS
 FX_FILE                 module_file;
+#endif
 TXM_MODULE_PREAMBLE     preamble;
 ULONG                   code_start;
 ULONG                   code_size;
@@ -138,72 +167,302 @@
 UCHAR                   *destination_ptr;
 ULONG                   actual_size;
 UINT                    status;
-
-
+#ifdef TX_DAM_QC_CUSTOMIZATIONS
+void* 					image_handle;
+module_img_t 			*module_image_handle;
+INT                     image_offset = 0;
+UINT					storage_type;
+ULONG                   data_size;
+ULONG                   code_size_ignored;
+ULONG                   code_alignment_ignored;
+ULONG                   data_alignment;
+ULONG                   data_rw_size;
+
+	/* Attempt to open the file or partation based on storage type set in module_instance.  */
+    image_handle = image_open(module_instance,file_name,O_RDONLY);
+	
+    /* Check the file open status.  */
+    if(-1 == (int )image_handle)
+    {
+    	txm_debug_marker = (1 << ERR_FILE_OPEN) | txm_debug_marker ;   //Error opening file/partition
+        /* Error opening file, return an error.  */
+        return(TX_NOT_DONE);
+    }
+	
+	/* Allocate memory for the module image handle*/
+	module_image_handle = (module_img_t *)malloc(sizeof(module_img_t));
+	
+	/* Check if the allocation was successful */
+	if(module_image_handle == NULL)
+	{
+		/* Close the file */
+		image_close(module_instance,image_handle);
+		txm_debug_marker = (1 << ERR_MODULE_MEM_ALLOCATE) | txm_debug_marker ;   //Failed to allocate memory for module image handle
+		/* Not enough memory */
+		return(TX_NOT_DONE);
+	}
+	
+	/*For Efs setting file descriptor and for nand setting offset in image_handle 
+	  to calculate offset in code read latter. */	
+	if (qurt_txm_module_get_storage_type(module_instance) == NAND)
+		module_image_handle->file_desc = image_offset;
+	else 
+		module_image_handle->file_desc = (int)image_handle;
+		
+	/*check the the type of file loaded*/
+	status = qurt_txm_check_module_img_type (module_instance,module_image_handle, image_handle);
+	if (status != TX_SUCCESS)
+    {
+		/* Close the file */
+		image_close(module_instance,image_handle);
+		
+		/* Free the handle */
+		free(module_image_handle);
+		module_image_handle = NULL;
+		txm_debug_marker = (1 << ERR_MODULE_IMAGE_TYPE) | txm_debug_marker ;   //File read failed while checking module_image_type
+		/* Return failure */
+		return(TX_NOT_DONE);
+    }
+	
+	/* if image loaded is of type MBN we need to parse the headers and seek till the beginning of preamble */
+	if(module_image_handle->img_type == IMG_MBN)
+	{
+		/* extract the module_img_handle variables from the elf headers */
+		status = qurt_txm_extract_elf_headers(module_instance,module_image_handle,image_handle);
+		if (status != TX_SUCCESS)
+		{
+			/* Close the file */
+		    image_close(module_instance,image_handle);
+			
+			/* Free the handle */
+			free(module_image_handle);
+			module_image_handle = NULL;
+			txm_debug_marker = (1 << ERR_ELF_HEADER_READ) | txm_debug_marker ;   //Elf header extraction failed
+			/* Elf header extraction failed  */
+			return(status);
+		}
+		/* seek till the beginning of the preamble, set the offset as offset to load segment*/
+		image_offset = module_image_handle->load_segment_offset;
+	}
+	
+	else if (module_image_handle->img_type == IMG_UNDEFINED)
+	{
+		/* Close the file */
+		image_close(module_instance,image_handle);
+		
+		/* Free the handle */
+		free(module_image_handle);
+		module_image_handle = NULL;
+		txm_debug_marker = (1 << ERR_INVALID_FILE_LOADED) | txm_debug_marker ;   //Invalid file loaded
+		/* invalid file loaded */
+		return(TXM_MODULE_INVALID);
+	}
+#else
     /* Attempt to open the file.  */
-    status =  fx_file_open(media_ptr, &module_file, file_name, FX_OPEN_FOR_READ);
-
+    //status =  fx_file_open(media_ptr, &module_file, file_name, FX_OPEN_FOR_READ);
+    status = efs_open(file_name, O_RDONLY);
+#endif
     /* Check the file open status.  */
     if (status == FX_SUCCESS)
     {
 
+#ifdef TX_DAM_QC_CUSTOMIZATIONS
+        /* Read the preamble of the module.  */ 
+        status = image_read(module_instance,image_handle,(VOID *) &preamble,sizeof(TXM_MODULE_PREAMBLE),image_offset);
+#else
         /* Read the preamble of the module.  */
-        status =  fx_file_read(&module_file, (VOID *) &preamble, sizeof(TXM_MODULE_PREAMBLE), &actual_size);
+        status =  fx_file_read(module_file, (VOID *) &preamble, sizeof(TXM_MODULE_PREAMBLE), &actual_size);
+#endif
 
         /* Check the file read status.  */
         if (status == FX_SUCCESS)
         {
 
+#ifndef TX_DAM_QC_CUSTOMIZATIONS
             /* Check the number of bytes read.  */
             if (actual_size == sizeof(TXM_MODULE_PREAMBLE))
             {
+#endif
 
                 /* Pickup the module's information.  */
                 module_preamble =  (TXM_MODULE_PREAMBLE *) &preamble;
 
-                /* Pickup the module code size.  */
+	            /* Pickup the module code size.  */
                 code_size =  module_preamble -> txm_module_preamble_code_size;
-
+				
                 /* Check for valid sizes.  */
                 if (code_size != 0)
                 {
-
+#ifdef TX_DAM_QC_CUSTOMIZATIONS
+					/*copying storage_type in local variable and setting it back in to module_instance since we lost storage type while setting module instance to zero*/
+                    storage_type=qurt_txm_module_get_storage_type(module_instance);
+#endif
+					
                     /* Initialize module control block to all zeros.  */
                     TX_MEMSET(module_instance, 0, sizeof(TXM_MODULE_INSTANCE));
-
+#ifdef TX_DAM_QC_CUSTOMIZATIONS
+					qurt_txm_module_set_storage_type(module_instance,storage_type);
+#endif					
+					
                     /* Get the amount of the bytes we need to allocate for the module's code as well as the required alignment.  */
                     status =  _txm_module_manager_util_code_allocation_size_and_alignment_get(module_preamble, &code_alignment, &code_allocation_size);
                     if (status == TX_SUCCESS)
                     {
+#ifdef TX_DAM_QC_CUSTOMIZATIONS
+						/* Pickup the basic module sizes.  */
+                        data_size =              module_preamble -> txm_module_preamble_data_size;
+                        start_stop_stack_size =  module_preamble -> txm_module_preamble_start_stop_stack_size;
+                        callback_stack_size =    module_preamble -> txm_module_preamble_callback_stack_size;
+						data_rw_size =           module_preamble->txm_module_preamble_reserved_1;
+						
+						/* Adjust the size of the module elements to be aligned to the default alignment. We do this
+                        so that when we partition the allocated memory, we can simply place these regions right beside
+                        each other without having to align their pointers. Note this only works when they all have
+                        the same alignment.  */
+                        /* data_size includes only the ER_ZI region. we need to add the ER_RW and the callback and the start_stop stack sizes to it. */
+                        TXM_MODULE_MANAGER_UTIL_MATH_ADD_ULONG(data_size, TXM_MODULE_DATA_ALIGNMENT, data_size);
+                        data_size =              ((data_size - 1)/TXM_MODULE_DATA_ALIGNMENT) * TXM_MODULE_DATA_ALIGNMENT;
+
+                        TXM_MODULE_MANAGER_UTIL_MATH_ADD_ULONG(start_stop_stack_size, TXM_MODULE_DATA_ALIGNMENT, start_stop_stack_size);
+                        start_stop_stack_size =  ((start_stop_stack_size - 1)/TXM_MODULE_DATA_ALIGNMENT) * TXM_MODULE_DATA_ALIGNMENT;
+
+                        TXM_MODULE_MANAGER_UTIL_MATH_ADD_ULONG(callback_stack_size, TXM_MODULE_DATA_ALIGNMENT, callback_stack_size);
+                        callback_stack_size =    ((callback_stack_size - 1)/TXM_MODULE_DATA_ALIGNMENT) * TXM_MODULE_DATA_ALIGNMENT;
+						
+						TXM_MODULE_MANAGER_UTIL_MATH_ADD_ULONG(data_rw_size, TXM_MODULE_DATA_ALIGNMENT, data_rw_size);
+                        data_rw_size =    ((data_rw_size - 1)/TXM_MODULE_DATA_ALIGNMENT) * TXM_MODULE_DATA_ALIGNMENT;
+
+                        /* Update the data size to account for the default thread stacks.  */
+                        TXM_MODULE_MANAGER_UTIL_MATH_ADD_ULONG(data_size, start_stop_stack_size, data_size);
+                        TXM_MODULE_MANAGER_UTIL_MATH_ADD_ULONG(data_size, callback_stack_size, data_size);
+						
+						/* data_size_all will include teh sizes of the ER_ZI region, ER_RW region, start_stop thread
+                           stack size and the callback thread stack size.	*/
+                        TXM_MODULE_MANAGER_UTIL_MATH_ADD_ULONG(data_size, data_rw_size, data_size_all);
+   
+                        /* Setup the default code and data alignments.  */
+                        data_alignment =  (ULONG) TXM_MODULE_DATA_ALIGNMENT;
+					 
+					    /* Get the port-specific alignment for the data size. Note we only want data 
+                        so we pass values of 1 for code (to avoid any possible div by 0 errors).  */
+                        code_size_ignored = 1;
+                        code_alignment_ignored = 1;
+                        TXM_MODULE_MANAGER_ALIGNMENT_ADJUST(module_preamble, code_size_ignored, code_alignment_ignored, data_size_all, data_alignment)
+
+                        /* Calculate the module's total RAM memory requirement. This entire area is allocated from the module
+                           manager's byte pool. The general layout is defined as follows:
+    
+                        Lowest Address:         Start of start/stop thread stack
+                                                ... [note: thread entry info is embedded near end of stack areas]
+                                                End of start/stop thread stack 
+                                      
+                                                Start of callback thread stack
+                                                ... [note: thread entry info is embedded near end of stack areas]
+                                                End of callback thread stack                             
+    
+                                                Module's Data Area  
+                                                ...
+                                                End of Module's Data Area
+                        Highest Address:    */
+
+                        /* Add an extra alignment increment so we can align the pointer after allocation.  */
+                        TXM_MODULE_MANAGER_UTIL_MATH_ADD_ULONG(data_size_all, data_alignment, data_allocation_size);
+						
+						/* Allocate code memory for the module.  */
+                        status =  _tx_byte_allocate(&_txm_module_manager_byte_pool, (VOID **) &code_memory_ptr, code_allocation_size + data_allocation_size, TX_NO_WAIT);
+#else
 
                         /* Allocate code memory for the module.  */
                         status =  _tx_byte_allocate(&_txm_module_manager_byte_pool, (VOID **) &code_memory_ptr, code_allocation_size, TX_NO_WAIT);
+#endif
 
                         /* Determine if the module's code memory allocation was successful.  */
                         if (status == TX_SUCCESS)
                         {
 
+#ifdef TX_DAM_QC_CUSTOMIZATIONS
+                        	if(code_memory_ptr == NULL)
+                        	{
+                        		/* Close the file */
+        						image_close(module_instance,image_handle);
+       
+        						/* Free the handle */
+        						free(module_image_handle);
+        						module_image_handle = NULL;
+					        	txm_debug_marker = (1 << ERR_CODE_MEM_ALLOC) | txm_debug_marker ;   //module's code memory allocation failed
+					        	return TX_NOT_DONE;
+                        	}
+#endif 			        
+					        /* Clear the allocated memory.  */
+                            TX_MEMSET(code_memory_ptr, ((UCHAR) 0), (code_allocation_size + data_allocation_size));
+	
                             /* Prepare to read the module code into memory.  */
                             code_start =       (ULONG) code_memory_ptr;
                             code_start =       (code_start + (code_alignment - 1)) & ~(code_alignment - 1);
                             destination_ptr =  (UCHAR *)  code_start;
-
+							
+#ifdef TX_DAM_QC_CUSTOMIZATIONS
+                            if(module_image_handle->img_type == IMG_MBN)
+	                        {
+								TXM_MODULE_MANAGER_UTIL_MATH_ADD_ULONG(module_image_handle->file_desc, module_image_handle->load_segment_offset, image_offset);
+		                        /*efs_lseek happens in the wrapper funtion based on the image_offset */	
+	                        }
+	                        else
+	                        {
+	                            /*efs_lseek happens in the wrapper funtion based on the image_offset */
+		                        image_offset = 0;
+	                        }
+#else
                             /* Seek back to the beginning of the file.  */
-                            status =  fx_file_seek(&module_file, 0);
+                            //status =  fx_file_seek(&module_file, 0);
+                            status = efs_lseek(module_file, 0, SEEK_SET);
+#endif
                             if (status == FX_SUCCESS)
                             {
-
+#ifdef TX_DAM_QC_CUSTOMIZATIONS
+                                /* Read the module into memory which includes the RO and RW data.  */
+	                            status = image_read(module_instance,image_handle,(VOID *)destination_ptr,code_size + data_rw_size,image_offset); 
+#else
                                 /* Read the module into memory.  */
-                                status =  fx_file_read(&module_file, (VOID *) destination_ptr, code_size, &actual_size);
+                                status =  fx_file_read(module_file, (VOID *) destination_ptr, code_size, &actual_size);
+#endif
                                 if (status == FX_SUCCESS)
                                 {
-
+#ifndef TX_DAM_QC_CUSTOMIZATIONS
                                     /* Check the actual size read.  */
                                     if (actual_size == code_size)
                                     {
-
+#endif
+#ifdef TX_DAM_QC_CUSTOMIZATIONS
+                                        if(module_image_handle->img_type == IMG_MBN)
+									    {
+		
+		                                    /* extract the MDT  */
+		                                    status = qurt_txm_extract_MDT(module_instance,module_image_handle,image_handle);
+		                                    if(status != TX_SUCCESS)
+		                                    {
+			                                    /* Release the memory.  */						
+			                                    _tx_byte_release(code_memory_ptr);
+		
+                                                /* Close the file or nand partation based on the storage type set in the module instance .  */
+			                                    image_close(module_instance,image_handle);
+												
+												/* Free the handle */
+		                                        free(module_image_handle);
+		                                        module_image_handle = NULL;
+    											txm_debug_marker = (1 << ERR_MDT_EXTRACT) | txm_debug_marker ;   //Error while extracting the MDT
+			                                    /* Error extracting the MDT  */
+			                                    return(status);
+		                                    }
+		
+		                                    /* add pointer to the load segment */
+		                                    module_image_handle->load_segment = (char *)destination_ptr;
+		                                    SET_MODULE_IMAGE_HANDLE(module_instance, module_image_handle);
+	                                    }
+#endif
                                         /* At this point, the module's instruction area is now in the RAM code area.  */
 
+
                                         /* Now load it in-place.  */
                                         status =  _txm_module_manager_internal_load(module_instance, module_name, (VOID *) code_start,
                                                                                     code_size, code_memory_ptr, code_allocation_size);
@@ -211,11 +470,15 @@
                                         {
 
                                             /* Close the file.  */
-                                            fx_file_close(&module_file);
-
+#ifdef TX_DAM_QC_CUSTOMIZATIONS
+                                            	image_close(module_instance,image_handle);
+#else
+                                            	fx_file_close(module_file);
+#endif
                                             /* Return success.  */
                                             return(TX_SUCCESS);
                                         }
+#ifndef TX_DAM_QC_CUSTOMIZATIONS
                                     }
                                     else
                                     {
@@ -223,6 +486,7 @@
                                         /* Invalid number of bytes read.  */
                                         status =  TXM_MODULE_FILEX_INVALID_BYTES_READ;
                                     }
+#endif
                                 }
                             }
 
@@ -236,7 +500,9 @@
 
                     /* Invalid module preamble.  */
                     status =  TXM_MODULE_INVALID;
+                    txm_debug_marker = (1 << ERR_INVALID_PREAMBLE) | txm_debug_marker ;   //Invalid module preamble
                 }
+#ifndef TX_DAM_QC_CUSTOMIZATIONS
             }
             else
             {
@@ -244,10 +510,19 @@
                 /* Invalid number of bytes read.  */
                 status =  TXM_MODULE_FILEX_INVALID_BYTES_READ;
             }
+#endif
         }
-
+#ifdef TX_DAM_QC_CUSTOMIZATIONS
+		/* Close the file */
+		image_close(module_instance,image_handle);
+		
+		/* Free the handle */
+		free(module_image_handle);
+		module_image_handle = NULL;
+#else
         /* Close the file.  */
-        fx_file_close(&module_file);
+        fx_file_close(module_file);
+#endif
     }
 
     /* Return success.  */
diff -au --ignore-file-name-case orig/txm_module_manager_internal_load.c modified/txm_module_manager_internal_load.c
--- orig/txm_module_manager_internal_load.c	2023-07-24 00:57:00.048428500 -0700
+++ modified/txm_module_manager_internal_load.c	2023-07-24 00:57:00.048428500 -0700
@@ -21,6 +21,14 @@
 /*                                                                        */ 
 /**************************************************************************/ 
 
+/*======================================================================
+                   txm_module_manager_internal_load.c
+
+GENERAL DESCRIPTION
+	Contains function for allocating data for the module.
+
+Copyright (c) 2020 - 2021 by Qualcomm Technologies, Inc. All Rights Reserved.
+======================================================================*/
 
 /**************************************************************************/ 
 /**************************************************************************/ 
@@ -42,6 +50,17 @@
 #include "txm_module.h"
 #include "txm_module_manager_util.h"
 
+#ifdef TX_DAM_QC_CUSTOMIZATIONS
+#include "qurt_parser.h"
+#include "qurt_storage_cfg.h"
+
+extern ULONG                   data_allocation_size;
+extern ULONG                   data_size_all;
+extern ULONG                   start_stop_stack_size;
+extern ULONG                   callback_stack_size;
+
+extern INT qurt_txm_module_get_storage_type (TXM_MODULE_INSTANCE *module_ptr);
+#endif
 
 /**************************************************************************/ 
 /*                                                                        */ 
@@ -99,18 +118,23 @@
 ULONG                   shell_function_adjust;
 ULONG                   start_function_adjust;
 ULONG                   stop_function_adjust;
+ALIGN_TYPE            data_start;
+ULONG                   module_properties;
+CHAR                    *memory_ptr;
+UINT                    status;
 ULONG                   callback_function_adjust;
+#ifndef TX_DAM_QC_CUSTOMIZATIONS
 ULONG                   start_stop_stack_size;
 ULONG                   callback_stack_size;
 ULONG                   code_size_ignored;
 ULONG                   code_alignment_ignored;
-ALIGN_TYPE              data_start;
 ULONG                   data_size;
 ULONG                   data_alignment;
 ULONG                   data_allocation_size;
-ULONG                   module_properties;
-CHAR                    *memory_ptr;
-UINT                    status;
+#else
+ULONG					storage_type;
+ULONG					image_handle;
+#endif
 
 
     /* Check for interrupt call.  */
@@ -129,7 +153,7 @@
     /* Determine if the module manager has not been initialized yet.  */
     if (_txm_module_manager_ready != TX_TRUE)
     {
-    
+        txm_debug_marker = (1 << ERR_MODULE_INIT) | txm_debug_marker ;   //module manager has not been initialized before internal_load
         /* Module manager has not been initialized.  */
         return(TX_NOT_AVAILABLE); 
     }
@@ -137,7 +161,7 @@
     /* Determine if the module is valid.  */
     if (module_instance == TX_NULL)
     {
-    
+        txm_debug_marker = (1 << ERR_INVALID_MODULE_PTR) | txm_debug_marker ;   //Invalid module ptr passed to internal_load
         /* Invalid module pointer.  */
         return(TX_PTR_ERROR);
     }
@@ -151,21 +175,22 @@
 
         /* Release the protection mutex.  */
         _tx_mutex_put(&_txm_module_manager_mutex);
-
+        
+        txm_debug_marker = (1 << ERR_MODULE_ALREADY_LOADED) | txm_debug_marker ;   //Module already loaded
         /* Module already loaded.  */
         return(TXM_MODULE_ALREADY_LOADED);
     }
 
     /* Pickup the module's information.  */
     module_preamble = (TXM_MODULE_PREAMBLE *) module_location;
-
+							
     /* Check to make sure there is a valid module to load.  */
     if (module_preamble -> txm_module_preamble_id != TXM_MODULE_ID)
     {
     
         /* Release the protection mutex.  */
         _tx_mutex_put(&_txm_module_manager_mutex);
-
+        txm_debug_marker = (1 << ERR_INVALID_MODULE_PREAMBLE) | txm_debug_marker ;   //Invalid module preamble - internal_load
         /* Invalid module preamble.  */
         return(TXM_MODULE_INVALID);
     }
@@ -195,7 +220,7 @@
     
         /* Release the protection mutex.  */
         _tx_mutex_put(&_txm_module_manager_mutex);
-
+        txm_debug_marker = (1 << ERR_INVALID_OFFSET) | txm_debug_marker ;   //Invalid module entry offsets of module_preamble
         /* Invalid module preamble.  */
         return(TXM_MODULE_INVALID);
     }
@@ -209,13 +234,28 @@
     
         /* Release the protection mutex.  */
         _tx_mutex_put(&_txm_module_manager_mutex);
-
+        txm_debug_marker = (1 << ERR_INVALID_PREAMBLE_SIZE_PARAMS) | txm_debug_marker ;   //Invalid module_preamble code/data/start_stop_stack/callback_stack size
         /* Invalid module preamble.  */
         return(TXM_MODULE_INVALID);
     }
 
+#ifdef TX_DAM_QC_CUSTOMIZATIONS
+    image_handle = (ULONG)GET_MODULE_IMAGE_HANDLE(module_instance);
+	storage_type = qurt_txm_module_get_storage_type(module_instance);
+#endif
     /* Initialize module control block to all zeros.  */
     TX_MEMSET(module_instance, 0, sizeof(TXM_MODULE_INSTANCE));
+#ifdef TX_DAM_QC_CUSTOMIZATIONS
+    SET_MODULE_IMAGE_HANDLE(module_instance, image_handle);
+	qurt_txm_module_set_storage_type(module_instance,storage_type);
+#endif
+
+#ifdef TX_DAM_QC_CUSTOMIZATIONS
+	/* Store the virtual and physical base into reserved location for mapping to be done */
+	module_instance -> txm_module_instance_phys_base = module_location;
+	module_instance -> txm_module_instance_virt_base = (VOID *)(module_preamble -> txm_module_preamble_reserved_0);
+	module_location = (VOID *) module_instance -> txm_module_instance_virt_base;
+#else
 
     /* Pickup the basic module sizes.  */
     data_size =              module_preamble -> txm_module_preamble_data_size;
@@ -277,13 +317,20 @@
     
         /* Release the protection mutex.  */
         _tx_mutex_put(&_txm_module_manager_mutex);
-
+        txm_debug_marker = (1 << ERR_MODULE_DATA_ALLOC) | txm_debug_marker ;
         /* No memory, return an error.  */
         return(TX_NO_MEMORY);
     }
-
+	 
     /* Clear the allocated memory.  */
     TX_MEMSET(memory_ptr, ((UCHAR) 0), data_allocation_size);
+	
+#endif
+#ifdef TX_DAM_QC_CUSTOMIZATIONS
+    /* Data region starts right next to code */
+	 memory_ptr = (CHAR *)((ULONG)module_location + module_preamble -> txm_module_preamble_code_size);
+#endif
+	
     
     /* Disable interrupts.  */
     TX_DISABLE
@@ -297,24 +344,32 @@
     /* Save the module properties.  */
     module_instance -> txm_module_instance_property_flags =  module_preamble -> txm_module_preamble_property_flags;
 
+
+#ifndef TX_DAM_QC_CUSTOMIZATIONS	
     /* Set the module data memory allocation. This is the address released 
        when the module is unloaded.  */
     module_instance -> txm_module_instance_data_allocation_ptr =  (VOID *) memory_ptr;
+#else
+    /* Since we allocated one chunk, we don't need to track data allocation separately. */
+    module_instance -> txm_module_instance_data_allocation_ptr =  (VOID *) NULL;
+#endif
 
     /* Save the data allocation size.  */
     module_instance -> txm_module_instance_data_allocation_size =   data_allocation_size;
 
+#ifndef TX_DAM_QC_CUSTOMIZATIONS	
     /* Calculate the actual start of the data area. This needs to be adjusted based on the alignment.  */
     data_start =  (ALIGN_TYPE) memory_ptr;
     data_start =  (data_start + (((ALIGN_TYPE)data_alignment) - 1)) & ~(((ALIGN_TYPE)data_alignment) - 1);
     memory_ptr =  (CHAR *) data_start;
+#endif
     module_instance -> txm_module_instance_data_start =  (VOID *) memory_ptr;
     
     /* Compute the end of the data memory allocation.  */
-    module_instance -> txm_module_instance_data_end =  (VOID *) (memory_ptr + (data_size - 1));
+    module_instance -> txm_module_instance_data_end =  (VOID *) (memory_ptr + (data_size_all - 1));
 
     /* Save the size of the data area.  */
-    module_instance -> txm_module_instance_data_size =  data_size;
+    module_instance -> txm_module_instance_data_size =  data_size_all;
 
     /* Set the module code memory allocation. This is the address released 
        when the module is unloaded.  */
@@ -336,12 +391,29 @@
     /* Set the module state to started.  */
     module_instance -> txm_module_instance_state =  TXM_MODULE_LOADED;
 
+#ifdef TX_DAM_QC_CUSTOMIZATIONS
+    /* Save the preamble pointer.  */
+    module_instance -> txm_module_instance_preamble_ptr = (TXM_MODULE_PREAMBLE *) module_location;
+#else
     /* Save the preamble pointer.  */
     module_instance -> txm_module_instance_preamble_ptr =  module_preamble;
+#endif
 
     /* Save the module application ID in the module instance.  */
     module_instance -> txm_module_instance_application_module_id =  module_preamble -> txm_module_preamble_application_module_id;
   
+#ifdef TX_DAM_QC_CUSTOMIZATIONS
+    /* Setup the start of the module data section.  */
+    module_instance -> txm_module_instance_module_data_base_address =  (VOID *) (memory_ptr);
+
+	 memory_ptr += (data_size_all - (start_stop_stack_size + callback_stack_size));
+	 if(((ULONG)memory_ptr) >= (0xFFFFFFFF-module_preamble -> txm_module_preamble_reserved_1) )
+	 {
+        txm_debug_marker = (1 << ERR_SIZE_DATA_SECT) | txm_debug_marker ;   //size error data section - internal_load
+		return (TX_SIZE_ERROR);
+	 }
+	 //memory_ptr += (module_preamble -> txm_module_preamble_reserved_1);       /* reserve_1 is ER_RW(global non-zero initialized data section) length */
+#endif  
     /* Setup the module's start/stop thread stack area.  */
     module_instance -> txm_module_instance_start_stop_stack_start_address =  (VOID *) (memory_ptr);
     module_instance -> txm_module_instance_start_stop_stack_size =           start_stop_stack_size;
@@ -364,28 +436,83 @@
     /* Save the callback thread priority.  */
     module_instance -> txm_module_instance_callback_priority =  module_preamble -> txm_module_preamble_callback_priority;
 
+#ifndef TX_DAM_QC_CUSTOMIZATIONS
     /* Setup the start of the module data section.  */
     module_instance -> txm_module_instance_module_data_base_address =  (VOID *) (memory_ptr);
+#endif
 
     /* Calculate the function adjustments based on the specific implementation of the module manager/module.  */
     TXM_MODULE_MANAGER_CALCULATE_ADJUSTMENTS(module_preamble -> txm_module_preamble_property_flags, shell_function_adjust, start_function_adjust, stop_function_adjust, callback_function_adjust)
 
     /* Build actual addresses based on load...  Setup all the function pointers. Any adjustments needed to shell entry, start function, and callback function are defined in the 
        module preamble. */
+#ifdef TX_DAM_QC_CUSTOMIZATIONS	   
+	/* module_preamble -> txm_module_preamble_property_flags can be used to know the compiler mode, 
+																				Bits 31-24: Compiler ID
+                                                                    ;           0 -> IAR
+                                                                    ;           1 -> RVDS
+                                                                    ;           2 -> GNU
+																	;			4 -> LLVM
+																	Offset need not be added in LLVM, as LLVM found to be producing absolute address on itself
+	Address Adjustment is needed as for different Compilers, different offset is produced as defined in txm_module.h
+	*/
+	if(((module_preamble -> txm_module_preamble_property_flags) & TXM_MODULE_COMPILER_MASK ) == TXM_MODULE_LLVM_COMPILER ) 
+	{
+		module_instance -> txm_module_instance_shell_entry_function  =          (VOID (*)(TX_THREAD *, TXM_MODULE_INSTANCE *)) ((module_preamble -> txm_module_preamble_shell_entry_function) + 
+                                                                                                                                      (shell_function_adjust));
+		module_instance -> txm_module_instance_start_thread_entry =             (VOID (*)(ULONG)) ((module_preamble -> txm_module_preamble_start_function) + 
+                                                                                                                                      (start_function_adjust));
+		module_instance -> txm_module_instance_callback_request_thread_entry =  (VOID (*)(ULONG)) ((module_preamble -> txm_module_preamble_callback_function) +
+                                                                                                                                      (callback_function_adjust));   
+	}
+    else
+#endif
+	{
+	/* As adjustment would be 0 for RVDS/LLVM compiler, we can ignore checking integer overflow for that */
+#ifdef TX_DAM_QC_CUSTOMIZATIONS		
+	if(((ULONG)module_instance -> txm_module_instance_code_start) >= (0xFFFFFFFF -  (ULONG)(module_preamble -> txm_module_preamble_shell_entry_function))){
+        txm_debug_marker = (1 << ERR_SIZE_PREAMBLE_SHELL_ENTRY) | txm_debug_marker ;   // size error - internal_load (preamble_shell_entry_function)
+		return (TX_SIZE_ERROR);
+	}
+#endif
     module_instance -> txm_module_instance_shell_entry_function  =          (VOID (*)(TX_THREAD *, TXM_MODULE_INSTANCE *)) (((CHAR *) module_instance -> txm_module_instance_code_start) + 
                                                                                                                                       (module_preamble -> txm_module_preamble_shell_entry_function) + 
                                                                                                                                       (shell_function_adjust));
+																															
+#ifdef TX_DAM_QC_CUSTOMIZATIONS							  
+	if(((ULONG)module_instance -> txm_module_instance_code_start) >= (0xFFFFFFFF -  (ULONG)(module_preamble -> txm_module_preamble_start_function))){
+        txm_debug_marker = (1 << ERR_SIZE_CODE_START) | txm_debug_marker ;   //size error - internal_load 
+		return (TX_SIZE_ERROR);
+	}
+#endif																													 
     module_instance -> txm_module_instance_start_thread_entry =             (VOID (*)(ULONG)) (((CHAR *) module_instance -> txm_module_instance_code_start) + 
                                                                                                                                       (module_preamble -> txm_module_preamble_start_function) + 
                                                                                                                                       (start_function_adjust));
+																															
+#ifdef TX_DAM_QC_CUSTOMIZATIONS											  
+	if(((ULONG)module_instance -> txm_module_instance_code_start) >= (0xFFFFFFFF -  (ULONG)(module_preamble -> txm_module_preamble_callback_function))){
+        txm_debug_marker = (1 << ERR_SIZE_CALLBACK) | txm_debug_marker ;   //size error - internal_load 
+		return (TX_SIZE_ERROR);
+	}							
+#endif																																
     module_instance -> txm_module_instance_callback_request_thread_entry =  (VOID (*)(ULONG)) (((CHAR *) module_instance -> txm_module_instance_code_start) + 
                                                                                                                                       (module_preamble -> txm_module_preamble_callback_function) +
                                                                                                                                       (callback_function_adjust));    
+	}
     /* Determine if there is a stop function for this module.  */
     if (module_preamble -> txm_module_preamble_stop_function)
     {
     
         /* Yes, there is a stop function, build the address.  */
+#ifdef TX_DAM_QC_CUSTOMIZATIONS
+		if( ((module_preamble -> txm_module_preamble_property_flags) & TXM_MODULE_COMPILER_MASK ) == TXM_MODULE_LLVM_COMPILER)
+		{
+			/* As adjustment would be 0 for RVDS/LLVM compiler, we can ignore checking integer overflow */
+    		module_instance -> txm_module_instance_stop_thread_entry =  (VOID (*)(ULONG)) ((module_preamble -> txm_module_preamble_stop_function) + 
+                                                                                                                                      (stop_function_adjust));
+		}
+		else
+#endif
         module_instance -> txm_module_instance_stop_thread_entry =  (VOID (*)(ULONG)) (((CHAR *) module_instance -> txm_module_instance_code_start) + 
                                                                                                                                       (module_preamble -> txm_module_preamble_stop_function) + 
                                                                                                                                       (stop_function_adjust));
@@ -424,7 +551,10 @@
         module_instance -> txm_module_instance_loaded_previous =  previous_module;
         module_instance -> txm_module_instance_loaded_next =      next_module;    
     }
-
+#ifdef TX_DAM_QC_CUSTOMIZATIONS
+	module_instance -> txm_shared_mem_start = 0;
+	module_instance -> txm_shared_mem_size =  0;
+#endif
     /* Restore interrupts.  */
     TX_RESTORE
 
diff -au --ignore-file-name-case orig/txm_module_manager_kernel_dispatch.c modified/txm_module_manager_kernel_dispatch.c
--- orig/txm_module_manager_kernel_dispatch.c	2023-07-24 00:57:00.049437700 -0700
+++ modified/txm_module_manager_kernel_dispatch.c	2023-07-24 00:57:00.049437700 -0700
@@ -21,7 +21,6 @@
 /*                                                                        */
 /**************************************************************************/
 
-
 /**************************************************************************/
 /**************************************************************************/
 /**                                                                       */ 
@@ -65,10 +64,10 @@
 /*                                                                        */ 
 /*  INPUT                                                                 */ 
 /*                                                                        */ 
-/*    kernel_request                    Module's kernel request           */ 
-/*    param_1                           First parameter                   */ 
-/*    param_2                           Second parameter                  */ 
-/*    param_3                           Third parameter                   */ 
+/*    kernel_request                        Module's kernel request       */ 
+/*    param_1                               First parameter               */ 
+/*    param_2                               Second parameter              */ 
+/*    param_3                               Third parameter               */ 
 /*                                                                        */ 
 /*  OUTPUT                                                                */ 
 /*                                                                        */ 
@@ -162,11 +161,11 @@
 {
 
 ALIGN_TYPE return_value = TX_NOT_AVAILABLE;
-TXM_MODULE_INSTANCE *module_instance;
+TXM_MODULE_INSTANCE             *module_instance;
 
 
     /* Get the module instance.  */
-    module_instance = _tx_thread_current_ptr -> tx_thread_module_instance_ptr;
+    module_instance =  _tx_thread_current_ptr -> tx_thread_module_instance_ptr;
 
     /* Sanity-check for a valid module instance.  */
     if (module_instance == TX_NULL)
diff -au --ignore-file-name-case orig/txm_module_manager_memory_load.c modified/txm_module_manager_memory_load.c
--- orig/txm_module_manager_memory_load.c	2023-07-24 00:57:00.050428300 -0700
+++ modified/txm_module_manager_memory_load.c	2023-07-24 00:57:00.051429200 -0700
@@ -21,6 +21,14 @@
 /*                                                                        */
 /**************************************************************************/
 
+/*======================================================================
+                    txm_module_manager_memory_load.c
+
+GENERAL DESCRIPTION
+	Allocates memory for the module code and loads it.
+
+Copyright (c) 2020 by Qualcomm Technologies, Inc. All Rights Reserved.
+======================================================================*/
 
 /**************************************************************************/
 /**************************************************************************/
@@ -42,6 +50,13 @@
 #include "txm_module.h"
 #include "txm_module_manager_util.h"
 
+#ifdef TX_DAM_QC_CUSTOMIZATIONS
+ULONG                   data_allocation_size;
+ULONG                   data_size_all;
+ULONG                   start_stop_stack_size;
+ULONG                   callback_stack_size;
+#endif
+
 
 /**************************************************************************/
 /*                                                                        */
@@ -119,7 +134,7 @@
 
 
 TXM_MODULE_PREAMBLE     *module_preamble;
-ALIGN_TYPE              code_start;
+ALIGN_TYPE            code_start;
 ULONG                   code_size;
 ULONG                   code_alignment;
 ULONG                   code_allocation_size;
@@ -129,6 +144,13 @@
 ULONG                   copy_size;
 ULONG                   i;
 UINT                    status;
+#ifdef TX_DAM_QC_CUSTOMIZATIONS
+ULONG                   data_size;
+ULONG                   code_size_ignored;
+ULONG                   code_alignment_ignored;
+ULONG                   data_alignment;
+ULONG                   data_rw_size;
+#endif
 
 
     /* Pickup the module's information.  */
@@ -153,10 +175,73 @@
         /* Math overflow error occurred.  */
         return(status);
     }
+#ifdef TX_DAM_QC_CUSTOMIZATIONS
+	/* Pickup the basic module sizes.  */
+    data_size =              module_preamble -> txm_module_preamble_data_size;
+    start_stop_stack_size =  module_preamble -> txm_module_preamble_start_stop_stack_size;
+    callback_stack_size =    module_preamble -> txm_module_preamble_callback_stack_size;
+	data_rw_size =           module_preamble->txm_module_preamble_reserved_1;
+						
+	/* Adjust the size of the module elements to be aligned to the default alignment. We do this
+    so that when we partition the allocated memory, we can simply place these regions right beside
+    each other without having to align their pointers. Note this only works when they all have
+    the same alignment.  */
+    /* data_size includes only the ER_ZI region. we need to add the ER_RW and the callback and the start_stop stack sizes to it. */
+    TXM_MODULE_MANAGER_UTIL_MATH_ADD_ULONG(data_size, TXM_MODULE_DATA_ALIGNMENT, data_size);
+    data_size =              ((data_size - 1)/TXM_MODULE_DATA_ALIGNMENT) * TXM_MODULE_DATA_ALIGNMENT;
+
+    TXM_MODULE_MANAGER_UTIL_MATH_ADD_ULONG(start_stop_stack_size, TXM_MODULE_DATA_ALIGNMENT, start_stop_stack_size);
+    start_stop_stack_size =  ((start_stop_stack_size - 1)/TXM_MODULE_DATA_ALIGNMENT) * TXM_MODULE_DATA_ALIGNMENT;
+
+    TXM_MODULE_MANAGER_UTIL_MATH_ADD_ULONG(callback_stack_size, TXM_MODULE_DATA_ALIGNMENT, callback_stack_size);
+    callback_stack_size =    ((callback_stack_size - 1)/TXM_MODULE_DATA_ALIGNMENT) * TXM_MODULE_DATA_ALIGNMENT;
+						
+	TXM_MODULE_MANAGER_UTIL_MATH_ADD_ULONG(data_rw_size, TXM_MODULE_DATA_ALIGNMENT, data_rw_size);
+    data_rw_size =    ((data_rw_size - 1)/TXM_MODULE_DATA_ALIGNMENT) * TXM_MODULE_DATA_ALIGNMENT;
+
+    /* Update the data size to account for the default thread stacks.  */
+    TXM_MODULE_MANAGER_UTIL_MATH_ADD_ULONG(data_size, start_stop_stack_size, data_size);
+    TXM_MODULE_MANAGER_UTIL_MATH_ADD_ULONG(data_size, callback_stack_size, data_size);
+						
+	/* data_size_all will include teh sizes of the ER_ZI region, ER_RW region, start_stop thread
+       stack size and the callback thread stack size.	*/
+    TXM_MODULE_MANAGER_UTIL_MATH_ADD_ULONG(data_size, data_rw_size, data_size_all);
+   
+    /* Setup the default code and data alignments.  */
+    data_alignment =  (ULONG) TXM_MODULE_DATA_ALIGNMENT;
+					 
+	/* Get the port-specific alignment for the data size. Note we only want data 
+    so we pass values of 1 for code (to avoid any possible div by 0 errors).  */
+    code_size_ignored = 1;
+    code_alignment_ignored = 1;
+    TXM_MODULE_MANAGER_ALIGNMENT_ADJUST(module_preamble, code_size_ignored, code_alignment_ignored, data_size_all, data_alignment)
+
+    /* Calculate the module's total RAM memory requirement. This entire area is allocated from the module
+        manager's byte pool. The general layout is defined as follows:
+    
+        Lowest Address:         Start of start/stop thread stack
+                                ... [note: thread entry info is embedded near end of stack areas]
+                                End of start/stop thread stack 
+                                      
+                                Start of callback thread stack
+                            ... [note: thread entry info is embedded near end of stack areas]
+                                End of callback thread stack                             
+    
+                                Module's Data Area  
+                                ...
+                            End of Module's Data Area
+        Highest Address:    */
+
+        /* Add an extra alignment increment so we can align the pointer after allocation.  */
+        TXM_MODULE_MANAGER_UTIL_MATH_ADD_ULONG(data_size_all, data_alignment, data_allocation_size);
+						
+		/* Allocate code memory for the module.  */
+        status =  _tx_byte_allocate(&_txm_module_manager_byte_pool, (VOID **) &code_memory_ptr, code_allocation_size + data_allocation_size, TX_NO_WAIT);
+#else
 
     /* Allocate code memory for the module.  */
     status =  _tx_byte_allocate(&_txm_module_manager_byte_pool, (VOID **) &code_memory_ptr, code_allocation_size, TX_NO_WAIT);
-
+#endif
     /* Determine if the module's code memory allocation was successful.  */
     if (status != TX_SUCCESS)
     {
diff -au --ignore-file-name-case orig/txm_module_manager_object_allocate.c modified/txm_module_manager_object_allocate.c
--- orig/txm_module_manager_object_allocate.c	2023-07-24 00:57:00.051429200 -0700
+++ modified/txm_module_manager_object_allocate.c	2023-07-24 00:57:00.052430000 -0700
@@ -21,6 +21,14 @@
 /*                                                                        */
 /**************************************************************************/
 
+/*======================================================================
+                    txm_module_manager_object_allocate.c
+
+GENERAL DESCRIPTION
+	Allocates memory for an object from the memory pool.
+
+Copyright (c) 2020 by Qualcomm Technologies, Inc. All Rights Reserved.
+======================================================================*/
 
 /**************************************************************************/
 /**************************************************************************/
@@ -117,7 +125,15 @@
         if (return_value == TX_SUCCESS)
         {
             /* Yes, now store the module instance in the allocated memory block.  */
-
+#ifdef TX_DAM_QC_CUSTOMIZATIONS
+        	if(object_ptr == NULL)
+        	{
+        		/* Release the protection mutex.  */
+    			_txe_mutex_put(&_txm_module_manager_mutex);
+                
+                return TX_NOT_AVAILABLE;
+        	}
+#endif           
             /* Link the allocated memory to the module instance.  */
             if (module_instance -> txm_module_instance_object_list_count++ == 0)
             {
diff -au --ignore-file-name-case orig/txm_module_manager_object_deallocate.c modified/txm_module_manager_object_deallocate.c
--- orig/txm_module_manager_object_deallocate.c	2023-07-24 00:57:00.053431300 -0700
+++ modified/txm_module_manager_object_deallocate.c	2023-07-24 00:57:00.053431300 -0700
@@ -21,7 +21,6 @@
 /*                                                                        */
 /**************************************************************************/
 
-
 /**************************************************************************/
 /**************************************************************************/
 /**                                                                       */
diff -au --ignore-file-name-case orig/txm_module_manager_start.c modified/txm_module_manager_start.c
--- orig/txm_module_manager_start.c	2023-07-24 00:57:00.054439300 -0700
+++ modified/txm_module_manager_start.c	2023-07-24 00:57:00.055434900 -0700
@@ -21,6 +21,14 @@
 /*                                                                        */ 
 /**************************************************************************/ 
 
+/*======================================================================
+                    txm_module_manager_start.c
+
+GENERAL DESCRIPTION
+	Contains function for starting the module.
+
+Copyright (c) 2020 by Qualcomm Technologies, Inc. All Rights Reserved.
+======================================================================*/
 
 /**************************************************************************/ 
 /**************************************************************************/ 
@@ -40,6 +48,18 @@
 #include "tx_thread.h"
 #include "txm_module.h"
 
+#ifdef TX_DAM_QC_CUSTOMIZATIONS
+/* External API for Module UID registry update */
+extern int qurt_txm_module_uid_registry_update (TXM_MODULE_INSTANCE * module_instance, int add_remove);
+
+#ifdef QAPI_FS_DAM_FILE_SEPERATION
+extern int qurt_txm_module_uid_directory_update(TXM_MODULE_INSTANCE * module_instance, int add_remove);
+#endif
+
+#ifdef LLDB_FEATURE_ENABLED
+extern void module_setDefaultBrkPt(void *module_ptr);
+#endif
+#endif
 
 /**************************************************************************/ 
 /*                                                                        */ 
@@ -57,7 +77,7 @@
 /*                                                                        */ 
 /*  INPUT                                                                 */ 
 /*                                                                        */ 
-/*    module_instance                   Module instance pointer           */ 
+/*    module_instance                       Module instance pointer       */ 
 /*                                                                        */ 
 /*  OUTPUT                                                                */ 
 /*                                                                        */ 
@@ -81,12 +101,12 @@
 /*                                                                        */ 
 /*    DATE              NAME                      DESCRIPTION             */ 
 /*                                                                        */ 
-/*  06-01-2013      William E. Lamie        Initial Version 5.3           */ 
-/*  01-01-2014      William E. Lamie        Modified comment(s),          */ 
+/*  06-01-2013     William E. Lamie         Initial Version 5.3           */ 
+/*  01-01-2014     William E. Lamie         Modified comment(s),          */ 
 /*                                            resulting in version 5.4    */ 
-/*  01-01-2016      William E. Lamie        Modified comment(s),          */ 
+/*  01-01-2016     William E. Lamie         Modified comment(s),          */ 
 /*                                            resulting in version 5.5    */ 
-/*  08-15-2016      William E. Lamie        Modified comment(s),          */ 
+/*  08-15-2016     William E. Lamie         Modified comment(s),          */ 
 /*                                            resulting in version 5.6    */ 
 /*  02-01-2018      Scott Larson            Modified comment(s),          */ 
 /*                                            removed callback counters,  */ 
@@ -163,9 +183,15 @@
         return(TX_PRIORITY_ERROR);
     }
 
+#ifdef TX_DAM_QC_CUSTOMIZATIONS
     /* Create the module's callback request queue.  */
-    status = _tx_queue_create(&(module_instance -> txm_module_instance_callback_request_queue), "Module Callback Request Queue", (sizeof(TXM_MODULE_CALLBACK_MESSAGE)/sizeof(ULONG)), 
+	 status = _tx_queue_create(&(module_instance -> txm_module_instance_callback_request_queue), "Module Callback Request Queue", TXM_MODULE_CALLBACKS_MESSAGE_SIZE, 
+                              module_instance -> txm_module_instance_callback_request_queue_area, (TXM_MODULE_CALLBACKS_QUEUE_DEPTH*TXM_MODULE_CALLBACKS_MESSAGE_SIZE)*sizeof(ULONG));
+
+#else
+	status = _tx_queue_create(&(module_instance -> txm_module_instance_callback_request_queue), "Module Callback Request Queue", (sizeof(TXM_MODULE_CALLBACK_MESSAGE)/sizeof(ULONG)), 
                               module_instance -> txm_module_instance_callback_request_queue_area, sizeof(module_instance -> txm_module_instance_callback_request_queue_area));
+#endif
 
     /* Determine if there was an error.  */
     if (status)
@@ -180,18 +206,18 @@
 
     /* Create the module start thread.  */    
     status =  _txm_module_manager_thread_create(&(module_instance -> txm_module_instance_start_stop_thread),
-                                                "Module Start Thread",
-                                                module_instance -> txm_module_instance_shell_entry_function,
-                                                module_instance -> txm_module_instance_start_thread_entry,
-                                                module_instance -> txm_module_instance_application_module_id,
-                                                module_instance -> txm_module_instance_start_stop_stack_start_address,
-                                                module_instance -> txm_module_instance_start_stop_stack_size,
-                                                (UINT) module_instance -> txm_module_instance_start_stop_priority,
-                                                (UINT) module_instance -> txm_module_instance_start_stop_priority,
-                                                TXM_MODULE_TIME_SLICE,
-                                                TX_DONT_START, 
-                                                sizeof(TX_THREAD),
-                                                module_instance);
+                             "Module Start Thread",
+                             module_instance -> txm_module_instance_shell_entry_function,
+                             module_instance -> txm_module_instance_start_thread_entry,
+                             module_instance -> txm_module_instance_application_module_id,
+                             module_instance -> txm_module_instance_start_stop_stack_start_address,
+                             module_instance -> txm_module_instance_start_stop_stack_size,
+                             (UINT) module_instance -> txm_module_instance_start_stop_priority,
+                             (UINT) module_instance -> txm_module_instance_start_stop_priority,
+                             TXM_MODULE_TIME_SLICE,
+                             TX_DONT_START, 
+                             sizeof(TX_THREAD),
+                             module_instance);
     
     /* Determine if the thread create was successful.  */
     if (status != TX_SUCCESS)
@@ -209,18 +235,18 @@
 
     /* Create the module callback thread.  */    
     status =  _txm_module_manager_thread_create(&(module_instance -> txm_module_instance_callback_request_thread),
-                                                "Module Callback Request Thread",
-                                                module_instance -> txm_module_instance_shell_entry_function,
-                                                module_instance -> txm_module_instance_callback_request_thread_entry,
-                                                module_instance -> txm_module_instance_application_module_id,
-                                                module_instance -> txm_module_instance_callback_stack_start_address,
-                                                module_instance -> txm_module_instance_callback_stack_size,
-                                                (UINT) module_instance -> txm_module_instance_callback_priority,
-                                                (UINT) module_instance -> txm_module_instance_callback_priority,
-                                                TX_NO_TIME_SLICE,
-                                                TX_DONT_START, 
-                                                sizeof(TX_THREAD),
-                                                module_instance);
+                             "Module Callback Request Thread",
+                             module_instance -> txm_module_instance_shell_entry_function,
+                             module_instance -> txm_module_instance_callback_request_thread_entry,
+                             module_instance -> txm_module_instance_application_module_id,
+                             module_instance -> txm_module_instance_callback_stack_start_address,
+                             module_instance -> txm_module_instance_callback_stack_size,
+                             (UINT) module_instance -> txm_module_instance_callback_priority,
+                             (UINT) module_instance -> txm_module_instance_callback_priority,
+                             TX_NO_TIME_SLICE,
+                             TX_DONT_START, 
+                             sizeof(TX_THREAD),
+                             module_instance);
     
     /* Determine if the thread create was successful.  */
     if (status != TX_SUCCESS)
@@ -246,6 +272,30 @@
     /* Set the module state to started.  */
     module_instance -> txm_module_instance_state =  TXM_MODULE_STARTED;
 
+#ifdef TX_DAM_QC_CUSTOMIZATIONS
+	/* Update the Module UID registry by adding given Module's UID entry
+	
+	   Ignore the return status for now, as current design do not enforce 
+	   any changes in default behavior of  _txm_module_manager_start
+   */  
+	qurt_txm_module_uid_registry_update(module_instance, 1);
+
+    /* Release the protection mutex.  */
+    _tx_mutex_put(&_txm_module_manager_mutex);
+
+#ifdef QAPI_FS_DAM_FILE_SEPERATION  
+    qurt_txm_module_uid_directory_update(module_instance, 1);
+#endif
+
+    /* Release the protection mutex.  */
+    _tx_mutex_put(&_txm_module_manager_mutex);
+
+#ifdef LLDB_FEATURE_ENABLED
+	if( ((TXM_MODULE_PREAMBLE *)module_instance->txm_module_instance_preamble_ptr)-> txm_module_preamble_debug_enable == 1)
+		module_setDefaultBrkPt(module_instance);
+#endif
+#endif
+
     /* Release the protection mutex.  */
     _tx_mutex_put(&_txm_module_manager_mutex);
 
diff -au --ignore-file-name-case orig/txm_module_manager_stop.c modified/txm_module_manager_stop.c
--- orig/txm_module_manager_stop.c	2023-07-24 00:57:00.055434900 -0700
+++ modified/txm_module_manager_stop.c	2023-07-24 00:57:00.056434200 -0700
@@ -21,6 +21,28 @@
 /*                                                                        */
 /**************************************************************************/
 
+/*======================================================================
+                     txm_module_manager_stop.c
+
+GENERAL DESCRIPTION
+	Contains function for stopping a module.
+
+Copyright (c) 2020 by Qualcomm Technologies, Inc. All Rights Reserved.
+======================================================================*/
+/*======================================================================
+ *
+ *                       EDIT HISTORY FOR FILE
+ *
+ *   This section contains comments describing changes made to the
+ *   module. Notice that changes are listed in reverse chronological
+ *   order.
+ *   
+ *
+ *
+ * when         who       what, where, why
+ * ----------   ---       ------------------------------------------------
+ * 2020-07-22    NT       including the tx_trace.h and module UID customization
+ ======================================================================*/
 
 /**************************************************************************/
 /**************************************************************************/
@@ -46,6 +68,9 @@
 #include "tx_byte_pool.h"
 #include "txm_module.h"
 #include "txm_module_manager_util.h"
+#ifdef TX_DAM_QC_CUSTOMIZATIONS
+#include "tx_trace.h"
+#endif
 
 #ifdef TXM_MODULE_ENABLE_FILEX
 extern UINT  _txm_module_manager_filex_stop(TXM_MODULE_INSTANCE *module_instance);
@@ -67,6 +92,15 @@
 extern UINT  _txm_module_manager_usbx_stop(TXM_MODULE_INSTANCE *module_instance);
 #endif
 
+#ifdef TX_DAM_QC_CUSTOMIZATIONS
+/* External API for Module UID registry update */
+extern int qurt_txm_module_uid_registry_update (TXM_MODULE_INSTANCE * module_instance, int add_remove);
+#endif
+
+#ifdef QAPI_FS_DAM_FILE_SEPERATION
+extern int qurt_txm_module_uid_directory_update(TXM_MODULE_INSTANCE * module_instance, int add_remove);
+#endif
+
 /**************************************************************************/
 /*                                                                        */
 /*  FUNCTION                                               RELEASE        */
@@ -264,18 +298,18 @@
 
         /* Create the module stop thread.  */
         _txm_module_manager_thread_create(&(module_instance -> txm_module_instance_start_stop_thread),
-                                          "Module Stop Thread",
-                                          module_instance -> txm_module_instance_shell_entry_function,
-                                          module_instance -> txm_module_instance_stop_thread_entry,
-                                          module_instance -> txm_module_instance_application_module_id,
-                                          module_instance -> txm_module_instance_start_stop_stack_start_address,
-                                          module_instance -> txm_module_instance_start_stop_stack_size,
-                                          (UINT) module_instance -> txm_module_instance_start_stop_priority,
-                                          (UINT) module_instance -> txm_module_instance_start_stop_priority,
-                                          TXM_MODULE_TIME_SLICE,
-                                          TX_AUTO_START,
-                                          sizeof(TX_THREAD),
-                                          module_instance);
+                             "Module Stop Thread",
+                             module_instance -> txm_module_instance_shell_entry_function,
+                             module_instance -> txm_module_instance_stop_thread_entry,
+                             module_instance -> txm_module_instance_application_module_id,
+                             module_instance -> txm_module_instance_start_stop_stack_start_address,
+                             module_instance -> txm_module_instance_start_stop_stack_size,
+                             (UINT) module_instance -> txm_module_instance_start_stop_priority,
+                             (UINT) module_instance -> txm_module_instance_start_stop_priority,
+                             TXM_MODULE_TIME_SLICE,
+                             TX_AUTO_START,
+                             sizeof(TX_THREAD),
+                             module_instance);
 
         /* Wait for the stop thread to complete.  */
         i =  0;
@@ -419,11 +453,11 @@
         /* Check if this module created this queue.  */
         created_by_module =  _txm_module_manager_created_object_check(module_instance, (VOID *) queue_ptr);
         if (created_by_module == TX_TRUE)
-        {
+                {
 
-            /* Delete this queue, since it is part of this module.  */
-            _tx_queue_delete(queue_ptr);
-        }
+                    /* Delete this queue, since it is part of this module.  */
+                    _tx_queue_delete(queue_ptr);
+                }
 
         /* Move to next queue.  */
         queue_ptr =  next_queue_ptr;
@@ -453,11 +487,11 @@
         /* Check if this module created this event flags.  */
         created_by_module =  _txm_module_manager_created_object_check(module_instance, (VOID *) events_ptr);
         if (created_by_module == TX_TRUE)
-        {
+                {
 
-            /* Delete this event flags group, since it is part of this module.  */
-            _tx_event_flags_delete(events_ptr);
-        }
+                    /* Delete this event flags group, since it is part of this module.  */
+                    _tx_event_flags_delete(events_ptr);
+                }
 
         /* Move to next event flags group.  */
         events_ptr =  next_events_ptr;
@@ -533,8 +567,8 @@
         if (created_by_module == TX_TRUE)
         {
 
-            /* Delete this block pool, since it is part of this module.  */
-            _tx_block_pool_delete(block_pool_ptr);
+             /* Delete this block pool, since it is part of this module.  */
+             _tx_block_pool_delete(block_pool_ptr);
         }
 
         /* Move to next block pool.  */
@@ -555,8 +589,8 @@
         if (created_by_module == TX_TRUE)
         {
 
-            /* Delete this byte pool, since it is part of this module.  */
-            _tx_byte_pool_delete(byte_pool_ptr);
+             /* Delete this byte pool, since it is part of this module.  */
+             _tx_byte_pool_delete(byte_pool_ptr);
         }
 
         /* Move to next byte pool.  */
@@ -603,12 +637,25 @@
     /* Set the module state to indicate the module is stopped.  */
     module_instance -> txm_module_instance_state =  TXM_MODULE_STOPPED;
 
+#ifdef TX_DAM_QC_CUSTOMIZATIONS
+    /* Update the Module UID registry by removing given Module's UID entry
+	
+       Ignore the return status for now, as current design do not enforce 
+       any changes in default behavior of  _txm_module_manager_stop
+    */
+    qurt_txm_module_uid_registry_update(module_instance, -1);
+#endif 
+
     /* Restore interrupts.  */
     TX_RESTORE
 
+#ifdef QAPI_FS_DAM_FILE_SEPERATION  
+    qurt_txm_module_uid_directory_update(module_instance, -1);
+#endif
     /* Release the protection mutex.  */
     _tx_mutex_put(&_txm_module_manager_mutex);
 
+
     /* Check for preemption.  */
     _tx_thread_system_preempt_check();
 
diff -au --ignore-file-name-case orig/txm_module_manager_thread_create.c modified/txm_module_manager_thread_create.c
--- orig/txm_module_manager_thread_create.c	2023-07-24 00:57:00.057434700 -0700
+++ modified/txm_module_manager_thread_create.c	2023-07-24 00:57:00.058435900 -0700
@@ -21,6 +21,14 @@
 /*                                                                        */
 /**************************************************************************/
 
+/*======================================================================
+                    txm_module_manager_thread_create.c
+
+GENERAL DESCRIPTION
+	Contains function for creating a module thread.
+
+Copyright (c) 2020 by Qualcomm Technologies, Inc. All Rights Reserved.
+======================================================================*/
 
 /**************************************************************************/
 /**************************************************************************/
@@ -61,14 +69,14 @@
 /*                                                                        */
 /*    thread_ptr                        Thread control block pointer      */
 /*    name                              Pointer to thread name string     */
-/*    shell_function                    Shell function of the thread      */
+/*    shell_function                    Shell function of the thread  */
 /*    entry_function                    Entry function of the thread      */
 /*    entry_input                       32-bit input value to thread      */
 /*    stack_start                       Pointer to start of stack         */
 /*    stack_size                        Stack size in bytes               */
 /*    priority                          Priority of thread                */
 /*                                        (default 0-31)                  */
-/*    preempt_threshold                 Preemption threshold              */
+/*    preempt_threshold                 Preemption threshold          */
 /*    time_slice                        Thread time-slice value           */
 /*    auto_start                        Automatic start selection         */
 /*                                                                        */
@@ -367,13 +375,13 @@
 #if TXM_MODULE_MEMORY_PROTECTION
     /* If this is a memory protected module, allocate a kernel stack.  */
     if((module_instance -> txm_module_instance_property_flags) & TXM_MODULE_MEMORY_PROTECTION)
-    {
-        /* Allocate kernel stack space. */
+	{
+    /* Allocate kernel stack space. */
         status = _txm_module_manager_object_allocate((VOID **) &(thread_ptr -> tx_thread_module_kernel_stack_start), TXM_MODULE_KERNEL_STACK_SIZE, module_instance);
-        if(status)
-        {
-            return(status);
-        }
+    if(status)
+    {
+        return(status);
+    }
         
 #ifndef TX_DISABLE_STACK_FILLING
         /* Set the thread stack to a pattern prior to creating the initial
@@ -381,8 +389,16 @@
            to see how much has been used.  */
         TX_MEMSET(thread_ptr -> tx_thread_module_kernel_stack_start, ((UCHAR) TX_STACK_FILL), TXM_MODULE_KERNEL_STACK_SIZE);
 #endif
-        
-        /* Align kernel stack pointer.  */
+	
+#ifdef TX_DAM_QC_CUSTOMIZATIONS
+	/* check integer overflow */
+	if((UINT) thread_ptr -> tx_thread_module_kernel_stack_start > (0XFFFFFFFF - TXM_MODULE_KERNEL_STACK_SIZE))
+	{
+		return TX_SIZE_ERROR;
+	}
+#endif
+
+    /* Align kernel stack pointer.  */
         thread_ptr -> tx_thread_module_kernel_stack_end = (VOID *) (((ALIGN_TYPE)(thread_ptr -> tx_thread_module_kernel_stack_start) + TXM_MODULE_KERNEL_STACK_SIZE) & ~0x07);
 
         /* Set kernel stack size.  */
@@ -527,7 +543,7 @@
     TX_TRACE_OBJECT_REGISTER(TX_TRACE_OBJECT_TYPE_THREAD, thread_ptr, name, stack_start, stack_size)
 
     /* If trace is enabled, insert this event into the trace buffer.  */
-    TX_TRACE_IN_LINE_INSERT(TX_TRACE_THREAD_CREATE, thread_ptr, priority, stack_start, stack_size, TX_TRACE_THREAD_EVENTS)
+    TX_TRACE_IN_LINE_INSERT(TX_TRACE_THREAD_CREATE, (UINT)thread_ptr, priority, (UINT)stack_start, stack_size, TX_TRACE_THREAD_EVENTS)
 
     /* Register thread in the thread array structure.  */
     TX_EL_THREAD_REGISTER(thread_ptr)
diff -au --ignore-file-name-case orig/txm_module_manager_thread_stack_build.s modified/txm_module_manager_thread_stack_build.s
--- orig/txm_module_manager_thread_stack_build.s	2023-07-24 00:57:00.058435900 -0700
+++ modified/txm_module_manager_thread_stack_build.s	2023-07-24 00:57:00.059438700 -0700
@@ -1,6 +1,6 @@
 ;/**************************************************************************/ 
 ;/*                                                                        */ 
-;/*            Copyright (c) 1996-2018 by Express Logic Inc.               */ 
+;/*            Copyright (c) 1996-2017 by Express Logic Inc.               */ 
 ;/*                                                                        */ 
 ;/*  This software is copyrighted by and is the sole property of Express   */ 
 ;/*  Logic, Inc.  All rights, title, ownership, or other interests         */ 
diff -au --ignore-file-name-case orig/txm_module_manager_timer_notify_trampoline.c modified/txm_module_manager_timer_notify_trampoline.c
--- orig/txm_module_manager_timer_notify_trampoline.c	2023-07-24 00:57:00.059438700 -0700
+++ modified/txm_module_manager_timer_notify_trampoline.c	2023-07-24 00:57:00.060437700 -0700
@@ -21,6 +21,28 @@
 /*                                                                        */ 
 /**************************************************************************/ 
 
+/*======================================================================
+                txm_module_manager_timer_notify_trampoline.c
+
+GENERAL DESCRIPTION
+	Contains function that processes the timer expirations from ThreadX.
+
+Copyright (c) 2020 by Qualcomm Technologies, Inc. All Rights Reserved.
+======================================================================*/
+/*======================================================================
+ *
+ *                       EDIT HISTORY FOR FILE
+ *
+ *   This section contains comments describing changes made to the
+ *   module. Notice that changes are listed in reverse chronological
+ *   order.
+ *   
+ *
+ *
+ * when         who       what, where, why
+ * ----------   ---       ------------------------------------------------
+ * 2020-07-22    NT       check if TX_DISABLE_NOTIFY_CALLBACKS is not defined
+ ======================================================================*/
 
 /**************************************************************************/ 
 /**************************************************************************/ 
@@ -159,5 +181,5 @@
         /* Restore interrupts.  */
         TX_RESTORE
     }
-}       
-  
+}  
+ 
diff -au --ignore-file-name-case orig/txm_module_manager_unload.c modified/txm_module_manager_unload.c
--- orig/txm_module_manager_unload.c	2023-07-24 00:57:00.060437700 -0700
+++ modified/txm_module_manager_unload.c	2023-07-24 00:57:00.061440800 -0700
@@ -58,7 +58,7 @@
 /*                                                                        */ 
 /*  INPUT                                                                 */ 
 /*                                                                        */ 
-/*    module_instance                   Module instance pointer           */ 
+/*    module_instance                       Module instance pointer       */ 
 /*                                                                        */ 
 /*  OUTPUT                                                                */ 
 /*                                                                        */ 
@@ -78,12 +78,12 @@
 /*                                                                        */ 
 /*    DATE              NAME                      DESCRIPTION             */ 
 /*                                                                        */ 
-/*  06-01-2013      William E. Lamie        Initial Version 5.3           */ 
-/*  01-01-2014      William E. Lamie        Modified comment(s),          */ 
+/*  06-01-2013     William E. Lamie         Initial Version 5.3           */ 
+/*  01-01-2014     William E. Lamie         Modified comment(s),          */ 
 /*                                            resulting in version 5.4    */ 
-/*  01-01-2016      William E. Lamie        Modified comment(s),          */ 
+/*  01-01-2016     William E. Lamie         Modified comment(s),          */ 
 /*                                            resulting in version 5.5    */ 
-/*  08-15-2016      William E. Lamie        Modified comment(s),          */ 
+/*  08-15-2016     William E. Lamie         Modified comment(s),          */ 
 /*                                            resulting in version 5.6    */ 
 /*  02-01-2018      William E. Lamie        Modified comment(s),          */ 
 /*                                            added unload macro,         */ 
@@ -160,6 +160,9 @@
     /* Pickup the module data memory allocation address.  */
     memory_ptr =  module_instance -> txm_module_instance_data_allocation_ptr;
 
+#ifdef TX_DAM_QC_CUSTOMIZATIONS /* Free memory only if it was allocated */
+	 if(memory_ptr)
+#endif
     /* Release the module's data memory.  */
     _tx_byte_release(memory_ptr);
 
diff -au --ignore-file-name-case orig/txm_module_manager_util.c modified/txm_module_manager_util.c
--- orig/txm_module_manager_util.c	2023-07-24 00:57:00.062439800 -0700
+++ modified/txm_module_manager_util.c	2023-07-24 00:57:00.062439800 -0700
@@ -21,6 +21,14 @@
 /*                                                                        */ 
 /**************************************************************************/ 
 
+/*======================================================================
+                    txm_module_manager_util.c
+
+GENERAL DESCRIPTION
+	Contains utility functions for the module manager.
+
+Copyright (c) 2020 by Qualcomm Technologies, Inc. All Rights Reserved.
+======================================================================*/
 
 /**************************************************************************/ 
 /**************************************************************************/ 
@@ -384,7 +392,6 @@
 ULONG   data_size_ignored;
 ULONG   data_alignment_ignored;
 
-
     /* Pickup the module code size.  */
     code_size =  module_preamble -> txm_module_preamble_code_size;
 
diff -au --ignore-file-name-case orig/txm_module_object_allocate.c modified/txm_module_object_allocate.c
--- orig/txm_module_object_allocate.c	2023-07-24 00:57:00.095473000 -0700
+++ modified/txm_module_object_allocate.c	2023-07-24 00:57:00.095473000 -0700
@@ -21,6 +21,24 @@
 /*                                                                        */
 /**************************************************************************/
 
+/*==============================================================================
+  Copyright (c) 2020 Qualcomm Technologies, Inc.
+  All rights reserved. Qualcomm Proprietary and Confidential.
+==============================================================================*/
+/*======================================================================
+ *
+ *                       EDIT HISTORY FOR FILE
+ *
+ *   This section contains comments describing changes made to the
+ *   module. Notice that changes are listed in reverse chronological
+ *   order.
+ *   
+ *
+ *
+ * when         who       what, where, why
+ * ----------   ---       ------------------------------------------------
+ * 2020-07-22    NT       conditionally defining TXM_MODULE
+ ======================================================================*/
 
 /**************************************************************************/
 /**************************************************************************/
@@ -32,7 +50,10 @@
 /**************************************************************************/
 /**************************************************************************/
 
+#ifndef TX_DAM_QC_CUSTOMIZATIONS
 #define TXM_MODULE
+#endif
+
 #include "txm_module.h"
 
 /**************************************************************************/
diff -au --ignore-file-name-case orig/txm_module_object_deallocate.c modified/txm_module_object_deallocate.c
--- orig/txm_module_object_deallocate.c	2023-07-24 00:57:00.096482600 -0700
+++ modified/txm_module_object_deallocate.c	2023-07-24 00:57:00.097475900 -0700
@@ -21,6 +21,24 @@
 /*                                                                        */
 /**************************************************************************/
 
+/*==============================================================================
+  Copyright (c) 2020 Qualcomm Technologies, Inc.
+  All rights reserved. Qualcomm Proprietary and Confidential.
+==============================================================================*/
+/*======================================================================
+ *
+ *                       EDIT HISTORY FOR FILE
+ *
+ *   This section contains comments describing changes made to the
+ *   module. Notice that changes are listed in reverse chronological
+ *   order.
+ *   
+ *
+ *
+ * when         who       what, where, why
+ * ----------   ---       ------------------------------------------------
+ * 2020-07-22    NT       conditionally defining TXM_MODULE
+ ======================================================================*/
 
 /**************************************************************************/
 /**************************************************************************/
@@ -32,7 +50,10 @@
 /**************************************************************************/
 /**************************************************************************/
 
+#ifndef TX_DAM_QC_CUSTOMIZATIONS
 #define TXM_MODULE
+#endif
+
 #include "txm_module.h"
 
 /**************************************************************************/
diff -au --ignore-file-name-case orig/txm_module_object_pointer_get.c modified/txm_module_object_pointer_get.c
--- orig/txm_module_object_pointer_get.c	2023-07-24 00:57:00.097475900 -0700
+++ modified/txm_module_object_pointer_get.c	2023-07-24 00:57:00.098474100 -0700
@@ -21,6 +21,24 @@
 /*                                                                        */
 /**************************************************************************/
 
+/*==============================================================================
+  Copyright (c) 2020 Qualcomm Technologies, Inc.
+  All rights reserved. Qualcomm Proprietary and Confidential.
+==============================================================================*/
+/*======================================================================
+ *
+ *                       EDIT HISTORY FOR FILE
+ *
+ *   This section contains comments describing changes made to the
+ *   module. Notice that changes are listed in reverse chronological
+ *   order.
+ *   
+ *
+ *
+ * when         who       what, where, why
+ * ----------   ---       ------------------------------------------------
+ * 2020-07-22    NT       conditionally defining TXM_MODULE
+ ======================================================================*/
 
 /**************************************************************************/
 /**************************************************************************/
@@ -32,7 +50,10 @@
 /**************************************************************************/
 /**************************************************************************/
 
+#ifndef TX_DAM_QC_CUSTOMIZATIONS
 #define TXM_MODULE
+#endif
+
 #include "txm_module.h"
 
 /**************************************************************************/
diff -au --ignore-file-name-case orig/txm_module_object_pointer_get_extended.c modified/txm_module_object_pointer_get_extended.c
--- orig/txm_module_object_pointer_get_extended.c	2023-07-24 00:57:00.098474100 -0700
+++ modified/txm_module_object_pointer_get_extended.c	2023-07-24 00:57:00.099475000 -0700
@@ -21,6 +21,24 @@
 /*                                                                        */
 /**************************************************************************/
 
+/*==============================================================================
+  Copyright (c) 2020 Qualcomm Technologies, Inc.
+  All rights reserved. Qualcomm Proprietary and Confidential.
+==============================================================================*/
+/*======================================================================
+ *
+ *                       EDIT HISTORY FOR FILE
+ *
+ *   This section contains comments describing changes made to the
+ *   module. Notice that changes are listed in reverse chronological
+ *   order.
+ *   
+ *
+ *
+ * when         who       what, where, why
+ * ----------   ---       ------------------------------------------------
+ * 2020-07-22    NT       conditionally defining TXM_MODULE
+ ======================================================================*/
 
 /**************************************************************************/
 /**************************************************************************/
@@ -32,7 +50,10 @@
 /**************************************************************************/
 /**************************************************************************/
 
+#ifndef TX_DAM_QC_CUSTOMIZATIONS
 #define TXM_MODULE
+#endif
+
 #include "txm_module.h"
 
 /**************************************************************************/
diff -au --ignore-file-name-case orig/txm_module_port.h modified/txm_module_port.h
--- orig/txm_module_port.h	2023-07-24 00:57:00.186559900 -0700
+++ modified/txm_module_port.h	2023-07-24 00:57:00.187568000 -0700
@@ -1,6 +1,6 @@
-/**************************************************************************/ 
+/**************************************************************************/
 /*                                                                        */ 
-/*            Copyright (c) 1996-2020 by Express Logic Inc.               */ 
+/*            Copyright (c) 1996-2016 by Express Logic Inc.               */ 
 /*                                                                        */ 
 /*  This software is copyrighted by and is the sole property of Express   */ 
 /*  Logic, Inc.  All rights, title, ownership, or other interests         */ 
@@ -8,37 +8,60 @@
 /*  software may only be used in accordance with the corresponding        */ 
 /*  license agreement.  Any unauthorized use, duplication, transmission,  */ 
 /*  distribution, or disclosure of this software is expressly forbidden.  */ 
-/*                                                                        */ 
+/*                                                                        */
 /*  This Copyright notice may not be removed or modified without prior    */ 
 /*  written consent of Express Logic, Inc.                                */ 
 /*                                                                        */ 
 /*  Express Logic, Inc. reserves the right to modify this software        */ 
 /*  without notice.                                                       */ 
 /*                                                                        */ 
-/*  Express Logic, Inc.                     info@expresslogic.com         */ 
-/*  11423 West Bernardo Court               http://www.expresslogic.com   */ 
-/*  San Diego, CA  92127                                                  */ 
-/*                                                                        */ 
-/**************************************************************************/ 
+/*  Express Logic, Inc.                     info@expresslogic.com         */
+/*  11423 West Bernardo Court               http://www.expresslogic.com   */
+/*  San Diego, CA  92127                                                  */
+/*                                                                        */
+/**************************************************************************/
+
+/*======================================================================
+                     txm_module_port.h
+
+GENERAL DESCRIPTION
+	Contains module specific constants and function prototypes.
+
+Copyright (c) 2020,2021 by Qualcomm Technologies, Inc. All Rights Reserved.
+======================================================================*/
+/*======================================================================
+ *
+ *                       EDIT HISTORY FOR FILE
+ *
+ *   This section contains comments describing changes made to the
+ *   module. Notice that changes are listed in reverse chronological
+ *   order.
+ *   
+ *
+ *
+ * when         who       what, where, why
+ * ----------   ---       ------------------------------------------------
+ * 2020-07-22    NT       conditionally defining  TXM_MODULE_MANAGER_MODULE_UNLOAD
+ * 2020-09-17    NT       increasing the QAPI kernel stack size to 16K
+ ======================================================================*/
 
-
-/**************************************************************************/ 
-/**************************************************************************/ 
+/**************************************************************************/
+/**************************************************************************/
 /**                                                                       */ 
-/** ThreadX Component                                                     */ 
-/**                                                                       */ 
-/**   Module Interface (API)                                              */ 
-/**                                                                       */ 
-/**************************************************************************/ 
-/**************************************************************************/ 
+/** ThreadX Component                                                     */
+/**                                                                       */
+/**   Module Interface (API)                                              */
+/**                                                                       */
+/**************************************************************************/
+/**************************************************************************/
 
 
 /**************************************************************************/ 
 /*                                                                        */ 
 /*  APPLICATION INTERFACE DEFINITION                       RELEASE        */ 
 /*                                                                        */ 
-/*    txm_module_port.h                               Cortex-A7/MMU/ARM   */ 
-/*                                                           5.9          */ 
+/*    txm_module_port.h                                 Cortex-A7/ARM     */ 
+/*                                                           5.6          */ 
 /*  AUTHOR                                                                */ 
 /*                                                                        */ 
 /*    William E. Lamie, Express Logic, Inc.                               */ 
@@ -52,32 +75,7 @@
 /*                                                                        */ 
 /*    DATE              NAME                      DESCRIPTION             */ 
 /*                                                                        */ 
-/*  12-30-2016     William E. Lamie         Initial Version 5.6           */ 
-/*  02-01-2018     Scott Larson             Modified comment(s),          */ 
-/*                                            added macros, extensions,   */ 
-/*                                            and inline definition,      */ 
-/*                                            added MMU disable define,   */ 
-/*                                            resulting in version 5.8    */ 
-/*  08-03-2018     Scott Larson             Modified comment(s),          */ 
-/*                                            added kernel stack and      */ 
-/*                                            associated pointers.        */ 
-/*                                            resulting in version 5.8.1  */ 
-/*  09-17-2018     Scott Larson             Modified comment(s),          */ 
-/*                                            added stack size pointers,  */ 
-/*                                            and entry info user         */ 
-/*                                            extension,                  */ 
-/*                                            resulting in version 5.8.2  */ 
-/*  01-10-2020     Scott Larson             Modified comment(s),          */ 
-/*                                            removed property check macro*/ 
-/*                                            since as of now, it is not  */ 
-/*                                            port-specific, removed      */ 
-/*                                            symbols for preventing      */ 
-/*                                            modules from accessing      */ 
-/*                                            kernel objects, removed     */ 
-/*                                            symbol for preventing       */ 
-/*                                            modules from calling        */ 
-/*                                            tx_interrupt_control,       */
-/*                                            resulting in version 5.9    */ 
+/*  03-01-2017     William E. Lamie         Initial Version 5.6           */ 
 /*                                                                        */ 
 /**************************************************************************/ 
 
@@ -118,53 +116,59 @@
                                                 VOID   (*tx_timer_module_expiration_function)(ULONG id);
 */
 
-/**************************************************************************/ 
-/* User-adjustable constants                                              */ 
-/**************************************************************************/ 
-
+/*
+Kernel stack switch fix and few helper functions ported from ThreadX module version 5.8
+*/
+/* Note: for any change in TXM_MODULE_KERNEL_STACK_SIZE,
+         TXM_MODULE_OBJECT_POOL_SIZE must be checked to be in range.  */
 /* Define the kernel stack size for a module thread.  */
 #ifndef TXM_MODULE_KERNEL_STACK_SIZE
-#define TXM_MODULE_KERNEL_STACK_SIZE            512
+#define TXM_MODULE_KERNEL_STACK_SIZE            1280
 #endif
-
-/* Defined, this option enables the MMU hardware and requires memory protected
-   module objects to be allocated from the module manager object pool. 
-   If this is undefined, module objects can be created in the module's data area 
-   or in the module manager object pool. If this is not defined (MMU hardware 
-   is disabled), a module requiring memory protection will not run (the load 
-   functions will return a TXM_MODULE_INVALID_PROPERTIES error).
-   Default setting for this value is defined.  */
 #define TXM_MODULE_MEMORY_PROTECTION_ENABLED
-
-
-#define TXM_MODULE_THREAD_ENTRY_INFO_USER_EXTENSION 
-
-/**************************************************************************/ 
-/* End of user-adjustable constants                                       */ 
-/**************************************************************************/ 
-
-
 /* Define constants specific to the tools the module can be built with for this particular modules port.  */
 
+#ifndef TX_DAM_QC_CUSTOMIZATIONS
+#define TX_DAM_QC_CUSTOMIZATIONS
+#endif
+
 #define TXM_MODULE_IAR_COMPILER                 0x00000000
 #define TXM_MODULE_RVDS_COMPILER                0x01000000
 #define TXM_MODULE_GNU_COMPILER                 0x02000000
+#ifdef TX_DAM_QC_CUSTOMIZATIONS
+	#define TXM_MODULE_LLVM_COMPILER			0x04000000
+#endif
 #define TXM_MODULE_COMPILER_MASK                0xFF000000
 #define TXM_MODULE_OPTIONS_MASK                 0x000000FF
 
 
 /* Define the properties for this particular module port.  */
-#ifdef TXM_MODULE_MEMORY_PROTECTION_ENABLED
-#define TXM_MODULE_MEMORY_PROTECTION            0x00000001
-#else
-#define TXM_MODULE_MEMORY_PROTECTION            0x00000000
+
+#ifdef TX3_CHANGES
+	#define TXM_MODULE_MEMORY_PROTECTION_ENABLED
+	#ifdef  TXM_MODULE_MEMORY_PROTECTION_ENABLED
+	#define TXM_MODULE_REQUIRE_ALLOCATED_OBJECT_MEMORY
+	#else
+	#define TXM_MODULE_REQUIRE_LOCAL_OBJECT_MEMORY
+	#endif
+
+	#define TXM_MODULE_MEMORY_PROTECTION            0x00000001
 #endif
 
 #define TXM_MODULE_USER_MODE                    0x00000001
 
-/* Define the supported options for this module.   */
+/* Define the minimum stack available for a module thread on this processor.
+   If the size available during dispatch is less than this value, dispatch will return an error.  */
+#ifndef TXM_MODULE_MINIMUM_STACK_AVAILABLE
+#define TXM_MODULE_MINIMUM_STACK_AVAILABLE      64
+#endif
 
-#define TXM_MODULE_MANAGER_SUPPORTED_OPTIONS    (TXM_MODULE_MEMORY_PROTECTION)
+/* Define the supported options for this module.   */
+#ifdef TX3_CHANGES
+	#define TXM_MODULE_MANAGER_SUPPORTED_OPTIONS    (TXM_MODULE_MEMORY_PROTECTION)
+#else
+#define TXM_MODULE_MANAGER_SUPPORTED_OPTIONS    0
+#endif	
 #define TXM_MODULE_MANAGER_REQUIRED_OPTIONS     0
 
 
@@ -180,6 +184,13 @@
 #define TXM_MODULE_RVDS_STOP_ADJUST             0
 #define TXM_MODULE_RVDS_CALLBACK_ADJUST         0
 
+#ifdef TX_DAM_QC_CUSTOMIZATIONS
+	#define TXM_MODULE_LLVM_SHELL_ADJUST        0
+	#define TXM_MODULE_LLVM_START_ADJUST        0
+	#define TXM_MODULE_LLVM_STOP_ADJUST         0
+	#define TXM_MODULE_LLVM_CALLBACK_ADJUST     0
+#endif
+
 #define TXM_MODULE_GNU_SHELL_ADJUST             24
 #define TXM_MODULE_GNU_START_ADJUST             28
 #define TXM_MODULE_GNU_STOP_ADJUST              32
@@ -188,13 +199,15 @@
 
 /* Define other module port-specific constants.  */
 
-/* Define INLINE_DECLARE to whitespace for ARM compiler.  */
+#ifdef TX3_CHANGES
 #define INLINE_DECLARE
 
-#define TXM_MAXIMUM_MODULES                     16
-#define TXM_MODULE_LEVEL1_PAGE_TABLE_SIZE       32
+#define TXM_MAXIMUM_MODULES                     8
 #define TXM_ASID_TABLE_LENGTH                   256
 
+#define TXM_MODULE_LEVEL1_PAGE_TABLE_SIZE       32
+
+
 #define TXM_MODULE_CODE_PAGE_TABLE_START_OFFSET (TXM_MAXIMUM_MODULES * 0)
 #define TXM_MODULE_CODE_PAGE_TABLE_END_OFFSET   (TXM_MAXIMUM_MODULES * 1)
 #define TXM_MODULE_DATA_PAGE_TABLE_START_OFFSET (TXM_MAXIMUM_MODULES * 2)
@@ -293,7 +306,6 @@
 #define TXM_MMU_LEVEL2_ATTRIBUTE_AP_MASK        (TXM_MMU_ATTRIBUTE_AP_MASK  << TXM_MMU_LEVEL2_ATTRIBUTE_AP_SHIFT)
 #define TXM_MMU_LEVEL2_ATTRIBUTE_TEX_MASK       (TXM_MMU_ATTRIBUTE_TEX_MASK << TXM_MMU_LEVEL2_ATTRIBUTE_TEX_SHIFT)
 
-#define TXM_ADDRESS_TRANSLATION_FAULT_BIT       1
 
 #define TXM_ASID_RESERVED                       0xFFFFFFFF
 
@@ -308,9 +320,9 @@
 
 /* Define the port-extensions to the module manager instance structure.  */
 
-#define TXM_MODULE_MANAGER_PORT_EXTENSION                                           \
+#define TXM_MODULE_MANAGER_PORT_EXTENSION_3                                           \
     ULONG               txm_module_instance_asid;                                   \
-    ULONG               *txm_external_page_table[TXM_MODULE_LEVEL2_EXTERNAL_PAGES];
+    ULONG               *txm_external_page_table[TXM_MODULE_LEVEL2_EXTERNAL_PAGES]; 
 
 /* Define the memory fault information structure that is populated when a memory fault occurs.  */
 
@@ -344,13 +356,96 @@
 
 #define TXM_MODULE_MANAGER_FAULT_INFO                                               \
     TXM_MODULE_MANAGER_MEMORY_FAULT_INFO    _txm_module_manager_memory_fault_info;
+#endif
+
+/* QC port start */
+
+#ifdef TX_DAM_QC_CUSTOMIZATIONS
+
+#ifdef TXM_MODULE_REQUIRE_LOCAL_OBJECT_MEMORY
+#undef TXM_MODULE_REQUIRE_LOCAL_OBJECT_MEMORY
+#endif
+
+/* Note: for any change in TXM_MODULE_QAPI_KERNEL_STACK_SIZE,
+         TXM_MODULE_OBJECT_POOL_SIZE must be checked to be in range.  */
+
+/* Define QAPI kernel stack size of a module thread */
+#define TXM_MODULE_QAPI_KERNEL_STACK_SIZE       16*1024
+
+
+#define TXM_MODULE_CODE_ALIGNMENT 0x1000
+
+#ifdef TX_DAM_QC_CUSTOMIZATIONS
+/* Define the port-extensions to the module manager instance structure.  */
+#define TXM_MODULE_MANAGER_PORT_EXTENSION                                           \
+	ULONG               txm_module_instance_asid;                                   \
+    ULONG               *txm_external_page_table[16];								\
+    VOID *txm_module_instance_virt_base;                                            \
+    VOID *txm_module_instance_phys_base;									     	\
+ 	ULONG				txm_shared_mem_start;										\
+	ULONG				txm_shared_mem_size;                                        \
+	ULONG               txm_module_instance_file_load_type;                         \
+	ULONG               txm_module_instance_image_handle;                           
+#else
+/* Define the port-extensions to the module manager instance structure.  */
+#define TXM_MODULE_MANAGER_PORT_EXTENSION                                           \
+	ULONG               txm_module_instance_asid;                                   \
+    ULONG               *txm_external_page_table[16];								\
+    VOID *txm_module_instance_virt_base;                                            \
+    VOID *txm_module_instance_phys_base;									     	\
+ 	ULONG				txm_shared_mem_start;										\
+	ULONG				txm_shared_mem_size;
+#endif
+#define TXM_MODULE_MAX_CALLBACKS          64
+
+// Definition below overrides the MESSAGE_SIZE defined in txm_module.h
+// This is required to extend the params used for QC customization of custom cb notification 
+/* Define each module's callback queue message size. This is used to hold callback request message.  */
+#define TXM_MODULE_CALLBACKS_MESSAGE_SIZE      18 //(13 default + 5 QC extension 
+
+#else
+
+/* Define the port-extensions to the module manager instance structure.  */
+#define TXM_MODULE_MANAGER_PORT_EXTENSION                                           \
+
+#endif
+/* QC port end */
 
 /* Define the macro to check the stack available in dispatch.  */
 #define TXM_MODULE_MANAGER_CHECK_STACK_AVAILABLE 
 
 
+/* Define the macro to check the module version ID.  */
+
+#ifdef TX3_CHANGES
+#define TXM_MODULE_MANAGER_CHECK_PROPERTIES(properties)                             \
+        if ((properties & _txm_module_manager_properties_supported) != (properties & ~((ULONG) TXM_MODULE_COMPILER_MASK)))  \
+        {                                                                           \
+            _tx_mutex_put(&_txm_module_manager_mutex);                              \
+            return(TXM_MODULE_INVALID_PROPERTIES);                                  \
+        }                                                                           \
+        if ((_txm_module_manager_properties_required & properties) != _txm_module_manager_properties_required) \
+        {                                                                           \
+            _tx_mutex_put(&_txm_module_manager_mutex);                              \
+            return(TXM_MODULE_INVALID_PROPERTIES);                                  \
+        }   
+#else
+#define TXM_MODULE_MANAGER_CHECK_PROPERTIES(properties)                             \
+        if ((properties & _txm_module_manager_properties_supported) != (properties))\
+        {                                                                           \
+            _tx_mutex_put(&_txm_module_manager_mutex);                              \
+            return(TXM_MODULE_INVALID_PROPERTIES);                                  \
+        }                                                                           \
+        if ((_txm_module_manager_properties_required & properties) != _txm_module_manager_properties_required) \
+        {                                                                           \
+            _tx_mutex_put(&_txm_module_manager_mutex);                              \
+            return(TXM_MODULE_INVALID_PROPERTIES);                                  \
+        }                                                                           
+#endif
+
 /* Define the macro to check the code alignment.  */
 
+#ifdef TX3_CHANGES
 #define TXM_MODULE_MANAGER_CHECK_CODE_ALIGNMENT(module_location, code_alignment)    \
     {                                                                               \
         ULONG   temp;                                                               \
@@ -362,12 +457,18 @@
             return(TXM_MODULE_ALIGNMENT_ERROR);                                     \
         }                                                                           \
     }
+#else
+#define TXM_MODULE_MANAGER_CHECK_CODE_ALIGNMENT(module_location, code_alignment)    _txm_module_manager_alignment_adjust(module_preamble, &code_size, &code_alignment, &data_size, &data_alignment);
+#endif
 
 
 /* Define the macro to adjust the alignment and size for code/data areas.  */
 
-#define TXM_MODULE_MANAGER_ALIGNMENT_ADJUST(module_preamble, code_size, code_alignment, data_size, data_alignment)   _txm_module_manager_alignment_adjust(module_preamble, &code_size, &code_alignment, &data_size, &data_alignment);
-
+#ifdef TX3_CHANGES
+	#define TXM_MODULE_MANAGER_ALIGNMENT_ADJUST(module_preamble, code_size, code_alignment, data_size, data_alignment)   _txm_module_manager_alignment_adjust(module_preamble, &code_size, &code_alignment, &data_size, &data_alignment);	
+#else
+#define TXM_MODULE_MANAGER_ALIGNMENT_ADJUST(module_preamble, code_size, code_alignment, data_size, data_alignment)   
+#endif
 
 /* Define the macro to adjust the symbols in the module preamble.  */
 
@@ -379,13 +480,20 @@
         stop_function_adjust =      TXM_MODULE_IAR_STOP_ADJUST;                     \
         callback_function_adjust =  TXM_MODULE_IAR_CALLBACK_ADJUST;                 \
     }                                                                               \
-    else if ((properties & TXM_MODULE_COMPILER_MASK) == TXM_MODULE_RVDS_COMPILER)   \
+    else if ((properties & TXM_MODULE_COMPILER_MASK) == TXM_MODULE_RVDS_COMPILER) 	\
     {                                                                               \
         shell_function_adjust =     TXM_MODULE_RVDS_SHELL_ADJUST;                   \
         start_function_adjust =     TXM_MODULE_RVDS_START_ADJUST;                   \
         stop_function_adjust =      TXM_MODULE_RVDS_STOP_ADJUST;                    \
         callback_function_adjust =  TXM_MODULE_RVDS_CALLBACK_ADJUST;                \
-    }                                                                               \
+    } 																				\
+	else if	((properties & TXM_MODULE_COMPILER_MASK) == TXM_MODULE_LLVM_COMPILER)   \
+	{																				\
+		shell_function_adjust =     TXM_MODULE_LLVM_SHELL_ADJUST;                   \
+        start_function_adjust =     TXM_MODULE_LLVM_START_ADJUST;                   \
+        stop_function_adjust =      TXM_MODULE_LLVM_STOP_ADJUST;                    \
+        callback_function_adjust =  TXM_MODULE_LLVM_CALLBACK_ADJUST; 				\
+	}																				\
     else                                                                            \
     {                                                                               \
         shell_function_adjust =     TXM_MODULE_GNU_SHELL_ADJUST;                    \
@@ -396,8 +504,8 @@
 
 
 /* Define the macro to populate the thread control block with module port-specific information.  */
-
-#define TXM_MODULE_MANAGER_THREAD_SETUP(thread_ptr, module_instance)                                                                            \
+#ifdef TX3_CHANGES
+	#define TXM_MODULE_MANAGER_THREAD_SETUP(thread_ptr, module_instance)                                                                            \
     thread_ptr -> tx_thread_module_current_user_mode =  module_instance -> txm_module_instance_property_flags & TXM_MODULE_MEMORY_PROTECTION;   \
     thread_ptr -> tx_thread_module_user_mode =          module_instance -> txm_module_instance_property_flags & TXM_MODULE_MEMORY_PROTECTION;   \
     if (thread_ptr -> tx_thread_module_user_mode)                                                                                               \
@@ -408,31 +516,39 @@
     {                                                                                                                                           \
         thread_entry_info -> txm_module_thread_entry_info_kernel_call_dispatcher =   _txm_module_manager_kernel_dispatch;                       \
     }
+#else
+#define TXM_MODULE_MANAGER_THREAD_SETUP(thread_ptr, module_instance)                                                            \
+        thread_entry_info -> txm_module_thread_entry_info_kernel_call_dispatcher =   _txm_module_manager_kernel_dispatch;       
+#endif
 
 
 /* Define the macro to populate the module control block with module port-specific information.
-   If memory protection is enabled, set up the MMU registers.
+   For this port - nothing needs to be done.
 */
-#define TXM_MODULE_MANAGER_MODULE_SETUP(module_instance)                                                                        \
-    if (module_instance -> txm_module_instance_property_flags & TXM_MODULE_MEMORY_PROTECTION)                                   \
-    {                                                                                                                           \
-        _txm_module_manager_mmu_register_setup(module_instance);                                                                \
-    }                                                                                                                           \
-    else                                                                                                                        \
-    {                                                                                                                           \
-        /* Do nothing.  */                                                                                                      \
-    }
+#ifndef TX3_CHANGES
+#define TXM_MODULE_MANAGER_MODULE_SETUP(module_instance) 
+#else
+	#define TXM_MODULE_MANAGER_MODULE_SETUP(module_instance)                                                                        \
+    
+#endif
 
+#ifdef TX3_CHANGES
+#ifdef TX_DAM_QC_CUSTOMIZATIONS
 /* Define the macro to perform port-specific functions when unloading the module.  */
+#define TXM_MODULE_MANAGER_MODULE_UNLOAD(module_instance)  
+#else
 #define TXM_MODULE_MANAGER_MODULE_UNLOAD(module_instance)                                                                       \
     _txm_level2_page_clear(module_instance);                                                                                    \
     _txm_module_manager_remove_asid(module_instance);
+	
+#endif
 
 /* Define the macro to perform port-specific functions when passing pointer to kernel.  */
 /* Determine if the pointer is within the module's data or shared memory.  */
-#define TXM_MODULE_MANAGER_CHECK_DATA_POINTER(module_instance, pointer)     \
-    if(_txm_module_manager_data_pointer_check(pointer))                     \
-        return(TXM_MODULE_INVALID_MEMORY);
+#define TXM_MODULE_MANAGER_CHECK_DATA_POINTER(module_instance, pointer)     
+	
+  //  if(_txm_module_manager_data_pointer_check(pointer))                     \
+  //      return(TXM_MODULE_INVALID_MEMORY);
 
 
 
@@ -450,23 +566,27 @@
 
 #ifndef TX_SOURCE_CODE
 #define txm_module_manager_memory_fault_notify              _txm_module_manager_memory_fault_notify
-#define txm_module_manager_initialize_mmu                   _txm_module_manager_initialize_mmu
+#endif
 #endif
 
-
-#define TXM_MODULE_MANAGER_ADDITIONAL_PROTOTYPES                                                                                \
+#ifdef TX3_CHANGES
+	#define TXM_MODULE_MANAGER_ADDITIONAL_PROTOTYPES                                                                                \
 VOID  _txm_module_manager_alignment_adjust(TXM_MODULE_PREAMBLE *module_preamble, ULONG *code_size, ULONG *code_alignment, ULONG *data_size, ULONG *data_alignment);   \
 ULONG _txm_module_manager_data_pointer_check(ULONG pointer);                                                                    \
 VOID  _txm_module_manager_memory_fault_handler(VOID);                                                                           \
 UINT  _txm_module_manager_memory_fault_notify(VOID (*notify_function)(TX_THREAD *, TXM_MODULE_INSTANCE *));                     \
-UINT  _txm_module_manager_initialize_mmu(VOID);                                                                                 \
-VOID  _txm_module_manager_mmu_register_setup(TXM_MODULE_INSTANCE *module_instance);                                             \
+VOID  _txm_module_manager_setup_mmu_registers(TXM_MODULE_INSTANCE *module_instance);                                            \
 VOID  _txm_level2_page_clear(TXM_MODULE_INSTANCE *module_instance);                                                             \
 VOID  _txm_module_manager_remove_asid(TXM_MODULE_INSTANCE *module_instance);
+#else
+#define TXM_MODULE_MANAGER_ADDITIONAL_PROTOTYPES    \
+void  _txm_module_manager_alignment_adjust(TXM_MODULE_PREAMBLE *module_preamble, ULONG *code_size, ULONG *code_alignment, ULONG *data_size, ULONG *data_alignment); 
+
+#endif
 
 #define TXM_MODULE_MANAGER_VERSION_ID   \
 CHAR                            _txm_module_manager_version_id[] =  \
-                                    "Copyright (c) 1996-2018 Express Logic Inc. * ThreadX Module Cortex-A7/MMU/ARM Version G5.8.2 *";
+                                    "Copyright (c) 1996-2016 Express Logic Inc. * ThreadX Module Cortex-A7/MMU/ARM Version 5.6 *";
 
 #endif
 
diff -au --ignore-file-name-case orig/txm_module_thread_shell_entry.c modified/txm_module_thread_shell_entry.c
--- orig/txm_module_thread_shell_entry.c	2023-07-24 00:57:00.099475000 -0700
+++ modified/txm_module_thread_shell_entry.c	2023-07-24 00:57:00.100475800 -0700
@@ -21,6 +21,14 @@
 /*                                                                        */ 
 /**************************************************************************/ 
 
+/*======================================================================
+                   txm_module_thread_shell_entry.c
+
+GENERAL DESCRIPTION
+	Calls the specified entry function of the thread.
+
+Copyright (c) 2020 by Qualcomm Technologies, Inc. All Rights Reserved.
+======================================================================*/
 
 /**************************************************************************/ 
 /**************************************************************************/ 
@@ -56,10 +64,11 @@
 ULONG                           (*_txm_module_kernel_call_dispatcher)(ULONG kernel_request, ULONG param_1, ULONG param_2, ULONG param3);
 
 
-
+#ifndef TX_DAM_QC_CUSTOMIZATIONS
 /* Define the RVDS startup code that clears the uninitialized global data and sets up the 
    preset global variables.  */
 extern VOID _txm_module_initialize(VOID);
+#endif
 int main(VOID){return 0;}
 VOID __user_setup_stackheap(VOID){return;}
 
@@ -129,9 +138,11 @@
        execution.  If not, simply skip the C startup code.  */
     if (thread_info -> txm_module_thread_entry_info_start_thread)
     {
-
+#ifndef TX_DAM_QC_CUSTOMIZATIONS
         /* Initialize the RVDS C environment.  */
         _txm_module_initialize();
+#endif
+        // __rt_lib_init(&heap_area[0], &heap_area[HEAP_SIZE-1]);
 
         /* Save the entry info pointer, for later use.  */
         _txm_module_entry_info =  thread_info;
diff -au --ignore-file-name-case orig/txm_module_thread_system_suspend.c modified/txm_module_thread_system_suspend.c
--- orig/txm_module_thread_system_suspend.c	2023-07-24 00:57:00.101479700 -0700
+++ modified/txm_module_thread_system_suspend.c	2023-07-24 00:57:00.101479700 -0700
@@ -21,6 +21,24 @@
 /*                                                                        */
 /**************************************************************************/
 
+/*==============================================================================
+  Copyright (c) 2020 Qualcomm Technologies, Inc.
+  All rights reserved. Qualcomm Proprietary and Confidential.
+==============================================================================*/
+/*======================================================================
+ *
+ *                       EDIT HISTORY FOR FILE
+ *
+ *   This section contains comments describing changes made to the
+ *   module. Notice that changes are listed in reverse chronological
+ *   order.
+ *   
+ *
+ *
+ * when         who       what, where, why
+ * ----------   ---       ------------------------------------------------
+ * 2020-07-22    NT       conditionally defining TXM_MODULE
+ ======================================================================*/
 
 /**************************************************************************/
 /**************************************************************************/
@@ -32,7 +50,10 @@
 /**************************************************************************/
 /**************************************************************************/
 
+#ifndef TX_DAM_QC_CUSTOMIZATIONS
 #define TXM_MODULE
+#endif
+
 #include "txm_module.h"
 
 /**************************************************************************/ 
diff -au --ignore-file-name-case orig/txm_mutex_create.c modified/txm_mutex_create.c
--- orig/txm_mutex_create.c	2023-07-24 00:57:00.102479800 -0700
+++ modified/txm_mutex_create.c	2023-07-24 00:57:00.102479800 -0700
@@ -21,6 +21,24 @@
 /*                                                                        */
 /**************************************************************************/
 
+/*==============================================================================
+  Copyright (c) 2020 Qualcomm Technologies, Inc.
+  All rights reserved. Qualcomm Proprietary and Confidential.
+==============================================================================*/
+/*======================================================================
+ *
+ *                       EDIT HISTORY FOR FILE
+ *
+ *   This section contains comments describing changes made to the
+ *   module. Notice that changes are listed in reverse chronological
+ *   order.
+ *   
+ *
+ *
+ * when         who       what, where, why
+ * ----------   ---       ------------------------------------------------
+ * 2020-07-22    NT       conditionally defining TXM_MODULE
+ ======================================================================*/
 
 /**************************************************************************/
 /**************************************************************************/
@@ -32,7 +50,10 @@
 /**************************************************************************/
 /**************************************************************************/
 
+#ifndef TX_DAM_QC_CUSTOMIZATIONS
 #define TXM_MODULE
+#endif
+
 #include "txm_module.h"
 
 /**************************************************************************/ 
diff -au --ignore-file-name-case orig/txm_mutex_delete.c modified/txm_mutex_delete.c
--- orig/txm_mutex_delete.c	2023-07-24 00:57:00.103480700 -0700
+++ modified/txm_mutex_delete.c	2023-07-24 00:57:00.104479600 -0700
@@ -21,6 +21,24 @@
 /*                                                                        */
 /**************************************************************************/
 
+/*==============================================================================
+  Copyright (c) 2020 Qualcomm Technologies, Inc.
+  All rights reserved. Qualcomm Proprietary and Confidential.
+==============================================================================*/
+/*======================================================================
+ *
+ *                       EDIT HISTORY FOR FILE
+ *
+ *   This section contains comments describing changes made to the
+ *   module. Notice that changes are listed in reverse chronological
+ *   order.
+ *   
+ *
+ *
+ * when         who       what, where, why
+ * ----------   ---       ------------------------------------------------
+ * 2020-07-22    NT       conditionally defining TXM_MODULE
+ ======================================================================*/
 
 /**************************************************************************/
 /**************************************************************************/
@@ -32,7 +50,10 @@
 /**************************************************************************/
 /**************************************************************************/
 
+#ifndef TX_DAM_QC_CUSTOMIZATIONS
 #define TXM_MODULE
+#endif
+
 #include "txm_module.h"
 
 /**************************************************************************/ 
diff -au --ignore-file-name-case orig/txm_mutex_get.c modified/txm_mutex_get.c
--- orig/txm_mutex_get.c	2023-07-24 00:57:00.105482800 -0700
+++ modified/txm_mutex_get.c	2023-07-24 00:57:00.106481700 -0700
@@ -21,6 +21,24 @@
 /*                                                                        */
 /**************************************************************************/
 
+/*==============================================================================
+  Copyright (c) 2020 Qualcomm Technologies, Inc.
+  All rights reserved. Qualcomm Proprietary and Confidential.
+==============================================================================*/
+/*======================================================================
+ *
+ *                       EDIT HISTORY FOR FILE
+ *
+ *   This section contains comments describing changes made to the
+ *   module. Notice that changes are listed in reverse chronological
+ *   order.
+ *   
+ *
+ *
+ * when         who       what, where, why
+ * ----------   ---       ------------------------------------------------
+ * 2020-07-22    NT       conditionally defining TXM_MODULE
+ ======================================================================*/
 
 /**************************************************************************/
 /**************************************************************************/
@@ -32,7 +50,10 @@
 /**************************************************************************/
 /**************************************************************************/
 
+#ifndef TX_DAM_QC_CUSTOMIZATIONS
 #define TXM_MODULE
+#endif
+
 #include "txm_module.h"
 
 /**************************************************************************/ 
diff -au --ignore-file-name-case orig/txm_mutex_info_get.c modified/txm_mutex_info_get.c
--- orig/txm_mutex_info_get.c	2023-07-24 00:57:00.107484900 -0700
+++ modified/txm_mutex_info_get.c	2023-07-24 00:57:00.107484900 -0700
@@ -21,6 +21,24 @@
 /*                                                                        */
 /**************************************************************************/
 
+/*==============================================================================
+  Copyright (c) 2020 Qualcomm Technologies, Inc.
+  All rights reserved. Qualcomm Proprietary and Confidential.
+==============================================================================*/
+/*======================================================================
+ *
+ *                       EDIT HISTORY FOR FILE
+ *
+ *   This section contains comments describing changes made to the
+ *   module. Notice that changes are listed in reverse chronological
+ *   order.
+ *   
+ *
+ *
+ * when         who       what, where, why
+ * ----------   ---       ------------------------------------------------
+ * 2020-07-22    NT       conditionally defining TXM_MODULE
+ ======================================================================*/
 
 /**************************************************************************/
 /**************************************************************************/
@@ -32,7 +50,10 @@
 /**************************************************************************/
 /**************************************************************************/
 
+#ifndef TX_DAM_QC_CUSTOMIZATIONS
 #define TXM_MODULE
+#endif
+
 #include "txm_module.h"
 
 /**************************************************************************/ 
diff -au --ignore-file-name-case orig/txm_mutex_performance_info_get.c modified/txm_mutex_performance_info_get.c
--- orig/txm_mutex_performance_info_get.c	2023-07-24 00:57:00.108485700 -0700
+++ modified/txm_mutex_performance_info_get.c	2023-07-24 00:57:00.108485700 -0700
@@ -21,6 +21,24 @@
 /*                                                                        */
 /**************************************************************************/
 
+/*==============================================================================
+  Copyright (c) 2020 Qualcomm Technologies, Inc.
+  All rights reserved. Qualcomm Proprietary and Confidential.
+==============================================================================*/
+/*======================================================================
+ *
+ *                       EDIT HISTORY FOR FILE
+ *
+ *   This section contains comments describing changes made to the
+ *   module. Notice that changes are listed in reverse chronological
+ *   order.
+ *   
+ *
+ *
+ * when         who       what, where, why
+ * ----------   ---       ------------------------------------------------
+ * 2020-07-22    NT       conditionally defining TXM_MODULE
+ ======================================================================*/
 
 /**************************************************************************/
 /**************************************************************************/
@@ -32,7 +50,10 @@
 /**************************************************************************/
 /**************************************************************************/
 
+#ifndef TX_DAM_QC_CUSTOMIZATIONS
 #define TXM_MODULE
+#endif
+
 #include "txm_module.h"
 
 /**************************************************************************/ 
diff -au --ignore-file-name-case orig/txm_mutex_performance_system_info_get.c modified/txm_mutex_performance_system_info_get.c
--- orig/txm_mutex_performance_system_info_get.c	2023-07-24 00:57:00.109497600 -0700
+++ modified/txm_mutex_performance_system_info_get.c	2023-07-24 00:57:00.110485500 -0700
@@ -21,6 +21,24 @@
 /*                                                                        */
 /**************************************************************************/
 
+/*==============================================================================
+  Copyright (c) 2020 Qualcomm Technologies, Inc.
+  All rights reserved. Qualcomm Proprietary and Confidential.
+==============================================================================*/
+/*======================================================================
+ *
+ *                       EDIT HISTORY FOR FILE
+ *
+ *   This section contains comments describing changes made to the
+ *   module. Notice that changes are listed in reverse chronological
+ *   order.
+ *   
+ *
+ *
+ * when         who       what, where, why
+ * ----------   ---       ------------------------------------------------
+ * 2020-07-22    NT       conditionally defining TXM_MODULE
+ ======================================================================*/
 
 /**************************************************************************/
 /**************************************************************************/
@@ -32,7 +50,10 @@
 /**************************************************************************/
 /**************************************************************************/
 
+#ifndef TX_DAM_QC_CUSTOMIZATIONS
 #define TXM_MODULE
+#endif
+
 #include "txm_module.h"
 
 /**************************************************************************/ 
diff -au --ignore-file-name-case orig/txm_mutex_prioritize.c modified/txm_mutex_prioritize.c
--- orig/txm_mutex_prioritize.c	2023-07-24 00:57:00.110485500 -0700
+++ modified/txm_mutex_prioritize.c	2023-07-24 00:57:00.111486800 -0700
@@ -21,6 +21,24 @@
 /*                                                                        */
 /**************************************************************************/
 
+/*==============================================================================
+  Copyright (c) 2020 Qualcomm Technologies, Inc.
+  All rights reserved. Qualcomm Proprietary and Confidential.
+==============================================================================*/
+/*======================================================================
+ *
+ *                       EDIT HISTORY FOR FILE
+ *
+ *   This section contains comments describing changes made to the
+ *   module. Notice that changes are listed in reverse chronological
+ *   order.
+ *   
+ *
+ *
+ * when         who       what, where, why
+ * ----------   ---       ------------------------------------------------
+ * 2020-07-22    NT       conditionally defining TXM_MODULE
+ ======================================================================*/
 
 /**************************************************************************/
 /**************************************************************************/
@@ -32,7 +50,10 @@
 /**************************************************************************/
 /**************************************************************************/
 
+#ifndef TX_DAM_QC_CUSTOMIZATIONS
 #define TXM_MODULE
+#endif
+
 #include "txm_module.h"
 
 /**************************************************************************/ 
diff -au --ignore-file-name-case orig/txm_mutex_put.c modified/txm_mutex_put.c
--- orig/txm_mutex_put.c	2023-07-24 00:57:00.111486800 -0700
+++ modified/txm_mutex_put.c	2023-07-24 00:57:00.112494100 -0700
@@ -21,6 +21,24 @@
 /*                                                                        */
 /**************************************************************************/
 
+/*==============================================================================
+  Copyright (c) 2020 Qualcomm Technologies, Inc.
+  All rights reserved. Qualcomm Proprietary and Confidential.
+==============================================================================*/
+/*======================================================================
+ *
+ *                       EDIT HISTORY FOR FILE
+ *
+ *   This section contains comments describing changes made to the
+ *   module. Notice that changes are listed in reverse chronological
+ *   order.
+ *   
+ *
+ *
+ * when         who       what, where, why
+ * ----------   ---       ------------------------------------------------
+ * 2020-07-22    NT       conditionally defining TXM_MODULE
+ ======================================================================*/
 
 /**************************************************************************/
 /**************************************************************************/
@@ -32,7 +50,10 @@
 /**************************************************************************/
 /**************************************************************************/
 
+#ifndef TX_DAM_QC_CUSTOMIZATIONS
 #define TXM_MODULE
+#endif
+
 #include "txm_module.h"
 
 /**************************************************************************/ 
diff -au --ignore-file-name-case orig/txm_queue_create.c modified/txm_queue_create.c
--- orig/txm_queue_create.c	2023-07-24 00:57:00.113488100 -0700
+++ modified/txm_queue_create.c	2023-07-24 00:57:00.113488100 -0700
@@ -21,6 +21,24 @@
 /*                                                                        */
 /**************************************************************************/
 
+/*==============================================================================
+  Copyright (c) 2020 Qualcomm Technologies, Inc.
+  All rights reserved. Qualcomm Proprietary and Confidential.
+==============================================================================*/
+/*======================================================================
+ *
+ *                       EDIT HISTORY FOR FILE
+ *
+ *   This section contains comments describing changes made to the
+ *   module. Notice that changes are listed in reverse chronological
+ *   order.
+ *   
+ *
+ *
+ * when         who       what, where, why
+ * ----------   ---       ------------------------------------------------
+ * 2020-07-22    NT       conditionally defining TXM_MODULE
+ ======================================================================*/
 
 /**************************************************************************/
 /**************************************************************************/
@@ -32,7 +50,10 @@
 /**************************************************************************/
 /**************************************************************************/
 
+#ifndef TX_DAM_QC_CUSTOMIZATIONS
 #define TXM_MODULE
+#endif
+
 #include "txm_module.h"
 
 /**************************************************************************/ 
diff -au --ignore-file-name-case orig/txm_queue_delete.c modified/txm_queue_delete.c
--- orig/txm_queue_delete.c	2023-07-24 00:57:00.114491300 -0700
+++ modified/txm_queue_delete.c	2023-07-24 00:57:00.115492100 -0700
@@ -21,6 +21,24 @@
 /*                                                                        */
 /**************************************************************************/
 
+/*==============================================================================
+  Copyright (c) 2020 Qualcomm Technologies, Inc.
+  All rights reserved. Qualcomm Proprietary and Confidential.
+==============================================================================*/
+/*======================================================================
+ *
+ *                       EDIT HISTORY FOR FILE
+ *
+ *   This section contains comments describing changes made to the
+ *   module. Notice that changes are listed in reverse chronological
+ *   order.
+ *   
+ *
+ *
+ * when         who       what, where, why
+ * ----------   ---       ------------------------------------------------
+ * 2020-07-22    NT       conditionally defining TXM_MODULE
+ ======================================================================*/
 
 /**************************************************************************/
 /**************************************************************************/
@@ -32,7 +50,10 @@
 /**************************************************************************/
 /**************************************************************************/
 
+#ifndef TX_DAM_QC_CUSTOMIZATIONS
 #define TXM_MODULE
+#endif
+
 #include "txm_module.h"
 
 /**************************************************************************/ 
diff -au --ignore-file-name-case orig/txm_queue_flush.c modified/txm_queue_flush.c
--- orig/txm_queue_flush.c	2023-07-24 00:57:00.115492100 -0700
+++ modified/txm_queue_flush.c	2023-07-24 00:57:00.116493000 -0700
@@ -21,6 +21,24 @@
 /*                                                                        */
 /**************************************************************************/
 
+/*==============================================================================
+  Copyright (c) 2020 Qualcomm Technologies, Inc.
+  All rights reserved. Qualcomm Proprietary and Confidential.
+==============================================================================*/
+/*======================================================================
+ *
+ *                       EDIT HISTORY FOR FILE
+ *
+ *   This section contains comments describing changes made to the
+ *   module. Notice that changes are listed in reverse chronological
+ *   order.
+ *   
+ *
+ *
+ * when         who       what, where, why
+ * ----------   ---       ------------------------------------------------
+ * 2020-07-22    NT       conditionally defining TXM_MODULE
+ ======================================================================*/
 
 /**************************************************************************/
 /**************************************************************************/
@@ -32,7 +50,10 @@
 /**************************************************************************/
 /**************************************************************************/
 
+#ifndef TX_DAM_QC_CUSTOMIZATIONS
 #define TXM_MODULE
+#endif
+
 #include "txm_module.h"
 
 /**************************************************************************/ 
diff -au --ignore-file-name-case orig/txm_queue_front_send.c modified/txm_queue_front_send.c
--- orig/txm_queue_front_send.c	2023-07-24 00:57:00.116493000 -0700
+++ modified/txm_queue_front_send.c	2023-07-24 00:57:00.117494200 -0700
@@ -21,6 +21,24 @@
 /*                                                                        */
 /**************************************************************************/
 
+/*==============================================================================
+  Copyright (c) 2020 Qualcomm Technologies, Inc.
+  All rights reserved. Qualcomm Proprietary and Confidential.
+==============================================================================*/
+/*======================================================================
+ *
+ *                       EDIT HISTORY FOR FILE
+ *
+ *   This section contains comments describing changes made to the
+ *   module. Notice that changes are listed in reverse chronological
+ *   order.
+ *   
+ *
+ *
+ * when         who       what, where, why
+ * ----------   ---       ------------------------------------------------
+ * 2020-07-22    NT       conditionally defining TXM_MODULE
+ ======================================================================*/
 
 /**************************************************************************/
 /**************************************************************************/
@@ -32,7 +50,10 @@
 /**************************************************************************/
 /**************************************************************************/
 
+#ifndef TX_DAM_QC_CUSTOMIZATIONS
 #define TXM_MODULE
+#endif
+
 #include "txm_module.h"
 
 /**************************************************************************/ 
diff -au --ignore-file-name-case orig/txm_queue_info_get.c modified/txm_queue_info_get.c
--- orig/txm_queue_info_get.c	2023-07-24 00:57:00.117494200 -0700
+++ modified/txm_queue_info_get.c	2023-07-24 00:57:00.118505700 -0700
@@ -21,6 +21,24 @@
 /*                                                                        */
 /**************************************************************************/
 
+/*==============================================================================
+  Copyright (c) 2020 Qualcomm Technologies, Inc.
+  All rights reserved. Qualcomm Proprietary and Confidential.
+==============================================================================*/
+/*======================================================================
+ *
+ *                       EDIT HISTORY FOR FILE
+ *
+ *   This section contains comments describing changes made to the
+ *   module. Notice that changes are listed in reverse chronological
+ *   order.
+ *   
+ *
+ *
+ * when         who       what, where, why
+ * ----------   ---       ------------------------------------------------
+ * 2020-07-22    NT       conditionally defining TXM_MODULE
+ ======================================================================*/
 
 /**************************************************************************/
 /**************************************************************************/
@@ -32,7 +50,10 @@
 /**************************************************************************/
 /**************************************************************************/
 
+#ifndef TX_DAM_QC_CUSTOMIZATIONS
 #define TXM_MODULE
+#endif
+
 #include "txm_module.h"
 
 /**************************************************************************/ 
diff -au --ignore-file-name-case orig/txm_queue_performance_info_get.c modified/txm_queue_performance_info_get.c
--- orig/txm_queue_performance_info_get.c	2023-07-24 00:57:00.119494000 -0700
+++ modified/txm_queue_performance_info_get.c	2023-07-24 00:57:00.119494000 -0700
@@ -21,6 +21,24 @@
 /*                                                                        */
 /**************************************************************************/
 
+/*==============================================================================
+  Copyright (c) 2020 Qualcomm Technologies, Inc.
+  All rights reserved. Qualcomm Proprietary and Confidential.
+==============================================================================*/
+/*======================================================================
+ *
+ *                       EDIT HISTORY FOR FILE
+ *
+ *   This section contains comments describing changes made to the
+ *   module. Notice that changes are listed in reverse chronological
+ *   order.
+ *   
+ *
+ *
+ * when         who       what, where, why
+ * ----------   ---       ------------------------------------------------
+ * 2020-07-22    NT       conditionally defining TXM_MODULE
+ ======================================================================*/
 
 /**************************************************************************/
 /**************************************************************************/
@@ -32,7 +50,10 @@
 /**************************************************************************/
 /**************************************************************************/
 
+#ifndef TX_DAM_QC_CUSTOMIZATIONS
 #define TXM_MODULE
+#endif
+
 #include "txm_module.h"
 
 /**************************************************************************/ 
diff -au --ignore-file-name-case orig/txm_queue_performance_system_info_get.c modified/txm_queue_performance_system_info_get.c
--- orig/txm_queue_performance_system_info_get.c	2023-07-24 00:57:00.120497200 -0700
+++ modified/txm_queue_performance_system_info_get.c	2023-07-24 00:57:00.120497200 -0700
@@ -21,6 +21,24 @@
 /*                                                                        */
 /**************************************************************************/
 
+/*==============================================================================
+  Copyright (c) 2020 Qualcomm Technologies, Inc.
+  All rights reserved. Qualcomm Proprietary and Confidential.
+==============================================================================*/
+/*======================================================================
+ *
+ *                       EDIT HISTORY FOR FILE
+ *
+ *   This section contains comments describing changes made to the
+ *   module. Notice that changes are listed in reverse chronological
+ *   order.
+ *   
+ *
+ *
+ * when         who       what, where, why
+ * ----------   ---       ------------------------------------------------
+ * 2020-07-22    NT       conditionally defining TXM_MODULE
+ ======================================================================*/
 
 /**************************************************************************/
 /**************************************************************************/
@@ -32,7 +50,10 @@
 /**************************************************************************/
 /**************************************************************************/
 
+#ifndef TX_DAM_QC_CUSTOMIZATIONS
 #define TXM_MODULE
+#endif
+
 #include "txm_module.h"
 
 /**************************************************************************/ 
diff -au --ignore-file-name-case orig/txm_queue_prioritize.c modified/txm_queue_prioritize.c
--- orig/txm_queue_prioritize.c	2023-07-24 00:57:00.121495800 -0700
+++ modified/txm_queue_prioritize.c	2023-07-24 00:57:00.122497000 -0700
@@ -21,6 +21,24 @@
 /*                                                                        */
 /**************************************************************************/
 
+/*==============================================================================
+  Copyright (c) 2020 Qualcomm Technologies, Inc.
+  All rights reserved. Qualcomm Proprietary and Confidential.
+==============================================================================*/
+/*======================================================================
+ *
+ *                       EDIT HISTORY FOR FILE
+ *
+ *   This section contains comments describing changes made to the
+ *   module. Notice that changes are listed in reverse chronological
+ *   order.
+ *   
+ *
+ *
+ * when         who       what, where, why
+ * ----------   ---       ------------------------------------------------
+ * 2020-07-22    NT       conditionally defining TXM_MODULE
+ ======================================================================*/
 
 /**************************************************************************/
 /**************************************************************************/
@@ -32,7 +50,10 @@
 /**************************************************************************/
 /**************************************************************************/
 
+#ifndef TX_DAM_QC_CUSTOMIZATIONS
 #define TXM_MODULE
+#endif
+
 #include "txm_module.h"
 
 /**************************************************************************/ 
diff -au --ignore-file-name-case orig/txm_queue_receive.c modified/txm_queue_receive.c
--- orig/txm_queue_receive.c	2023-07-24 00:57:00.122497000 -0700
+++ modified/txm_queue_receive.c	2023-07-24 00:57:00.123497800 -0700
@@ -21,6 +21,24 @@
 /*                                                                        */
 /**************************************************************************/
 
+/*==============================================================================
+  Copyright (c) 2020 Qualcomm Technologies, Inc.
+  All rights reserved. Qualcomm Proprietary and Confidential.
+==============================================================================*/
+/*======================================================================
+ *
+ *                       EDIT HISTORY FOR FILE
+ *
+ *   This section contains comments describing changes made to the
+ *   module. Notice that changes are listed in reverse chronological
+ *   order.
+ *   
+ *
+ *
+ * when         who       what, where, why
+ * ----------   ---       ------------------------------------------------
+ * 2020-07-22    NT       conditionally defining TXM_MODULE
+ ======================================================================*/
 
 /**************************************************************************/
 /**************************************************************************/
@@ -32,7 +50,10 @@
 /**************************************************************************/
 /**************************************************************************/
 
+#ifndef TX_DAM_QC_CUSTOMIZATIONS
 #define TXM_MODULE
+#endif
+
 #include "txm_module.h"
 
 /**************************************************************************/ 
diff -au --ignore-file-name-case orig/txm_queue_send.c modified/txm_queue_send.c
--- orig/txm_queue_send.c	2023-07-24 00:57:00.123497800 -0700
+++ modified/txm_queue_send.c	2023-07-24 00:57:00.124498700 -0700
@@ -21,6 +21,24 @@
 /*                                                                        */
 /**************************************************************************/
 
+/*==============================================================================
+  Copyright (c) 2020 Qualcomm Technologies, Inc.
+  All rights reserved. Qualcomm Proprietary and Confidential.
+==============================================================================*/
+/*======================================================================
+ *
+ *                       EDIT HISTORY FOR FILE
+ *
+ *   This section contains comments describing changes made to the
+ *   module. Notice that changes are listed in reverse chronological
+ *   order.
+ *   
+ *
+ *
+ * when         who       what, where, why
+ * ----------   ---       ------------------------------------------------
+ * 2020-07-22    NT       conditionally defining TXM_MODULE
+ ======================================================================*/
 
 /**************************************************************************/
 /**************************************************************************/
@@ -32,7 +50,10 @@
 /**************************************************************************/
 /**************************************************************************/
 
+#ifndef TX_DAM_QC_CUSTOMIZATIONS
 #define TXM_MODULE
+#endif
+
 #include "txm_module.h"
 
 /**************************************************************************/ 
diff -au --ignore-file-name-case orig/txm_queue_send_notify.c modified/txm_queue_send_notify.c
--- orig/txm_queue_send_notify.c	2023-07-24 00:57:00.125499600 -0700
+++ modified/txm_queue_send_notify.c	2023-07-24 00:57:00.125499600 -0700
@@ -21,6 +21,24 @@
 /*                                                                        */
 /**************************************************************************/
 
+/*==============================================================================
+  Copyright (c) 2020 Qualcomm Technologies, Inc.
+  All rights reserved. Qualcomm Proprietary and Confidential.
+==============================================================================*/
+/*======================================================================
+ *
+ *                       EDIT HISTORY FOR FILE
+ *
+ *   This section contains comments describing changes made to the
+ *   module. Notice that changes are listed in reverse chronological
+ *   order.
+ *   
+ *
+ *
+ * when         who       what, where, why
+ * ----------   ---       ------------------------------------------------
+ * 2020-07-22    NT       conditionally defining TXM_MODULE
+ ======================================================================*/
 
 /**************************************************************************/
 /**************************************************************************/
@@ -32,7 +50,10 @@
 /**************************************************************************/
 /**************************************************************************/
 
+#ifndef TX_DAM_QC_CUSTOMIZATIONS
 #define TXM_MODULE
+#endif
+
 #include "txm_module.h"
 
 /**************************************************************************/ 
diff -au --ignore-file-name-case orig/txm_semaphore_ceiling_put.c modified/txm_semaphore_ceiling_put.c
--- orig/txm_semaphore_ceiling_put.c	2023-07-24 00:57:00.126502700 -0700
+++ modified/txm_semaphore_ceiling_put.c	2023-07-24 00:57:00.126502700 -0700
@@ -21,6 +21,24 @@
 /*                                                                        */
 /**************************************************************************/
 
+/*==============================================================================
+  Copyright (c) 2020 Qualcomm Technologies, Inc.
+  All rights reserved. Qualcomm Proprietary and Confidential.
+==============================================================================*/
+/*======================================================================
+ *
+ *                       EDIT HISTORY FOR FILE
+ *
+ *   This section contains comments describing changes made to the
+ *   module. Notice that changes are listed in reverse chronological
+ *   order.
+ *   
+ *
+ *
+ * when         who       what, where, why
+ * ----------   ---       ------------------------------------------------
+ * 2020-07-22    NT       conditionally defining TXM_MODULE
+ ======================================================================*/
 
 /**************************************************************************/
 /**************************************************************************/
@@ -32,7 +50,10 @@
 /**************************************************************************/
 /**************************************************************************/
 
+#ifndef TX_DAM_QC_CUSTOMIZATIONS
 #define TXM_MODULE
+#endif
+
 #include "txm_module.h"
 
 /**************************************************************************/ 
diff -au --ignore-file-name-case orig/txm_semaphore_create.c modified/txm_semaphore_create.c
--- orig/txm_semaphore_create.c	2023-07-24 00:57:00.127503600 -0700
+++ modified/txm_semaphore_create.c	2023-07-24 00:57:00.127503600 -0700
@@ -21,6 +21,24 @@
 /*                                                                        */
 /**************************************************************************/
 
+/*==============================================================================
+  Copyright (c) 2020 Qualcomm Technologies, Inc.
+  All rights reserved. Qualcomm Proprietary and Confidential.
+==============================================================================*/
+/*======================================================================
+ *
+ *                       EDIT HISTORY FOR FILE
+ *
+ *   This section contains comments describing changes made to the
+ *   module. Notice that changes are listed in reverse chronological
+ *   order.
+ *   
+ *
+ *
+ * when         who       what, where, why
+ * ----------   ---       ------------------------------------------------
+ * 2020-07-22    NT       conditionally defining TXM_MODULE
+ ======================================================================*/
 
 /**************************************************************************/
 /**************************************************************************/
@@ -32,7 +50,10 @@
 /**************************************************************************/
 /**************************************************************************/
 
+#ifndef TX_DAM_QC_CUSTOMIZATIONS
 #define TXM_MODULE
+#endif
+
 #include "txm_module.h"
 
 /**************************************************************************/ 
diff -au --ignore-file-name-case orig/txm_semaphore_delete.c modified/txm_semaphore_delete.c
--- orig/txm_semaphore_delete.c	2023-07-24 00:57:00.128504400 -0700
+++ modified/txm_semaphore_delete.c	2023-07-24 00:57:00.129503800 -0700
@@ -21,6 +21,24 @@
 /*                                                                        */
 /**************************************************************************/
 
+/*==============================================================================
+  Copyright (c) 2020 Qualcomm Technologies, Inc.
+  All rights reserved. Qualcomm Proprietary and Confidential.
+==============================================================================*/
+/*======================================================================
+ *
+ *                       EDIT HISTORY FOR FILE
+ *
+ *   This section contains comments describing changes made to the
+ *   module. Notice that changes are listed in reverse chronological
+ *   order.
+ *   
+ *
+ *
+ * when         who       what, where, why
+ * ----------   ---       ------------------------------------------------
+ * 2020-07-22    NT       conditionally defining TXM_MODULE
+ ======================================================================*/
 
 /**************************************************************************/
 /**************************************************************************/
@@ -32,7 +50,10 @@
 /**************************************************************************/
 /**************************************************************************/
 
+#ifndef TX_DAM_QC_CUSTOMIZATIONS
 #define TXM_MODULE
+#endif
+
 #include "txm_module.h"
 
 /**************************************************************************/ 
diff -au --ignore-file-name-case orig/txm_semaphore_get.c modified/txm_semaphore_get.c
--- orig/txm_semaphore_get.c	2023-07-24 00:57:00.129503800 -0700
+++ modified/txm_semaphore_get.c	2023-07-24 00:57:00.130506500 -0700
@@ -21,6 +21,24 @@
 /*                                                                        */
 /**************************************************************************/
 
+/*==============================================================================
+  Copyright (c) 2020 Qualcomm Technologies, Inc.
+  All rights reserved. Qualcomm Proprietary and Confidential.
+==============================================================================*/
+/*======================================================================
+ *
+ *                       EDIT HISTORY FOR FILE
+ *
+ *   This section contains comments describing changes made to the
+ *   module. Notice that changes are listed in reverse chronological
+ *   order.
+ *   
+ *
+ *
+ * when         who       what, where, why
+ * ----------   ---       ------------------------------------------------
+ * 2020-07-22    NT       conditionally defining TXM_MODULE
+ ======================================================================*/
 
 /**************************************************************************/
 /**************************************************************************/
@@ -32,7 +50,10 @@
 /**************************************************************************/
 /**************************************************************************/
 
+#ifndef TX_DAM_QC_CUSTOMIZATIONS
 #define TXM_MODULE
+#endif
+
 #include "txm_module.h"
 
 /**************************************************************************/ 
diff -au --ignore-file-name-case orig/txm_semaphore_info_get.c modified/txm_semaphore_info_get.c
--- orig/txm_semaphore_info_get.c	2023-07-24 00:57:00.130506500 -0700
+++ modified/txm_semaphore_info_get.c	2023-07-24 00:57:00.131505500 -0700
@@ -21,6 +21,24 @@
 /*                                                                        */
 /**************************************************************************/
 
+/*==============================================================================
+  Copyright (c) 2020 Qualcomm Technologies, Inc.
+  All rights reserved. Qualcomm Proprietary and Confidential.
+==============================================================================*/
+/*======================================================================
+ *
+ *                       EDIT HISTORY FOR FILE
+ *
+ *   This section contains comments describing changes made to the
+ *   module. Notice that changes are listed in reverse chronological
+ *   order.
+ *   
+ *
+ *
+ * when         who       what, where, why
+ * ----------   ---       ------------------------------------------------
+ * 2020-07-22    NT       conditionally defining TXM_MODULE
+ ======================================================================*/
 
 /**************************************************************************/
 /**************************************************************************/
@@ -32,7 +50,10 @@
 /**************************************************************************/
 /**************************************************************************/
 
+#ifndef TX_DAM_QC_CUSTOMIZATIONS
 #define TXM_MODULE
+#endif
+
 #include "txm_module.h"
 
 /**************************************************************************/ 
diff -au --ignore-file-name-case orig/txm_semaphore_performance_info_get.c modified/txm_semaphore_performance_info_get.c
--- orig/txm_semaphore_performance_info_get.c	2023-07-24 00:57:00.132508600 -0700
+++ modified/txm_semaphore_performance_info_get.c	2023-07-24 00:57:00.132508600 -0700
@@ -21,6 +21,24 @@
 /*                                                                        */
 /**************************************************************************/
 
+/*==============================================================================
+  Copyright (c) 2020 Qualcomm Technologies, Inc.
+  All rights reserved. Qualcomm Proprietary and Confidential.
+==============================================================================*/
+/*======================================================================
+ *
+ *                       EDIT HISTORY FOR FILE
+ *
+ *   This section contains comments describing changes made to the
+ *   module. Notice that changes are listed in reverse chronological
+ *   order.
+ *   
+ *
+ *
+ * when         who       what, where, why
+ * ----------   ---       ------------------------------------------------
+ * 2020-07-22    NT       conditionally defining TXM_MODULE
+ ======================================================================*/
 
 /**************************************************************************/
 /**************************************************************************/
@@ -32,7 +50,10 @@
 /**************************************************************************/
 /**************************************************************************/
 
+#ifndef TX_DAM_QC_CUSTOMIZATIONS
 #define TXM_MODULE
+#endif
+
 #include "txm_module.h"
 
 /**************************************************************************/ 
diff -au --ignore-file-name-case orig/txm_semaphore_performance_system_info_get.c modified/txm_semaphore_performance_system_info_get.c
--- orig/txm_semaphore_performance_system_info_get.c	2023-07-24 00:57:00.133507600 -0700
+++ modified/txm_semaphore_performance_system_info_get.c	2023-07-24 00:57:00.134510000 -0700
@@ -21,6 +21,24 @@
 /*                                                                        */
 /**************************************************************************/
 
+/*==============================================================================
+  Copyright (c) 2020 Qualcomm Technologies, Inc.
+  All rights reserved. Qualcomm Proprietary and Confidential.
+==============================================================================*/
+/*======================================================================
+ *
+ *                       EDIT HISTORY FOR FILE
+ *
+ *   This section contains comments describing changes made to the
+ *   module. Notice that changes are listed in reverse chronological
+ *   order.
+ *   
+ *
+ *
+ * when         who       what, where, why
+ * ----------   ---       ------------------------------------------------
+ * 2020-07-22    NT       conditionally defining TXM_MODULE
+ ======================================================================*/
 
 /**************************************************************************/
 /**************************************************************************/
@@ -32,7 +50,10 @@
 /**************************************************************************/
 /**************************************************************************/
 
+#ifndef TX_DAM_QC_CUSTOMIZATIONS
 #define TXM_MODULE
+#endif
+
 #include "txm_module.h"
 
 /**************************************************************************/ 
diff -au --ignore-file-name-case orig/txm_semaphore_prioritize.c modified/txm_semaphore_prioritize.c
--- orig/txm_semaphore_prioritize.c	2023-07-24 00:57:00.134510000 -0700
+++ modified/txm_semaphore_prioritize.c	2023-07-24 00:57:00.135509300 -0700
@@ -21,6 +21,24 @@
 /*                                                                        */
 /**************************************************************************/
 
+/*==============================================================================
+  Copyright (c) 2020 Qualcomm Technologies, Inc.
+  All rights reserved. Qualcomm Proprietary and Confidential.
+==============================================================================*/
+/*======================================================================
+ *
+ *                       EDIT HISTORY FOR FILE
+ *
+ *   This section contains comments describing changes made to the
+ *   module. Notice that changes are listed in reverse chronological
+ *   order.
+ *   
+ *
+ *
+ * when         who       what, where, why
+ * ----------   ---       ------------------------------------------------
+ * 2020-07-22    NT       conditionally defining TXM_MODULE
+ ======================================================================*/
 
 /**************************************************************************/
 /**************************************************************************/
@@ -32,7 +50,10 @@
 /**************************************************************************/
 /**************************************************************************/
 
+#ifndef TX_DAM_QC_CUSTOMIZATIONS
 #define TXM_MODULE
+#endif
+
 #include "txm_module.h"
 
 /**************************************************************************/ 
diff -au --ignore-file-name-case orig/txm_semaphore_put.c modified/txm_semaphore_put.c
--- orig/txm_semaphore_put.c	2023-07-24 00:57:00.136510200 -0700
+++ modified/txm_semaphore_put.c	2023-07-24 00:57:00.136510200 -0700
@@ -21,6 +21,24 @@
 /*                                                                        */
 /**************************************************************************/
 
+/*==============================================================================
+  Copyright (c) 2020 Qualcomm Technologies, Inc.
+  All rights reserved. Qualcomm Proprietary and Confidential.
+==============================================================================*/
+/*======================================================================
+ *
+ *                       EDIT HISTORY FOR FILE
+ *
+ *   This section contains comments describing changes made to the
+ *   module. Notice that changes are listed in reverse chronological
+ *   order.
+ *   
+ *
+ *
+ * when         who       what, where, why
+ * ----------   ---       ------------------------------------------------
+ * 2020-07-22    NT       conditionally defining TXM_MODULE
+ ======================================================================*/
 
 /**************************************************************************/
 /**************************************************************************/
@@ -32,7 +50,10 @@
 /**************************************************************************/
 /**************************************************************************/
 
+#ifndef TX_DAM_QC_CUSTOMIZATIONS
 #define TXM_MODULE
+#endif
+
 #include "txm_module.h"
 
 /**************************************************************************/ 
diff -au --ignore-file-name-case orig/txm_semaphore_put_notify.c modified/txm_semaphore_put_notify.c
--- orig/txm_semaphore_put_notify.c	2023-07-24 00:57:00.137511000 -0700
+++ modified/txm_semaphore_put_notify.c	2023-07-24 00:57:00.137511000 -0700
@@ -21,6 +21,24 @@
 /*                                                                        */
 /**************************************************************************/
 
+/*==============================================================================
+  Copyright (c) 2020 Qualcomm Technologies, Inc.
+  All rights reserved. Qualcomm Proprietary and Confidential.
+==============================================================================*/
+/*======================================================================
+ *
+ *                       EDIT HISTORY FOR FILE
+ *
+ *   This section contains comments describing changes made to the
+ *   module. Notice that changes are listed in reverse chronological
+ *   order.
+ *   
+ *
+ *
+ * when         who       what, where, why
+ * ----------   ---       ------------------------------------------------
+ * 2020-07-22    NT       conditionally defining TXM_MODULE
+ ======================================================================*/
 
 /**************************************************************************/
 /**************************************************************************/
@@ -32,7 +50,10 @@
 /**************************************************************************/
 /**************************************************************************/
 
+#ifndef TX_DAM_QC_CUSTOMIZATIONS
 #define TXM_MODULE
+#endif
+
 #include "txm_module.h"
 
 /**************************************************************************/ 
diff -au --ignore-file-name-case orig/txm_thread_create.c modified/txm_thread_create.c
--- orig/txm_thread_create.c	2023-07-24 00:57:00.138521400 -0700
+++ modified/txm_thread_create.c	2023-07-24 00:57:00.139515400 -0700
@@ -21,6 +21,24 @@
 /*                                                                        */
 /**************************************************************************/
 
+/*==============================================================================
+  Copyright (c) 2020 Qualcomm Technologies, Inc.
+  All rights reserved. Qualcomm Proprietary and Confidential.
+==============================================================================*/
+/*======================================================================
+ *
+ *                       EDIT HISTORY FOR FILE
+ *
+ *   This section contains comments describing changes made to the
+ *   module. Notice that changes are listed in reverse chronological
+ *   order.
+ *   
+ *
+ *
+ * when         who       what, where, why
+ * ----------   ---       ------------------------------------------------
+ * 2020-07-22    NT       conditionally defining TXM_MODULE
+ ======================================================================*/
 
 /**************************************************************************/
 /**************************************************************************/
@@ -32,7 +50,10 @@
 /**************************************************************************/
 /**************************************************************************/
 
+#ifndef TX_DAM_QC_CUSTOMIZATIONS
 #define TXM_MODULE
+#endif
+
 #include "txm_module.h"
 
 /**************************************************************************/ 
diff -au --ignore-file-name-case orig/txm_thread_delete.c modified/txm_thread_delete.c
--- orig/txm_thread_delete.c	2023-07-24 00:57:00.139515400 -0700
+++ modified/txm_thread_delete.c	2023-07-24 00:57:00.140515900 -0700
@@ -21,6 +21,24 @@
 /*                                                                        */
 /**************************************************************************/
 
+/*==============================================================================
+  Copyright (c) 2020 Qualcomm Technologies, Inc.
+  All rights reserved. Qualcomm Proprietary and Confidential.
+==============================================================================*/
+/*======================================================================
+ *
+ *                       EDIT HISTORY FOR FILE
+ *
+ *   This section contains comments describing changes made to the
+ *   module. Notice that changes are listed in reverse chronological
+ *   order.
+ *   
+ *
+ *
+ * when         who       what, where, why
+ * ----------   ---       ------------------------------------------------
+ * 2020-07-22    NT       conditionally defining TXM_MODULE
+ ======================================================================*/
 
 /**************************************************************************/
 /**************************************************************************/
@@ -32,7 +50,10 @@
 /**************************************************************************/
 /**************************************************************************/
 
+#ifndef TX_DAM_QC_CUSTOMIZATIONS
 #define TXM_MODULE
+#endif
+
 #include "txm_module.h"
 
 /**************************************************************************/ 
diff -au --ignore-file-name-case orig/txm_thread_entry_exit_notify.c modified/txm_thread_entry_exit_notify.c
--- orig/txm_thread_entry_exit_notify.c	2023-07-24 00:57:00.141517100 -0700
+++ modified/txm_thread_entry_exit_notify.c	2023-07-24 00:57:00.141517100 -0700
@@ -21,6 +21,24 @@
 /*                                                                        */
 /**************************************************************************/
 
+/*==============================================================================
+  Copyright (c) 2020 Qualcomm Technologies, Inc.
+  All rights reserved. Qualcomm Proprietary and Confidential.
+==============================================================================*/
+/*======================================================================
+ *
+ *                       EDIT HISTORY FOR FILE
+ *
+ *   This section contains comments describing changes made to the
+ *   module. Notice that changes are listed in reverse chronological
+ *   order.
+ *   
+ *
+ *
+ * when         who       what, where, why
+ * ----------   ---       ------------------------------------------------
+ * 2020-07-22    NT       conditionally defining TXM_MODULE
+ ======================================================================*/
 
 /**************************************************************************/
 /**************************************************************************/
@@ -32,7 +50,10 @@
 /**************************************************************************/
 /**************************************************************************/
 
+#ifndef TX_DAM_QC_CUSTOMIZATIONS
 #define TXM_MODULE
+#endif
+
 #include "txm_module.h"
 
 /**************************************************************************/ 
diff -au --ignore-file-name-case orig/txm_thread_identify.c modified/txm_thread_identify.c
--- orig/txm_thread_identify.c	2023-07-24 00:57:00.142518300 -0700
+++ modified/txm_thread_identify.c	2023-07-24 00:57:00.142518300 -0700
@@ -21,6 +21,24 @@
 /*                                                                        */
 /**************************************************************************/
 
+/*==============================================================================
+  Copyright (c) 2020 Qualcomm Technologies, Inc.
+  All rights reserved. Qualcomm Proprietary and Confidential.
+==============================================================================*/
+/*======================================================================
+ *
+ *                       EDIT HISTORY FOR FILE
+ *
+ *   This section contains comments describing changes made to the
+ *   module. Notice that changes are listed in reverse chronological
+ *   order.
+ *   
+ *
+ *
+ * when         who       what, where, why
+ * ----------   ---       ------------------------------------------------
+ * 2020-07-22    NT       conditionally defining TXM_MODULE
+ ======================================================================*/
 
 /**************************************************************************/
 /**************************************************************************/
@@ -32,7 +50,10 @@
 /**************************************************************************/
 /**************************************************************************/
 
+#ifndef TX_DAM_QC_CUSTOMIZATIONS
 #define TXM_MODULE
+#endif
+
 #include "txm_module.h"
 
 /**************************************************************************/ 
diff -au --ignore-file-name-case orig/txm_thread_info_get.c modified/txm_thread_info_get.c
--- orig/txm_thread_info_get.c	2023-07-24 00:57:00.143518800 -0700
+++ modified/txm_thread_info_get.c	2023-07-24 00:57:00.143518800 -0700
@@ -21,6 +21,24 @@
 /*                                                                        */
 /**************************************************************************/
 
+/*==============================================================================
+  Copyright (c) 2020 Qualcomm Technologies, Inc.
+  All rights reserved. Qualcomm Proprietary and Confidential.
+==============================================================================*/
+/*======================================================================
+ *
+ *                       EDIT HISTORY FOR FILE
+ *
+ *   This section contains comments describing changes made to the
+ *   module. Notice that changes are listed in reverse chronological
+ *   order.
+ *   
+ *
+ *
+ * when         who       what, where, why
+ * ----------   ---       ------------------------------------------------
+ * 2020-07-22    NT       conditionally defining TXM_MODULE
+ ======================================================================*/
 
 /**************************************************************************/
 /**************************************************************************/
@@ -32,7 +50,10 @@
 /**************************************************************************/
 /**************************************************************************/
 
+#ifndef TX_DAM_QC_CUSTOMIZATIONS
 #define TXM_MODULE
+#endif
+
 #include "txm_module.h"
 
 /**************************************************************************/ 
diff -au --ignore-file-name-case orig/txm_thread_interrupt_control.c modified/txm_thread_interrupt_control.c
--- orig/txm_thread_interrupt_control.c	2023-07-24 00:57:00.144519700 -0700
+++ modified/txm_thread_interrupt_control.c	2023-07-24 00:57:00.145526600 -0700
@@ -21,6 +21,24 @@
 /*                                                                        */
 /**************************************************************************/
 
+/*==============================================================================
+  Copyright (c) 2020 Qualcomm Technologies, Inc.
+  All rights reserved. Qualcomm Proprietary and Confidential.
+==============================================================================*/
+/*======================================================================
+ *
+ *                       EDIT HISTORY FOR FILE
+ *
+ *   This section contains comments describing changes made to the
+ *   module. Notice that changes are listed in reverse chronological
+ *   order.
+ *   
+ *
+ *
+ * when         who       what, where, why
+ * ----------   ---       ------------------------------------------------
+ * 2020-07-22    NT       conditionally defining TXM_MODULE
+ ======================================================================*/
 
 /**************************************************************************/
 /**************************************************************************/
@@ -32,7 +50,10 @@
 /**************************************************************************/
 /**************************************************************************/
 
+#ifndef TX_DAM_QC_CUSTOMIZATIONS
 #define TXM_MODULE
+#endif
+
 #include "txm_module.h"
 
 /**************************************************************************/ 
diff -au --ignore-file-name-case orig/txm_thread_performance_info_get.c modified/txm_thread_performance_info_get.c
--- orig/txm_thread_performance_info_get.c	2023-07-24 00:57:00.145526600 -0700
+++ modified/txm_thread_performance_info_get.c	2023-07-24 00:57:00.146519900 -0700
@@ -21,6 +21,24 @@
 /*                                                                        */
 /**************************************************************************/
 
+/*==============================================================================
+  Copyright (c) 2020 Qualcomm Technologies, Inc.
+  All rights reserved. Qualcomm Proprietary and Confidential.
+==============================================================================*/
+/*======================================================================
+ *
+ *                       EDIT HISTORY FOR FILE
+ *
+ *   This section contains comments describing changes made to the
+ *   module. Notice that changes are listed in reverse chronological
+ *   order.
+ *   
+ *
+ *
+ * when         who       what, where, why
+ * ----------   ---       ------------------------------------------------
+ * 2020-07-22    NT       conditionally defining TXM_MODULE
+ ======================================================================*/
 
 /**************************************************************************/
 /**************************************************************************/
@@ -32,7 +50,10 @@
 /**************************************************************************/
 /**************************************************************************/
 
+#ifndef TX_DAM_QC_CUSTOMIZATIONS
 #define TXM_MODULE
+#endif
+
 #include "txm_module.h"
 
 /**************************************************************************/ 
diff -au --ignore-file-name-case orig/txm_thread_performance_system_info_get.c modified/txm_thread_performance_system_info_get.c
--- orig/txm_thread_performance_system_info_get.c	2023-07-24 00:57:00.146519900 -0700
+++ modified/txm_thread_performance_system_info_get.c	2023-07-24 00:57:00.147520700 -0700
@@ -21,6 +21,24 @@
 /*                                                                        */
 /**************************************************************************/
 
+/*==============================================================================
+  Copyright (c) 2020 Qualcomm Technologies, Inc.
+  All rights reserved. Qualcomm Proprietary and Confidential.
+==============================================================================*/
+/*======================================================================
+ *
+ *                       EDIT HISTORY FOR FILE
+ *
+ *   This section contains comments describing changes made to the
+ *   module. Notice that changes are listed in reverse chronological
+ *   order.
+ *   
+ *
+ *
+ * when         who       what, where, why
+ * ----------   ---       ------------------------------------------------
+ * 2020-07-22    NT       conditionally defining TXM_MODULE
+ ======================================================================*/
 
 /**************************************************************************/
 /**************************************************************************/
@@ -32,7 +50,10 @@
 /**************************************************************************/
 /**************************************************************************/
 
+#ifndef TX_DAM_QC_CUSTOMIZATIONS
 #define TXM_MODULE
+#endif
+
 #include "txm_module.h"
 
 /**************************************************************************/ 
diff -au --ignore-file-name-case orig/txm_thread_preemption_change.c modified/txm_thread_preemption_change.c
--- orig/txm_thread_preemption_change.c	2023-07-24 00:57:00.148521600 -0700
+++ modified/txm_thread_preemption_change.c	2023-07-24 00:57:00.148521600 -0700
@@ -21,6 +21,24 @@
 /*                                                                        */
 /**************************************************************************/
 
+/*==============================================================================
+  Copyright (c) 2020 Qualcomm Technologies, Inc.
+  All rights reserved. Qualcomm Proprietary and Confidential.
+==============================================================================*/
+/*======================================================================
+ *
+ *                       EDIT HISTORY FOR FILE
+ *
+ *   This section contains comments describing changes made to the
+ *   module. Notice that changes are listed in reverse chronological
+ *   order.
+ *   
+ *
+ *
+ * when         who       what, where, why
+ * ----------   ---       ------------------------------------------------
+ * 2020-07-22    NT       conditionally defining TXM_MODULE
+ ======================================================================*/
 
 /**************************************************************************/
 /**************************************************************************/
@@ -32,7 +50,10 @@
 /**************************************************************************/
 /**************************************************************************/
 
+#ifndef TX_DAM_QC_CUSTOMIZATIONS
 #define TXM_MODULE
+#endif
+
 #include "txm_module.h"
 
 /**************************************************************************/ 
diff -au --ignore-file-name-case orig/txm_thread_priority_change.c modified/txm_thread_priority_change.c
--- orig/txm_thread_priority_change.c	2023-07-24 00:57:00.149522800 -0700
+++ modified/txm_thread_priority_change.c	2023-07-24 00:57:00.149522800 -0700
@@ -21,6 +21,24 @@
 /*                                                                        */
 /**************************************************************************/
 
+/*==============================================================================
+  Copyright (c) 2020 Qualcomm Technologies, Inc.
+  All rights reserved. Qualcomm Proprietary and Confidential.
+==============================================================================*/
+/*======================================================================
+ *
+ *                       EDIT HISTORY FOR FILE
+ *
+ *   This section contains comments describing changes made to the
+ *   module. Notice that changes are listed in reverse chronological
+ *   order.
+ *   
+ *
+ *
+ * when         who       what, where, why
+ * ----------   ---       ------------------------------------------------
+ * 2020-07-22    NT       conditionally defining TXM_MODULE
+ ======================================================================*/
 
 /**************************************************************************/
 /**************************************************************************/
@@ -32,7 +50,10 @@
 /**************************************************************************/
 /**************************************************************************/
 
+#ifndef TX_DAM_QC_CUSTOMIZATIONS
 #define TXM_MODULE
+#endif
+
 #include "txm_module.h"
 
 /**************************************************************************/ 
diff -au --ignore-file-name-case orig/txm_thread_relinquish.c modified/txm_thread_relinquish.c
--- orig/txm_thread_relinquish.c	2023-07-24 00:57:00.150526400 -0700
+++ modified/txm_thread_relinquish.c	2023-07-24 00:57:00.151526100 -0700
@@ -21,6 +21,24 @@
 /*                                                                        */
 /**************************************************************************/
 
+/*==============================================================================
+  Copyright (c) 2020 Qualcomm Technologies, Inc.
+  All rights reserved. Qualcomm Proprietary and Confidential.
+==============================================================================*/
+/*======================================================================
+ *
+ *                       EDIT HISTORY FOR FILE
+ *
+ *   This section contains comments describing changes made to the
+ *   module. Notice that changes are listed in reverse chronological
+ *   order.
+ *   
+ *
+ *
+ * when         who       what, where, why
+ * ----------   ---       ------------------------------------------------
+ * 2020-07-22    NT       conditionally defining TXM_MODULE
+ ======================================================================*/
 
 /**************************************************************************/
 /**************************************************************************/
@@ -32,7 +50,10 @@
 /**************************************************************************/
 /**************************************************************************/
 
+#ifndef TX_DAM_QC_CUSTOMIZATIONS
 #define TXM_MODULE
+#endif
+
 #include "txm_module.h"
 
 /**************************************************************************/ 
diff -au --ignore-file-name-case orig/txm_thread_reset.c modified/txm_thread_reset.c
--- orig/txm_thread_reset.c	2023-07-24 00:57:00.151526100 -0700
+++ modified/txm_thread_reset.c	2023-07-24 00:57:00.152528400 -0700
@@ -21,6 +21,24 @@
 /*                                                                        */
 /**************************************************************************/
 
+/*==============================================================================
+  Copyright (c) 2020 Qualcomm Technologies, Inc.
+  All rights reserved. Qualcomm Proprietary and Confidential.
+==============================================================================*/
+/*======================================================================
+ *
+ *                       EDIT HISTORY FOR FILE
+ *
+ *   This section contains comments describing changes made to the
+ *   module. Notice that changes are listed in reverse chronological
+ *   order.
+ *   
+ *
+ *
+ * when         who       what, where, why
+ * ----------   ---       ------------------------------------------------
+ * 2020-07-22    NT       conditionally defining TXM_MODULE
+ ======================================================================*/
 
 /**************************************************************************/
 /**************************************************************************/
@@ -32,7 +50,10 @@
 /**************************************************************************/
 /**************************************************************************/
 
+#ifndef TX_DAM_QC_CUSTOMIZATIONS
 #define TXM_MODULE
+#endif
+
 #include "txm_module.h"
 
 /**************************************************************************/ 
diff -au --ignore-file-name-case orig/txm_thread_resume.c modified/txm_thread_resume.c
--- orig/txm_thread_resume.c	2023-07-24 00:57:00.153528200 -0700
+++ modified/txm_thread_resume.c	2023-07-24 00:57:00.153528200 -0700
@@ -21,6 +21,24 @@
 /*                                                                        */
 /**************************************************************************/
 
+/*==============================================================================
+  Copyright (c) 2020 Qualcomm Technologies, Inc.
+  All rights reserved. Qualcomm Proprietary and Confidential.
+==============================================================================*/
+/*======================================================================
+ *
+ *                       EDIT HISTORY FOR FILE
+ *
+ *   This section contains comments describing changes made to the
+ *   module. Notice that changes are listed in reverse chronological
+ *   order.
+ *   
+ *
+ *
+ * when         who       what, where, why
+ * ----------   ---       ------------------------------------------------
+ * 2020-07-22    NT       conditionally defining TXM_MODULE
+ ======================================================================*/
 
 /**************************************************************************/
 /**************************************************************************/
@@ -32,7 +50,10 @@
 /**************************************************************************/
 /**************************************************************************/
 
+#ifndef TX_DAM_QC_CUSTOMIZATIONS
 #define TXM_MODULE
+#endif
+
 #include "txm_module.h"
 
 /**************************************************************************/ 
diff -au --ignore-file-name-case orig/txm_thread_sleep.c modified/txm_thread_sleep.c
--- orig/txm_thread_sleep.c	2023-07-24 00:57:00.154529400 -0700
+++ modified/txm_thread_sleep.c	2023-07-24 00:57:00.155528700 -0700
@@ -21,6 +21,24 @@
 /*                                                                        */
 /**************************************************************************/
 
+/*==============================================================================
+  Copyright (c) 2020 Qualcomm Technologies, Inc.
+  All rights reserved. Qualcomm Proprietary and Confidential.
+==============================================================================*/
+/*======================================================================
+ *
+ *                       EDIT HISTORY FOR FILE
+ *
+ *   This section contains comments describing changes made to the
+ *   module. Notice that changes are listed in reverse chronological
+ *   order.
+ *   
+ *
+ *
+ * when         who       what, where, why
+ * ----------   ---       ------------------------------------------------
+ * 2020-07-22    NT       conditionally defining TXM_MODULE
+ ======================================================================*/
 
 /**************************************************************************/
 /**************************************************************************/
@@ -32,7 +50,10 @@
 /**************************************************************************/
 /**************************************************************************/
 
+#ifndef TX_DAM_QC_CUSTOMIZATIONS
 #define TXM_MODULE
+#endif
+
 #include "txm_module.h"
 
 /**************************************************************************/ 
diff -au --ignore-file-name-case orig/txm_thread_stack_error_notify.c modified/txm_thread_stack_error_notify.c
--- orig/txm_thread_stack_error_notify.c	2023-07-24 00:57:00.156529200 -0700
+++ modified/txm_thread_stack_error_notify.c	2023-07-24 00:57:00.157532400 -0700
@@ -21,6 +21,24 @@
 /*                                                                        */
 /**************************************************************************/
 
+/*==============================================================================
+  Copyright (c) 2020 Qualcomm Technologies, Inc.
+  All rights reserved. Qualcomm Proprietary and Confidential.
+==============================================================================*/
+/*======================================================================
+ *
+ *                       EDIT HISTORY FOR FILE
+ *
+ *   This section contains comments describing changes made to the
+ *   module. Notice that changes are listed in reverse chronological
+ *   order.
+ *   
+ *
+ *
+ * when         who       what, where, why
+ * ----------   ---       ------------------------------------------------
+ * 2020-07-22    NT       conditionally defining TXM_MODULE
+ ======================================================================*/
 
 /**************************************************************************/
 /**************************************************************************/
@@ -32,7 +50,10 @@
 /**************************************************************************/
 /**************************************************************************/
 
+#ifndef TX_DAM_QC_CUSTOMIZATIONS
 #define TXM_MODULE
+#endif
+
 #include "txm_module.h"
 
 /**************************************************************************/ 
diff -au --ignore-file-name-case orig/txm_thread_suspend.c modified/txm_thread_suspend.c
--- orig/txm_thread_suspend.c	2023-07-24 00:57:00.157532400 -0700
+++ modified/txm_thread_suspend.c	2023-07-24 00:57:00.158532100 -0700
@@ -21,6 +21,24 @@
 /*                                                                        */
 /**************************************************************************/
 
+/*==============================================================================
+  Copyright (c) 2020 Qualcomm Technologies, Inc.
+  All rights reserved. Qualcomm Proprietary and Confidential.
+==============================================================================*/
+/*======================================================================
+ *
+ *                       EDIT HISTORY FOR FILE
+ *
+ *   This section contains comments describing changes made to the
+ *   module. Notice that changes are listed in reverse chronological
+ *   order.
+ *   
+ *
+ *
+ * when         who       what, where, why
+ * ----------   ---       ------------------------------------------------
+ * 2020-07-22    NT       conditionally defining TXM_MODULE
+ ======================================================================*/
 
 /**************************************************************************/
 /**************************************************************************/
@@ -32,7 +50,10 @@
 /**************************************************************************/
 /**************************************************************************/
 
+#ifndef TX_DAM_QC_CUSTOMIZATIONS
 #define TXM_MODULE
+#endif
+
 #include "txm_module.h"
 
 /**************************************************************************/ 
diff -au --ignore-file-name-case orig/txm_thread_terminate.c modified/txm_thread_terminate.c
--- orig/txm_thread_terminate.c	2023-07-24 00:57:00.158532100 -0700
+++ modified/txm_thread_terminate.c	2023-07-24 00:57:00.159532200 -0700
@@ -21,6 +21,24 @@
 /*                                                                        */
 /**************************************************************************/
 
+/*==============================================================================
+  Copyright (c) 2020 Qualcomm Technologies, Inc.
+  All rights reserved. Qualcomm Proprietary and Confidential.
+==============================================================================*/
+/*======================================================================
+ *
+ *                       EDIT HISTORY FOR FILE
+ *
+ *   This section contains comments describing changes made to the
+ *   module. Notice that changes are listed in reverse chronological
+ *   order.
+ *   
+ *
+ *
+ * when         who       what, where, why
+ * ----------   ---       ------------------------------------------------
+ * 2020-07-22    NT       conditionally defining TXM_MODULE
+ ======================================================================*/
 
 /**************************************************************************/
 /**************************************************************************/
@@ -32,7 +50,10 @@
 /**************************************************************************/
 /**************************************************************************/
 
+#ifndef TX_DAM_QC_CUSTOMIZATIONS
 #define TXM_MODULE
+#endif
+
 #include "txm_module.h"
 
 /**************************************************************************/ 
diff -au --ignore-file-name-case orig/txm_thread_time_slice_change.c modified/txm_thread_time_slice_change.c
--- orig/txm_thread_time_slice_change.c	2023-07-24 00:57:00.160533000 -0700
+++ modified/txm_thread_time_slice_change.c	2023-07-24 00:57:00.160533000 -0700
@@ -21,6 +21,24 @@
 /*                                                                        */
 /**************************************************************************/
 
+/*==============================================================================
+  Copyright (c) 2020 Qualcomm Technologies, Inc.
+  All rights reserved. Qualcomm Proprietary and Confidential.
+==============================================================================*/
+/*======================================================================
+ *
+ *                       EDIT HISTORY FOR FILE
+ *
+ *   This section contains comments describing changes made to the
+ *   module. Notice that changes are listed in reverse chronological
+ *   order.
+ *   
+ *
+ *
+ * when         who       what, where, why
+ * ----------   ---       ------------------------------------------------
+ * 2020-07-22    NT       conditionally defining TXM_MODULE
+ ======================================================================*/
 
 /**************************************************************************/
 /**************************************************************************/
@@ -32,7 +50,10 @@
 /**************************************************************************/
 /**************************************************************************/
 
+#ifndef TX_DAM_QC_CUSTOMIZATIONS
 #define TXM_MODULE
+#endif
+
 #include "txm_module.h"
 
 /**************************************************************************/ 
diff -au --ignore-file-name-case orig/txm_thread_wait_abort.c modified/txm_thread_wait_abort.c
--- orig/txm_thread_wait_abort.c	2023-07-24 00:57:00.161533900 -0700
+++ modified/txm_thread_wait_abort.c	2023-07-24 00:57:00.161533900 -0700
@@ -21,6 +21,24 @@
 /*                                                                        */
 /**************************************************************************/
 
+/*==============================================================================
+  Copyright (c) 2020 Qualcomm Technologies, Inc.
+  All rights reserved. Qualcomm Proprietary and Confidential.
+==============================================================================*/
+/*======================================================================
+ *
+ *                       EDIT HISTORY FOR FILE
+ *
+ *   This section contains comments describing changes made to the
+ *   module. Notice that changes are listed in reverse chronological
+ *   order.
+ *   
+ *
+ *
+ * when         who       what, where, why
+ * ----------   ---       ------------------------------------------------
+ * 2020-07-22    NT       conditionally defining TXM_MODULE
+ ======================================================================*/
 
 /**************************************************************************/
 /**************************************************************************/
@@ -32,7 +50,10 @@
 /**************************************************************************/
 /**************************************************************************/
 
+#ifndef TX_DAM_QC_CUSTOMIZATIONS
 #define TXM_MODULE
+#endif
+
 #include "txm_module.h"
 
 /**************************************************************************/ 
diff -au --ignore-file-name-case orig/txm_time_get.c modified/txm_time_get.c
--- orig/txm_time_get.c	2023-07-24 00:57:00.162535100 -0700
+++ modified/txm_time_get.c	2023-07-24 00:57:00.163537900 -0700
@@ -21,6 +21,24 @@
 /*                                                                        */
 /**************************************************************************/
 
+/*==============================================================================
+  Copyright (c) 2020 Qualcomm Technologies, Inc.
+  All rights reserved. Qualcomm Proprietary and Confidential.
+==============================================================================*/
+/*======================================================================
+ *
+ *                       EDIT HISTORY FOR FILE
+ *
+ *   This section contains comments describing changes made to the
+ *   module. Notice that changes are listed in reverse chronological
+ *   order.
+ *   
+ *
+ *
+ * when         who       what, where, why
+ * ----------   ---       ------------------------------------------------
+ * 2020-07-22    NT       conditionally defining TXM_MODULE
+ ======================================================================*/
 
 /**************************************************************************/
 /**************************************************************************/
@@ -32,7 +50,10 @@
 /**************************************************************************/
 /**************************************************************************/
 
+#ifndef TX_DAM_QC_CUSTOMIZATIONS
 #define TXM_MODULE
+#endif
+
 #include "txm_module.h"
 
 /**************************************************************************/ 
diff -au --ignore-file-name-case orig/txm_time_set.c modified/txm_time_set.c
--- orig/txm_time_set.c	2023-07-24 00:57:00.163537900 -0700
+++ modified/txm_time_set.c	2023-07-24 00:57:00.164536900 -0700
@@ -21,6 +21,24 @@
 /*                                                                        */
 /**************************************************************************/
 
+/*==============================================================================
+  Copyright (c) 2020 Qualcomm Technologies, Inc.
+  All rights reserved. Qualcomm Proprietary and Confidential.
+==============================================================================*/
+/*======================================================================
+ *
+ *                       EDIT HISTORY FOR FILE
+ *
+ *   This section contains comments describing changes made to the
+ *   module. Notice that changes are listed in reverse chronological
+ *   order.
+ *   
+ *
+ *
+ * when         who       what, where, why
+ * ----------   ---       ------------------------------------------------
+ * 2020-07-22    NT       conditionally defining TXM_MODULE
+ ======================================================================*/
 
 /**************************************************************************/
 /**************************************************************************/
@@ -32,7 +50,10 @@
 /**************************************************************************/
 /**************************************************************************/
 
+#ifndef TX_DAM_QC_CUSTOMIZATIONS
 #define TXM_MODULE
+#endif
+
 #include "txm_module.h"
 
 /**************************************************************************/ 
diff -au --ignore-file-name-case orig/txm_timer_activate.c modified/txm_timer_activate.c
--- orig/txm_timer_activate.c	2023-07-24 00:57:00.164536900 -0700
+++ modified/txm_timer_activate.c	2023-07-24 00:57:00.165537700 -0700
@@ -21,6 +21,24 @@
 /*                                                                        */
 /**************************************************************************/
 
+/*==============================================================================
+  Copyright (c) 2020 Qualcomm Technologies, Inc.
+  All rights reserved. Qualcomm Proprietary and Confidential.
+==============================================================================*/
+/*======================================================================
+ *
+ *                       EDIT HISTORY FOR FILE
+ *
+ *   This section contains comments describing changes made to the
+ *   module. Notice that changes are listed in reverse chronological
+ *   order.
+ *   
+ *
+ *
+ * when         who       what, where, why
+ * ----------   ---       ------------------------------------------------
+ * 2020-07-22    NT       conditionally defining TXM_MODULE
+ ======================================================================*/
 
 /**************************************************************************/
 /**************************************************************************/
@@ -32,7 +50,10 @@
 /**************************************************************************/
 /**************************************************************************/
 
+#ifndef TX_DAM_QC_CUSTOMIZATIONS
 #define TXM_MODULE
+#endif
+
 #include "txm_module.h"
 
 /**************************************************************************/ 
diff -au --ignore-file-name-case orig/txm_timer_change.c modified/txm_timer_change.c
--- orig/txm_timer_change.c	2023-07-24 00:57:00.165537700 -0700
+++ modified/txm_timer_change.c	2023-07-24 00:57:00.166538600 -0700
@@ -21,6 +21,24 @@
 /*                                                                        */
 /**************************************************************************/
 
+/*==============================================================================
+  Copyright (c) 2020 Qualcomm Technologies, Inc.
+  All rights reserved. Qualcomm Proprietary and Confidential.
+==============================================================================*/
+/*======================================================================
+ *
+ *                       EDIT HISTORY FOR FILE
+ *
+ *   This section contains comments describing changes made to the
+ *   module. Notice that changes are listed in reverse chronological
+ *   order.
+ *   
+ *
+ *
+ * when         who       what, where, why
+ * ----------   ---       ------------------------------------------------
+ * 2020-07-22    NT       conditionally defining TXM_MODULE
+ ======================================================================*/
 
 /**************************************************************************/
 /**************************************************************************/
@@ -32,7 +50,10 @@
 /**************************************************************************/
 /**************************************************************************/
 
+#ifndef TX_DAM_QC_CUSTOMIZATIONS
 #define TXM_MODULE
+#endif
+
 #include "txm_module.h"
 
 /**************************************************************************/ 
diff -au --ignore-file-name-case orig/txm_timer_create.c modified/txm_timer_create.c
--- orig/txm_timer_create.c	2023-07-24 00:57:00.166538600 -0700
+++ modified/txm_timer_create.c	2023-07-24 00:57:00.167552300 -0700
@@ -21,6 +21,24 @@
 /*                                                                        */
 /**************************************************************************/
 
+/*==============================================================================
+  Copyright (c) 2020 Qualcomm Technologies, Inc.
+  All rights reserved. Qualcomm Proprietary and Confidential.
+==============================================================================*/
+/*======================================================================
+ *
+ *                       EDIT HISTORY FOR FILE
+ *
+ *   This section contains comments describing changes made to the
+ *   module. Notice that changes are listed in reverse chronological
+ *   order.
+ *   
+ *
+ *
+ * when         who       what, where, why
+ * ----------   ---       ------------------------------------------------
+ * 2020-07-22    NT       conditionally defining TXM_MODULE
+ ======================================================================*/
 
 /**************************************************************************/
 /**************************************************************************/
@@ -32,7 +50,10 @@
 /**************************************************************************/
 /**************************************************************************/
 
+#ifndef TX_DAM_QC_CUSTOMIZATIONS
 #define TXM_MODULE
+#endif
+
 #include "txm_module.h"
 
 /**************************************************************************/ 
diff -au --ignore-file-name-case orig/txm_timer_deactivate.c modified/txm_timer_deactivate.c
--- orig/txm_timer_deactivate.c	2023-07-24 00:57:00.168543000 -0700
+++ modified/txm_timer_deactivate.c	2023-07-24 00:57:00.168543000 -0700
@@ -21,6 +21,24 @@
 /*                                                                        */
 /**************************************************************************/
 
+/*==============================================================================
+  Copyright (c) 2020 Qualcomm Technologies, Inc.
+  All rights reserved. Qualcomm Proprietary and Confidential.
+==============================================================================*/
+/*======================================================================
+ *
+ *                       EDIT HISTORY FOR FILE
+ *
+ *   This section contains comments describing changes made to the
+ *   module. Notice that changes are listed in reverse chronological
+ *   order.
+ *   
+ *
+ *
+ * when         who       what, where, why
+ * ----------   ---       ------------------------------------------------
+ * 2020-07-22    NT       conditionally defining TXM_MODULE
+ ======================================================================*/
 
 /**************************************************************************/
 /**************************************************************************/
@@ -32,7 +50,10 @@
 /**************************************************************************/
 /**************************************************************************/
 
+#ifndef TX_DAM_QC_CUSTOMIZATIONS
 #define TXM_MODULE
+#endif
+
 #include "txm_module.h"
 
 /**************************************************************************/ 
diff -au --ignore-file-name-case orig/txm_timer_delete.c modified/txm_timer_delete.c
--- orig/txm_timer_delete.c	2023-07-24 00:57:00.169541900 -0700
+++ modified/txm_timer_delete.c	2023-07-24 00:57:00.170544700 -0700
@@ -21,6 +21,24 @@
 /*                                                                        */
 /**************************************************************************/
 
+/*==============================================================================
+  Copyright (c) 2020 Qualcomm Technologies, Inc.
+  All rights reserved. Qualcomm Proprietary and Confidential.
+==============================================================================*/
+/*======================================================================
+ *
+ *                       EDIT HISTORY FOR FILE
+ *
+ *   This section contains comments describing changes made to the
+ *   module. Notice that changes are listed in reverse chronological
+ *   order.
+ *   
+ *
+ *
+ * when         who       what, where, why
+ * ----------   ---       ------------------------------------------------
+ * 2020-07-22    NT       conditionally defining TXM_MODULE
+ ======================================================================*/
 
 /**************************************************************************/
 /**************************************************************************/
@@ -32,7 +50,10 @@
 /**************************************************************************/
 /**************************************************************************/
 
+#ifndef TX_DAM_QC_CUSTOMIZATIONS
 #define TXM_MODULE
+#endif
+
 #include "txm_module.h"
 
 /**************************************************************************/ 
diff -au --ignore-file-name-case orig/txm_timer_info_get.c modified/txm_timer_info_get.c
--- orig/txm_timer_info_get.c	2023-07-24 00:57:00.170544700 -0700
+++ modified/txm_timer_info_get.c	2023-07-24 00:57:00.171545500 -0700
@@ -21,6 +21,24 @@
 /*                                                                        */
 /**************************************************************************/
 
+/*==============================================================================
+  Copyright (c) 2020 Qualcomm Technologies, Inc.
+  All rights reserved. Qualcomm Proprietary and Confidential.
+==============================================================================*/
+/*======================================================================
+ *
+ *                       EDIT HISTORY FOR FILE
+ *
+ *   This section contains comments describing changes made to the
+ *   module. Notice that changes are listed in reverse chronological
+ *   order.
+ *   
+ *
+ *
+ * when         who       what, where, why
+ * ----------   ---       ------------------------------------------------
+ * 2020-07-22    NT       conditionally defining TXM_MODULE
+ ======================================================================*/
 
 /**************************************************************************/
 /**************************************************************************/
@@ -32,7 +50,10 @@
 /**************************************************************************/
 /**************************************************************************/
 
+#ifndef TX_DAM_QC_CUSTOMIZATIONS
 #define TXM_MODULE
+#endif
+
 #include "txm_module.h"
 
 /**************************************************************************/ 
diff -au --ignore-file-name-case orig/txm_timer_performance_info_get.c modified/txm_timer_performance_info_get.c
--- orig/txm_timer_performance_info_get.c	2023-07-24 00:57:00.171545500 -0700
+++ modified/txm_timer_performance_info_get.c	2023-07-24 00:57:00.172558500 -0700
@@ -21,6 +21,24 @@
 /*                                                                        */
 /**************************************************************************/
 
+/*==============================================================================
+  Copyright (c) 2020 Qualcomm Technologies, Inc.
+  All rights reserved. Qualcomm Proprietary and Confidential.
+==============================================================================*/
+/*======================================================================
+ *
+ *                       EDIT HISTORY FOR FILE
+ *
+ *   This section contains comments describing changes made to the
+ *   module. Notice that changes are listed in reverse chronological
+ *   order.
+ *   
+ *
+ *
+ * when         who       what, where, why
+ * ----------   ---       ------------------------------------------------
+ * 2020-07-22    NT       conditionally defining TXM_MODULE
+ ======================================================================*/
 
 /**************************************************************************/
 /**************************************************************************/
@@ -32,7 +50,10 @@
 /**************************************************************************/
 /**************************************************************************/
 
+#ifndef TX_DAM_QC_CUSTOMIZATIONS
 #define TXM_MODULE
+#endif
+
 #include "txm_module.h"
 
 /**************************************************************************/ 
diff -au --ignore-file-name-case orig/txm_timer_performance_system_info_get.c modified/txm_timer_performance_system_info_get.c
--- orig/txm_timer_performance_system_info_get.c	2023-07-24 00:57:00.173545700 -0700
+++ modified/txm_timer_performance_system_info_get.c	2023-07-24 00:57:00.173545700 -0700
@@ -21,6 +21,24 @@
 /*                                                                        */
 /**************************************************************************/
 
+/*==============================================================================
+  Copyright (c) 2020 Qualcomm Technologies, Inc.
+  All rights reserved. Qualcomm Proprietary and Confidential.
+==============================================================================*/
+/*======================================================================
+ *
+ *                       EDIT HISTORY FOR FILE
+ *
+ *   This section contains comments describing changes made to the
+ *   module. Notice that changes are listed in reverse chronological
+ *   order.
+ *   
+ *
+ *
+ * when         who       what, where, why
+ * ----------   ---       ------------------------------------------------
+ * 2020-07-22    NT       conditionally defining TXM_MODULE
+ ======================================================================*/
 
 /**************************************************************************/
 /**************************************************************************/
@@ -32,7 +50,10 @@
 /**************************************************************************/
 /**************************************************************************/
 
+#ifndef TX_DAM_QC_CUSTOMIZATIONS
 #define TXM_MODULE
+#endif
+
 #include "txm_module.h"
 
 /**************************************************************************/ 
diff -au --ignore-file-name-case orig/txm_trace_buffer_full_notify.c modified/txm_trace_buffer_full_notify.c
--- orig/txm_trace_buffer_full_notify.c	2023-07-24 00:57:00.174548500 -0700
+++ modified/txm_trace_buffer_full_notify.c	2023-07-24 00:57:00.175549300 -0700
@@ -21,6 +21,24 @@
 /*                                                                        */
 /**************************************************************************/
 
+/*==============================================================================
+  Copyright (c) 2020 Qualcomm Technologies, Inc.
+  All rights reserved. Qualcomm Proprietary and Confidential.
+==============================================================================*/
+/*======================================================================
+ *
+ *                       EDIT HISTORY FOR FILE
+ *
+ *   This section contains comments describing changes made to the
+ *   module. Notice that changes are listed in reverse chronological
+ *   order.
+ *   
+ *
+ *
+ * when         who       what, where, why
+ * ----------   ---       ------------------------------------------------
+ * 2020-07-22    NT       conditionally defining TXM_MODULE
+ ======================================================================*/
 
 /**************************************************************************/
 /**************************************************************************/
@@ -32,7 +50,10 @@
 /**************************************************************************/
 /**************************************************************************/
 
+#ifndef TX_DAM_QC_CUSTOMIZATIONS
 #define TXM_MODULE
+#endif
+
 #include "txm_module.h"
 
 /**************************************************************************/ 
diff -au --ignore-file-name-case orig/txm_trace_disable.c modified/txm_trace_disable.c
--- orig/txm_trace_disable.c	2023-07-24 00:57:00.175549300 -0700
+++ modified/txm_trace_disable.c	2023-07-24 00:57:00.176708000 -0700
@@ -21,6 +21,24 @@
 /*                                                                        */
 /**************************************************************************/
 
+/*==============================================================================
+  Copyright (c) 2020 Qualcomm Technologies, Inc.
+  All rights reserved. Qualcomm Proprietary and Confidential.
+==============================================================================*/
+/*======================================================================
+ *
+ *                       EDIT HISTORY FOR FILE
+ *
+ *   This section contains comments describing changes made to the
+ *   module. Notice that changes are listed in reverse chronological
+ *   order.
+ *   
+ *
+ *
+ * when         who       what, where, why
+ * ----------   ---       ------------------------------------------------
+ * 2020-07-22    NT       conditionally defining TXM_MODULE
+ ======================================================================*/
 
 /**************************************************************************/
 /**************************************************************************/
@@ -32,7 +50,10 @@
 /**************************************************************************/
 /**************************************************************************/
 
+#ifndef TX_DAM_QC_CUSTOMIZATIONS
 #define TXM_MODULE
+#endif
+
 #include "txm_module.h"
 
 /**************************************************************************/ 
diff -au --ignore-file-name-case orig/txm_trace_enable.c modified/txm_trace_enable.c
--- orig/txm_trace_enable.c	2023-07-24 00:57:00.177549200 -0700
+++ modified/txm_trace_enable.c	2023-07-24 00:57:00.177549200 -0700
@@ -21,6 +21,24 @@
 /*                                                                        */
 /**************************************************************************/
 
+/*==============================================================================
+  Copyright (c) 2020 Qualcomm Technologies, Inc.
+  All rights reserved. Qualcomm Proprietary and Confidential.
+==============================================================================*/
+/*======================================================================
+ *
+ *                       EDIT HISTORY FOR FILE
+ *
+ *   This section contains comments describing changes made to the
+ *   module. Notice that changes are listed in reverse chronological
+ *   order.
+ *   
+ *
+ *
+ * when         who       what, where, why
+ * ----------   ---       ------------------------------------------------
+ * 2020-07-22    NT       conditionally defining TXM_MODULE
+ ======================================================================*/
 
 /**************************************************************************/
 /**************************************************************************/
@@ -32,7 +50,10 @@
 /**************************************************************************/
 /**************************************************************************/
 
+#ifndef TX_DAM_QC_CUSTOMIZATIONS
 #define TXM_MODULE
+#endif
+
 #include "txm_module.h"
 
 /**************************************************************************/ 
diff -au --ignore-file-name-case orig/txm_trace_event_filter.c modified/txm_trace_event_filter.c
--- orig/txm_trace_event_filter.c	2023-07-24 00:57:00.178550400 -0700
+++ modified/txm_trace_event_filter.c	2023-07-24 00:57:00.178550400 -0700
@@ -21,6 +21,24 @@
 /*                                                                        */
 /**************************************************************************/
 
+/*==============================================================================
+  Copyright (c) 2020 Qualcomm Technologies, Inc.
+  All rights reserved. Qualcomm Proprietary and Confidential.
+==============================================================================*/
+/*======================================================================
+ *
+ *                       EDIT HISTORY FOR FILE
+ *
+ *   This section contains comments describing changes made to the
+ *   module. Notice that changes are listed in reverse chronological
+ *   order.
+ *   
+ *
+ *
+ * when         who       what, where, why
+ * ----------   ---       ------------------------------------------------
+ * 2020-07-22    NT       conditionally defining TXM_MODULE
+ ======================================================================*/
 
 /**************************************************************************/
 /**************************************************************************/
@@ -32,7 +50,10 @@
 /**************************************************************************/
 /**************************************************************************/
 
+#ifndef TX_DAM_QC_CUSTOMIZATIONS
 #define TXM_MODULE
+#endif
+
 #include "txm_module.h"
 
 /**************************************************************************/ 
diff -au --ignore-file-name-case orig/txm_trace_event_unfilter.c modified/txm_trace_event_unfilter.c
--- orig/txm_trace_event_unfilter.c	2023-07-24 00:57:00.179562600 -0700
+++ modified/txm_trace_event_unfilter.c	2023-07-24 00:57:00.180554000 -0700
@@ -21,6 +21,24 @@
 /*                                                                        */
 /**************************************************************************/
 
+/*==============================================================================
+  Copyright (c) 2020 Qualcomm Technologies, Inc.
+  All rights reserved. Qualcomm Proprietary and Confidential.
+==============================================================================*/
+/*======================================================================
+ *
+ *                       EDIT HISTORY FOR FILE
+ *
+ *   This section contains comments describing changes made to the
+ *   module. Notice that changes are listed in reverse chronological
+ *   order.
+ *   
+ *
+ *
+ * when         who       what, where, why
+ * ----------   ---       ------------------------------------------------
+ * 2020-07-22    NT       conditionally defining TXM_MODULE
+ ======================================================================*/
 
 /**************************************************************************/
 /**************************************************************************/
@@ -32,7 +50,10 @@
 /**************************************************************************/
 /**************************************************************************/
 
+#ifndef TX_DAM_QC_CUSTOMIZATIONS
 #define TXM_MODULE
+#endif
+
 #include "txm_module.h"
 
 /**************************************************************************/ 
diff -au --ignore-file-name-case orig/txm_trace_interrupt_control.c modified/txm_trace_interrupt_control.c
--- orig/txm_trace_interrupt_control.c	2023-07-24 00:57:00.180554000 -0700
+++ modified/txm_trace_interrupt_control.c	2023-07-24 00:57:00.181555300 -0700
@@ -21,6 +21,24 @@
 /*                                                                        */
 /**************************************************************************/
 
+/*==============================================================================
+  Copyright (c) 2020 Qualcomm Technologies, Inc.
+  All rights reserved. Qualcomm Proprietary and Confidential.
+==============================================================================*/
+/*======================================================================
+ *
+ *                       EDIT HISTORY FOR FILE
+ *
+ *   This section contains comments describing changes made to the
+ *   module. Notice that changes are listed in reverse chronological
+ *   order.
+ *   
+ *
+ *
+ * when         who       what, where, why
+ * ----------   ---       ------------------------------------------------
+ * 2020-07-22    NT       conditionally defining TXM_MODULE
+ ======================================================================*/
 
 /**************************************************************************/
 /**************************************************************************/
@@ -32,7 +50,10 @@
 /**************************************************************************/
 /**************************************************************************/
 
+#ifndef TX_DAM_QC_CUSTOMIZATIONS
 #define TXM_MODULE
+#endif
+
 #include "txm_module.h"
 
 /**************************************************************************/ 
diff -au --ignore-file-name-case orig/txm_trace_isr_enter_insert.c modified/txm_trace_isr_enter_insert.c
--- orig/txm_trace_isr_enter_insert.c	2023-07-24 00:57:00.181555300 -0700
+++ modified/txm_trace_isr_enter_insert.c	2023-07-24 00:57:00.182554200 -0700
@@ -21,6 +21,24 @@
 /*                                                                        */
 /**************************************************************************/
 
+/*==============================================================================
+  Copyright (c) 2020 Qualcomm Technologies, Inc.
+  All rights reserved. Qualcomm Proprietary and Confidential.
+==============================================================================*/
+/*======================================================================
+ *
+ *                       EDIT HISTORY FOR FILE
+ *
+ *   This section contains comments describing changes made to the
+ *   module. Notice that changes are listed in reverse chronological
+ *   order.
+ *   
+ *
+ *
+ * when         who       what, where, why
+ * ----------   ---       ------------------------------------------------
+ * 2020-07-22    NT       conditionally defining TXM_MODULE
+ ======================================================================*/
 
 /**************************************************************************/
 /**************************************************************************/
@@ -32,7 +50,10 @@
 /**************************************************************************/
 /**************************************************************************/
 
+#ifndef TX_DAM_QC_CUSTOMIZATIONS
 #define TXM_MODULE
+#endif
+
 #include "txm_module.h"
 
 /**************************************************************************/ 
diff -au --ignore-file-name-case orig/txm_trace_isr_exit_insert.c modified/txm_trace_isr_exit_insert.c
--- orig/txm_trace_isr_exit_insert.c	2023-07-24 00:57:00.183557000 -0700
+++ modified/txm_trace_isr_exit_insert.c	2023-07-24 00:57:00.183557000 -0700
@@ -21,6 +21,24 @@
 /*                                                                        */
 /**************************************************************************/
 
+/*==============================================================================
+  Copyright (c) 2020 Qualcomm Technologies, Inc.
+  All rights reserved. Qualcomm Proprietary and Confidential.
+==============================================================================*/
+/*======================================================================
+ *
+ *                       EDIT HISTORY FOR FILE
+ *
+ *   This section contains comments describing changes made to the
+ *   module. Notice that changes are listed in reverse chronological
+ *   order.
+ *   
+ *
+ *
+ * when         who       what, where, why
+ * ----------   ---       ------------------------------------------------
+ * 2020-07-22    NT       conditionally defining TXM_MODULE
+ ======================================================================*/
 
 /**************************************************************************/
 /**************************************************************************/
@@ -32,7 +50,10 @@
 /**************************************************************************/
 /**************************************************************************/
 
+#ifndef TX_DAM_QC_CUSTOMIZATIONS
 #define TXM_MODULE
+#endif
+
 #include "txm_module.h"
 
 /**************************************************************************/ 
diff -au --ignore-file-name-case orig/txm_trace_user_event_insert.c modified/txm_trace_user_event_insert.c
--- orig/txm_trace_user_event_insert.c	2023-07-24 00:57:00.184557800 -0700
+++ modified/txm_trace_user_event_insert.c	2023-07-24 00:57:00.184557800 -0700
@@ -21,6 +21,24 @@
 /*                                                                        */
 /**************************************************************************/
 
+/*==============================================================================
+  Copyright (c) 2020 Qualcomm Technologies, Inc.
+  All rights reserved. Qualcomm Proprietary and Confidential.
+==============================================================================*/
+/*======================================================================
+ *
+ *                       EDIT HISTORY FOR FILE
+ *
+ *   This section contains comments describing changes made to the
+ *   module. Notice that changes are listed in reverse chronological
+ *   order.
+ *   
+ *
+ *
+ * when         who       what, where, why
+ * ----------   ---       ------------------------------------------------
+ * 2020-07-22    NT       conditionally defining TXM_MODULE
+ ======================================================================*/
 
 /**************************************************************************/
 /**************************************************************************/
@@ -32,7 +50,10 @@
 /**************************************************************************/
 /**************************************************************************/
 
+#ifndef TX_DAM_QC_CUSTOMIZATIONS
 #define TXM_MODULE
+#endif
+
 #include "txm_module.h"
 
 /**************************************************************************/ 
