#===============================================================================
#                    Copyright 2011,2022 Qualcomm Technologies Incorporated.
#                           All Rights Reserved.
#            Confidential and Proprietary - Qualcomm Technologies, Inc.
#===============================================================================
# THREADX Libs
#-------------------------------------------------------------------------------
import os
Import('env')
env = env.Clone()

#-------------------------------------------------------------------------------
# Source PATH
#-------------------------------------------------------------------------------
SRCPATH = "${BUILD_ROOT}/core/kernel/rtos/threadx"

env.VariantDir('${BUILDPATH}', SRCPATH, duplicate=0)

env.Append(CPPDEFINES = [
   "FX_FILEX_PRESENT",
   "TX_ENABLE_IRQ_NESTING",
   "TX_ENABLE_PROFILING",
   "TX_DISABLE_NOTIFY_CALLBACKS",
   "TX_DAM_QC_CUSTOMIZATIONS",
   "TX3_CHANGES",
   "TXM_ENABLE_LAST_THREAD_INFO=1",

   ])
   
if 'USES_TX_KERNEL_TRACE' in env:
   env.Append(CPPDEFINES = [
	 "TX_ENABLE_EVENT_TRACE"
   ])

if 'USES_LLDB_ENABLE' in env:
	env.Append(CPPDEFINES = [
	"LLDB_FEATURE_ENABLED",
	])   
#-------------------------------------------------------------------------------
# Internal depends within CoreBSP
#-------------------------------------------------------------------------------
CBSP_API = [
   'SERVICES',
   'STORAGE',
   'KERNEL',
]

env.RequirePublicApi(CBSP_API)
env.RequireRestrictedApi(CBSP_API)

#-------------------------------------------------------------------------------
# Sources, librarie
#-------------------------------------------------------------------------------
THREADX_LIB_SOURCES =  [
   '${BUILDPATH}/src/cstartup.S',
   '${BUILDPATH}/src/tx_initialize_low_level.S',
   '${BUILDPATH}/src/tx_thread_context_restore.S',
   '${BUILDPATH}/src/tx_thread_context_save.S',
   '${BUILDPATH}/src/tx_thread_fiq_context_restore.S',
   '${BUILDPATH}/src/tx_thread_fiq_context_save.S',
   '${BUILDPATH}/src/tx_thread_fiq_nesting_end.S',
   '${BUILDPATH}/src/tx_thread_fiq_nesting_start.S',
   '${BUILDPATH}/src/tx_thread_interrupt_control.S',
   '${BUILDPATH}/src/tx_thread_interrupt_disable.S',
   '${BUILDPATH}/src/tx_thread_interrupt_restore.S',
   '${BUILDPATH}/src/tx_thread_irq_nesting_end.S',
   '${BUILDPATH}/src/tx_thread_irq_nesting_start.S',
   '${BUILDPATH}/src/tx_thread_schedule.S',
   '${BUILDPATH}/src/tx_thread_stack_build.S',
   '${BUILDPATH}/src/tx_thread_system_return.S',
   '${BUILDPATH}/src/tx_thread_vectored_context_save.S',
   '${BUILDPATH}/src/tx_timer_interrupt.S',
   '${BUILDPATH}/src/tx_block_allocate.c',
   '${BUILDPATH}/src/tx_block_pool_cleanup.c',
   '${BUILDPATH}/src/tx_block_pool_create.c',
   '${BUILDPATH}/src/tx_block_pool_delete.c',
   '${BUILDPATH}/src/tx_block_pool_info_get.c',
   '${BUILDPATH}/src/tx_block_pool_initialize.c',
   '${BUILDPATH}/src/tx_block_pool_performance_info_get.c',
   '${BUILDPATH}/src/tx_block_pool_performance_system_info_get.c',
   '${BUILDPATH}/src/tx_block_pool_prioritize.c',
   '${BUILDPATH}/src/tx_block_release.c',
   '${BUILDPATH}/src/tx_byte_allocate.c',
   '${BUILDPATH}/src/tx_byte_pool_cleanup.c',
   '${BUILDPATH}/src/tx_byte_pool_create.c',
   '${BUILDPATH}/src/tx_byte_pool_delete.c',
   '${BUILDPATH}/src/tx_byte_pool_info_get.c',
   '${BUILDPATH}/src/tx_byte_pool_initialize.c',
   '${BUILDPATH}/src/tx_byte_pool_performance_info_get.c',
   '${BUILDPATH}/src/tx_byte_pool_performance_system_info_get.c',
   '${BUILDPATH}/src/tx_byte_pool_prioritize.c',
   '${BUILDPATH}/src/tx_byte_pool_search.c',
   '${BUILDPATH}/src/tx_byte_release.c',
   '${BUILDPATH}/src/tx_event_flags_cleanup.c',
   '${BUILDPATH}/src/tx_event_flags_create.c',
   '${BUILDPATH}/src/tx_event_flags_delete.c',
   '${BUILDPATH}/src/tx_event_flags_get.c',
   '${BUILDPATH}/src/tx_event_flags_info_get.c',
   '${BUILDPATH}/src/tx_event_flags_initialize.c',
   '${BUILDPATH}/src/tx_event_flags_performance_info_get.c',
   '${BUILDPATH}/src/tx_event_flags_performance_system_info_get.c',
   '${BUILDPATH}/src/tx_event_flags_set.c',
   '${BUILDPATH}/src/tx_event_flags_set_notify.c',
   '${BUILDPATH}/src/tx_initialize_high_level.c',
   '${BUILDPATH}/src/tx_initialize_kernel_enter.c',
   '${BUILDPATH}/src/tx_initialize_kernel_setup.c',
   '${BUILDPATH}/src/tx_mutex_cleanup.c',
   '${BUILDPATH}/src/tx_mutex_create.c',
   '${BUILDPATH}/src/tx_mutex_delete.c',
   '${BUILDPATH}/src/tx_mutex_get.c',
   '${BUILDPATH}/src/tx_mutex_info_get.c',
   '${BUILDPATH}/src/tx_mutex_initialize.c',
   '${BUILDPATH}/src/tx_mutex_performance_info_get.c',
   '${BUILDPATH}/src/tx_mutex_performance_system_info_get.c',
   '${BUILDPATH}/src/tx_mutex_prioritize.c',
   '${BUILDPATH}/src/tx_mutex_priority_change.c',
   '${BUILDPATH}/src/tx_mutex_put.c',
   '${BUILDPATH}/src/tx_queue_cleanup.c',
   '${BUILDPATH}/src/tx_queue_create.c',
   '${BUILDPATH}/src/tx_queue_delete.c',
   '${BUILDPATH}/src/tx_queue_flush.c',
   '${BUILDPATH}/src/tx_queue_front_send.c',
   '${BUILDPATH}/src/tx_queue_info_get.c',
   '${BUILDPATH}/src/tx_queue_initialize.c',
   '${BUILDPATH}/src/tx_queue_performance_info_get.c',
   '${BUILDPATH}/src/tx_queue_performance_system_info_get.c',
   '${BUILDPATH}/src/tx_queue_prioritize.c',
   '${BUILDPATH}/src/tx_queue_receive.c',
   '${BUILDPATH}/src/tx_queue_send.c',
   '${BUILDPATH}/src/tx_queue_send_notify.c',
   '${BUILDPATH}/src/tx_semaphore_ceiling_put.c',
   '${BUILDPATH}/src/tx_semaphore_cleanup.c',
   '${BUILDPATH}/src/tx_semaphore_create.c',
   '${BUILDPATH}/src/tx_semaphore_delete.c',
   '${BUILDPATH}/src/tx_semaphore_get.c',
   '${BUILDPATH}/src/tx_semaphore_info_get.c',
   '${BUILDPATH}/src/tx_semaphore_initialize.c',
   '${BUILDPATH}/src/tx_semaphore_performance_info_get.c',
   '${BUILDPATH}/src/tx_semaphore_performance_system_info_get.c',
   '${BUILDPATH}/src/tx_semaphore_prioritize.c',
   '${BUILDPATH}/src/tx_semaphore_put.c',
   '${BUILDPATH}/src/tx_semaphore_put_notify.c',
   '${BUILDPATH}/src/tx_thread_create.c',
   '${BUILDPATH}/src/tx_thread_delete.c',
   '${BUILDPATH}/src/tx_thread_entry_exit_notify.c',
   '${BUILDPATH}/src/tx_thread_identify.c',
   '${BUILDPATH}/src/tx_thread_info_get.c',
   '${BUILDPATH}/src/tx_thread_initialize.c',
   '${BUILDPATH}/src/tx_thread_performance_info_get.c',
   '${BUILDPATH}/src/tx_thread_performance_system_info_get.c',
   '${BUILDPATH}/src/tx_thread_preemption_change.c',
   '${BUILDPATH}/src/tx_thread_priority_change.c',
   '${BUILDPATH}/src/tx_thread_relinquish.c',
   '${BUILDPATH}/src/tx_thread_reset.c',
   '${BUILDPATH}/src/tx_thread_resume.c',
   '${BUILDPATH}/src/tx_thread_shell_entry.c',
   '${BUILDPATH}/src/tx_thread_sleep.c',
   '${BUILDPATH}/src/tx_thread_stack_analyze.c',
   '${BUILDPATH}/src/tx_thread_stack_error_handler.c',
   '${BUILDPATH}/src/tx_thread_stack_error_notify.c',
   '${BUILDPATH}/src/tx_thread_suspend.c',
   '${BUILDPATH}/src/tx_thread_system_preempt_check.c',
   '${BUILDPATH}/src/tx_thread_system_resume.c',
   '${BUILDPATH}/src/tx_thread_system_suspend.c',
   '${BUILDPATH}/src/tx_thread_terminate.c',
   '${BUILDPATH}/src/tx_thread_time_slice.c',
   '${BUILDPATH}/src/tx_thread_time_slice_change.c',
   '${BUILDPATH}/src/tx_thread_timeout.c',
   '${BUILDPATH}/src/tx_thread_wait_abort.c',
   '${BUILDPATH}/src/tx_time_get.c',
   '${BUILDPATH}/src/tx_time_set.c',
   '${BUILDPATH}/src/tx_timer_activate.c',
   '${BUILDPATH}/src/tx_timer_change.c',
   '${BUILDPATH}/src/tx_timer_create.c',
   '${BUILDPATH}/src/tx_timer_deactivate.c',
   '${BUILDPATH}/src/tx_timer_delete.c',
   '${BUILDPATH}/src/tx_timer_expiration_process.c',
   '${BUILDPATH}/src/tx_timer_info_get.c',
   '${BUILDPATH}/src/tx_timer_initialize.c',
   '${BUILDPATH}/src/tx_timer_performance_info_get.c',
   '${BUILDPATH}/src/tx_timer_performance_system_info_get.c',
   '${BUILDPATH}/src/tx_timer_system_activate.c',
   '${BUILDPATH}/src/tx_timer_system_deactivate.c',
   '${BUILDPATH}/src/tx_timer_thread_entry.c',
   '${BUILDPATH}/src/tx_trace_buffer_full_notify.c',
   '${BUILDPATH}/src/tx_trace_enable.c',
   '${BUILDPATH}/src/tx_trace_event_filter.c',
   '${BUILDPATH}/src/tx_trace_event_unfilter.c',
   '${BUILDPATH}/src/tx_trace_disable.c',
   '${BUILDPATH}/src/tx_trace_initialize.c',
   '${BUILDPATH}/src/tx_trace_interrupt_control.c',
   '${BUILDPATH}/src/tx_trace_isr_enter_insert.c',
   '${BUILDPATH}/src/tx_trace_isr_exit_insert.c',
   '${BUILDPATH}/src/tx_trace_object_register.c',
   '${BUILDPATH}/src/tx_trace_object_unregister.c',
   '${BUILDPATH}/src/tx_trace_user_event_insert.c',
   '${BUILDPATH}/src/txe_block_allocate.c',
   '${BUILDPATH}/src/txe_block_pool_create.c',
   '${BUILDPATH}/src/txe_block_pool_delete.c',
   '${BUILDPATH}/src/txe_block_pool_info_get.c',
   '${BUILDPATH}/src/txe_block_pool_prioritize.c',
   '${BUILDPATH}/src/txe_block_release.c',
   '${BUILDPATH}/src/txe_byte_allocate.c',
   '${BUILDPATH}/src/txe_byte_pool_create.c',
   '${BUILDPATH}/src/txe_byte_pool_delete.c',
   '${BUILDPATH}/src/txe_byte_pool_info_get.c',
   '${BUILDPATH}/src/txe_byte_pool_prioritize.c',
   '${BUILDPATH}/src/txe_byte_release.c',
   '${BUILDPATH}/src/txe_event_flags_create.c',
   '${BUILDPATH}/src/txe_event_flags_delete.c',
   '${BUILDPATH}/src/txe_event_flags_get.c',
   '${BUILDPATH}/src/txe_event_flags_info_get.c',
   '${BUILDPATH}/src/txe_event_flags_set.c',
   '${BUILDPATH}/src/txe_event_flags_set_notify.c',
   '${BUILDPATH}/src/txe_mutex_create.c',
   '${BUILDPATH}/src/txe_mutex_delete.c',
   '${BUILDPATH}/src/txe_mutex_get.c',
   '${BUILDPATH}/src/txe_mutex_info_get.c',
   '${BUILDPATH}/src/txe_mutex_prioritize.c',
   '${BUILDPATH}/src/txe_mutex_put.c',
   '${BUILDPATH}/src/txe_queue_create.c',
   '${BUILDPATH}/src/txe_queue_delete.c',
   '${BUILDPATH}/src/txe_queue_flush.c',
   '${BUILDPATH}/src/txe_queue_front_send.c',
   '${BUILDPATH}/src/txe_queue_info_get.c',
   '${BUILDPATH}/src/txe_queue_prioritize.c',
   '${BUILDPATH}/src/txe_queue_receive.c',
   '${BUILDPATH}/src/txe_queue_send.c',
   '${BUILDPATH}/src/txe_queue_send_notify.c',
   '${BUILDPATH}/src/txe_semaphore_ceiling_put.c',
   '${BUILDPATH}/src/txe_semaphore_create.c',
   '${BUILDPATH}/src/txe_semaphore_delete.c',
   '${BUILDPATH}/src/txe_semaphore_get.c',
   '${BUILDPATH}/src/txe_semaphore_info_get.c',
   '${BUILDPATH}/src/txe_semaphore_prioritize.c',
   '${BUILDPATH}/src/txe_semaphore_put.c',
   '${BUILDPATH}/src/txe_semaphore_put_notify.c',
   '${BUILDPATH}/src/txe_thread_create.c',
   '${BUILDPATH}/src/txe_thread_delete.c',
   '${BUILDPATH}/src/txe_thread_entry_exit_notify.c',
   '${BUILDPATH}/src/txe_thread_info_get.c',
   '${BUILDPATH}/src/txe_thread_preemption_change.c',
   '${BUILDPATH}/src/txe_thread_priority_change.c',
   '${BUILDPATH}/src/txe_thread_relinquish.c',
   '${BUILDPATH}/src/txe_thread_reset.c',
   '${BUILDPATH}/src/txe_thread_resume.c',
   '${BUILDPATH}/src/txe_thread_suspend.c',
   '${BUILDPATH}/src/txe_thread_terminate.c',
   '${BUILDPATH}/src/txe_thread_time_slice_change.c',
   '${BUILDPATH}/src/txe_thread_wait_abort.c',
   '${BUILDPATH}/src/txe_timer_activate.c',
   '${BUILDPATH}/src/txe_timer_change.c',
   '${BUILDPATH}/src/txe_timer_create.c',
   '${BUILDPATH}/src/txe_timer_deactivate.c',
   '${BUILDPATH}/src/txe_timer_delete.c',
   '${BUILDPATH}/src/txe_timer_info_get.c',
   '${BUILDPATH}/src/tx_low_power.c',
]

IMAGES = ['MODEM_IMAGE', 'CBSP_MODEM_IMAGE', 'APPS_IMAGE', 'CBSP_APPS_IMAGE', 
     'SINGLE_IMAGE', 'CBSP_SINGLE_IMAGE', 'QDSP6_SW_IMAGE', 'CBSP_QDSP6_SW_IMAGE']
     
env.AddBinaryLibrary(IMAGES,'${BUILDPATH}/threadx',THREADX_LIB_SOURCES )

env.LoadSoftwareUnits()

os.system("python ../../patch/scripts/build_coreTx_patch.py ../../patch/scripts/")

