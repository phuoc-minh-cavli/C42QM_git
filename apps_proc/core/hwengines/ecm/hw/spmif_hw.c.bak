#include "msmhwiobase.h"
#include "HALhwio.h"
#include "spmif_hw.h"
#include "spmif_hwio.h"
#include "spmif_cfgdata.h"

void spmif_hw_init(void)
{
	HWIO_OUTF(SPMI_FETCHER_CONFIG, PMIC_SLAVE_ID, SPMIF_PMIC_SLAVE_ID);
	HWIO_OUT(SPMI_FETCHER_POLLGAP_TIME, POLLGAP_TIME);
	HWIO_OUT(SPMI_FETCHER_READGAP_TIME, READGAP_TIME);
	//HWIO_OUT(SPMI_FETCHER_PMICARB_CHNL_BASE,(HWIO_PMIC_ARBq_CHNLn_CMD_ADDR(5,0) & 0x0fffffff));
	HWIO_OUT(SPMI_FETCHER_PMICARB_CHNL_BASE,0x242D000);
	HWIO_OUT(SPMI_FETCHER_ECMFIFO_DATA_CTRL, (ECMFIFO_DATA_ADDR & 0xFF));
	HWIO_OUT(SPMI_FETCHER_ECMFIFO_STATUS_CTRL, (ECMFIFO_STS_ADDR & 0xFF));

        // TODO: this config needs to go into PMIC Arb. driver in TZ
        HWIO_OUTFI2(PMIC_ARBq_CHNLn_CONFIG, 5, 0, IRQ_EN, 0x1);
        HWIO_OUTFI2(PMIC_ARBq_CHNLn_CONFIG, 5, 1, IRQ_EN, 0x1);
        HWIO_OUTFI2(PMIC_ARBq_CHNLn_CONFIG, 5, 2, IRQ_EN, 0x1);
        HWIO_OUTFI2(PMIC_ARBq_CHNLn_CONFIG, 5, 3, IRQ_EN, 0x1);
        HWIO_OUTFI2(PMIC_ARBq_CHNLn_CONFIG, 5, 4, IRQ_EN, 0x1);
        HWIO_OUTFI2(PMIC_ARBq_CHNLn_CONFIG, 5, 5, IRQ_EN, 0x1);
        HWIO_OUTF(PMIC_ARB_MISC_CONFIG, DONE_IRQ_EN, 0x1);
        //HWIO_OUTFI(PMIC_ARB_CHNLn_CONFIG, 5, IRQ_EN, 0x1);
}
void spmif_hw_start(enum spmif_hw_opmode mode)
{
     HWIO_OUTF(SPMI_FETCHER_CONFIG, MODE, mode);
	 if (mode == SPMIF_HW_STREAMING) {

		//HWIO_OUT(SPMI_FETCHER_READGAP_TIME,1);
		//HWIO_OUT(SPMI_FETCHER_POLLGAP_TIME,1);
		HWIO_OUTF(SPMI_FETCHER_EOT_LENGTH_CTRL, EOT_LENGTH, EOT_LEN);
		HWIO_OUTF(SPMI_FETCHER_EOT_LENGTH_CTRL, EOT_DISABLE, 0 );
	 }
	 
	 HWIO_OUTF(SPMI_FETCHER_CMD, ECM_START, 1);
}
void spmif_hw_stop(void)
{
    if (HWIO_INF(SPMI_FETCHER_STATUS, BUSY)) {
		HWIO_OUTF(SPMI_FETCHER_CMD, ECM_STOP, 1);
	}
}

