#===============================================================================
#
# Diag lib scons script for threadx qapi dam user space
#
# GENERAL DESCRIPTION
#    build script
#
# Copyright (c) 2017-2018 by QUALCOMM Technologies, Inc. All Rights Reserved.
#
#-------------------------------------------------------------------------------
#                      EDIT HISTORY FOR FILE
#
#  $Header: //components/rel/core.tx/6.0/services/diag/build/diag_qapi.scons#2 $
#  $DateTime: 2021/03/18 05:50:42 $
#                      
#  This section contains comments describing changes made to the module.
#  Notice that changes are listed in reverse chronological order.
#
# when       who     what, where, why
# --------   ---     ---------------------------------------------------------
# 02/26/18   gn      Generate diag_dam_lib during LLVM compilation to diag/build/LLVM folder
# 11/30/17   gn      Changes to support LLVM compiler for DAM modules
# 09/04/17   gn      Created file
#===============================================================================
Import('env')
env = env.Clone()

env.RequirePublicApi('KERNEL', area='core')
env.RequirePublicApi('SERVICES')
env.RequirePublicApi('QAPI')

if 'USES_ARM' in env:
	env.Append(CCFLAGS = " --arm_only --apcs=/interwork ")
	env.Append(ASMFLAGS = " --arm_only --apcs=/interwork ")
else:
    env.Append(CCFLAGS = "-mno-thumb ")
    env.Append(ASMFLAGS = "-mno-thumb ")
	
SRCPATH = '${BUILD_ROOT}/core/services/diag'
env.VariantDir('${BUILDPATH}', SRCPATH, duplicate=0)

DIAG_DAM_LIB_SOURCES = [
	'${BUILDPATH}/LSM/qapi/src/qapi_diag_user.c',
]

if 'USES_ARM' in env:
    env.AddBinaryLibrary(['TXM_MODULES'],'${BUILD_ROOT}/core/services/diag/build/diag_dam_lib',DIAG_DAM_LIB_SOURCES)
else:
    env.AddBinaryLibrary(['TXM_MODULES_LLVM'],'${BUILD_ROOT}/core/services/diag/build/LLVM/diag_dam_lib',DIAG_DAM_LIB_SOURCES)
	
#-------------------------------------------------------------------------------
# Load the rest of the software units
#-------------------------------------------------------------------------------
#env.LoadSoftwareUnits()

