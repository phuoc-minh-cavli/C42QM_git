#===============================================================================
#
# Utils Libs
#
# GENERAL DESCRIPTION
#    build script
#
# Copyright (c) 2009-2012, 2019 by QUALCOMM, Incorporated.
# All Rights Reserved.
# QUALCOMM Proprietary/GTDR
#
#-------------------------------------------------------------------------------
#
#  $Header: //source/qcom/qct/core/bsp/config/mdm9x00/main/latest/services/utils/build/SConscript#1 $
#  $DateTime: 2009/08/03 19:02:03 $
#  $Author: wduembeg $
#  $Change: 986488 $
#                      EDIT HISTORY FOR FILE
#
#  This section contains comments describing changes made to the module.
#  Notice that changes are listed in reverse chronological order.
#
# when       who     what, where, why
# 011/05/12  rks     memheap2 
# --------   ---     ---------------------------------------------------------
#
#===============================================================================
Import('env')
env = env.Clone()

#-------------------------------------------------------------------------------
# Source PATH
#-------------------------------------------------------------------------------
SRCPATH = "${BUILD_ROOT}/core/services/utils/src"

env.VariantDir('${BUILDPATH}', SRCPATH, duplicate=0)

#-------------------------------------------------------------------------------
# External depends outside CoreBSP
#-------------------------------------------------------------------------------
env.RequireExternalApi([
   'DSM',
   'BREW',
   'CS',
   'MODEM_PMIC',
   'MULTIMEDIA_DISPLAY',
])

#-------------------------------------------------------------------------------
# Internal depends within CoreBSP
#-------------------------------------------------------------------------------
CBSP_API = [
   'BOOT',
   'BUSES',
   'DAL',
   'DEBUGTOOLS',
   'HAL',
   'MPROC',
   'SERVICES',
   'STORAGE',
   'SYSTEMDRIVERS',
   'WIREDCONNECTIVITY',
   'SECUREMSM',
   'PRODUCTS_SCM',
   # needs to be last also contains wrong comdef.h
   'KERNEL',
]

env.RequirePublicApi(CBSP_API)
env.RequireRestrictedApi(CBSP_API)

env.PublishPrivateApi('SERVICES_UTILS', "${INC_ROOT}/core/services/utils/src")


#-------------------------------------------------------------------------------
# Features to be enabled
#-------------------------------------------------------------------------------
#env.Append(CPPDEFINES=["FEATURE_MEM_DEBUG"])
#env.Append(CPPDEFINES=["FEATURE_SET_RAN_SEED"])
#env.Append(CPPDEFINES=["FEATURE_UTILS_ENABLE_AMSS_MALLOC_INIT"])

#-------------------------------------------------------------------------------
# Sources, libraries
#-------------------------------------------------------------------------------

#   '${BUILDPATH}/amssheap.c',
#   '${BUILDPATH}/pmem_7500.c',

UTILS_SOURCES = [
   '${BUILDPATH}/bit.c',
   '${BUILDPATH}/cmd.c',
   '${BUILDPATH}/crc.c',
   '${BUILDPATH}/intconv.c',
   '${BUILDPATH}/list.c',
   '${BUILDPATH}/md5c.c',
   '${BUILDPATH}/memheap.c', 
   '${BUILDPATH}/misc.c',
   '${BUILDPATH}/queue.c',
   '${BUILDPATH}/qw.c',
]



if 'USES_MEMHEAP2' in env:
   UTILS_HEAP_SOURCES = [
      '${BUILDPATH}/amssheap.c',
      '${BUILDPATH}/amssheap_debug.c',
   ]
else:
   UTILS_HEAP_SOURCES = []


UTILS_QDSP6_SOURCES = [
   '${BUILDPATH}/qmalloc.c'
]

UTILS_UMTS_SOURCES = [
   '${BUILDPATH}/sys_eplmn_list.c'
]

UTILS_APPS_THINUI_SOURCES = [
   '${BUILDPATH}/stubs_thin_ui.c'
]

UTILS_CPP_SOURCES = [
   '${BUILDPATH}/memutils.cpp'
]

UTILS_A_SOURCES = [
   '${BUILDPATH}/miscasm.s'
]

TOOLS_SOURCES =[
   '${BUILDPATH}/crc.c',
]

utils_obj = env.Object([UTILS_SOURCES, UTILS_CPP_SOURCES, UTILS_A_SOURCES, UTILS_HEAP_SOURCES])

utils_qdsp6 = env.Object([UTILS_SOURCES, UTILS_CPP_SOURCES, UTILS_QDSP6_SOURCES])

utils_lib = env.Library('${BUILDPATH}/utils', [utils_obj])
utils_umts = env.Library('${BUILDPATH}/utils_umts', UTILS_UMTS_SOURCES)
utils_thinui_objs = env.Object(UTILS_APPS_THINUI_SOURCES)

utils_tools_objs = env.Object(TOOLS_SOURCES)

#-------------------------------------------------------------------------------
# Add Libraries to image
#-------------------------------------------------------------------------------

env.AddLibsToImage(['MODEM_IMAGE', 'CBSP_MODEM_IMAGE'],
   utils_obj)

env.AddLibsToImage(['APPS_IMAGE', 'CBSP_APPS_IMAGE'],
   utils_obj)

env.AddLibsToImage(['NAND_TOOLS_IMAGE', 'NAND_TOOLS_EXE', 'HOSTDL_IMAGE', 'EHOSTDL_IMAGE',
   'NAND_UTILS_IMAGE', 'OSBL_BOOT_IMAGE', 'APPSBL_BOOT_IMAGE'], 
   utils_tools_objs)

env.AddLibsToImage(['QDSP6_SW_IMAGE', 'CBSP_QDSP6_SW_IMAGE'],
   [utils_qdsp6, utils_thinui_objs])
   
