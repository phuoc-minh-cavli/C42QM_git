#===============================================================================
#
# SECUREMSM Libs
#
# GENERAL DESCRIPTION
#    build script
#
# Copyright (c) 2009-2009 by QUALCOMM, Incorporated.
# All Rights Reserved.
# QUALCOMM Proprietary/GTDR
#
#-------------------------------------------------------------------------------
#
#  $Header: //components/rel/core.tx/6.0/securemsm/cryptodrivers/build/SConscript#1 $
#  $DateTime: 2020/01/30 22:49:35 $
#  $Author: pwbldsvc $
#  $Change: 22400605 $
#                      EDIT HISTORY FOR FILE
#
#  This section contains comments describing changes made to the module.
#  Notice that changes are listed in reverse chronological order.
#
# when       who     what, where, why
# --------   ---     ---------------------------------------------------------
# 12/22/11   nk      Added scon fork based on chipset. 
#===============================================================================
Import('env')

env = env.Clone()

CLEAN_SOURCES = env.FindFiles("*.h", "${BUILD_ROOT}/core/securemsm/cryptodrivers/ce/environment/")

env.CleanPack(['MODEM_IMAGE', 'CBSP_MODEM_IMAGE', 
               'APPS_IMAGE', 'CBSP_APPS_IMAGE',
               'QDSP6_SW_IMAGE', 'CBSP_QDSP6_SW_IMAGE', 
               'SINGLE_IMAGE', 'CBSP_SINGLE_IMAGE', 
               'WCN_IMAGE'], CLEAN_SOURCES)

CLEAN_SOURCES = env.FindFiles("*", "${BUILD_ROOT}/core/securemsm/cryptodrivers/ce/test")

env.CleanPack(['MODEM_IMAGE', 'CBSP_MODEM_IMAGE', 
               'APPS_IMAGE', 'CBSP_APPS_IMAGE',
               'QDSP6_SW_IMAGE', 'CBSP_QDSP6_SW_IMAGE', 
               'SINGLE_IMAGE', 'CBSP_SINGLE_IMAGE', 
               'WCN_IMAGE'], CLEAN_SOURCES)

CLEAN_SOURCES = env.FindFiles("*.h", "${BUILD_ROOT}/core/securemsm/cryptodrivers/prng/environment/")

env.CleanPack(['MODEM_IMAGE', 'CBSP_MODEM_IMAGE', 
               'APPS_IMAGE', 'CBSP_APPS_IMAGE',
               'QDSP6_SW_IMAGE', 'CBSP_QDSP6_SW_IMAGE', 
               'SINGLE_IMAGE', 'CBSP_SINGLE_IMAGE', 
               'WCN_IMAGE'], CLEAN_SOURCES)

CLEAN_SOURCES = env.FindFiles("*.h", "${BUILD_ROOT}/core/securemsm/cryptodrivers/prng/chipset/")

env.CleanPack(['MODEM_IMAGE', 'CBSP_MODEM_IMAGE', 
               'APPS_IMAGE', 'CBSP_APPS_IMAGE',
               'QDSP6_SW_IMAGE', 'CBSP_QDSP6_SW_IMAGE', 
               'SINGLE_IMAGE', 'CBSP_SINGLE_IMAGE', 
               'WCN_IMAGE'], CLEAN_SOURCES)

CLEAN_SOURCES = env.FindFiles("*", "${BUILD_ROOT}/core/securemsm/cryptodrivers/prng/test")

env.CleanPack(['MODEM_IMAGE', 'CBSP_MODEM_IMAGE', 
               'APPS_IMAGE', 'CBSP_APPS_IMAGE',
               'QDSP6_SW_IMAGE', 'CBSP_QDSP6_SW_IMAGE', 
               'SINGLE_IMAGE', 'CBSP_SINGLE_IMAGE', 
               'WCN_IMAGE'], CLEAN_SOURCES)

#-------------------------------------------------------------------------------
# Load sub scripts
#-------------------------------------------------------------------------------
if not env.GetOption('cleanpack'):
    env.LoadSoftwareUnits(level=1)

#-------------------------------------------------------------------------------
# Add test code to Rcinit for verification
#-------------------------------------------------------------------------------

#PRNG_TEST = {
#  'sequence_group' : 'RCINIT_GROUP_1', # required
#  'init_name' : 'prng_test', # required
#  'init_function' : 'prngtl_hardware_prng', # required
#  'dependencies' : ['dalsys'] 
#}

#if 'USES_RCINIT' in env:
#   env.AddRCInitFunc( ['MODEM_IMAGE', 'CBSP_MODEM_IMAGE', 
#                      'APPS_IMAGE', 'CBSP_APPS_IMAGE',
#                      'QDSP6_SW_IMAGE', 'CBSP_QDSP6_SW_IMAGE', 
#                      'SINGLE_IMAGE', 'CBSP_SINGLE_IMAGE', 
#                      'WCN_IMAGE'] , PRNG_TEST )

