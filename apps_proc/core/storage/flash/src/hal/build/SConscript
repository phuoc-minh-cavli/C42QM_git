#===============================================================================
#
# FLASH HAL Libs
#
# GENERAL DESCRIPTION
#    build script
#
# Copyright (c) 2015 by QUALCOMM, Incorporated.
# All Rights Reserved.
# QUALCOMM Confidential and Proprietary
#
#-------------------------------------------------------------------------------
#
#  $Header: //components/rel/core.tx/6.0/storage/flash/src/hal/build/SConscript#1 $
#  $DateTime: 2020/01/30 22:49:35 $
#  $Author: pwbldsvc $
#  $Change: 22400605 $
#                      EDIT HISTORY FOR FILE
#
#  This section contains comments describing changes made to the module.
#  Notice that changes are listed in reverse chronological order.
#
# when       who     what, where, why
# --------   ---     ---------------------------------------------------------
# 05/08/15   sb      Update to support 9x55
#===============================================================================
Import('env')
env = env.Clone()

#-------------------------------------------------------------------------------
# Source PATH
#-------------------------------------------------------------------------------
SRCPATH = "${BUILD_ROOT}/core/storage/flash/src/hal"

if not env.SubstPathExists(SRCPATH):
   SRCPATH = "${BUILD_ROOT}/drivers/flash/src/hal"

env.VariantDir('${BUILDPATH}', SRCPATH, duplicate=0)

#-------------------------------------------------------------------------------
# Internal depends within CoreBSP
#-------------------------------------------------------------------------------
CBSP_API = [
   'DAL',
   'HAL',
   'SERVICES',
   'STORAGE',
   'SYSTEMDRIVERS',
   'HWENGINES',
   'DEBUGTOOLS',
   # needs to be last also contains wrong comdef.h
   'KERNEL',   
]

env.RequirePublicApi(CBSP_API)
env.RequireRestrictedApi(CBSP_API)

# For include file flash_log.h from tools/src/nand
env.RequireProtectedApi(['STORAGE_FLASH'])
# For flash interface layer - BAM wrapper
env.RequireProtectedApi(['FLASH_IFACE'])

env.PublishPrivateApi('STORAGE_FLASH_HAL', [
   "${INC_ROOT}/core/storage/flash/src/hal/config_v1",
])

#-------------------------------------------------------------------------------
# Sources, libraries
#-------------------------------------------------------------------------------

FLASH_HAL_COMMON_SRC = [
   '${BUILDPATH}/flash_hal_common.c',
   '${BUILDPATH}/flash_hal_reg_list.c',
   '${BUILDPATH}/flash_hal_properties.c',
]

flash_hal_common_obj = env.Object(FLASH_HAL_COMMON_SRC)
flash_hal_common_lib = env.Library('${BUILDPATH}/HALflash', flash_hal_common_obj)

#-------------------------------------------------------------------------------
# FLASH HAL NANDC src
#-------------------------------------------------------------------------------

FLASH_HAL_QPIC_BAM_SRC = [
  '${BUILDPATH}/flash_hal_main.c',
  '${BUILDPATH}/flash_hal_nand_main.c',
  '${BUILDPATH}/qpic/flash_hal_nandc.c',
  '${BUILDPATH}/qpic/flash_hal_nandc_common.c',
  '${BUILDPATH}/qpic/flash_hal_nandc_predef_bam_init.c',
  '${BUILDPATH}/qpic/flash_hal_nandc_predef_bam_exec.c',
  '${BUILDPATH}/qpic/flash_hal_nandc_predef_bam_pprocess.c',
  '${BUILDPATH}/qpic/flash_hal_nandc_predef_bam_core.c',
  '${BUILDPATH}/qpic/flash_hal_nandc_default.c',
   ]

FLASH_HAL_QPIC_BAM_REDUCED_SRC = [
  '${BUILDPATH}/flash_hal_main.c',
  '${BUILDPATH}/flash_hal_nand_main.c',
  '${BUILDPATH}/qpic/flash_hal_nandc.c',
  '${BUILDPATH}/qpic/flash_hal_nandc_common.c',
  '${BUILDPATH}/qpic/flash_hal_nandc_predef_bam_init.c',
  '${BUILDPATH}/qpic/flash_hal_nandc_predef_bam_exec.c',
  '${BUILDPATH}/qpic/flash_hal_nandc_predef_bam_pprocess.c',
  '${BUILDPATH}/qpic/flash_hal_nandc_predef_bam_core.c',
  '${BUILDPATH}/qpic/flash_hal_nandc_reduced.c',
   ]

FLASH_HAL_QPIC_DCPU_SRC = [
  '${BUILDPATH}/flash_hal_main.c',
  '${BUILDPATH}/flash_hal_nand_main.c',
  '${BUILDPATH}/qpic/flash_hal_nandc.c',
  '${BUILDPATH}/qpic/flash_hal_nandc_common.c',
  '${BUILDPATH}/qpic/flash_hal_nandc_predef_direct_cpu.c',
  '${BUILDPATH}/qpic/flash_hal_nandc_default.c',
   ]
   
FLASH_HAL_QPIC_DCPU_REDUCED_SRC = [
  '${BUILDPATH}/flash_hal_main.c',
  '${BUILDPATH}/flash_hal_nand_main.c',
  '${BUILDPATH}/qpic/flash_hal_nandc.c',
  '${BUILDPATH}/qpic/flash_hal_nandc_common.c',
  '${BUILDPATH}/qpic/flash_hal_nandc_predef_direct_cpu.c',
  '${BUILDPATH}/qpic/flash_hal_nandc_reduced.c',
  ]

#------------------------------------------------------------------------------
# Invoke the target specific sconscript to enable the required feature flags
#------------------------------------------------------------------------------
script_fname = '${MSM_ID}.sconscript';
if env.PathExists(script_fname):
   env.LoadSConscripts(script_fname);

#-------------------------------------------------------------------------------
# Add Libraries to image
#-------------------------------------------------------------------------------
target_images = [
   'APPS_IMAGE', 'CBSP_APPS_IMAGE',
   'APPSBL_BOOT_IMAGE',
   ]

if env.has_key('ENABLE_NANDC_QPIC_DCPU_REDUCED') :
   env.AddLibrary(target_images, '${BUILDPATH}/HALflash', FLASH_HAL_COMMON_SRC)
   env.AddLibrary(target_images, '${BUILDPATH}/HALflash_qpic_dcpu_reduced',
   FLASH_HAL_QPIC_DCPU_REDUCED_SRC)
elif env.has_key('ENABLE_NANDC_QPIC_DCPU') :
   env.AddLibrary(target_images, '${BUILDPATH}/HALflash', FLASH_HAL_COMMON_SRC)
   env.AddLibrary(target_images, '${BUILDPATH}/HALflash_qpic_dcpu', 
   FLASH_HAL_QPIC_DCPU_SRC)
elif env.has_key('ENABLE_NANDC_QPIC_BAM_REDUCED') :
   env.AddLibrary(target_images, '${BUILDPATH}/HALflash', FLASH_HAL_COMMON_SRC)
   env.AddLibrary(target_images, '${BUILDPATH}/HALflash_qpic_bam_reduced', 
   FLASH_HAL_QPIC_BAM_REDUCED_SRC)
   env.Append(CPPDEFINES = ["ENABLE_FLASH_BAM"])
elif env.has_key('ENABLE_NANDC_QPIC_BAM') :
   env.AddLibrary(target_images, '${BUILDPATH}/HALflash', FLASH_HAL_COMMON_SRC)
   env.AddLibrary(target_images, '${BUILDPATH}/HALflash_qpic_bam', 
   FLASH_HAL_QPIC_BAM_SRC)
   env.Append(CPPDEFINES = ["ENABLE_FLASH_BAM"])
