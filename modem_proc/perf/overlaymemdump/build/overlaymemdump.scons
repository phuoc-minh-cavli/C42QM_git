#===============================================================================
#
# OVERLAYMEMDUMP Libs
#
# GENERAL DESCRIPTION
#    build script
#
# Copyright (c) 2015 by QUALCOMM Technologies, Incorporated.
# All Rights Reserved.
# QUALCOMM Proprietary
#
#-------------------------------------------------------------------------------
#
#  $Header:
#  $DateTime: 
#
#                      EDIT HISTORY FOR FILE
#
#  This section contains comments describing changes made to the module.
#  Notice that changes are listed in reverse chronological order.
#
# when       who     what, where, why
# --------   ---     ---------------------------------------------------------
# 05/17/17   rr     Initial revision
#===============================================================================

Import('env')
env = env.Clone()
#-------------------------------------------------------------------------------
# Internal definition
#-------------------------------------------------------------------------------
SRCPATH = "${BUILD_ROOT}/perf/overlaymemdump/src"
env.VariantDir('${BUILDPATH}', SRCPATH, duplicate=0)
env.RequirePublicApi(['PERF'], area='PERF')
#-------------------------------------------------------------------------------
# External dependencies
#-------------------------------------------------------------------------------
CBSP_API = [ 'KERNEL' , 'SERVICES', 'DEBUGTOOLS' ]
env.RequirePublicApi(CBSP_API, area='CORE')

#-------------------------------------------------------------------------------
# Sources
#-------------------------------------------------------------------------------
OVERLAYMEMDUMP_SOURCES = [
    '${BUILDPATH}/overlaymemdump.c',
]
#-------------------------------------------------------------------------------
# Add Libraries to image
#-------------------------------------------------------------------------------
env.AddBinaryLibrary(['CORE_QDSP6_SW','MODEM_PAGEONLY'], '${BUILDPATH}/overlaymemdump', OVERLAYMEMDUMP_SOURCES)
#RCINIT_IMG = ['CORE_QDSP6_SW','MODEM_PAGEONLY']
#env.AddRCInitFunc(         # Code Fragment in TMC: YES
#    RCINIT_IMG,               # define TMC_RCINIT_INIT_TIMER_TASK_INIT
#    {
#     'sequence_group'             : 'RCINIT_GROUP_0',              # required
#      'init_name'                  : 'init_crashdump_overlay_mem',              # required
#      'init_function'              : 'crashdump_overlay_mem_init',             # required
#    })
