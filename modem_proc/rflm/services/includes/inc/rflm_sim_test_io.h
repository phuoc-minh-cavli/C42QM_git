/*!
  @file
  rflm_sim_test_io.h

  @brief
  support input/output functions for testing on Q6 simulator

  @detail
 
*/

/*===========================================================================

  Copyright (c) 2014 Qualcomm Technologies Incorporated. All Rights Reserved

  Qualcomm Proprietary

  Export of this technology or software is regulated by the U.S. Government.
  Diversion contrary to U.S. law prohibited.

  All ideas, data and information contained in or disclosed by
  this document are confidential and proprietary information of
  Qualcomm Technologies Incorporated and all rights therein are expressly reserved.
  By accepting this material the recipient agrees that this material
  and the information contained therein are held in confidence and in
  trust and will not be used, copied, reproduced in whole or in part,
  nor its contents revealed in any manner to others without the express
  written permission of Qualcomm Technologies Incorporated.

===========================================================================*/

/*===========================================================================

                        EDIT HISTORY FOR MODULE

This section contains comments describing changes made to the module.
Notice that changes are listed in reverse chronological order.

$Header: //components/rel/rflm.mpss/1.10/services/includes/inc/rflm_sim_test_io.h#1 $

when       who     what, where, why
--------   ---     ----------------------------------------------------------
07/29/14   oei     Initial version. Support sim_trace for FBRX functions
===========================================================================*/
#ifndef RFLM_SIM_TEST_IO_H
#define RFLM_SIM_TEST_IO_H


/*===========================================================================

      Constants

===========================================================================*/


/*===========================================================================

      Macros

===========================================================================*/

/*===========================================================================

      Typedefs

===========================================================================*/

#define SIM_PLATFORM
#ifdef SIM_PLATFORM
/*! @brief FWSim trigger types.
*/
typedef enum {
  RFLM_SIM_TRIGGER_NONE = 0,

  RFLM_SIM_TRIGGER_EXIT

} rflm_sim_trigger_e;

extern volatile rflm_sim_trigger_e rflm_sim_trigger;

/*! @brief Generate a FWSim trigger.
*/
#define RFLM_SIM_TRIGGER( trig ) rflm_sim_trigger = trig
#else
#define RFLM_SIM_TRIGGER( trig )
#endif


#ifdef SIM_PLATFORM
/*! @brief FW trace definitions. By adding a member to this struct and writing
    to it during runtime, a trace waveform is generated by FWSim.
    Don't use bitfields, they are not supported.
*/

typedef enum {
  IDLE,
  FUNC_0,
  FUNC_1,
  FUNC_2,
  FUNC_3,
  FBRX_GET_RUN_DECISION,
  FBRX_GET_EXP_GAIN,
  FBRX_SCHED_READBACK,
  FBRX_READ_PWR_CB,
  FBRX_READ_SPLS_CB,
  FBRX_ILPC_GAIN_EST,
  FBRX_READ_TXC_PWR,
  FBRX_READ_WTR_PWR,
  FBRX_ILPC_WRITE_TXC
} rflm_sim_function_context_e;


typedef struct {
  /* TODO: add structs here */
  struct {
    rflm_sim_function_context_e function;
  } state;

  // retfunc defined for easy restore of fbrx_state.function to calling function
  rflm_sim_function_context_e retfunc;
  
} rflm_sim_trace_t CACHE_ALIGN;

extern volatile rflm_sim_trace_t rflm_sim_trace;
#endif


/*! @brief Output a value to a trace signal.
*/
#ifdef SIM_PLATFORM
#define RFLM_SIM_TRACE( sig, value ) {rflm_sim_trace.retfunc = rflm_sim_trace.sig; rflm_sim_trace.sig  = (value);}
#define RFLM_SIM_TRACE_RETURN( sig ) (rflm_sim_trace.sig = rflm_sim_trace.retfunc)
#else
#define RFLM_SIM_TRACE( sig, value )
#define RFLM_SIM_TRACE_RETURN( sig )
#endif

/*===========================================================================

      Functions

===========================================================================*/

#endif /* RFLM_SIM_TEST_IO_H */
