#====include path optimized=====================================================
#
#
# GENERAL DESCRIPTION
#
# Copyright (c) 2015 Qualcomm Technologies Incorporated. All Rights Reserved
#
# Qualcomm Proprietary
#
# Export of this technology or software is regulated by the U.S. Government.
# Diversion contrary to U.S. law prohibited.
#
# All ideas, data and information contained in or disclosed by
# this document are confidential and proprietary information of
# Qualcomm Technologies Incorporated and all rights therein are expressly reserved.
# By accepting this material the recipient agrees that this material
# and the information contained therein are held in confidence and in
# trust and will not be used, copied, reproduced in whole or in part,
# nor its contents revealed in any manner to others without the express
# written permission of Qualcomm Technologies Incorporated.
#
#-------------------------------------------------------------------------------
#
# $Header: //components/rel/rfdevice_trx.mpss/1.20/build/modem_rfdevice_trx.api#1 $
# $DateTime: 2020/04/16 12:21:51 $
#
#                      EDIT HISTORY FOR FILE
#                      
#  This section contains comments describing changes made to the module.
#  Notice that changes are listed in reverse chronological order.
#  
# when       who     what, where, why
# --------   ---     ---------------------------------------------------------
# 09/25/15    tks     Expose WCDMA test api
# 09/14/15    aks     Expose test directory as Public API- "RFDEVICE_TRX_TEST"
# 04/20/15    hs      Initial version
#===============================================================================

Import('env')

if env.get('CHIPSET') in ('sdx50m'):
  Return( )

if env.PathExists('${INC_ROOT}/rfdevice_trx'):
    env.Replace(RFDEVICE_TRX_ROOT = '${INC_ROOT}/rfdevice_trx')
else:    
    env.Replace(RFDEVICE_TRX_ROOT = '${INC_ROOT}/modem/rfdevice_trx')

if env.PathExists('${INC_ROOT}/rfa'):
    env.Replace(INC_TMP_ROOT = '${INC_ROOT}')
else:    
    env.Replace(INC_TMP_ROOT = '${INC_ROOT}/modem')

if env.get('CHIPSET') in ('mdm9x35'):
	env.Replace(RFMODEM_ROOT = '${INC_TMP_ROOT}/rfmodem_bolt')
else:
	env.Replace(RFMODEM_ROOT = '${INC_TMP_ROOT}/rfmodem_jolokia')

env.PublishPublicApi('RFDEVICE_TRX',[ '${RFDEVICE_TRX_ROOT}/api', ])
env.PublishPublicApi('RFDEVICE_TRX_TEST',[ 
           '${RFDEVICE_TRX_ROOT}/common/test',
           '${RFDEVICE_TRX_ROOT}/lte/test',
		   '${RFDEVICE_TRX_ROOT}/lte/catm1/test',
		   '${RFDEVICE_TRX_ROOT}/lte/nb1/test',
           '${RFDEVICE_TRX_ROOT}/gsm/test',
           '${RFDEVICE_TRX_ROOT}/wcdma/test',
           '${RFDEVICE_TRX_ROOT}/cdma/test',
           '${RFDEVICE_TRX_ROOT}/tdscdma/test',
		   '${INC_ROOT}/rfa/offtarget/framework/inc',
	])

env.PublishRestrictedApi('VIOLATIONS',[
        '${INC_ROOT}/rfa/device/rfdev_intf/inc',
        '${INC_ROOT}/rfa/rf/common/rf/core/inc',
        '${INC_ROOT}/rfa/rf/hal/common/inc',
        '${INC_ROOT}/geran/cust/inc',
        '${INC_ROOT}/rfa/variation/inc',
        '${INC_ROOT}/rfa/rf/common/rf/rfc/inc',
        '${INC_ROOT}/rfa/rfc/target/${CHIPSET}/inc',
        '${INC_ROOT}/rfa/cust/inc',
        '${INC_ROOT}/fw/api/common',
        '${INC_ROOT}/geran/variation/inc',
        '${INC_ROOT}/rfa/rf/common/rf/nv/inc',
        '${INC_ROOT}/mcs/hwio/inc',
        '${INC_ROOT}/rfa/rf/cdma/common/rf/inc',
        '${INC_ROOT}/rfa/rf/rfd/common/inc',
        '${INC_ROOT}/rfa/rf/rfd/nikel/inc',
        '${INC_ROOT}/rfa/rfc/common/inc',
        '${INC_ROOT}/rfnv/api',
        '${RFMODEM_ROOT}/hal/common/inc',
        '${INC_ROOT}/mcs/hwio/inc/${CHIPSET}',
        '${INC_ROOT}/rfa/rf/gsm/rf/core/src',
        '${INC_ROOT}/rfa/rf/hal/nikel/common/inc',
        '${INC_ROOT}/rfa/rf/gsm/rf/rfc/inc',
        '${INC_ROOT}/rfa/rf/mdsp/qdsp6_gsm/inc',
        '${INC_ROOT}/rfa/rf/wcdma/rf/core/src',
        '${INC_ROOT}/rfa/rf/mdsp/qdsp6_common/inc',
        '${INC_ROOT}/rfa/rf/tdscdma/rf/nv/inc',
        '${INC_ROOT}/rfa/rf/gsm/rf/nv/inc',
        '${INC_ROOT}/rfa/rf/hal/gnss/gen8a/inc',
        '${INC_ROOT}/rfa/rf/common/rf/mc/inc',
        '${INC_ROOT}/rfa/rf/lte/rf/core/inc',
        '${INC_ROOT}/rfa/rf/lte/rf/nv/inc',
        '${INC_ROOT}/rfa/rf/lte/rf/rfc/inc',
        '${INC_ROOT}/rfa/rf/mdsp/qdsp6_lte/inc',
        '${INC_ROOT}/rfa/rf/mdsp/qdsp6_wcdma/inc',
        '${INC_ROOT}/rfa/rf/task/common/inc',
        '${INC_ROOT}/rfa/rf/tdscdma/rf/core/inc',
        '${INC_ROOT}/rfa/rf/tdscdma/rf/rfc/inc',
        '${INC_ROOT}/rfa/rf/wcdma/rf/nv/inc',
        '${INC_ROOT}/rfa/rf/wcdma/rf/rfc/inc',
        '${INC_ROOT}/rfa/rf/rfd/common/protected',
        '${INC_ROOT}/rfdevice_interface/api',
        ])

env.PublishRestrictedApi('RFDEVICE_TRX',[
         '${RFDEVICE_TRX_ROOT}/api',
        ])

env.PublishRestrictedApi('RFDEVICE_TRX_LIB', [
        '${RFDEVICE_TRX_ROOT}/common/protected',
        '${RFDEVICE_TRX_ROOT}/lte/protected',
        '${RFDEVICE_TRX_ROOT}/gsm/protected',
        '${RFDEVICE_TRX_ROOT}/wcdma/protected',
        '${RFDEVICE_TRX_ROOT}/cdma/protected',
        '${RFDEVICE_TRX_ROOT}/tdscdma/protected',
        '${RFDEVICE_TRX_ROOT}/gnss/protected',
        '${RFDEVICE_TRX_ROOT}/lte/inc',
    ])
