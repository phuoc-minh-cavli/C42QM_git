/*========================================================================
  TCM overlay data sections.
  Generated by make_overlay.pl - do not edit.
  ========================================================================*/

. = ALIGN(__tcm_overlay_align__);
__tcm_overlay_data_start__ = .;

. = ALIGN(__tcm_overlay_align__);
__tcm_gfw_traffic_overlay_data_start__ = .;
.data_gfw_traffic_overlay :
{
  *(.tcm_gfw_traffic_overlay_data .tcm_gfw_traffic_overlay_data.*)
  *(.tcm_gfw_traffic_overlay_dma_data .tcm_gfw_traffic_overlay_dma_data.*)
  . = ALIGN(__cache_line_size__);
  __tcm_gfw_traffic_overlay_bss_start__ = .;
  *(.tcm_gfw_traffic_overlay_bss .tcm_gfw_traffic_overlay_bss.*)
  *(.tcm_gfw_traffic_overlay_dma_bss .tcm_gfw_traffic_overlay_dma_bss.*)
} :TCM_OVERLAY_DATA =0
. = ALIGN(__cache_line_size__);
__tcm_gfw_traffic_overlay_data_end__ = .;
. = ALIGN(__tcm_overlay_align__);
__tcm_gfw_traffic_overlay_data_alloc_end__ = .;
__tcm_gfw_traffic_overlay_data_size__ = __tcm_gfw_traffic_overlay_data_alloc_end__ - __tcm_gfw_traffic_overlay_data_start__;
__tcm_gfw_traffic_overlay_size__ = __tcm_gfw_traffic_overlay_text_size__ + __tcm_gfw_traffic_overlay_data_size__ ;
__assert_sink__ = ASSERT( (__tcm_gfw_traffic_overlay_size__ + __tcm_static_max_size__) <= __tcm_max_size__ , "gfw_traffic overlay TCM overflow");


. = ALIGN(__tcm_overlay_align__);
__tcm_gfw_paging_overlay_data_start__ = .;
.data_gfw_paging_overlay :
{
  *(.tcm_gfw_paging_overlay_data .tcm_gfw_paging_overlay_data.*)
  *(.tcm_gfw_paging_overlay_dma_data .tcm_gfw_paging_overlay_dma_data.*)
  . = ALIGN(__cache_line_size__);
  __tcm_gfw_paging_overlay_bss_start__ = .;
  *(.tcm_gfw_paging_overlay_bss .tcm_gfw_paging_overlay_bss.*)
  *(.tcm_gfw_paging_overlay_dma_bss .tcm_gfw_paging_overlay_dma_bss.*)
} :TCM_OVERLAY_DATA =0
. = ALIGN(__cache_line_size__);
__tcm_gfw_paging_overlay_data_end__ = .;
. = ALIGN(__tcm_overlay_align__);
__tcm_gfw_paging_overlay_data_alloc_end__ = .;
__tcm_gfw_paging_overlay_data_size__ = __tcm_gfw_paging_overlay_data_alloc_end__ - __tcm_gfw_paging_overlay_data_start__;
__tcm_gfw_paging_overlay_size__ = __tcm_gfw_paging_overlay_text_size__ + __tcm_gfw_paging_overlay_data_size__ ;
__assert_sink__ = ASSERT( (__tcm_gfw_paging_overlay_size__ + __tcm_static_max_size__) <= __tcm_max_size__ , "gfw_paging overlay TCM overflow");


. = ALIGN(__tcm_overlay_align__);
__tcm_gfw_sub0_overlay_data_start__ = .;
.data_gfw_sub0_overlay :
{
  *(.tcm_gfw_sub0_overlay_data .tcm_gfw_sub0_overlay_data.*)
  *(.tcm_gfw_sub0_overlay_dma_data .tcm_gfw_sub0_overlay_dma_data.*)
  . = ALIGN(__cache_line_size__);
  __tcm_gfw_sub0_overlay_bss_start__ = .;
  *(.tcm_gfw_sub0_overlay_bss .tcm_gfw_sub0_overlay_bss.*)
  *(.tcm_gfw_sub0_overlay_dma_bss .tcm_gfw_sub0_overlay_dma_bss.*)
} :TCM_OVERLAY_DATA =0
. = ALIGN(__cache_line_size__);
__tcm_gfw_sub0_overlay_data_end__ = .;
. = ALIGN(__tcm_overlay_align__);
__tcm_gfw_sub0_overlay_data_alloc_end__ = .;
__tcm_gfw_sub0_overlay_data_size__ = __tcm_gfw_sub0_overlay_data_alloc_end__ - __tcm_gfw_sub0_overlay_data_start__;
__tcm_gfw_sub0_overlay_size__ = __tcm_gfw_sub0_overlay_text_size__ + __tcm_gfw_sub0_overlay_data_size__ ;
__assert_sink__ = ASSERT( (__tcm_gfw_sub0_overlay_size__ + __tcm_static_max_size__) <= __tcm_max_size__ , "gfw_sub0 overlay TCM overflow");


. = ALIGN(__tcm_overlay_align__);
__tcm_gfw_sub1_overlay_data_start__ = .;
.data_gfw_sub1_overlay :
{
  *(.tcm_gfw_sub1_overlay_data .tcm_gfw_sub1_overlay_data.*)
  *(.tcm_gfw_sub1_overlay_dma_data .tcm_gfw_sub1_overlay_dma_data.*)
  . = ALIGN(__cache_line_size__);
  __tcm_gfw_sub1_overlay_bss_start__ = .;
  *(.tcm_gfw_sub1_overlay_bss .tcm_gfw_sub1_overlay_bss.*)
  *(.tcm_gfw_sub1_overlay_dma_bss .tcm_gfw_sub1_overlay_dma_bss.*)
} :TCM_OVERLAY_DATA =0
. = ALIGN(__cache_line_size__);
__tcm_gfw_sub1_overlay_data_end__ = .;
. = ALIGN(__tcm_overlay_align__);
__tcm_gfw_sub1_overlay_data_alloc_end__ = .;
__tcm_gfw_sub1_overlay_data_size__ = __tcm_gfw_sub1_overlay_data_alloc_end__ - __tcm_gfw_sub1_overlay_data_start__;
__tcm_gfw_sub1_overlay_size__ = __tcm_gfw_sub1_overlay_text_size__ + __tcm_gfw_sub1_overlay_data_size__ ;
__assert_sink__ = ASSERT( (__tcm_gfw_sub1_overlay_size__ + __tcm_static_max_size__) <= __tcm_max_size__ , "gfw_sub1 overlay TCM overflow");


. = ALIGN(__tcm_overlay_align__);
__tcm_lte_traffic_overlay_data_start__ = .;
.data_lte_traffic_overlay :
{
  *(.tcm_lte_traffic_overlay_data .tcm_lte_traffic_overlay_data.*)
  *(.tcm_lte_traffic_overlay_dma_data .tcm_lte_traffic_overlay_dma_data.*)
  . = ALIGN(__cache_line_size__);
  __tcm_lte_traffic_overlay_bss_start__ = .;
  *(.tcm_lte_traffic_overlay_bss .tcm_lte_traffic_overlay_bss.*)
  *(.tcm_lte_traffic_overlay_dma_bss .tcm_lte_traffic_overlay_dma_bss.*)
} :TCM_OVERLAY_DATA =0
. = ALIGN(__cache_line_size__);
__tcm_lte_traffic_overlay_data_end__ = .;
. = ALIGN(__tcm_overlay_align__);
__tcm_lte_traffic_overlay_data_alloc_end__ = .;
__tcm_lte_traffic_overlay_data_size__ = __tcm_lte_traffic_overlay_data_alloc_end__ - __tcm_lte_traffic_overlay_data_start__;
__tcm_lte_traffic_overlay_size__ = __tcm_lte_traffic_overlay_text_size__ + __tcm_lte_traffic_overlay_data_size__ ;
__assert_sink__ = ASSERT( (__tcm_lte_traffic_overlay_size__ + __tcm_static_max_size__) <= __tcm_max_size__ , "lte_traffic overlay TCM overflow");


. = ALIGN(__tcm_overlay_align__);
__tcm_lte_paging_overlay_data_start__ = .;
.data_lte_paging_overlay :
{
  *(.tcm_lte_paging_overlay_data .tcm_lte_paging_overlay_data.*)
  *(.tcm_lte_paging_overlay_dma_data .tcm_lte_paging_overlay_dma_data.*)
  . = ALIGN(__cache_line_size__);
  __tcm_lte_paging_overlay_bss_start__ = .;
  *(.tcm_lte_paging_overlay_bss .tcm_lte_paging_overlay_bss.*)
  *(.tcm_lte_paging_overlay_dma_bss .tcm_lte_paging_overlay_dma_bss.*)
} :TCM_OVERLAY_DATA =0
. = ALIGN(__cache_line_size__);
__tcm_lte_paging_overlay_data_end__ = .;
. = ALIGN(__tcm_overlay_align__);
__tcm_lte_paging_overlay_data_alloc_end__ = .;
__tcm_lte_paging_overlay_data_size__ = __tcm_lte_paging_overlay_data_alloc_end__ - __tcm_lte_paging_overlay_data_start__;
__tcm_lte_paging_overlay_size__ = __tcm_lte_paging_overlay_text_size__ + __tcm_lte_paging_overlay_data_size__ ;
__assert_sink__ = ASSERT( (__tcm_lte_paging_overlay_size__ + __tcm_static_max_size__) <= __tcm_max_size__ , "lte_paging overlay TCM overflow");


. = ALIGN(__tcm_overlay_align__);
__tcm_lte_sub0_overlay_data_start__ = .;
.data_lte_sub0_overlay :
{
  *(.tcm_lte_sub0_overlay_data .tcm_lte_sub0_overlay_data.*)
  *(.tcm_lte_sub0_overlay_dma_data .tcm_lte_sub0_overlay_dma_data.*)
  . = ALIGN(__cache_line_size__);
  __tcm_lte_sub0_overlay_bss_start__ = .;
  *(.tcm_lte_sub0_overlay_bss .tcm_lte_sub0_overlay_bss.*)
  *(.tcm_lte_sub0_overlay_dma_bss .tcm_lte_sub0_overlay_dma_bss.*)
} :TCM_OVERLAY_DATA =0
. = ALIGN(__cache_line_size__);
__tcm_lte_sub0_overlay_data_end__ = .;
. = ALIGN(__tcm_overlay_align__);
__tcm_lte_sub0_overlay_data_alloc_end__ = .;
__tcm_lte_sub0_overlay_data_size__ = __tcm_lte_sub0_overlay_data_alloc_end__ - __tcm_lte_sub0_overlay_data_start__;
__tcm_lte_sub0_overlay_size__ = __tcm_lte_sub0_overlay_text_size__ + __tcm_lte_sub0_overlay_data_size__ ;
__assert_sink__ = ASSERT( (__tcm_lte_sub0_overlay_size__ + __tcm_static_max_size__) <= __tcm_max_size__ , "lte_sub0 overlay TCM overflow");


. = ALIGN(__tcm_overlay_align__);
__tcm_lte_sub1_overlay_data_start__ = .;
.data_lte_sub1_overlay :
{
  *(.tcm_lte_sub1_overlay_data .tcm_lte_sub1_overlay_data.*)
  *(.tcm_lte_sub1_overlay_dma_data .tcm_lte_sub1_overlay_dma_data.*)
  . = ALIGN(__cache_line_size__);
  __tcm_lte_sub1_overlay_bss_start__ = .;
  *(.tcm_lte_sub1_overlay_bss .tcm_lte_sub1_overlay_bss.*)
  *(.tcm_lte_sub1_overlay_dma_bss .tcm_lte_sub1_overlay_dma_bss.*)
} :TCM_OVERLAY_DATA =0
. = ALIGN(__cache_line_size__);
__tcm_lte_sub1_overlay_data_end__ = .;
. = ALIGN(__tcm_overlay_align__);
__tcm_lte_sub1_overlay_data_alloc_end__ = .;
__tcm_lte_sub1_overlay_data_size__ = __tcm_lte_sub1_overlay_data_alloc_end__ - __tcm_lte_sub1_overlay_data_start__;
__tcm_lte_sub1_overlay_size__ = __tcm_lte_sub1_overlay_text_size__ + __tcm_lte_sub1_overlay_data_size__ ;
__assert_sink__ = ASSERT( (__tcm_lte_sub1_overlay_size__ + __tcm_static_max_size__) <= __tcm_max_size__ , "lte_sub1 overlay TCM overflow");


. = ALIGN(__tcm_overlay_align__);
__tcm_nb1fw_common_overlay_data_start__ = .;
.data_nb1fw_common_overlay :
{
  *(.tcm_nb1fw_common_overlay_data .tcm_nb1fw_common_overlay_data.*)
  *(.tcm_nb1fw_common_overlay_dma_data .tcm_nb1fw_common_overlay_dma_data.*)
  . = ALIGN(__cache_line_size__);
  __tcm_nb1fw_common_overlay_bss_start__ = .;
  *(.tcm_nb1fw_common_overlay_bss .tcm_nb1fw_common_overlay_bss.*)
  *(.tcm_nb1fw_common_overlay_dma_bss .tcm_nb1fw_common_overlay_dma_bss.*)
} :TCM_OVERLAY_DATA =0
. = ALIGN(__cache_line_size__);
__tcm_nb1fw_common_overlay_data_end__ = .;
. = ALIGN(__tcm_overlay_align__);
__tcm_nb1fw_common_overlay_data_alloc_end__ = .;
__tcm_nb1fw_common_overlay_data_size__ = __tcm_nb1fw_common_overlay_data_alloc_end__ - __tcm_nb1fw_common_overlay_data_start__;
__tcm_nb1fw_common_overlay_size__ = __tcm_nb1fw_common_overlay_text_size__ + __tcm_nb1fw_common_overlay_data_size__ ;
__assert_sink__ = ASSERT( (__tcm_nb1fw_common_overlay_size__ + __tcm_static_max_size__) <= __tcm_max_size__ , "nb1fw_common overlay TCM overflow");


. = ALIGN(__tcm_overlay_align__);
__tcm_nb1fw_srch_overlay_data_start__ = .;
.data_nb1fw_srch_overlay :
{
  *(.tcm_nb1fw_srch_overlay_data .tcm_nb1fw_srch_overlay_data.*)
  *(.tcm_nb1fw_srch_overlay_dma_data .tcm_nb1fw_srch_overlay_dma_data.*)
  . = ALIGN(__cache_line_size__);
  __tcm_nb1fw_srch_overlay_bss_start__ = .;
  *(.tcm_nb1fw_srch_overlay_bss .tcm_nb1fw_srch_overlay_bss.*)
  *(.tcm_nb1fw_srch_overlay_dma_bss .tcm_nb1fw_srch_overlay_dma_bss.*)
} :TCM_OVERLAY_DATA =0
. = ALIGN(__cache_line_size__);
__tcm_nb1fw_srch_overlay_data_end__ = .;
. = ALIGN(__tcm_overlay_align__);
__tcm_nb1fw_srch_overlay_data_alloc_end__ = .;
__tcm_nb1fw_srch_overlay_data_size__ = __tcm_nb1fw_srch_overlay_data_alloc_end__ - __tcm_nb1fw_srch_overlay_data_start__;
__tcm_nb1fw_srch_overlay_size__ = __tcm_nb1fw_srch_overlay_text_size__ + __tcm_nb1fw_srch_overlay_data_size__ ;
__assert_sink__ = ASSERT( (__tcm_nb1fw_srch_overlay_size__ + __tcm_static_max_size__) <= __tcm_max_size__ , "nb1fw_srch overlay TCM overflow");


. = ALIGN(__tcm_overlay_align__);
__tcm_nb1fw_hcorr_overlay_data_start__ = .;
.data_nb1fw_hcorr_overlay :
{
  *(.tcm_nb1fw_hcorr_overlay_data .tcm_nb1fw_hcorr_overlay_data.*)
  *(.tcm_nb1fw_hcorr_overlay_dma_data .tcm_nb1fw_hcorr_overlay_dma_data.*)
  . = ALIGN(__cache_line_size__);
  __tcm_nb1fw_hcorr_overlay_bss_start__ = .;
  *(.tcm_nb1fw_hcorr_overlay_bss .tcm_nb1fw_hcorr_overlay_bss.*)
  *(.tcm_nb1fw_hcorr_overlay_dma_bss .tcm_nb1fw_hcorr_overlay_dma_bss.*)
} :TCM_OVERLAY_DATA =0
. = ALIGN(__cache_line_size__);
__tcm_nb1fw_hcorr_overlay_data_end__ = .;
. = ALIGN(__tcm_overlay_align__);
__tcm_nb1fw_hcorr_overlay_data_alloc_end__ = .;
__tcm_nb1fw_hcorr_overlay_data_size__ = __tcm_nb1fw_hcorr_overlay_data_alloc_end__ - __tcm_nb1fw_hcorr_overlay_data_start__;
__tcm_nb1fw_hcorr_overlay_size__ = __tcm_nb1fw_hcorr_overlay_text_size__ + __tcm_nb1fw_hcorr_overlay_data_size__ ;
__assert_sink__ = ASSERT( (__tcm_nb1fw_hcorr_overlay_size__ + __tcm_static_max_size__) <= __tcm_max_size__ , "nb1fw_hcorr overlay TCM overflow");



. = ALIGN(__tcm_overlay_align__);
__tcm_nb1fw_dl_overlay_data_start__ = .;
.data_nb1fw_dl_overlay :
{
  *(.tcm_nb1fw_dl_overlay_data .tcm_nb1fw_dl_overlay_data.*)
  *(.tcm_nb1fw_dl_overlay_dma_data .tcm_nb1fw_dl_overlay_dma_data.*)
  . = ALIGN(__cache_line_size__);
  __tcm_nb1fw_dl_overlay_bss_start__ = .;
  *(.tcm_nb1fw_dl_overlay_bss .tcm_nb1fw_dl_overlay_bss.*)
  *(.tcm_nb1fw_dl_overlay_dma_bss .tcm_nb1fw_dl_overlay_dma_bss.*)
} :TCM_OVERLAY_DATA =0
. = ALIGN(__cache_line_size__);
__tcm_nb1fw_dl_overlay_data_end__ = .;
. = ALIGN(__tcm_overlay_align__);
__tcm_nb1fw_dl_overlay_data_alloc_end__ = .;
__tcm_nb1fw_dl_overlay_data_size__ = __tcm_nb1fw_dl_overlay_data_alloc_end__ - __tcm_nb1fw_dl_overlay_data_start__;
__tcm_nb1fw_dl_overlay_size__ = __tcm_nb1fw_dl_overlay_text_size__ + __tcm_nb1fw_dl_overlay_data_size__ ;
__assert_sink__ = ASSERT( (__tcm_nb1fw_dl_overlay_size__ + __tcm_static_max_size__) <= __tcm_max_size__ , "nb1fw_dl overlay TCM overflow");


. = ALIGN(__tcm_overlay_align__);
__tcm_nb1fw_ul_overlay_data_start__ = .;
.data_nb1fw_ul_overlay :
{
  *(.tcm_nb1fw_ul_overlay_data .tcm_nb1fw_ul_overlay_data.*)
  *(.tcm_nb1fw_ul_overlay_dma_data .tcm_nb1fw_ul_overlay_dma_data.*)
  . = ALIGN(__cache_line_size__);
  __tcm_nb1fw_ul_overlay_bss_start__ = .;
  *(.tcm_nb1fw_ul_overlay_bss .tcm_nb1fw_ul_overlay_bss.*)
  *(.tcm_nb1fw_ul_overlay_dma_bss .tcm_nb1fw_ul_overlay_dma_bss.*)
} :TCM_OVERLAY_DATA =0
. = ALIGN(__cache_line_size__);
__tcm_nb1fw_ul_overlay_data_end__ = .;
. = ALIGN(__tcm_overlay_align__);
__tcm_nb1fw_ul_overlay_data_alloc_end__ = .;
__tcm_nb1fw_ul_overlay_data_size__ = __tcm_nb1fw_ul_overlay_data_alloc_end__ - __tcm_nb1fw_ul_overlay_data_start__;
__tcm_nb1fw_ul_overlay_size__ = __tcm_nb1fw_ul_overlay_text_size__ + __tcm_nb1fw_ul_overlay_data_size__ ;
__assert_sink__ = ASSERT( (__tcm_nb1fw_ul_overlay_size__ + __tcm_static_max_size__) <= __tcm_max_size__ , "nb1fw_ul overlay TCM overflow");

. = ALIGN(__tcm_overlay_align__);
__tcm_overlay_data_end__ = .;
