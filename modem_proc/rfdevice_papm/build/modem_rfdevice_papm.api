#r===============================================================================
#
#
# GENERAL DESCRIPTION
#
# Copyright (c) 2013-2014 Qualcomm Technologies Incorporated. All Rights Reserved
#
# Qualcomm Proprietary
#
# Export of this technology or software is regulated by the U.S. Government.
# Diversion contrary to U.S. law prohibited.
#
# All ideas, data and information contained in or disclosed by
# this document are confidential and proprietary information of
# Qualcomm Technologies Incorporated and all rights therein are expressly reserved.
# By accepting this material the recipient agrees that this material
# and the information contained therein are held in confidence and in
# trust and will not be used, copied, reproduced in whole or in part,
# nor its contents revealed in any manner to others without the express
# written permission of Qualcomm Technologies Incorporated.
#
#-------------------------------------------------------------------------------
#
# $Header: //components/rel/rfdevice_papm.mpss/1.30/build/modem_rfdevice_papm.api#1 $
# $DateTime: 2020/04/16 12:12:28 $
#
#                      EDIT HISTORY FOR FILE
#
#  This section contains comments describing changes made to the module.
#  Notice that changes are listed in reverse chronological order.
#
# when       who     what, where, why

# 03/27/14   dr      Adding support for msm8936
# 01/31/14   vv      Created
#===============================================================================

Import('env')

if env.PathExists('${INC_ROOT}/rfa'):
    env.Replace(RF_ROOT = '${INC_ROOT}/rfa')
else:
    env.Replace(RF_ROOT = '${INC_ROOT}/modem/rfa')

if env.PathExists('${INC_ROOT}/rfdevice_papm'):
    env.Replace(RFDEVICE_PAPM_ROOT = '${INC_ROOT}/rfdevice_papm')
else:
    env.Replace(RFDEVICE_PAPM_ROOT = '${INC_ROOT}/modem/rfdevice_papm')

#env.Replace(RFDEVICE_PAPM_ROOT = env.GetBuildPath(Dir('..')))


env.PublishPublicApi('RFDEVICE_PAPM',['${RFDEVICE_PAPM_ROOT}/api'])
env.PublishRestrictedApi('RFDEVICE_PAPM',['${RFDEVICE_PAPM_ROOT}/api'])

if env.get('CHIPSET') not in ('mdm9x35'):
   env.PublishRestrictedApi ('RFDEVICE_PAPM_VIOLATIONS',[
       '${INC_ROOT}/mcs/hwio/inc',
       '${INC_ROOT}/mcs/hwio/inc/${CHIPSET}'
       ])

#Start public VIOLATIONS
env.PublishRestrictedApi ('RFDEVICE_PAPM_VIOLATIONS',[
    '${RF_ROOT}/device/rfdev_intf/inc',
    '${RF_ROOT}/device/rffe/inc',
    '${RF_ROOT}/rf/common/rf/core/inc',
    '${RF_ROOT}/rf/common/rf/mc/inc',
    '${RF_ROOT}/rf/common/rf/rfc/inc',
    '${RF_ROOT}/rf/hal/common/inc',
    '${RF_ROOT}/rfc/common/inc',
    '${RF_ROOT}/rf/rfd/common/inc',
    '${RF_ROOT}/rf/rfd/nikel/inc',
    '${RF_ROOT}/variation/inc',
    '${INC_ROOT}/fw/api/common',
    '${INC_ROOT}/geran/variation/inc',
    '${INC_ROOT}/geran/cust/inc',
    ])


#This violation needs to eventually be updated to include 
#TRITON RFC Target folder when available
if env.get('CHIPSET') in ('msm8x26','msm8x10','mdm9x35','msm8962', 'msm8926', 'msm8916','msm8936'):
  env.PublishRestrictedApi( 'RFDEVICE_PAPM_VIOLATIONS', [
        '${RF_ROOT}/rfc/dime/target/msm8974/inc',
    ])
else:
  env.PublishRestrictedApi( 'RFDEVICE_PAPM_VIOLATIONS', [    
        '${RF_ROOT}/rfc/dime/target/${CHIPSET}/inc',
    ])


