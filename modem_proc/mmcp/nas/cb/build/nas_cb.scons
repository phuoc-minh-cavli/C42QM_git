#===============================================================================
#
# NAS CB SCons 
#
# GENERAL DESCRIPTION
#    SCons build script
#
# Copyright (c) 2010-2011 by Qualcomm Technologies, Incorporated.
# All Rights Reserved.
# QUALCOMM Proprietary/GTDR
#
#-------------------------------------------------------------------------------
#
#  $Header: //components/rel/mmcp.mpss/6.1.10/nas/cb/build/nas_cb.scons#1 $
#  $DateTime: 2023/04/25 14:39:18 $
#
#                      EDIT HISTORY FOR FILE
#
#  This section contains comments describing changes made to the module.
#  Notice that changes are listed in reverse chronological order.
#
# when       who     what, where, why
# --------   ---     ---------------------------------------------------------
# 08/29/11   ss      Adding feature flag MSG_SSID_NAS_CB to enable QXDM log mask for message of NAS/CB 
# 08/08/11   jbk      Updated CB scons to include mm.h -> naslog.h -> log_umts_codes.h & log_umts_codes_v.h
# 04/21/11   pm      Update NAS SCons due to enabling WCDMA feature flags on Nikel
# 09/15/10   pm      Initial file
#
#===============================================================================
#from glob import glob
#from os.path import join, basename

Import('env')
env = env.Clone()

if 'USES_GSM' not in env and ('USES_UMTS' not in env or 'USES_WPLT' in env):
   Return()

# --------------------------------------------------------------------------- #
# Turn off/on debug if requested 			      
# --------------------------------------------------------------------------- # 
if ARGUMENTS.get('DEBUG_OFF','no') == 'yes':
    env.Replace(ARM_DBG = "")
    env.Replace(HEXAGON_DBG = "")
    env.Replace(GCC_DBG = "")

if ARGUMENTS.get('DEBUG_ON','no') == 'yes':
    env.Replace(ARM_DBG = "-g --dwarf2") 
    env.Replace(HEXAGON_DBG = "-g")  
    env.Replace(GCC_DBG = "-g")

#-------------------------------------------------------------------------------
# Setup source PATH
#-------------------------------------------------------------------------------
SRCPATH = '../src'

env.VariantDir('${BUILDPATH}', SRCPATH, duplicate=0)

#-------------------------------------------------------------------------------
# Set MSG_BT_SSID_DFLT for legacy MSG macros
#-------------------------------------------------------------------------------
env.Append(CPPDEFINES = [
    'MSG_BT_SSID_DFLT=MSG_SSID_NAS_CB',
])

#-------------------------------------------------------------------------------
# Publish our Private API
#-------------------------------------------------------------------------------
env.PublishPrivateApi('NAS', ["${INC_ROOT}/mmcp/nas/cb/inc"])

#-------------------------------------------------------------------------------
# Necessary Public API's
#-------------------------------------------------------------------------------
REQUIRED_PUBLIC_APIS = [
    'FW',
    'GERAN',
    'GPS',
    'MCS',
    'MMODE',
    'NAS',
    'ONEX',
    'UIM',
    'UTILS',
    'WCDMA',
    'WMS',
    'LTE',
    ]

REQUIRED_RESTRICTED_APIS = [
    'FW',
    'GERAN',
    'GPS',
    'MCS',
    'MDSP',
    'MMODE',
    'NAS',
    'RFA',
    'ONEX',
    'UIM',
    'UTILS',
    'WCDMA',
    'WMS',
    'LTE',
    ]

CORE_APIS = [
    'DAL',
    'DEBUGTOOLS',
    'MPROC',
    'POWER',
    'SERVICES',
    'SYSTEMDRIVERS',

    # needs to be last also contains wrong comdef.h
    'KERNEL',
    ]

MULTIMEDIA_APIS = [
    'AUDIO',
    'MVS',
    ]

env.RequirePublicApi(CORE_APIS, area='core')

env.RequirePublicApi(MULTIMEDIA_APIS, area='MULTIMEDIA')

env.RequirePublicApi(REQUIRED_PUBLIC_APIS) 
env.RequireRestrictedApi(REQUIRED_RESTRICTED_APIS)

#-------------------------------------------------------------------------------
# External API's not built with SCons
#-------------------------------------------------------------------------------
env.RequireExternalApi([
    'MULTIMEDIA_AUDIO',
])

#-------------------------------------------------------------------------------
# Generate the library and add to an image
#-------------------------------------------------------------------------------
# Construct the list of source files by looking for *.c
#CB_C_SOURCES = ['${BUILDPATH}/' + basename(fname)
#                 for fname in glob(join(env.subst(SRCPATH), '*.c'))]

CB_C_SOURCES = [
	'${BUILDPATH}/cb_mem.c',
	'${BUILDPATH}/cb_msg_asm.c',
	'${BUILDPATH}/cb_schedule.c',
	'${BUILDPATH}/cb_state.c',
	'${BUILDPATH}/cb_task.c',
	'${BUILDPATH}/cb_utils.c',
]

# Add our library to the ModemApps image
#env.AddLibrary( ['MODEM_MODEM'], '${BUILDPATH}/nas_cb', [CB_C_SOURCES] )



