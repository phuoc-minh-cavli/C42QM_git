#ifndef _DS_QMI_VOICE_CM_IF_H
#define _DS_QMI_VOICE_CM_IF_H
/*===========================================================================

                         D S _ Q M I _ V O I C E _ C M _ I F . H

DESCRIPTION

 The Data Services Qualcomm Voice service CM interface header file.


EXTERNALIZED FUNCTIONS



Copyright (c) 2004-2015 QUALCOMM Technologies Incorporated.
All Rights Reserved.
Qualcomm Confidential and Proprietary
===========================================================================*/
/*===========================================================================

                      EDIT HISTORY FOR FILE

  $Header: //components/rel/mmcp.mpss/6.1.10/mmode/qmi/src/qmi_voice_cm_if.h#1 $ $DateTime: 2023/04/25 14:39:18 $ $Author: pwbldsvc $

when        who    what, where, why
--------    ---    ----------------------------------------------------------
08/25/09    vs     Initial revision.
===========================================================================*/
#include "mmcp_variation.h"
#include <stdio.h>
#include "comdef.h"
#include "customer.h"
#include "cm.h"
#include  "log.h"
#include "qmi_svc_utils.h"
#include "msg.h"
#include <stringl/stringl.h>
#include "ecall_app.h"
#include "voice_service_v02.h"


#define QMI_VOICE_CM_IF_ARR_SIZE( a ) ( sizeof( (a) ) / sizeof( (a[0]) ) )

#define QMI_VOICE_CM_IF_STR_PRINTF snprintf
#define QMI_VOICE_CM_IF_MEM_ALLOC(siz)  modem_mem_alloc(siz, MODEM_MEM_CLIENT_QMI_MMODE)
#define QMI_VOICE_CM_IF_MEM_FREE(lnk)  modem_mem_free(lnk, MODEM_MEM_CLIENT_QMI_MMODE)


#define QMI_VOICE_CM_IF_MAX_CALLING_NUM_LEN CM_MAX_CALLED_INFO_CHARS
#define QMI_VOICE_CM_IF_MAX_DTMF_BURST_LEN       CM_INBAND_MAX_REV_DIALED_DIGITS
#define QMI_VOICE_CM_IF_MAX_INBAND_DIALED_DIGITS CM_INBAND_MAX_DIALED_DIGITS
#ifdef FEATURE_UUS
#define QMI_VOICE_CM_IF_MAX_UUS_DATA_LEN  MAX_USER_USER_DATA_LENGTH
#endif
#define QMI_VOICE_CM_IF_HANDLE_ID_INTERNAL 0xFFFFFFFF
#define QMI_VOICE_CM_IF_MAX_SERVICE_CLASS_INSTANCES FWD_FEATURE_LIST_SIZE
#define QMI_VOICE_CM_IF_MAX_ALPHA_TAG_CHARS CM_MAX_ALPHA_TAG_CHARS
#define QMI_VOICE_CM_IF_MAX_CC_ALPHA_TAG_CHARS CM_MAX_ALPHA_ID_BYTES
#define QMI_VOICE_CM_IF_MAX_FAILURE_DESC_LEN 256
#define QMI_VOICE_CM_IF_MAX_END_REASON_TEXT_LEN 128
#define QMI_VOICE_CM_IF_MAX_IP_HIST_INFO_LEN 512
#define QMI_VOICE_CM_IF_MAX_IP_CALLER_NAME_LEN  128
#define QMI_VOICE_CM_IF_MAX_IP_FORWARD_HIST_INFO_LEN 512

#ifdef FEATURE_DUAL_ACTIVE
#define QMI_VOICE_CM_IF_MAX_ACTIVE_SUBS 2
#else
#define QMI_VOICE_CM_IF_MAX_ACTIVE_SUBS 1
#endif
#define QMI_VOICE_CM_IF_CALL_ID_MAX_PER_SUBS 2
#define QMI_VOICE_CM_IF_CALL_ID_MAX  (QMI_VOICE_CM_IF_CALL_ID_MAX_PER_SUBS * QMI_VOICE_CM_IF_MAX_ACTIVE_SUBS)
#define QMI_VOICE_CM_IF_SRV_OPT_MAX  2
#define QMI_VOICE_CM_IF_ALPHA_DCS_GSM_DEFAULT 0x01
#define QMI_VOICE_CM_IF_ALPHA_DCS_UCS2 0x02
#define QMI_VOICE_CM_IF_MAX_NAM_ID 3
#define QMI_VOICE_CM_IF_MAX_USS_DATA_LEN  182
#define QMI_VOICE_CM_IF_EXT_DISPLAY_RECORD_LEN_MAX 64
#define QMI_VOICE_CM_IF_MAX_SIP_URI_OVERFLOW_LEN  47
#define QMI_VOICE_CM_IF_MAX_SIP_URI_LEN  81

#define QMI_VOICE_CM_IF_MAX_BARR_LIST_LEN 50
#define QMI_VOICE_CM_IF_MAX_NUM_SC        5

#define QMI_VOICE_CM_IF_MAX_SRVCC_CALLS 7

#define QMI_VOICE_CM_IF_MAX_VS_FILE_ATTRIB_LEN  500

#define QMI_VOICE_CONF_URI_MAX_LEN 128
#define QMI_VOICE_CONF_DISPLAY_TEXT_MAX_LEN 64
#define QMI_VOICE_CONF_XML_MAX_LEN 2048
#define QMI_VOICE_CONF_ADNL_CALL_INFO_MAX_LEN 2048
#define QMI_VOICE_CONF_INIT_URI_MAX_LEN 1024
#define QMI_VOICE_CONF_MAX_PARTICIPANTS 10


/* Cause for No CLI values as per 3GPP 24.008 */
#define QMI_VOICE_CM_IF_NO_CLI_CAUSE_UNAVAILABLE                     0
#define QMI_VOICE_CM_IF_NO_CLI_CAUSE_REJECT_BY_USER                  1
#define QMI_VOICE_CM_IF_NO_CLI_CAUSE_INTERACTION_WITH_OTHER_SERVICE  2
#define QMI_VOICE_CM_IF_NO_CLI_CAUSE_PAYPHONE                        3

/* PER 3GPP2 C.S0005-D */
#define QMI_VOICE_CM_IF_PRESENTATION_ALLOWED             0X00
#define QMI_VOICE_CM_IF_PRESENTATION_RESTRICTED          0X01
#define QMI_VOICE_CM_IF_PRESENTATION_NUM_UNAVAILABLE     0X02
#define QMI_VOICE_CM_IF_PRESENTATION_PAYPHONE            0X04

/* PER 3GPP2 C.S0005-D & 3GPP 24.008 */
#define QMI_VOICE_CM_IF_SI_USER_PROVIDED_NOT_SCREENED             0X00
#define QMI_VOICE_CM_IF_SI_USER_PROVIDED_VERIFIED_PASSED          0X01
#define QMI_VOICE_CM_IF_SI_USER_PROVIDED_VERIFIED_FAILED          0X02
#define QMI_VOICE_CM_IF_SI_NETWORK_PROVIDED                       0X03

#define QMI_VOICE_CM_IF_MAX_PWD_LEN MAX_PWD_CHAR

#define QMI_VOICE_CM_IF_LOCAL_ALERTING  0X00
#define QMI_VOICE_CM_IF_REMOTE_ALERTING 0X01
#define QMI_VOICE_CM_IF_ALERTING_NONE   0XFF

#define QMI_VOICE_CM_IF_USSD_NO_USER_ACTION_REQUIRED 0x01
#define QMI_VOICE_CM_IF_USSD_USER_ACTION_REQUIRED    0x02

#define QMI_VOICE_CM_IF_USSD_DCS_ASCII           0x01
#define QMI_VOICE_CM_IF_USSD_DCS_USER_DEF_8_BIT  0x02
#define QMI_VOICE_CM_IF_USSD_DCS_UCS2            0x03

#define   QMI_VOICE_CM_IF_SUPS_INVOKE_PROBLEM                        0x81
#define   QMI_VOICE_CM_IF_SUPS_UNRECOGNISED_OPERATION                0x01
#define   QMI_VOICE_CM_IF_SUPS_FACILITY_REJECTED                     29

/* SS ERROR CODE TAGS */
#define   QMI_SS_ERROR_ERROR_CODE_TAG             0x02
#define   QMI_SS_ERROR_GENERAL_PROBLEM    0x80
#define   QMI_SS_ERROR_INVOKE_PROBLEM    0x81
#define   QMI_SS_ERROR_RETURN_RESULT_PROBLEM    0x82
#define   QMI_SS_ERROR_RETURN_ERROR_PROBLEM    0x83
#define   QMI_SS_ERROR_MN_SS_ERROR_TAG             0xc0 
#define   QMI_SS_ERROR_IMS_CODE_TAG            0x90

#define   QMI_CM_IF_SS_ERROR_CAUSE_403_FORBIDDEN          0x00
#define   QMI_CM_IF_SS_ERROR_CAUSE_404_NOT_FOUND          0x02

#define   QMI_CM_IF_SS_ERROR_UNRECOGNISED_COMPONENT       0x00
#define   QMI_CM_IF_SS_ERROR_MISTYPED_COMPONENT           0x01
#define   QMI_CM_IF_SS_ERROR_BADLY_STRUCTURED_COMPONENT   0x02

#define   QMI_CM_IF_SS_ERROR_DUPLICATE_INVOKE_ID          0x00
#define   QMI_CM_IF_SS_ERROR_UNRECOGNISED_OPERATION       0x01
#define   QMI_CM_IF_SS_ERROR_MISTYPED_PARAMETER           0x02    /* Also return_result p_code */
#define   QMI_CM_IF_SS_ERROR_RESOURCE_LIMITATION          0x03
#define   QMI_CM_IF_SS_ERROR_INITIATING_RELEASE           0x04
#define   QMI_CM_IF_SS_ERROR_UNRECOGNISED_LINKED_ID       0x05
#define   QMI_CM_IF_SS_ERROR_LINKED_RESPONSE_UNEXPECTED   0x06
#define   QMI_CM_IF_SS_ERROR_UNEXPECTED_LINKED_OPERATION  0x07

/* Return Result codes */

#define   QMI_CM_IF_SS_ERROR_UNRECOGNISED_INVOKE_ID       0x00    /* Also return_error p_code */
#define   QMI_CM_IF_SS_ERROR_RETURN_RESULT_UNEXPECTED     0x01

/*call progress*/

#define QMI_VOICE_CM_IF_CALL_PROG_REMOTE_ALERT   0x03
#define QMI_VOICE_CM_IF_CALL_PROG_USER_RESUMED   0x01

/* call direction */
#define QMI_VOICE_CM_IF_MO_CALL 0x01
#define QMI_VOICE_CM_IF_MT_CALL 0x02

/* Return Error codes */

#define   QMI_CM_IF_SS_ERROR_RETURN_ERROR_UNEXPECTED      0x01
#define   QMI_CM_IF_SS_ERROR_UNRECOGNISED_ERROR           0x02
#define   QMI_CM_IF_SS_ERROR_UNEXPECTED_ERROR             0x03
#define   QMI_CM_IF_SS_ERROR_RE_MISTYPED_PARAMETER        0x04

/* MN specific values for ss errors     */

#define   QMI_CM_IF_SS_ERROR_MNSS_ERROR_TAG              0x02  /* used by CM */
#define   QMI_CM_IF_SS_ERROR_MN_SS_ERROR_TAG             0xc0  /* used by MN -> network */
#define   QMI_CM_IF_SS_ERROR_MN_INSUFFICIENT_RESOURCES   0x01
#define   QMI_CM_IF_SS_ERROR_MN_SPLIT_MPTY_REJ           0x02
#define   QMI_CM_IF_SS_ERROR_MN_CALL_HOLD_REJ            0x03
#define   QMI_CM_IF_SS_ERROR_MN_CALL_RETRIEVE_REJ        0x04
#define   QMI_CM_IF_SS_ERROR_MN_NETWORK_NOT_RESPONDING   0x05
#define   QMI_CM_IF_SS_ERROR_MN_NO_REPLY_CONDITION_TIMER_VALUE_INVALID      0x06


#define   QMI_VOICE_SERVICE_CLASS_NONE                   0x00

/*MODE INFO*/
#define QMI_VOICE_CM_IF_MODE_NO_SRV   0x00
#define QMI_VOICE_CM_IF_MODE_GSM   0x02
#ifdef FEATURE_WCDMA
#define QMI_VOICE_CM_IF_MODE_UMTS  0x03
#endif
#define QMI_VOICE_CM_IF_MODE_LTE   0x04
#ifdef FEATURE_TDSCDMA
#define QMI_VOICE_CM_IF_MODE_TDS   0x05
#endif /*FEATURE_TDSCDMA*/
#define QMI_VOICE_CM_IF_MODE_UNKNOWN   0x06 
#define QMI_VOICE_CM_IF_MODE_WLAN   0x07

/* Determine whether the service status indicates no service  */
#define QMI_VOICE_CM_IF_SRV_STATUS_INDICATES_NO_SRV( srv_status ) \
  ( srv_status == SYS_SRV_STATUS_NO_SRV )

/* Determine whether the service status indicates service available  */
#define QMI_VOICE_CM_IF_SRV_STATUS_INDICATES_SRV_AVAILABLE( srv_status ) \
  ( ( srv_status == SYS_SRV_STATUS_SRV ) || ( srv_status == SYS_SRV_STATUS_LIMITED ) || ( srv_status == SYS_SRV_STATUS_LIMITED_REGIONAL ) )
  
/* Determine whether the service status indicates full service  */
#define QMI_VOICE_CM_IF_SRV_STATUS_INDICATES_FULL_SRV( srv_status ) \
  ( srv_status == SYS_SRV_STATUS_SRV )

/* Determine whether the current operator is GSM/WCDMA/LTE */
#define QMI_VOICE_CM_IF_SYS_MODE_IS_GWL( sys_mode ) \
  ( ( sys_mode == SYS_SYS_MODE_GSM ) || ( sys_mode == SYS_SYS_MODE_WCDMA ) || ( sys_mode == SYS_SYS_MODE_GW ) || ( sys_mode == SYS_SYS_MODE_LTE ) )

#ifdef FEATURE_WCDMA
/* Determine whether the current operator is WCDMA */
#define QMI_VOICE_CM_IF_SYS_MODE_IS_WCDMA( sys_mode ) \
  ( ( sys_mode == SYS_SYS_MODE_WCDMA ) || ( sys_mode == SYS_SYS_MODE_GW ) )
#endif

/* Determine whether the current operator is GSM */
#define QMI_VOICE_CM_IF_SYS_MODE_IS_GSM( sys_mode ) \
  ( sys_mode == SYS_SYS_MODE_GSM ) 

/* Determine whether the current operator is TDS */
#ifdef FEATURE_TDSCDMA
#define QMI_VOICE_CM_IF_SYS_MODE_IS_TDS( sys_mode ) \
  ( sys_mode == SYS_SYS_MODE_TDS ) 
#endif /*FEATURE_TDSCDMA*/


/* Determine whether the current operator is WLAN */
#define QMI_VOICE_CM_IF_SYS_MODE_IS_WLAN( sys_mode ) \
  ( sys_mode == SYS_SYS_MODE_WLAN ) 

/* Determine whether the current operator is unknown */
#define QMI_VOICE_CM_IF_SYS_MODE_IS_UNKNOWN( sys_mode ) \
  ( sys_mode == SYS_SYS_MODE_NO_SRV )

/* Determine whether the service status indicates GWL no service */
#define QMI_VOICE_CM_IF_SRV_STATUS_INDICATES_GWL_NO_SRV( srv_status, sys_mode ) \
  ( QMI_VOICE_CM_IF_SRV_STATUS_INDICATES_NO_SRV( srv_status ) && QMI_VOICE_CM_IF_SYS_MODE_IS_GWL( sys_mode ) )
  
/* Determine whether the service status indicates GWL service available */
#define QMI_VOICE_CM_IF_SRV_STATUS_INDICATES_GWL_SRV_AVAILABLE( srv_status, sys_mode ) \
  ( QMI_VOICE_CM_IF_SRV_STATUS_INDICATES_SRV_AVAILABLE( srv_status ) && QMI_VOICE_CM_IF_SYS_MODE_IS_GWL( sys_mode ) )

/* Determine whether the service status indicates TDSCDMA service available */
#ifdef FEATURE_TDSCDMA
#define QMI_VOICE_CM_IF_SRV_STATUS_INDICATES_TDS_SRV_AVAILABLE( srv_status, sys_mode ) \
  ( QMI_VOICE_CM_IF_SRV_STATUS_INDICATES_SRV_AVAILABLE( srv_status ) && QMI_VOICE_CM_IF_SYS_MODE_IS_TDS( sys_mode ) )
#endif /*FEATURE_TDSCDMA*/
  
/* Determine whether the service status indicates GSM full service */
#define QMI_VOICE_CM_IF_SRV_STATUS_INDICATES_GSM_FULL_SRV( srv_status, sys_mode ) \
  ( QMI_VOICE_CM_IF_SRV_STATUS_INDICATES_FULL_SRV( srv_status ) && QMI_VOICE_CM_IF_SYS_MODE_IS_GSM( sys_mode ) )
  
#ifdef FEATURE_WCDMA
/* Determine whether the service status indicates WCDMA full service */
#define QMI_VOICE_CM_IF_SRV_STATUS_INDICATES_WCDMA_FULL_SRV( srv_status, sys_mode ) \
  ( QMI_VOICE_CM_IF_SRV_STATUS_INDICATES_FULL_SRV( srv_status ) && QMI_VOICE_CM_IF_SYS_MODE_IS_WCDMA( sys_mode ) )
#endif
/* Determine whether the service status indicates GWL full service */
#define QMI_VOICE_CM_IF_SRV_STATUS_INDICATES_GWL_FULL_SRV( srv_status, sys_mode ) \
  ( QMI_VOICE_CM_IF_SRV_STATUS_INDICATES_FULL_SRV( srv_status ) && QMI_VOICE_CM_IF_SYS_MODE_IS_GWL( sys_mode ) )


/*Voice TSTS*/
typedef enum
{
  QMI_VOICE_CM_IF_AS_ID_PRIMARY,
  QMI_VOICE_CM_IF_AS_ID_MAX,
  QMI_VOICE_CM_IF_AS_ID_INVALID = 0xFF
}qmi_voice_cm_if_as_id_e_type;

typedef enum
{
  QMI_VOICE_CM_IF_REJ_CAUSE_NONE  = 0x00,
  QMI_VOICE_CM_IF_REJ_CAUSE_USER_BUSY  = 0x01,
  QMI_VOICE_CM_IF_REJ_CAUSE_USER_REJ   = 0x02,
  QMI_VOICE_CM_IF_REJ_CAUSE_LOW_BATTERY  = 0x03,
  QMI_VOICE_CM_IF_REJ_CAUSE_BLACKLISTED_CALL_ID  = 0x04,
  QMI_VOICE_CM_IF_REJ_CAUSE_DEAD_BATTERY  = 0x05,
  QMI_VOICE_CM_IF_REJ_CAUSE_UNWANTED_CALL = 0x06,
  QMI_VOICE_CM_IF_REJ_CAUSE_MAX = 0xFF
} qmi_voice_cm_if_call_reject_cause_e_type;

typedef enum
{
  REJ_CAUSE_NONE       = 0,
  REJ_CAUSE_USER_BUSY  = 17,
  REJ_CAUSE_USER_REJ   = 21,
  REJ_CAUSE_MAX = 0xFFFFFFFF
} qmi_voice_reject_cause_network_e_type;

typedef enum
{
  QMI_VOICE_CM_IF_CALL_TYPE_VOICE          = 0x00,
  QMI_VOICE_CM_IF_CALL_TYPE_VOICE_FORCED   = 0x01,
  QMI_VOICE_CM_IF_CALL_TYPE_VOIP           = 0x02,
  QMI_VOICE_CM_IF_CALL_TYPE_VT             = 0x03,
  QMI_VOICE_CM_IF_CALL_TYPE_VIDEOSHARE     = 0x04,
  QMI_VOICE_CM_IF_CALL_TYPE_TEST           = 0x05,
  QMI_VOICE_CM_IF_CALL_TYPE_OTAPA          = 0x06,
  QMI_VOICE_CM_IF_CALL_TYPE_STD_OTASP      = 0x07,
  QMI_VOICE_CM_IF_CALL_TYPE_NON_STD_OTASP  = 0x08,
  QMI_VOICE_CM_IF_CALL_TYPE_EMERGENCY      = 0x09,
  QMI_VOICE_CM_IF_CALL_TYPE_SUPS           = 0x0A,
  QMI_VOICE_CM_IF_CALL_TYPE_EMERGENCY_IP   = 0X0B,
  QMI_VOICE_CM_IF_CALL_TYPE_ECALL          = 0x0C,
  QMI_VOICE_CM_IF_CALL_TYPE_EMERGENCY_VT   = 0x0D,
  QMI_VOICE_CM_IF_CALL_TYPE_DATA, 
  QMI_VOICE_CM_IF_CALL_TYPE_FAX,
  QMI_VOICE_CM_IF_CALL_TYPE_MAX
} qmi_voice_cm_if_call_type_e_type;

typedef enum
{
  QMI_VOICE_CM_IF_CALL_STATE_IDLE           = 0x00,
  QMI_VOICE_CM_IF_CALL_STATE_ORIG           = 0x01,
  QMI_VOICE_CM_IF_CALL_STATE_INCOMING       = 0x02,
  QMI_VOICE_CM_IF_CALL_STATE_CONV           = 0x03,
  QMI_VOICE_CM_IF_CALL_STATE_CC_IN_PROG     = 0x04,
  QMI_VOICE_CM_IF_CALL_STATE_ALERTING       = 0x05,
  QMI_VOICE_CM_IF_CALL_STATE_HOLD           = 0x06,
  QMI_VOICE_CM_IF_CALL_STATE_WAITING        = 0x07,
  QMI_VOICE_CM_IF_CALL_STATE_DISCONNECTING  = 0x08,
  QMI_VOICE_CM_IF_CALL_STATE_END            = 0x09,
  QMI_VOICE_CM_IF_CALL_STATE_SETUP          = 0x0A
} qmi_voice_cm_if_call_state_e_type;

typedef enum
{
  QMI_VOICE_CM_IF_CALL_SUBSTATE_DEFAULT                  = 0x00,
  QMI_VOICE_CM_IF_CALL_SUBSTATE_INCOM_ANSWERED           = 0x01,
  QMI_VOICE_CM_IF_CALL_SUBSTATE_HOLD_REQ_UE              = 0x02,
  QMI_VOICE_CM_IF_CALL_SUBSTATE_RETRIVE_REQ_UE           = 0x03,
  QMI_VOICE_CM_IF_CALL_SUBSTATE_PRE_ALERTING             = 0x04
} qmi_voice_cm_if_call_substate_e_type;

typedef enum
{
  QMI_VOICE_CAP_RESTRICT_CAUSE_NONE       = 0,
  QMI_VOICE_CAP_RESTRICT_CAUSE_DISABLED   = 1,
  QMI_VOICE_CAP_RESTRICT_CAUSE_RAT   = 2,
  QMI_VOICE_CAP_RESTRICT_CAUSE_HD   = 3,
  QMI_VOICE_CAP_RESTRICT_CAUSE_MAX       = 0xFF
} qmi_voice_call_cap_restrict_cause_e_type;

/* Determine whether the dialed call  is an IP call */
#define QMI_VOICE_CM_IF_VOIP_CALL( call_type ) \
( ( call_type == QMI_VOICE_CM_IF_CALL_TYPE_VOIP ) || \
  ( call_type == QMI_VOICE_CM_IF_CALL_TYPE_VT ) || \
  ( call_type == QMI_VOICE_CM_IF_CALL_TYPE_EMERGENCY_VT ) || \
  ( call_type == QMI_VOICE_CM_IF_CALL_TYPE_VIDEOSHARE ) )


typedef enum
{
  QMI_VOICE_CM_IF_CMD_MIN                      = 0,

  /* Voice commands.  Don't reorder/renumber */
  QMI_VOICE_CM_IF_CMD_INDICATION_REGISTER      = QMI_VOICE_CM_IF_CMD_MIN,
  QMI_VOICE_CM_IF_CMD_DIAL_CALL                  ,
  QMI_VOICE_CM_IF_CMD_END_CALL                   ,
  QMI_VOICE_CM_IF_CMD_ANSWER_CALL                ,
  QMI_VOICE_CM_IF_CMD_SETUP_ANSWER               ,
  QMI_VOICE_CM_IF_CMD_GET_CALL_INFO              ,
  QMI_VOICE_CM_IF_CMD_START_CONT_DTMF            ,
  QMI_VOICE_CM_IF_CMD_STOP_CONT_DTMF             ,
  
  QMI_VOICE_CM_IF_CMD_GET_ALL_CALL_INFO               ,
  QMI_VOICE_CM_IF_CMD_SET_MODEM_CONFIG,
  QMI_VOICE_CM_IF_CMD_GET_MODEM_CONFIG,
  QMI_VOICE_CM_IF_CMD_AOC_RESET_ACM                        ,
  QMI_VOICE_CM_IF_CMD_AOC_SET_ACMMAX                       ,
  QMI_VOICE_CM_IF_CMD_AOC_GET_CALL_METER_INFO              ,
  QMI_VOICE_CM_IF_CMD_SPEECH_CODEC_INFO,

  QMI_VOICE_CM_IF_CMD_INDICATION_REGISTER_RESP   ,
  QMI_VOICE_CM_IF_CMD_DIAL_CALL_RESP             ,
  QMI_VOICE_CM_IF_CMD_END_CALL_RESP              ,
  QMI_VOICE_CM_IF_CMD_ANSWER_CALL_RESP           ,
  QMI_VOICE_CM_IF_CMD_SETUP_ANSWER_RESP          ,
  QMI_VOICE_CM_IF_CMD_GET_CALL_INFO_RESP         ,
  QMI_VOICE_CM_IF_CMD_START_CONT_DTMF_RESP       ,
  QMI_VOICE_CM_IF_CMD_STOP_CONT_DTMF_RESP        ,
  QMI_VOICE_CM_IF_CMD_GET_ALL_CALL_INFO_RESP,
  QMI_VOICE_CM_IF_CMD_SET_MODEM_CONFIG_RESP,
  QMI_VOICE_CM_IF_CMD_GET_MODEM_CONFIG_RESP,
  QMI_VOICE_CM_IF_CMD_AOC_RESET_ACM_RESP                   ,
  QMI_VOICE_CM_IF_CMD_AOC_SET_ACMMAX_RESP                  ,
  QMI_VOICE_CM_IF_CMD_AOC_GET_CALL_METER_INFO_RESP         ,

  #if defined (FEATURE_ALS) && defined(FEATURE_GSM)
  QMI_VOICE_CM_IF_CMD_ALS_SET_LINE_SWITCHING,
  QMI_VOICE_CM_IF_CMD_ALS_SELECT_LINE,  
  QMI_VOICE_CM_IF_CMD_ALS_GET_LINE_SWITCHING_STATUS,
  QMI_VOICE_CM_IF_CMD_ALS_GET_SELECTED_LINE, 
  QMI_VOICE_CM_IF_CMD_ALS_GET_LINE_SWITCHING_STATUS_RESP,
  QMI_VOICE_CM_IF_CMD_ALS_GET_SELECTED_LINE_RESP, 
  QMI_VOICE_CM_IF_CMD_ALS_SET_LINE_SWITCHING_RESP,
  QMI_VOICE_CM_IF_CMD_ALS_SELECT_LINE_RESP,
  #endif
  QMI_VOICE_CM_IF_CMD_SPEECH_CODEC_INFO_RESP,
  
  QMI_VOICE_CM_IF_CMD_INFO_REC_IND               ,
  QMI_VOICE_CM_IF_CMD_DTMF_IND                   ,
  QMI_VOICE_CM_IF_CMD_SUPS_NOTIFICATION_IND           ,
  QMI_VOICE_CM_IF_CMD_ALL_CALL_STATUS_IND             ,
  QMI_VOICE_CM_IF_CMD_SPEECH_CODEC_INFO_IND,
  QMI_VOICE_CM_IF_CMD_HANDOVER_IND,
  QMI_VOICE_CM_IF_CMD_AOC_LOW_FUNDS_IND                    ,

  QMI_VOICE_CM_IF_CMD_CC_RESULT_INFO_IND,
  

  #if defined (FEATURE_MMODE_SS_SUPS)
  QMI_VOICE_CM_IF_CMD_SUPS_GET_CLIR                   ,
  QMI_VOICE_CM_IF_CMD_SUPS_GET_CALL_FORWARDING        ,
  #endif
  #if defined FEATURE_MMODE_CALL_SUPS
  QMI_VOICE_CM_IF_CMD_SUPS_MANAGE_CALLS                            ,
  #endif
  #if defined(FEATURE_MMODE_SS_SUPS)
  QMI_VOICE_CM_IF_CMD_SUPS_GET_CLIP                            ,
  QMI_VOICE_CM_IF_CMD_SUPS_GET_CALL_WAITING                            ,
  QMI_VOICE_CM_IF_CMD_SUPS_GET_CALL_BARRING,
  QMI_VOICE_CM_IF_CMD_SUPS_SET_CALL_BARRING,
  
  #endif
  #if defined(FEATURE_MMODE_USS_SUPS) || defined FEATURE_MMODE_SS_SUPS
  QMI_VOICE_CM_IF_CMD_SUPS_SET_SUPS_SERVICE,
  #endif
  #if defined(FEATURE_MMODE_USS_SUPS) 
  QMI_VOICE_CM_IF_CMD_SUPS_ORIG_USSD,
  QMI_VOICE_CM_IF_CMD_SUPS_ANSWER_USSD,
  QMI_VOICE_CM_IF_CMD_SUPS_CANCEL_USSD,
  #endif
  #if defined (FEATURE_MMODE_SS_SUPS)
  
  QMI_VOICE_CM_IF_CMD_SUPS_GET_COLP,
  QMI_VOICE_CM_IF_CMD_SUPS_GET_COLR,
  #endif
  #if defined(FEATURE_MMODE_CALL_SUPS)
  QMI_VOICE_CM_IF_CMD_SUPS_MANAGE_IP_CALLS,
  #endif
  #if defined(FEATURE_MMODE_SS_SUPS)
  QMI_VOICE_CM_IF_CMD_SUPS_GET_CNAP,
  QMI_VOICE_CM_IF_CMD_SUPS_GET_CLIR_RESP              ,
  QMI_VOICE_CM_IF_CMD_SUPS_GET_CALL_FORWARDING_RESP   ,
  QMI_VOICE_CM_IF_CMD_SUPS_GET_CLIP_RESP,
  QMI_VOICE_CM_IF_CMD_SUPS_GET_CALL_WAITING_RESP,
  QMI_VOICE_CM_IF_CMD_SUPS_GET_CALL_BARRING_RESP,
  QMI_VOICE_CM_IF_CMD_SUPS_SET_CALL_BARRING_RESP,
  QMI_VOICE_CM_IF_CMD_SUPS_SET_SUPS_SERVICE_RESP,
  #endif
  #if defined(FEATURE_MMODE_CALL_SUPS)
  QMI_VOICE_CM_IF_CMD_SUPS_MANAGE_CALLS_RESP,
  #endif
  #if defined(FEATURE_MMODE_USS_SUPS)
  QMI_VOICE_CM_IF_CMD_SUPS_ORIG_USSD_RESP,
  QMI_VOICE_CM_IF_CMD_SUPS_ANSWER_USSD_RESP,
  QMI_VOICE_CM_IF_CMD_SUPS_CANCEL_USSD_RESP,
  #endif
  #if defined (FEATURE_MMODE_CALL_SUPS)
  
  QMI_VOICE_CM_IF_CMD_CONF_INFO_IND,
  QMI_VOICE_CM_IF_CMD_CONF_JOIN_IND,
  QMI_VOICE_CM_IF_CMD_CONF_PARTICIPANT_UPDATE_IND,
  QMI_VOICE_CM_IF_CMD_CONF_PARTICIPANTS_INFO_IND,
  
  #endif
  #if defined(FEATURE_MMODE_USS_SUPS)
  QMI_VOICE_CM_IF_CMD_SUPS_USSD_IND             ,
  QMI_VOICE_CM_IF_CMD_SUPS_USSD_RELEASE_IND     ,
  #endif
  QMI_VOICE_CM_IF_CMD_UUS_IND     ,
 
  #if defined(FEATURE_MMODE_SS_SUPS) || defined FEATURE_MMODE_USS_SUPS
  QMI_VOICE_CM_IF_CMD_SUPS_IND     ,
  #endif
  #if defined(FEATURE_MMODE_USS_SUPS)
  QMI_VOICE_CM_IF_CMD_SUPS_ORIG_USSD_NO_WAIT          ,
  QMI_VOICE_CM_IF_CMD_SUPS_ORIG_USSD_NO_WAIT_IND      ,
  #endif

  #if defined (FEATURE_MMODE_SS_SUPS)
  QMI_VOICE_CM_IF_CMD_CALL_MODIFIED_IND,
  QMI_VOICE_CM_IF_CMD_CALL_MODIFY_ACCEPT_IND,
  QMI_VOICE_CM_IF_CMD_SUPS_GET_CNAP_RESP,
  QMI_VOICE_CM_IF_CMD_SUPS_GET_COLP_RESP,
  QMI_VOICE_CM_IF_CMD_SUPS_GET_COLR_RESP,
  QMI_VOICE_CM_IF_CMD_SUPS_MANAGE_IP_CALLS_RESP,
  #endif
  
  #ifdef FEATURE_MMODE_DISABLE_MISC_FEATURES
  QMI_VOICE_CM_IF_CMD_SRVCC_CALL_CONFIG,
  QMI_VOICE_CM_IF_CMD_TTY_INFO_IND,
  QMI_VOICE_CM_IF_CMD_AUDIO_RAT_CHANGE_INFO_IND,
  QMI_VOICE_CM_IF_CMD_CONF_PARTICIPANT_STATUS_IND,
  QMI_VOICE_CM_IF_CMD_ADDITIONAL_CALL_INFO_IND,
  QMI_VOICE_CM_IF_CMD_VICE_DIALOG_IND,
  QMI_VOICE_CM_IF_CMD_SRVCC_CALL_CONFIG_RESP,
  #endif
  
  QMI_VOICE_CM_IF_CMD_E911_ORIG_FAIL_IND,
  QMI_VOICE_CM_IF_CMD_MT_CALL_END_AUTO_REJECT_IND,
  QMI_VOICE_CM_IF_CMD_CB_MIN = 0x100,

  /* CM COMMAND, EVENT Callbacks.  Don't reorder/renumber */
  QMI_VOICE_CM_IF_CMD_CALL_CMD_CB = QMI_VOICE_CM_IF_CMD_CB_MIN,
  QMI_VOICE_CM_IF_CMD_CALL_CMD_EXTEN_CB          ,
  QMI_VOICE_CM_IF_CMD_INBAND_CMD_CB              ,
  QMI_VOICE_CM_IF_CMD_PH_CMD_CB                  ,
  QMI_VOICE_CM_IF_CMD_ECALL_ORIG_INFO_CMD_CB       ,
  QMI_VOICE_CM_IF_CMD_CALL_CMD_ERR_CB              ,
  QMI_VOICE_CM_IF_CMD_CALL_EVT_CB                ,
  QMI_VOICE_CM_IF_CMD_INBAND_EVT_CB              ,
  QMI_VOICE_CM_IF_CMD_PH_EVT_CB                  ,
  QMI_VOICE_CM_IF_CMD_SS_EVT_CB                  ,

  /* Call control modified commands */
  QMI_VOICE_CM_IF_CMD_CALL_MOD_TO_SUPS           ,
  QMI_VOICE_CM_IF_CMD_SUPS_MOD_TO_SUPS           ,
  #if defined(FEATURE_MMODE_USS_SUPS) || defined FEATURE_MMODE_SS_SUPS
  QMI_VOICE_CM_IF_CMD_SUPS_CMD_CB                ,
  QMI_VOICE_CM_IF_CMD_SUPS_CMD_EXTEN_CB          ,
  QMI_VOICE_CM_IF_CMD_SUPS_EVT_CB                ,

  #endif
  #if defined(FEATURE_MMODE_USS_SUPS)//ndef FEATURE_MMCP_DISABLE_CS_USSD
  QMI_VOICE_CM_IF_CMD_SUPS_ORIG_USSD_FROM_EXTERNAL_SOURCE,

  #endif
  QMI_VOICE_CM_IF_CMD_MAX                        ,
  QMI_VOICE_CM_IF_CMD_WIDTH                    = 0xFFFF          
} qmi_voice_cm_if_cmd_e_type;


typedef enum
{
  /* 0 - 0xFFFF reserved for RIL requests defined in ril.h */
  QMI_VOICE_CM_IF_EVT_CALL_BASE                     = 0x10000,
  QMI_VOICE_CM_IF_EVT_CALL_ORIG                     = QMI_VOICE_CM_IF_EVT_CALL_BASE + CM_CALL_EVENT_ORIG,
  QMI_VOICE_CM_IF_EVT_CALL_ANSWER                   = QMI_VOICE_CM_IF_EVT_CALL_BASE + CM_CALL_EVENT_ANSWER,
  QMI_VOICE_CM_IF_EVT_CALL_END_REQ                  = QMI_VOICE_CM_IF_EVT_CALL_BASE + CM_CALL_EVENT_END_REQ,
  QMI_VOICE_CM_IF_EVT_CALL_END                      = QMI_VOICE_CM_IF_EVT_CALL_BASE + CM_CALL_EVENT_END,
  QMI_VOICE_CM_IF_EVT_CALL_INCOM                    = QMI_VOICE_CM_IF_EVT_CALL_BASE + CM_CALL_EVENT_INCOM,
  QMI_VOICE_CM_IF_EVT_CALL_CONNECT                  = QMI_VOICE_CM_IF_EVT_CALL_BASE + CM_CALL_EVENT_CONNECT,
  QMI_VOICE_CM_IF_EVT_ABRV_ALERT                    = QMI_VOICE_CM_IF_EVT_CALL_BASE + CM_CALL_EVENT_ABRV_ALERT,
  QMI_VOICE_CM_IF_EVT_CALL_CONNECTED_NUM            = QMI_VOICE_CM_IF_EVT_CALL_BASE + CM_CALL_EVENT_CONNECTED_NUM,
  QMI_VOICE_CM_IF_EVT_CALL_INFO                     = QMI_VOICE_CM_IF_EVT_CALL_BASE + CM_CALL_EVENT_INFO,
  QMI_VOICE_CM_IF_EVT_CALL_BARRED                   = QMI_VOICE_CM_IF_EVT_CALL_BASE + CM_CALL_EVENT_CALL_BARRED,
  QMI_VOICE_CM_IF_EVT_CALL_ON_HOLD                  = QMI_VOICE_CM_IF_EVT_CALL_BASE + CM_CALL_EVENT_CALL_ON_HOLD,
  QMI_VOICE_CM_IF_EVT_CALL_IS_WAITING               = QMI_VOICE_CM_IF_EVT_CALL_BASE + CM_CALL_EVENT_CALL_IS_WAITING,
  QMI_VOICE_CM_IF_EVT_CALL_RETRIEVED                = QMI_VOICE_CM_IF_EVT_CALL_BASE + CM_CALL_EVENT_CALL_RETRIEVED,
  QMI_VOICE_CM_IF_EVT_CALL_ORIG_FWD_STATUS          = QMI_VOICE_CM_IF_EVT_CALL_BASE + CM_CALL_EVENT_ORIG_FWD_STATUS,
  QMI_VOICE_CM_IF_EVT_CALL_FORWARDED                = QMI_VOICE_CM_IF_EVT_CALL_BASE + CM_CALL_EVENT_CALL_FORWARDED,
  QMI_VOICE_CM_IF_EVT_CALL_BEING_FORWARDED          = QMI_VOICE_CM_IF_EVT_CALL_BASE + CM_CALL_EVENT_CALL_BEING_FORWARDED,
  QMI_VOICE_CM_IF_EVT_CALL_INCOM_FWD_CALL           = QMI_VOICE_CM_IF_EVT_CALL_BASE + CM_CALL_EVENT_INCOM_FWD_CALL,
  QMI_VOICE_CM_IF_EVT_CALL_RESTRICTED               = QMI_VOICE_CM_IF_EVT_CALL_BASE + CM_CALL_EVENT_CALL_RESTRICTED,
  QMI_VOICE_CM_IF_EVT_CALL_CUG_INFO_RECEIVED        = QMI_VOICE_CM_IF_EVT_CALL_BASE + CM_CALL_EVENT_CUG_INFO_RECEIVED,
  QMI_VOICE_CM_IF_EVT_CALL_SETUP_IND                = QMI_VOICE_CM_IF_EVT_CALL_BASE + CM_CALL_EVENT_SETUP_IND,
  QMI_VOICE_CM_IF_EVT_CALL_USER_DATA_IND            = QMI_VOICE_CM_IF_EVT_CALL_BASE + CM_CALL_EVENT_USER_DATA_IND,
  QMI_VOICE_CM_IF_EVT_CALL_PROGRESS_INFO_IND        = QMI_VOICE_CM_IF_EVT_CALL_BASE + CM_CALL_EVENT_PROGRESS_INFO_IND,
  QMI_VOICE_CM_IF_EVT_CALL_DEFLECTION               = QMI_VOICE_CM_IF_EVT_CALL_BASE + CM_CALL_EVENT_CALL_DEFLECTION,
  QMI_VOICE_CM_IF_EVT_CALL_TRANSFERRED_CALL         = QMI_VOICE_CM_IF_EVT_CALL_BASE + CM_CALL_EVENT_TRANSFERRED_CALL,
  QMI_VOICE_CM_IF_EVT_CALL_CNAP_INFO_RECEIVED       = QMI_VOICE_CM_IF_EVT_CALL_BASE + CM_CALL_EVENT_CNAP_INFO_RECEIVED,
  QMI_VOICE_CM_IF_EVT_CALL_REDIRECTING_NUMBER       = QMI_VOICE_CM_IF_EVT_CALL_BASE + CM_CALL_EVENT_REDIRECTING_NUMBER,
  QMI_VOICE_CM_IF_EVT_CALL_VOIP_CALL_END_CNF        = QMI_VOICE_CM_IF_EVT_CALL_BASE + CM_CALL_EVENT_VOIP_CALL_END_CNF,
  QMI_VOICE_CM_IF_EVT_CALL_PROGRESS_EARLY_MEDIA     = QMI_VOICE_CM_IF_EVT_CALL_BASE + CM_CALL_EVENT_PROGRESS_EARLY_MEDIA,  
  QMI_VOICE_CM_IF_EVT_CALL_ON_HOLD_BY_REMOTE        = QMI_VOICE_CM_IF_EVT_CALL_BASE + CM_CALL_EVENT_CALL_ON_HOLD_BY_REMOTE,
  QMI_VOICE_CM_IF_EVT_CALL_RETRIEVE_BY_REMOTE       = QMI_VOICE_CM_IF_EVT_CALL_BASE + CM_CALL_EVENT_CALL_RETRIEVE_BY_REMOTE,
  QMI_VOICE_CM_IF_EVT_CALL_SPEECH_CODEC_INFO        = QMI_VOICE_CM_IF_EVT_CALL_BASE + CM_CALL_EVENT_SPEECH_CODEC_INFO,
  QMI_VOICE_CM_IF_EVT_CALL_HANDOVER_START           = QMI_VOICE_CM_IF_EVT_CALL_BASE + CM_CALL_EVENT_HO_START,
  QMI_VOICE_CM_IF_EVT_CALL_HANDOVER_FAIL            = QMI_VOICE_CM_IF_EVT_CALL_BASE + CM_CALL_EVENT_HO_FAIL,
  QMI_VOICE_CM_IF_EVT_CALL_HANDOVER_COMPLETE        = QMI_VOICE_CM_IF_EVT_CALL_BASE + CM_CALL_EVENT_HO_COMPLETE,
  QMI_VOICE_CM_IF_EVT_CALL_HANDOVER_CANCEL          = QMI_VOICE_CM_IF_EVT_CALL_BASE + CM_CALL_EVENT_HO_CANCEL,
  QMI_VOICE_CM_IF_EVT_CC_RESULT_INFO                = QMI_VOICE_CM_IF_EVT_CALL_BASE + CM_CALL_EVENT_CC_RESULT_INFO,
  QMI_VOICE_CM_IF_EVT_E911_ORIG_FAIL                = QMI_VOICE_CM_IF_EVT_CALL_BASE + CM_CALL_EVENT_E911_ORIG_FAIL,
  QMI_VOICE_CM_IF_EVT_CALL_SWITCH_CODEC_CNF         = QMI_VOICE_CM_IF_EVT_CALL_BASE + CM_CALL_EVENT_SWITCH_CODEC_CNF,
  QMI_VOICE_CM_IF_EVT_INBAND_BASE                   = 0x11000,
  QMI_VOICE_CM_IF_EVT_INBAND_REV_BURST_DTMF         = QMI_VOICE_CM_IF_EVT_INBAND_BASE + CM_INBAND_EVENT_REV_BURST_DTMF,
  QMI_VOICE_CM_IF_EVT_INBAND_REV_START_CONT_DTMF    = QMI_VOICE_CM_IF_EVT_INBAND_BASE + CM_INBAND_EVENT_REV_START_CONT_DTMF,
  QMI_VOICE_CM_IF_EVT_INBAND_REV_STOP_CONT_DTMF     = QMI_VOICE_CM_IF_EVT_INBAND_BASE + CM_INBAND_EVENT_REV_STOP_CONT_DTMF,
  QMI_VOICE_CM_IF_EVT_INBAND_REV_START_CONT_DTMF_CONF    = QMI_VOICE_CM_IF_EVT_INBAND_BASE + CM_INBAND_EVENT_REV_START_CONT_DTMF_CONF,
  QMI_VOICE_CM_IF_EVT_INBAND_REV_STOP_CONT_DTMF_CONF     = QMI_VOICE_CM_IF_EVT_INBAND_BASE + CM_INBAND_EVENT_REV_STOP_CONT_DTMF_CONF,
  QMI_VOICE_CM_IF_EVT_INBAND_FWD_BURST_DTMF         = QMI_VOICE_CM_IF_EVT_INBAND_BASE + CM_INBAND_EVENT_FWD_BURST_DTMF,
  QMI_VOICE_CM_IF_EVT_INBAND_FWD_START_CONT_DTMF    = QMI_VOICE_CM_IF_EVT_INBAND_BASE + CM_INBAND_EVENT_FWD_START_CONT_DTMF,
  QMI_VOICE_CM_IF_EVT_INBAND_FWD_STOP_CONT_DTMF     = QMI_VOICE_CM_IF_EVT_INBAND_BASE + CM_INBAND_EVENT_FWD_STOP_CONT_DTMF,
  QMI_VOICE_CM_IF_EVT_INBAND_IP_START_DTMF_IND     = QMI_VOICE_CM_IF_EVT_INBAND_BASE + CM_INBAND_EVENT_IP_START_DTMF_IND,
  QMI_VOICE_CM_IF_EVT_INBAND_IP_STOP_DTMF_IND     = QMI_VOICE_CM_IF_EVT_INBAND_BASE + CM_INBAND_EVENT_IP_STOP_DTMF_IND,
  QMI_VOICE_CM_IF_EVT_SUPS_BASE                     = 0x12000,

  #if defined (FEATURE_MMODE_SS_SUPS) || defined(FEATURE_MMODE_USS_SUPS)
  QMI_VOICE_CM_IF_EVT_CALL_SUPS                     = QMI_VOICE_CM_IF_EVT_CALL_BASE + CM_CALL_EVENT_SUPS,
  #endif
  #if defined (FEATURE_MMODE_CALL_SUPS) 
  QMI_VOICE_CM_IF_EVT_CALL_MNG_CALLS_CONF           = QMI_VOICE_CM_IF_EVT_CALL_BASE + CM_CALL_EVENT_MNG_CALLS_CONF,
  #endif 
  #if defined (FEATURE_MMODE_SS_SUPS) || defined(FEATURE_MMODE_USS_SUPS)
  QMI_VOICE_CM_IF_EVT_CALL_ORIG_MOD_TO_SUPS         = QMI_VOICE_CM_IF_EVT_CALL_BASE + CM_CALL_EVENT_ORIG_MOD_TO_SS,
  #endif
  #if defined (FEATURE_MMODE_CALL_SUPS) 
  QMI_VOICE_CM_IF_EVT_CALL_MODIFY_IND               = QMI_VOICE_CM_IF_EVT_CALL_BASE + CM_CALL_EVENT_MODIFY_IND,  
  QMI_VOICE_CM_IF_EVT_CALL_MODIFY_COMPLETE_CONF     = QMI_VOICE_CM_IF_EVT_CALL_BASE + CM_CALL_EVENT_MODIFY_COMPLETE_CONF,
  QMI_VOICE_CM_IF_EVT_CONF_AND_USER_INFO_IND        = QMI_VOICE_CM_IF_EVT_CALL_BASE + CM_CALL_EVENT_CONFERENCE_INFO,
  QMI_VOICE_CM_IF_EVT_CONFERENCE_JOIN_IND           = QMI_VOICE_CM_IF_EVT_CALL_BASE + CM_CALL_EVENT_JOIN_CONFERENCE,
  QMI_VOICE_CM_IF_EVT_MPTY_CALL_IND                 = QMI_VOICE_CM_IF_EVT_CALL_BASE + CM_CALL_EVENT_MPTY_CALL_IND,
  #endif
  #if defined(FEATURE_MMODE_SS_SUPS)
  QMI_VOICE_CM_IF_EVT_SUPS_REGISTER            = QMI_VOICE_CM_IF_EVT_SUPS_BASE + CM_SUPS_EVENT_REGISTER,
  QMI_VOICE_CM_IF_EVT_SUPS_REGISTER_CONF            = QMI_VOICE_CM_IF_EVT_SUPS_BASE + CM_SUPS_EVENT_REGISTER_CONF,
  QMI_VOICE_CM_IF_EVT_SUPS_ERASE               = QMI_VOICE_CM_IF_EVT_SUPS_BASE + CM_SUPS_EVENT_ERASE,
  QMI_VOICE_CM_IF_EVT_SUPS_ERASE_CONF               = QMI_VOICE_CM_IF_EVT_SUPS_BASE + CM_SUPS_EVENT_ERASE_CONF,
  QMI_VOICE_CM_IF_EVT_SUPS_ACTIVATE            = QMI_VOICE_CM_IF_EVT_SUPS_BASE + CM_SUPS_EVENT_ACTIVATE,
  QMI_VOICE_CM_IF_EVT_SUPS_ACTIVATE_CONF            = QMI_VOICE_CM_IF_EVT_SUPS_BASE + CM_SUPS_EVENT_ACTIVATE_CONF,
  QMI_VOICE_CM_IF_EVT_SUPS_DEACTIVATE          = QMI_VOICE_CM_IF_EVT_SUPS_BASE + CM_SUPS_EVENT_DEACTIVATE,
  QMI_VOICE_CM_IF_EVT_SUPS_DEACTIVATE_CONF          = QMI_VOICE_CM_IF_EVT_SUPS_BASE + CM_SUPS_EVENT_DEACTIVATE_CONF,
  QMI_VOICE_CM_IF_EVT_SUPS_INTERROGATE         = QMI_VOICE_CM_IF_EVT_SUPS_BASE + CM_SUPS_EVENT_INTERROGATE,
  QMI_VOICE_CM_IF_EVT_SUPS_INTERROGATE_CONF         = QMI_VOICE_CM_IF_EVT_SUPS_BASE + CM_SUPS_EVENT_INTERROGATE_CONF,
  QMI_VOICE_CM_IF_EVT_SUPS_REG_PASSWORD        = QMI_VOICE_CM_IF_EVT_SUPS_BASE + CM_SUPS_EVENT_REG_PASSWORD,
  QMI_VOICE_CM_IF_EVT_SUPS_REG_PASSWORD_CONF        = QMI_VOICE_CM_IF_EVT_SUPS_BASE + CM_SUPS_EVENT_REG_PASSWORD_CONF,
  #endif
  #if defined(FEATURE_MMODE_USS_SUPS)
  QMI_VOICE_CM_IF_EVT_SUPS_PROCESS_USS         = QMI_VOICE_CM_IF_EVT_SUPS_BASE + CM_SUPS_EVENT_PROCESS_USS,
  QMI_VOICE_CM_IF_EVT_SUPS_PROCESS_USS_CONF         = QMI_VOICE_CM_IF_EVT_SUPS_BASE + CM_SUPS_EVENT_PROCESS_USS_CONF,
  #endif
  QMI_VOICE_CM_IF_EVT_SUPS_EVENT_FWD_CHECK_IND      = QMI_VOICE_CM_IF_EVT_SUPS_BASE + CM_SUPS_EVENT_FWD_CHECK_IND,  
  #if defined(FEATURE_MMODE_USS_SUPS)
  QMI_VOICE_CM_IF_EVT_SUPS_USS_NOTIFY_IND           = QMI_VOICE_CM_IF_EVT_SUPS_BASE + CM_SUPS_EVENT_USS_NOTIFY_IND,
  QMI_VOICE_CM_IF_EVT_SUPS_USS_IND                  = QMI_VOICE_CM_IF_EVT_SUPS_BASE + CM_SUPS_EVENT_USS_IND,
  QMI_VOICE_CM_IF_EVT_SUPS_RELEASE_USS_IND          = QMI_VOICE_CM_IF_EVT_SUPS_BASE + CM_SUPS_EVENT_RELEASE_USS_IND,
  #endif
  #if defined(FEATURE_MMODE_USS_SUPS) || defined FEATURE_MMODE_SS_SUPS
  QMI_VOICE_CM_IF_EVT_SUPS_SS_MOD_TO_ORIG           = QMI_VOICE_CM_IF_EVT_SUPS_BASE + CM_SUPS_EVENT_SS_MOD_TO_ORIG,
  QMI_VOICE_CM_IF_EVT_SUPS_CC_RESULT_INFO           = QMI_VOICE_CM_IF_EVT_SUPS_BASE + CM_SUPS_EVENT_CC_RESULT_INFO,
  #endif


  #ifdef FEATURE_MMODE_SS_SUPS
  QMI_VOICE_CM_IF_EVT_SUPS_GET_PASSWORD_IND         = QMI_VOICE_CM_IF_EVT_SUPS_BASE + CM_SUPS_EVENT_GET_PASSWORD_IND,
  #endif

#ifdef FEATURE_MMODE_DISABLE_MISC_FEATURES
  QMI_VOICE_CM_IF_EVT_CALL_RAT_CHANGE               = QMI_VOICE_CM_IF_EVT_CALL_BASE + CM_CALL_EVENT_RAT_CHANGE,
#endif

  QMI_VOICE_CM_IF_EVT_PH_BASE                       = 0x13000,
  QMI_VOICE_CM_IF_EVT_PH_SUBSCRIPTION_AVAILABLE     = QMI_VOICE_CM_IF_EVT_PH_BASE + CM_PH_EVENT_SUBSCRIPTION_AVAILABLE,
  QMI_VOICE_CM_IF_EVT_PH_SELECTED_LINE              = QMI_VOICE_CM_IF_EVT_PH_BASE + CM_PH_EVENT_SELECTED_LINE,
  QMI_VOICE_CM_IF_EVT_PH_INFO                       = QMI_VOICE_CM_IF_EVT_PH_BASE + CM_PH_EVENT_INFO,
  QMI_VOICE_CM_IF_EVT_OPRT_MODE                     = QMI_VOICE_CM_IF_EVT_PH_BASE + CM_PH_EVENT_OPRT_MODE,
  QMI_VOICE_CM_IF_EVT_PH_RESET_ACM_COMPLETED             = QMI_VOICE_CM_IF_EVT_PH_BASE + CM_PH_EVENT_RESET_ACM_COMPLETED,
  QMI_VOICE_CM_IF_EVT_PH_SET_ACMMAX_COMPLETED            = QMI_VOICE_CM_IF_EVT_PH_BASE + CM_PH_EVENT_SET_ACMMAX_COMPLETED,
  QMI_VOICE_CM_IF_EVT_PH_FUNDS_LOW                       = QMI_VOICE_CM_IF_EVT_PH_BASE + CM_PH_EVENT_FUNDS_LOW,

  QMI_VOICE_CM_IF_EVT_SS_BASE                       = 0x14000,
  QMI_VOICE_CM_IF_EVT_SS_SRV_CHANGED                = QMI_VOICE_CM_IF_EVT_SS_BASE + CM_SS_EVENT_SRV_CHANGED,
  QMI_VOICE_CM_IF_EVT_SS_INFO                       = QMI_VOICE_CM_IF_EVT_SS_BASE + CM_SS_EVENT_INFO,

  QMI_VOICE_CM_IF_EVT_MAX,
  QMI_VOICE_CM_IF_EVT_NONE                          = 0xfffff
} qmi_voice_cm_if_evt_e_type;

#ifdef FEATURE_MMODE_CALL_SUPS
typedef enum
{
  QMI_VOICE_CM_IF_MNG_CALLS_RELEASE_HELD_OR_WAITING = 0x01 ,
  QMI_VOICE_CM_IF_MNG_CALLS_RELEASE_ACTIVE_ACCEPT_HELD_OR_WAITING = 0x02,
  QMI_VOICE_CM_IF_MNG_CALLS_HOLD_ACTIVE_ACCEPT_WAITING_OR_HELD = 0x03 ,
  QMI_VOICE_CM_IF_MNG_CALLS_HOLD_ALL_EXCEPT_SPECIFIED_CALL = 0x04,
  QMI_VOICE_CM_IF_MNG_CALLS_MAKE_CONFERENCE_CALL =0x05 ,
  QMI_VOICE_CM_IF_MNG_CALLS_EXPLICIT_CALL_TRANSFER =0x06,
  QMI_VOICE_CM_IF_MNG_CALLS_CCBS_ACTIVATION =0x07,
  QMI_VOICE_CM_IF_MNG_CALLS_END_ALL_CALLS =0x08,
  QMI_VOICE_CM_IF_MNG_CALLS_RELEASE_SPECIFIED_CALL = 0x09,
  QMI_VOICE_CM_IF_MNG_CALLS_LOCAL_HOLD = 0x0A,
  QMI_VOICE_CM_IF_MNG_CALLS_LOCAL_UNHOLD = 0x0B
} qmi_voice_cm_if_mng_calls_sups_e_type;
#endif
#ifdef FEATURE_MMODE_SS_SUPS
typedef enum
{
QMI_VOICE_CM_IF_SET_SUPS_FWD_UNCONDITIONAL = 0x01,
QMI_VOICE_CM_IF_SET_SUPS_FWD_MOBILEBUSY = 0x02,
QMI_VOICE_CM_IF_SET_SUPS_FWD_NOREPLY  = 0x03,
QMI_VOICE_CM_IF_SET_SUPS_FWD_UNREACHABLE = 0x04,
QMI_VOICE_CM_IF_SET_SUPS_FWD_ALLFORWARDING = 0x05,
QMI_VOICE_CM_IF_SET_SUPS_FWD_ALLCONDITIONAL = 0x06,
QMI_VOICE_CM_IF_SET_SUPS_BARR_ALLOUTGOING = 0x07,
QMI_VOICE_CM_IF_SET_SUPS_BARR_OUTGOINGINT = 0x08,
QMI_VOICE_CM_IF_SET_SUPS_BARR_OUTGOINGINTEXTOHOME = 0x09,
QMI_VOICE_CM_IF_SET_SUPS_BARR_ALLINCOMING = 0x0A,
QMI_VOICE_CM_IF_SET_SUPS_BARR_INCOMINGROAMING = 0x0B,
QMI_VOICE_CM_IF_SET_SUPS_BARR_ALLBARRING = 0x0C,
QMI_VOICE_CM_IF_SET_SUPS_BARR_ALLOUTGOINGBARRING = 0x0D,
QMI_VOICE_CM_IF_SET_SUPS_BARR_ALLINCOMINGBARRING = 0x0E,
QMI_VOICE_CM_IF_SET_SUPS_CALLWAITING = 0x0F,
QMI_VOICE_CM_IF_SET_SUPS_CLIP = 0x10,
QMI_VOICE_CM_IF_SET_SUPS_COLP = 0x12,
QMI_VOICE_CM_IF_SET_SUPS_COLR = 0x13,
QMI_VOICE_CM_IF_SET_SUPS_BARR_INCOMINGNUMBER = 0x15,
QMI_VOICE_CM_IF_SET_SUPS_BARR_INCOMINGANONYMOUS = 0x16
} qmi_voice_cm_if_set_sups_reason_e_type;
#endif

typedef enum
{
  QMI_VOICE_CM_IF_SYS_MODE_NO_SRV   = 0x0000,
  QMI_VOICE_CM_IF_SYS_MODE_CDMA     = 0x0001,
  QMI_VOICE_CM_IF_SYS_MODE_GSM      = 0x0002,
  QMI_VOICE_CM_IF_SYS_MODE_HDR      = 0x0004,
  QMI_VOICE_CM_IF_SYS_MODE_WCDMA    = 0x0008,
  QMI_VOICE_CM_IF_SYS_MODE_WLAN     = 0x0010,
  QMI_VOICE_CM_IF_SYS_MODE_LTE      = 0x0020,
  QMI_VOICE_CM_IF_SYS_MODE_TDS      = 0x0040,
  QMI_VOICE_CM_IF_SYS_MODE_GWL      = 0x002A,
  QMI_VOICE_CM_IF_SYS_MODE_GW       = 0x000A,
  QMI_VOICE_CM_IF_SYS_MODE_1XEVDO   = 0x0005
} qmi_voice_cm_if_sys_mode_e_type;


typedef enum
{
  QMI_VOICE_CM_IF_CALL_MODIFIED_CAUSE_NONE                              = 0x00,
  QMI_VOICE_CM_IF_CALL_MODIFIED_CAUSE_UPGRADE_DUE_TO_LOCAL_REQ          = 0x01,
  QMI_VOICE_CM_IF_CALL_MODIFIED_CAUSE_UPGRADE_DUE_TO_REMOTE_REQ         = 0x02,
  QMI_VOICE_CM_IF_CALL_MODIFIED_CAUSE_DOWNGRADE_DUE_TO_LOCAL_REQ        = 0x03,
  QMI_VOICE_CM_IF_CALL_MODIFIED_CAUSE_DOWNGRADE_DUE_TO_REMOTE_REQ       = 0x04,
  QMI_VOICE_CM_IF_CALL_MODIFIED_CAUSE_DOWNGRADE_DUE_TO_RTP_TIMEOUT      = 0x05,
  QMI_VOICE_CM_IF_CALL_MODIFIED_CAUSE_DOWNGRADE_DUE_TO_QOS              = 0x06,
  QMI_VOICE_CM_IF_CALL_MODIFIED_CAUSE_DOWNGRADE_DUE_TO_PACKET_LOSS      = 0x07,
  QMI_VOICE_CM_IF_CALL_MODIFIED_CAUSE_DOWNGRADE_DUE_TO_LOW_THRPUT       = 0x08,
  QMI_VOICE_CM_IF_CALL_MODIFIED_CAUSE_DOWNGRADE_DUE_TO_THERM_MITIGATION = 0x09,
  QMI_VOICE_CM_IF_CALL_MODIFIED_CAUSE_DOWNGRADE_DUE_TO_GENERIC_ERROR    = 0x0A,
  QMI_VOICE_CM_IF_CALL_MODIFIED_CAUSE_DOWNGRADE_DUE_TO_LIPSYNC          = 0x0B
} qmi_voice_cm_if_call_modified_cause_e_type;

typedef enum
{
QMI_FAILURE_CAUSE_OFFLINE=0,
QMI_FAILURE_CAUSE_CDMA_LOCK=20,
QMI_FAILURE_CAUSE_NO_SRV=21,
QMI_FAILURE_CAUSE_FADE=22,
QMI_FAILURE_CAUSE_INTERCEPT=23,
QMI_FAILURE_CAUSE_REORDER=24,
QMI_FAILURE_CAUSE_REL_NORMAL=25,
QMI_FAILURE_CAUSE_REL_SO_REJ=26,
QMI_FAILURE_CAUSE_INCOM_CALL=27,
QMI_FAILURE_CAUSE_ALERT_STOP=28,
QMI_FAILURE_CAUSE_CLIENT_END=29,
QMI_FAILURE_CAUSE_ACTIVATION=30,
QMI_FAILURE_CAUSE_MC_ABORT=31,
QMI_FAILURE_CAUSE_MAX_ACCESS_PROBE=32,
QMI_FAILURE_CAUSE_PSIST_N=33,
QMI_FAILURE_CAUSE_UIM_NOT_PRESENT=34,
QMI_FAILURE_CAUSE_ACC_IN_PROG=35,
QMI_FAILURE_CAUSE_ACC_FAIL=36,
QMI_FAILURE_CAUSE_RETRY_ORDER=37,
QMI_FAILURE_CAUSE_CCS_NOT_SUPPORTED_BY_BS=38,
QMI_FAILURE_CAUSE_NO_RESPONSE_FROM_BS=39,
QMI_FAILURE_CAUSE_REJECTED_BY_BS=40,
QMI_FAILURE_CAUSE_INCOMPATIBLE=41,
QMI_FAILURE_CAUSE_ACCESS_BLOCK=42,
QMI_FAILURE_CAUSE_ALREADY_IN_TC=43,
QMI_FAILURE_CAUSE_EMERGENCY_FLASHED=44,
QMI_FAILURE_CAUSE_USER_CALL_ORIG_DURING_GPS=45,
QMI_FAILURE_CAUSE_USER_CALL_ORIG_DURING_SMS=46,
QMI_FAILURE_CAUSE_USER_CALL_ORIG_DURING_DATA=47,
QMI_FAILURE_CAUSE_REDIR_OR_HANDOFF=48,
QMI_FAILURE_CAUSE_ACCESS_BLOCK_ALL=49,
QMI_FAILURE_CAUSE_OTASP_SPC_ERR=50,
QMI_FAILURE_CAUSE_IS707B_MAX_ACC=51,
QMI_FAILURE_CAUSE_ACC_FAIL_REJ_ORD=52,
QMI_FAILURE_CAUSE_ACC_FAIL_RETRY_ORD=53,
QMI_FAILURE_CAUSE_TIMEOUT_T42=54,
QMI_FAILURE_CAUSE_TIMEOUT_T40=55,
QMI_FAILURE_CAUSE_SRV_INIT_FAIL=56,
QMI_FAILURE_CAUSE_T50_EXP=57,
QMI_FAILURE_CAUSE_T51_EXP=58,
QMI_FAILURE_CAUSE_RL_ACK_TIMEOUT=59,
QMI_FAILURE_CAUSE_BAD_FL=60,
QMI_FAILURE_CAUSE_TRM_REQ_FAIL=61,
QMI_FAILURE_CAUSE_TIMEOUT_T41=62,
QMI_FAILURE_CAUSE_INCOM_REJ=102,
QMI_FAILURE_CAUSE_SETUP_REJ=103,
QMI_FAILURE_CAUSE_NETWORK_END=104,
QMI_FAILURE_CAUSE_NO_FUNDS=105,
QMI_FAILURE_CAUSE_NO_GW_SRV=106,
QMI_FAILURE_CAUSE_NO_CDMA_SRV=107,
QMI_FAILURE_CAUSE_NO_FULL_SRV=108,
QMI_FAILURE_CAUSE_MAX_PS_CALLS=109,
//ss_errors
QMI_FAILURE_CAUSE_UNKNOWN_SUBSCRIBER=110,
QMI_FAILURE_CAUSE_ILLEGAL_SUBSCRIBER=111,
QMI_FAILURE_CAUSE_BEARER_SERVICE_NOT_PROVISIONED=112,
QMI_FAILURE_CAUSE_TELE_SERVICE_NOT_PROVISIONED=113,
QMI_FAILURE_CAUSE_ILLEGAL_EQUIPMENT=114,
QMI_FAILURE_CAUSE_CALL_BARRED=115,
QMI_FAILURE_CAUSE_ILLEGAL_SS_OPERATION=116,
QMI_FAILURE_CAUSE_SS_ERROR_STATUS=117,
QMI_FAILURE_CAUSE_SS_NOT_AVAILABLE=118,
QMI_FAILURE_CAUSE_SS_SUBSCRIPTION_VIOLATION=119,
QMI_FAILURE_CAUSE_SS_INCOMPATIBILITY=120,
QMI_FAILURE_CAUSE_FACILITY_NOT_SUPPORTED=121,
QMI_FAILURE_CAUSE_ABSENT_SUBSCRIBER=122,
QMI_FAILURE_CAUSE_SHORT_TERM_DENIAL=123,
QMI_FAILURE_CAUSE_LONG_TERM_DENIAL=124,
QMI_FAILURE_CAUSE_SYSTEM_FAILURE=125,
QMI_FAILURE_CAUSE_DATA_MISSING=126,
QMI_FAILURE_CAUSE_UNEXPECTED_DATA_VALUE=127,
QMI_FAILURE_CAUSE_PWD_REGISTRATION_FAILURE=128,
QMI_FAILURE_CAUSE_NEGATIVE_PWD_CHECK=129,
QMI_FAILURE_CAUSE_NUM_OF_PWD_ATTEMPTS_VIOLATION=130,
QMI_FAILURE_CAUSE_POSITION_METHOD_FAILURE=131,
QMI_FAILURE_CAUSE_UNKNOWN_ALPHABET=132,
QMI_FAILURE_CAUSE_USSD_BUSY=133,
QMI_FAILURE_CAUSE_REJECTED_BY_USER=134,
QMI_FAILURE_CAUSE_REJECTED_BY_NETWORK=135,
QMI_FAILURE_CAUSE_DEFLECTION_TO_SERVED_SUBSCRIBER=136,
QMI_FAILURE_CAUSE_SPECIAL_SERVICE_CODE=137,
QMI_FAILURE_CAUSE_INVALID_DEFLECTED_TO_NUMBER=138,
QMI_FAILURE_CAUSE_MPTY_PARTICIPANTS_EXCEEDED=139,
QMI_FAILURE_CAUSE_RESOURCES_NOT_AVAILABLE=140,
//cc_causes
QMI_FAILURE_CAUSE_UNASSIGNED_NUMBER=141,
QMI_FAILURE_CAUSE_NO_ROUTE_TO_DESTINATION=142,
QMI_FAILURE_CAUSE_CHANNEL_UNACCEPTABLE=143,
QMI_FAILURE_CAUSE_OPERATOR_DETERMINED_BARRING=144,
QMI_FAILURE_CAUSE_NORMAL_CALL_CLEARING=145,
QMI_FAILURE_CAUSE_USER_BUSY=146,
QMI_FAILURE_CAUSE_NO_USER_RESPONDING=147,
QMI_FAILURE_CAUSE_USER_ALERTING_NO_ANSWER=148,
QMI_FAILURE_CAUSE_CALL_REJECTED=149,
QMI_FAILURE_CAUSE_NUMBER_CHANGED=150,
QMI_FAILURE_CAUSE_PREEMPTION=151,
QMI_FAILURE_CAUSE_DESTINATION_OUT_OF_ORDER=152,
QMI_FAILURE_CAUSE_INVALID_NUMBER_FORMAT=153,
QMI_FAILURE_CAUSE_FACILITY_REJECTED=154,
QMI_FAILURE_CAUSE_RESP_TO_STATUS_ENQUIRY=155,
QMI_FAILURE_CAUSE_NORMAL_UNSPECIFIED=156,
QMI_FAILURE_CAUSE_NO_CIRCUIT_OR_CHANNEL_AVAILABLE=157,
QMI_FAILURE_CAUSE_NETWORK_OUT_OF_ORDER=158,
QMI_FAILURE_CAUSE_TEMPORARY_FAILURE=159,
QMI_FAILURE_CAUSE_SWITCHING_EQUIPMENT_CONGESTION=160,
QMI_FAILURE_CAUSE_ACCESS_INFORMATION_DISCARDED=161,
QMI_FAILURE_CAUSE_REQUESTED_CIRCUIT_OR_CHANNEL_NOT_AVAILABLE=162,
QMI_FAILURE_CAUSE_RESOURCES_UNAVAILABLE_OR_UNSPECIFIED=163,
QMI_FAILURE_CAUSE_QOS_UNAVAILABLE=164,
QMI_FAILURE_CAUSE_REQUESTED_FACILITY_NOT_SUBSCRIBED=165,
QMI_FAILURE_CAUSE_INCOMING_CALLS_BARRED_WITHIN_CUG=166,
QMI_FAILURE_CAUSE_BEARER_CAPABILITY_NOT_AUTH=167,
QMI_FAILURE_CAUSE_BEARER_CAPABILITY_UNAVAILABLE=168,
QMI_FAILURE_CAUSE_SERVICE_OPTION_NOT_AVAILABLE=169,
QMI_FAILURE_CAUSE_ACM_LIMIT_EXCEEDED=170,
QMI_FAILURE_CAUSE_BEARER_SERVICE_NOT_IMPLEMENTED=171,
QMI_FAILURE_CAUSE_REQUESTED_FACILITY_NOT_IMPLEMENTED=172,
QMI_FAILURE_CAUSE_ONLY_DIGITAL_INFORMATION_BEARER_AVAILABLE=173,
QMI_FAILURE_CAUSE_SERVICE_OR_OPTION_NOT_IMPLEMENTED=174,
QMI_FAILURE_CAUSE_INVALID_TRANSACTION_IDENTIFIER=175,
QMI_FAILURE_CAUSE_USER_NOT_MEMBER_OF_CUG=176,
QMI_FAILURE_CAUSE_INCOMPATIBLE_DESTINATION=177,
QMI_FAILURE_CAUSE_INVALID_TRANSIT_NW_SELECTION=178,
QMI_FAILURE_CAUSE_SEMANTICALLY_INCORRECT_MESSAGE=179,
QMI_FAILURE_CAUSE_INVALID_MANDATORY_INFORMATION=180,
QMI_FAILURE_CAUSE_MESSAGE_TYPE_NON_IMPLEMENTED=181,
QMI_FAILURE_CAUSE_MESSAGE_TYPE_NOT_COMPATIBLE_WITH_PROTOCOL_STATE=182,
QMI_FAILURE_CAUSE_INFORMATION_ELEMENT_NON_EXISTENT=183,
QMI_FAILURE_CAUSE_CONDITONAL_IE_ERROR=184,
QMI_FAILURE_CAUSE_MESSAGE_NOT_COMPATIBLE_WITH_PROTOCOL_STATE=185,
QMI_FAILURE_CAUSE_RECOVERY_ON_TIMER_EXPIRED=186,
QMI_FAILURE_CAUSE_PROTOCOL_ERROR_UNSPECIFIED=187,
QMI_FAILURE_CAUSE_INTERWORKING_UNSPECIFIED=188,
QMI_FAILURE_CAUSE_OUTGOING_CALLS_BARRED_WITHIN_CUG=189,
QMI_FAILURE_CAUSE_NO_CUG_SELECTION=190,
QMI_FAILURE_CAUSE_UNKNOWN_CUG_INDEX=191,
QMI_FAILURE_CAUSE_CUG_INDEX_INCOMPATIBLE=192,
QMI_FAILURE_CAUSE_CUG_CALL_FAILURE_UNSPECIFIED=193,
QMI_FAILURE_CAUSE_CLIR_NOT_SUBSCRIBED=194,
QMI_FAILURE_CAUSE_CCBS_POSSIBLE=195,
QMI_FAILURE_CAUSE_CCBS_NOT_POSSIBLE=196,
//Reject_causes
QMI_FAILURE_CAUSE_IMSI_UNKNOWN_IN_HLR=197,
QMI_FAILURE_CAUSE_ILLEGAL_MS=198,
QMI_FAILURE_CAUSE_IMSI_UNKNOWN_IN_VLR=199,
QMI_FAILURE_CAUSE_IMEI_NOT_ACCEPTED=200,
QMI_FAILURE_CAUSE_ILLEGAL_ME=201,
QMI_FAILURE_CAUSE_PLMN_NOT_ALLOWED=202,
QMI_FAILURE_CAUSE_LOCATION_AREA_NOT_ALLOWED=203,
QMI_FAILURE_CAUSE_ROAMING_NOT_ALLOWED_IN_THIS_LOCATION_AREA=204,
QMI_FAILURE_CAUSE_NO_SUITABLE_CELLS_IN_LOCATION_AREA=205,
QMI_FAILURE_CAUSE_NETWORK_FAILURE=206,
QMI_FAILURE_CAUSE_MAC_FAILURE=207,
QMI_FAILURE_CAUSE_SYNCH_FAILURE=208,
QMI_FAILURE_CAUSE_NETWORK_CONGESTION=209,
QMI_FAILURE_CAUSE_GSM_AUTHENTICATION_UNACCEPTABLE=210,
QMI_FAILURE_CAUSE_SERVICE_NOT_SUBSCRIBED=211,
QMI_FAILURE_CAUSE_SERVICE_TEMPORARILY_OUT_OF_ORDER=212,
QMI_FAILURE_CAUSE_CALL_CANNOT_BE_IDENTIFIED=213,
QMI_FAILURE_CAUSE_INCORRECT_SEMANTICS_IN_MESSAGE=214,
QMI_FAILURE_CAUSE_MANDATORY_INFORMATION_INVALID=215,
QMI_FAILURE_CAUSE_ACCESS_STRATUM_FAILURE=216,
QMI_FAILURE_CAUSE_INVALID_SIM=217,
QMI_FAILURE_CAUSE_WRONG_STATE=218,
QMI_FAILURE_CAUSE_ACCESS_CLASS_BLOCKED=219,
QMI_FAILURE_CAUSE_NO_RESOURCES=220,
QMI_FAILURE_CAUSE_INVALID_USER_DATA=221,
//Additional MM cc_reject causes
QMI_FAILURE_CAUSE_TIMER_T3230_EXPIRED=222,
QMI_FAILURE_CAUSE_NO_CELL_AVAILABLE=223,
QMI_FAILURE_CAUSE_ABORT_MSG_RECEIVED=224,
QMI_FAILURE_CAUSE_RADIO_LINK_LOST=225,
//Additional CNM cc_reject causes
QMI_FAILURE_CAUSE_TIMER_T303_EXPIRED=226,
QMI_FAILURE_CAUSE_CNM_MM_REL_PENDING=227,
//Additional AS cc_reject causes
QMI_FAILURE_CAUSE_ACCESS_STRATUM_REJ_RR_REL_IND=228,
QMI_FAILURE_CAUSE_ACCESS_STRATUM_REJ_RR_RANDOM_ACCESS_FAILURE=229,
QMI_FAILURE_CAUSE_ACCESS_STRATUM_REJ_RRC_REL_IND=230,
QMI_FAILURE_CAUSE_ACCESS_STRATUM_REJ_RRC_CLOSE_SESSION_IND=231,
QMI_FAILURE_CAUSE_ACCESS_STRATUM_REJ_RRC_OPEN_SESSION_FAILURE=232,
QMI_FAILURE_CAUSE_ACCESS_STRATUM_REJ_LOW_LEVEL_FAIL=233,
QMI_FAILURE_CAUSE_ACCESS_STRATUM_REJ_LOW_LEVEL_FAIL_REDIAL_NOT_ALLOWED=234,
QMI_FAILURE_CAUSE_ACCESS_STRATUM_REJ_LOW_LEVEL_IMMED_RETRY=235,
QMI_FAILURE_CAUSE_ACCESS_STRATUM_REJ_ABORT_RADIO_UNAVAILABLE=236,
//Additional OTA cc_reject causes
QMI_FAILURE_CAUSE_SERVICE_OPTION_NOT_SUPPORTED=237,
//Additional AS cc_reject causes
QMI_FAILURE_CAUSE_ACCESS_STRATUM_REJ_LRRC_LOWER_LAYER_FAILURE=238,
//VT upgrade-downgrade failure causes
QMI_FAILURE_CAUSE_BAD_REQ_WAIT_INVITE=300,
QMI_FAILURE_CAUSE_BAD_REQ_WAIT_REINVITE=301,
QMI_FAILURE_CAUSE_INVALID_REMOTE_URI=302,
QMI_FAILURE_CAUSE_REMOTE_UNSUPP_MEDIA_TYPE=303,
QMI_FAILURE_CAUSE_PEER_NOT_REACHABLE=304,
QMI_FAILURE_CAUSE_NETWORK_NO_RESP_TIME_OUT=305,
QMI_FAILURE_CAUSE_NETWORK_NO_RESP_HOLD_FAIL=306,
QMI_FAILURE_CAUSE_DATA_CONNECTION_LOST=307,
QMI_FAILURE_CAUSE_UPGRADE_DOWNGRADE_REJ = 308,
QMI_FAILURE_CAUSE_SIP_403_FORBIDDEN=309,
QMI_FAILURE_CAUSE_NO_NETWORK_RESP = 310,
QMI_FAILURE_CAUSE_UPGRADE_DOWNGRADE_FAILED = 311,
QMI_FAILURE_CAUSE_UPGRADE_DOWNGRADE_CANCELLED = 312,
QMI_FAILURE_CAUSE_SSAC_REJECT = 313,
QMI_FAILURE_CAUSE_END_THERMAL_EMERGENCY = 314,
QMI_FAILURE_CAUSE_1XCSFB_SOFT_FAILURE = 315,
QMI_FAILURE_CAUSE_1XCSFB_HARD_FAILURE = 316,
QMI_FAILURE_CAUSE_CONNECTION_EST_FAILURE = 317,
QMI_FAILURE_CAUSE_CONNECTION_FAILURE = 318,
QMI_FAILURE_CAUSE_NO_RESPONSE_FROM_NW = 319,
QMI_FAILURE_CAUSE_ESR_FAILURE = 320,
QMI_FAILURE_CAUSE_MT_CSFB_NO_RESPONSE_FROM_NW = 321,
QMI_FAILURE_CAUSE_BUSY_EVERYWHERE = 322,
QMI_FAILURE_CAUSE_ANSWERED_ELSEWHERE = 323,
QMI_FAILURE_CAUSE_RLF_DURING_CC_DISCONNECT = 324,
QMI_FAILURE_CAUSE_TEMP_REDIAL_ALLOWED = 325,
QMI_FAILURE_CAUSE_PERM_REDIAL_NOT_NEEDED = 326,
QMI_FAILURE_CAUSE_LOW_BATTERY = 328,
QMI_FAILURE_CAUSE_CALL_DEFLECTED = 329,
QMI_FAILURE_CAUSE_RTP_RTCP_TIMEOUT = 330,
QMI_FAILURE_CAUSE_RINGING_RINGBACK_TIMEOUT = 331,
QMI_FAILURE_CAUSE_REG_RESTORATION = 332,
QMI_FAILURE_CAUSE_CODEC_ERROR = 333,
QMI_FAILURE_CAUSE_UNSUPPORTED_SDP = 334,
QMI_FAILURE_CAUSE_RTP_FAILURE = 335,
QMI_FAILURE_CAUSE_QoS_FAILURE = 336,
QMI_FAILURE_CAUSE_MULTIPLE_CHOICES = 337,
QMI_FAILURE_CAUSE_MOVED_PERMANENTLY = 338,
QMI_FAILURE_CAUSE_MOVED_TEMPORARILY = 339,
QMI_FAILURE_CAUSE_USE_PROXY = 340,
QMI_FAILURE_CAUSE_ALTERNATE_SERVICE = 341,
QMI_FAILURE_CAUSE_ALTERNATE_EMERGENCY_CALL = 342,
QMI_FAILURE_CAUSE_UNAUTHORIZED = 343,
QMI_FAILURE_CAUSE_PAYMENT_REQUIRED = 344,
QMI_FAILURE_CAUSE_METHOD_NOT_ALLOWED = 345,
QMI_FAILURE_CAUSE_NOT_ACCEPTABLE = 346,
QMI_FAILURE_CAUSE_PROXY_AUTHENTICATION_REQUIRED = 347,
QMI_FAILURE_CAUSE_GONE = 348,
QMI_FAILURE_CAUSE_REQUEST_ENTITY_TOO_LARGE = 349,
QMI_FAILURE_CAUSE_REQUEST_URI_TOO_LARGE = 350,
QMI_FAILURE_CAUSE_UNSUPPORTED_URI_SCHEME = 351,
QMI_FAILURE_CAUSE_BAD_EXTENSION = 352,
QMI_FAILURE_CAUSE_EXTENSION_REQUIRED = 353,
QMI_FAILURE_CAUSE_INTERVAL_TOO_BRIEF = 354,
QMI_FAILURE_CAUSE_CALL_OR_TRANS_DOES_NOT_EXIST = 355,
QMI_FAILURE_CAUSE_LOOP_DETECTED = 356,
QMI_FAILURE_CAUSE_TOO_MANY_HOPS = 357,
QMI_FAILURE_CAUSE_ADDRESS_INCOMPLETE = 358,
QMI_FAILURE_CAUSE_AMBIGUOUS = 359,
QMI_FAILURE_CAUSE_REQUEST_TERMINATED = 360,
QMI_FAILURE_CAUSE_NOT_ACCEPTABLE_HERE = 361,
QMI_FAILURE_CAUSE_REQUEST_PENDING = 362,
QMI_FAILURE_CAUSE_UNDECIPHERABLE = 363,
QMI_FAILURE_CAUSE_SERVER_INTERNAL_ERROR = 364,
QMI_FAILURE_CAUSE_NOT_IMPLEMENTED = 365,
QMI_FAILURE_CAUSE_BAD_GATEWAY = 366,
QMI_FAILURE_CAUSE_SERVER_TIME_OUT = 367,
QMI_FAILURE_CAUSE_VERSION_NOT_SUPPORTED = 368,
QMI_FAILURE_CAUSE_MESSAGE_TOO_LARGE = 369,
QMI_FAILURE_CAUSE_DOES_NOT_EXIST_ANYWHERE = 370,
QMI_FAILURE_CAUSE_SESS_DESCR_NOT_ACCEPTABLE = 371,
QMI_FAILURE_CAUSE_SRVCC_END_CALL = 372,
QMI_FAILURE_CAUSE_INTERNAL_ERROR = 373,
QMI_FAILURE_CAUSE_PRECONDITION_FAILURE  = 375,
QMI_FAILURE_CAUSE_HOLD_RESUME_FAILED = 387,
QMI_FAILURE_CAUSE_HOLD_RESUME_CANCELED = 388,
QMI_FAILURE_CAUSE_REINVITE_COLLISION = 389,
QMI_FAILURE_CAUSE_UNKNOWN=0xFFFF
}qmi_voice_cm_if_failure_cause_e_type;

typedef enum
{
  QMI_VOICE_CM_IF_AUTO_ANSWER_DISABLE = 0x00 ,
  QMI_VOICE_CM_IF_AUTO_ANSWER_ENABLE = 0x01 
} qmi_voice_cm_if_auto_answer_e_type;

typedef enum
{
  QMI_VOICE_CM_IF_GSM_AMR_STATUS_DISABLE = 0x00 ,
  QMI_VOICE_CM_IF_GSM_AMR_STATUS_ENABLE = 0x01 
} qmi_voice_cm_if_gsm_amr_status_e_type;

typedef enum
{
  QMI_VOICE_CM_IF_EVRC_CAPABILITY_DISABLE = 0x00 ,
  QMI_VOICE_CM_IF_EVRC_CAPABILITY_ENABLE = 0x01 
} qmi_voice_cm_if_evrc_capability_e_type;

typedef enum
{
  QMI_VOICE_CM_IF_SET_MODEM_SUCCESS = 0x00 ,
  QMI_VOICE_CM_IF_SET_MODEM_FAILURE = 0x01 
} qmi_voice_cm_if_set_modem_status_e_type;

typedef enum
{
  QMI_VOICE_CM_IF_CC_RESULT_NO_MODIFICATIONS,
  QMI_VOICE_CM_IF_CC_RESULT_VOICE_MODIFIED_TO_SUPS,
  QMI_VOICE_CM_IF_CC_RESULT_SUPS_MODIFIED_TO_SUPS,
  QMI_VOICE_CM_IF_CC_RESULT_SUPS_MODIFIED_TO_VOICE,
  QMI_VOICE_CM_IF_CC_RESULT_MAX
} qmi_voice_cm_if_cc_result_e_type;

typedef enum
{
  QMI_VOICE_CM_IF_CC_MOD_TO_VOICE = 0x00,
  QMI_VOICE_CM_IF_CC_MOD_TO_SS = 0x01,
  QMI_VOICE_CM_IF_CC_MOD_TO_USSD = 0x02
}qmi_voice_cm_if_cc_mod_e_type;

typedef enum
{
  QMI_VOICE_CM_IF_ALS_LINE_SWITCH_NOT_ALLOWED   = 0x00,
  QMI_VOICE_CM_IF_ALS_LINE_SWITCH_ALLOWED   = 0x01
}qmi_voice_cm_if_als_line_switch_option_e_type;

#ifdef FEATURE_MMODE_CALL_SUPS
typedef enum
{
  QMI_VOICE_CM_IF_MNG_IP_CALLS_RELEASE_HELD_OR_WAITING = 0x01,
  QMI_VOICE_CM_IF_MNG_IP_CALLS_RELEASE_ACTIVE_ACCEPT_HELD_OR_WAITING = 0x02,
  QMI_VOICE_CM_IF_MNG_IP_CALLS_HOLD_ACTIVE_ACCEPT_WAITING_OR_HELD = 0x03,
  QMI_VOICE_CM_IF_MNG_IP_CALLS_MAKE_CONFERENCE_CALL =0x04,
  QMI_VOICE_CM_IF_MNG_IP_CALLS_END_ALL_CALLS =0x05,
  QMI_VOICE_CM_IF_MNG_IP_CALLS_MODIFY_CALL =0x06,
  QMI_VOICE_CM_IF_MNG_IP_CALLS_MODIFY_ACCEPT =0x07,
  QMI_VOICE_CM_IF_MNG_IP_CALLS_MODIFY_REJECT =0x08,
  QMI_VOICE_CM_IF_MNG_IP_CALLS_RELEASE_SPECIFIED_CALL_FROM_CONFERENCE =0x09,
  QMI_VOICE_CM_IF_MNG_IP_CALLS_ADD_PARTICIPANT =0x0A,
  QMI_VOICE_CM_IF_MNG_IP_CALLS_CALL_DEFLECTION =0x0B,
  QMI_VOICE_CM_IF_MNG_IP_CALLS_HOLD_PER_CALL = 0x0C,
  QMI_VOICE_CM_IF_MNG_IP_CALLS_RESUME_PER_CALL = 0x0D,
  QMI_VOICE_CM_IF_MNG_IP_CALLS_SWITCH_SPEECH_CODEC = 0x0E
} qmi_voice_cm_if_mng_ip_calls_sups_e_type;
#endif

typedef enum
{
  QMI_VOICE_CM_IF_VOICE_CALL_ATTRIB_NONE = 0x00,
  QMI_VOICE_CM_IF_VOICE_CALL_ATTRIB_TX_ONLY = 0x01,
  QMI_VOICE_CM_IF_VOICE_CALL_ATTRIB_RX_ONLY = 0x02,
  QMI_VOICE_CM_IF_VOICE_CALL_ATTRIB_TX_RX = 0x03 
} qmi_voice_cm_if_voice_call_attributes_e_type;

#ifndef FEATURE_MMODE_DISABLE_MISC_FEATURES
typedef enum
{
  QMI_VOICE_CM_IF_VS_VERSION_NONE          = 0x00,
  QMI_VOICE_CM_IF_VS_VERSION_RCS_E         = 0x01,
  QMI_VOICE_CM_IF_VS_VERSION_RCS_V5        = 0x02,
  QMI_VOICE_CM_IF_VS_VERSION_MAX
} qmi_voice_cm_if_vs_version_e_type;
#endif

typedef enum
{
  QMI_VOICE_CM_IF_ECALL_TYPE_NONE,
  QMI_VOICE_CM_IF_ECALL_TYPE_TEST = 0x01,
  QMI_VOICE_CM_IF_ECALL_TYPE_EMERGENCY = 0x02,  
  QMI_VOICE_CM_IF_ECALL_TYPE_RECONFIG = 0x03,
  QMI_VOICE_CM_IF_ECALL_TYPE_MAX
}qmi_voice_cm_if_eCall_type_e_type;

typedef enum
{
  QMI_VOICE_CM_IF_END_OFFLINE            = CM_CALL_END_OFFLINE,
  QMI_VOICE_CM_IF_CDMA_LOCK              = CM_CALL_END_CDMA_LOCK,
  QMI_VOICE_CM_IF_END_FADE               = CM_CALL_END_FADE,
  QMI_VOICE_CM_IF_END_REL_NORMAL         = CM_CALL_END_REL_NORMAL,
  QMI_VOICE_CM_IF_END_NO_FUNDS           = CM_CALL_END_NO_FUNDS,
  QMI_VOICE_CM_IF_END_NO_GW_SRV          = CM_CALL_END_NO_GW_SRV,
  QMI_VOICE_CM_IF_END_NO_CDMA_SRV        = CM_CALL_END_NO_CDMA_SRV,
  QMI_VOICE_CM_IF_END_NO_FULL_SRV        = CM_CALL_END_NO_FULL_SRV,
  QMI_VOICE_CM_IF_END_MAX_PS_CALLS       = CM_CALL_END_MAX_PS_CALLS,  
  QMI_VOICE_CM_IF_END_UNASSIGNED_NUMBER                             =141,
  QMI_VOICE_CM_IF_END_NO_ROUTE_TO_DESTINATION,
  QMI_VOICE_CM_IF_END_CHANNEL_UNACCEPTABLE,
  QMI_VOICE_CM_IF_END_OPERATOR_DETERMINED_BARRING,
  QMI_VOICE_CM_IF_END_NORMAL_CALL_CLEARING,                         /*145*/
  QMI_VOICE_CM_IF_END_USER_BUSY,
  QMI_VOICE_CM_IF_END_NO_USER_RESPONDING,
  QMI_VOICE_CM_IF_END_USER_ALERTING_NO_ANSWER,
  QMI_VOICE_CM_IF_END_CALL_REJECTED,
  QMI_VOICE_CM_IF_END_NUMBER_CHANGED,                               /*150*/
  QMI_VOICE_CM_IF_END_PREEMPTION,
  QMI_VOICE_CM_IF_END_DESTINATION_OUT_OF_ORDER,
  QMI_VOICE_CM_IF_END_INVALID_NUMBER_FORMAT,
  QMI_VOICE_CM_IF_END_FACILITY_REJECTED,
  QMI_VOICE_CM_IF_END_RESP_TO_STATUS_ENQUIRY,                       /*155*/
  QMI_VOICE_CM_IF_END_NORMAL_UNSPECIFIED,
  QMI_VOICE_CM_IF_END_NO_CIRCUIT_OR_CHANNEL_AVAILABLE,
  QMI_VOICE_CM_IF_END_NETWORK_OUT_OF_ORDER,
  QMI_VOICE_CM_IF_END_TEMPORARY_FAILURE,
  QMI_VOICE_CM_IF_END_SWITCHING_EQUIPMENT_CONGESTION,               /*160*/
  QMI_VOICE_CM_IF_END_ACCESS_INFORMATION_DISCARDED,
  QMI_VOICE_CM_IF_END_REQ_CIRCUIT_OR_CHANNEL_NOT_AVAILABLE,
  QMI_VOICE_CM_IF_END_RESOURCES_UNAVAILABLE_OR_UNSPECIFIED,
  QMI_VOICE_CM_IF_END_QOS_UNAVAILABLE,
  QMI_VOICE_CM_IF_END_REQ_FACILITY_NOT_SUBSCRIBED,                  /*165*/
  QMI_VOICE_CM_IF_END_INCOM_CALLS_BARRED_WITHIN_CUG,
  QMI_VOICE_CM_IF_END_BEARER_CAP_NOT_AUTH,
  QMI_VOICE_CM_IF_END_BEARER_CAP_UNAVAILABLE,
  QMI_VOICE_CM_IF_END_SERVICE_OPTION_NOT_AVAILABLE,
  QMI_VOICE_CM_IF_END_ACM_LIMIT_EXCEEDED,                           /*170*/
  QMI_VOICE_CM_IF_END_BEARER_SERVICE_NOT_IMPLEMENTED,
  QMI_VOICE_CM_IF_END_REQ_FACILITY_NOT_IMPLEMENTED,
  QMI_VOICE_CM_IF_END_ONLY_DIGITAL_INFO_BEARER_AVAILABLE,
  QMI_VOICE_CM_IF_END_SERVICE_OR_OPTION_NOT_IMPLEMENTED,
  QMI_VOICE_CM_IF_END_INVALID_TRANSACTION_IDENTIFIER,               /*175*/
  QMI_VOICE_CM_IF_END_USER_NOT_MEMBER_OF_CUG,
  QMI_VOICE_CM_IF_END_INCOMPATIBLE_DESTINATION,
  QMI_VOICE_CM_IF_END_INVALID_TRANSIT_NW_SELECTION,
  QMI_VOICE_CM_IF_END_SEMNATICALLY_INCORRECT_MESSAGE,
  QMI_VOICE_CM_IF_END_INVALID_MANDATORY_INFORMATION,                /*180*/
  QMI_VOICE_CM_IF_END_MESSAGE_TYPE_NOT_IMPLEMENTED,
  QMI_VOICE_CM_IF_END_MSG_TYPE_NOT_COMPATIBLE_WITH_PROTOCOL_STATE,
  QMI_VOICE_CM_IF_END_INFORMATION_ELEMENT_NON_EXISTENT,
  QMI_VOICE_CM_IF_END_CONDITIONAL_IE_ERROR,
  QMI_VOICE_CM_IF_END_MSG_NOT_COMPATIBLE_WITH_PROTOCOL_STATE,       /*185*/
  QMI_VOICE_CM_IF_END_RECOVERY_ON_TIMER_EXPIRED,
  QMI_VOICE_CM_IF_END_PROTOCOL_ERROR_UNSPECIFIED,
  QMI_VOICE_CM_IF_END_INTERWORKING_UNSPECIFIED,
  QMI_VOICE_CM_IF_END_OUTGOING_CALLS_BARRED_WITHIN_CUG,
  QMI_VOICE_CM_IF_END_NO_CUG_SELECTION,                             /*190*/
  QMI_VOICE_CM_IF_END_UNKNOWN_CUG_INDEX,
  QMI_VOICE_CM_IF_END_CUG_INDEX_INCOMPATIBLE,
  QMI_VOICE_CM_IF_END_CUG_CALL_FAILURE_UNSPECIFIED,
  QMI_VOICE_CM_IF_END_CLIR_NOT_SUBSCRIBED,
  QMI_VOICE_CM_IF_END_CCBS_POSSIBLE,                                /*195*/
  QMI_VOICE_CM_IF_END_CCBS_NOT_POSSIBLE,
  QMI_VOICE_CM_IF_END_IMSI_UNKNOWN_IN_HLR,
  QMI_VOICE_CM_IF_END_ILLEGAL_MS,
  QMI_VOICE_CM_IF_END_IMSI_UNKNOWN_IN_VLR,
  QMI_VOICE_CM_IF_END_IMEI_NOT_ACCEPTED,                            /*200*/
  QMI_VOICE_CM_IF_END_ILLEGAL_ME,
  QMI_VOICE_CM_IF_END_PLMN_NOT_ALLOWED,
  QMI_VOICE_CM_IF_END_LOCATION_AREA_NOT_ALLOWED,
  QMI_VOICE_CM_IF_END_ROAMING_NOT_ALLOWED_IN_THIS_LOC_AREA,
  QMI_VOICE_CM_IF_END_NO_SUITABLE_CELLS_IN_LOC_AREA,                /*205*/
  QMI_VOICE_CM_IF_END_NETWORK_FAILURE,
  QMI_VOICE_CM_IF_END_MAC_FAILURE,
  QMI_VOICE_CM_IF_END_SYNCH_FAILURE,
  QMI_VOICE_CM_IF_END_NETWORK_CONGESTION,
  QMI_VOICE_CM_IF_END_GSM_AUTHENTICATION_UNACCEPTABLE,              /*210*/    
  QMI_VOICE_CM_IF_END_SERVICE_NOT_SUBSCRIBED,
  QMI_VOICE_CM_IF_END_SERVICE_TEMPORARILY_OUT_OF_ORDER,
  QMI_VOICE_CM_IF_END_CALL_CANNOT_BE_IDENTIFIED,
  QMI_VOICE_CM_IF_END_INCORRECT_SEMANTICS_IN_MESSAGE,
  QMI_VOICE_CM_IF_END_MANDATORY_INFORMATION_INVALID,                /*215*/
  QMI_VOICE_CM_IF_END_ACCESS_STRATUM_FAILURE,
  QMI_VOICE_CM_IF_END_INVALID_SIM,
  QMI_VOICE_CM_IF_END_WRONG_STATE,
  QMI_VOICE_CM_IF_END_ACCESS_CLASS_BLOCKED,
  QMI_VOICE_CM_IF_END_NO_RESOURCES,                                 /*220*/
  QMI_VOICE_CM_IF_END_INVALID_USER_DATA,
  //Additional MM cc_reject causes
  QMI_VOICE_CM_IF_END_TIMER_T3230_EXPIRED=222,
  QMI_VOICE_CM_IF_END_NO_CELL_AVAILABLE=223,
  QMI_VOICE_CM_IF_END_ABORT_MSG_RECEIVED=224,
  QMI_VOICE_CM_IF_END_RADIO_LINK_LOST=225,
  //Additional CNM cc_reject causes
  QMI_VOICE_CM_IF_END_TIMER_T303_EXPIRED=226,
  QMI_VOICE_CM_IF_END_CNM_MM_REL_PENDING=227,
  //Additional AS cc_reject causes
  QMI_VOICE_CM_IF_END_ACCESS_STRATUM_REJ_RR_REL_IND=228,
  QMI_VOICE_CM_IF_END_ACCESS_STRATUM_REJ_RR_RANDOM_ACCESS_FAILURE=229,
  QMI_VOICE_CM_IF_END_ACCESS_STRATUM_REJ_RRC_REL_IND=230,
  QMI_VOICE_CM_IF_END_ACCESS_STRATUM_REJ_RRC_CLOSE_SESSION_IND=231,
  QMI_VOICE_CM_IF_END_ACCESS_STRATUM_REJ_RRC_OPEN_SESSION_FAILURE=232,
  QMI_VOICE_CM_IF_END_ACCESS_STRATUM_REJ_LOW_LEVEL_FAIL=233,
  QMI_VOICE_CM_IF_END_ACCESS_STRATUM_REJ_LOW_LEVEL_FAIL_REDIAL_NOT_ALLOWED=234,
  QMI_VOICE_CM_IF_END_ACCESS_STRATUM_REJ_LOW_LEVEL_IMMED_RETRY=235,
  QMI_VOICE_CM_IF_END_ACCESS_STRATUM_REJ_ABORT_RADIO_UNAVAILABLE=236,
  //Additional OTA cc_reject causes
  QMI_VOICE_CM_IF_END_SERVICE_OPTION_NOT_SUPPORTED=237,
  //Additional AS cc_reject causes
  QMI_VOICE_CM_IF_END_ACCESS_STRATUM_REJ_LRRC_LOWER_LAYER_FAILURE=238,
  //Additional IP Call End Reasons
  QMI_VOICE_CM_IF_END_BAD_REQ_WAIT_INVITE=300,
  QMI_VOICE_CM_IF_END_BAD_REQ_WAIT_REINVITE=301,
  QMI_VOICE_CM_IF_END_INVALID_REMOTE_URI=302,
  QMI_VOICE_CM_IF_END_REMOTE_UNSUPP_MEDIA_TYPE=303,
  QMI_VOICE_CM_IF_END_PEER_NOT_REACHABLE=304,
  QMI_VOICE_CM_IF_END_NETWORK_NO_RESP_TIME_OUT=305,
  QMI_VOICE_CM_IF_END_NETWORK_NO_RESP_HOLD_FAIL=306,
  QMI_VOICE_CM_IF_END_DATA_CONNECTION_LOST=307,
  QMI_VOICE_CM_IF_END_UPGRADE_DOWNGRADE_REJ=308,
  QMI_VOICE_CM_IF_END_SIP_403_FORBIDDEN=309,
  QMI_VOICE_CM_IF_END_NO_NETWORK_RESP = 310,
  QMI_VOICE_CM_IF_END_UPGRADE_DOWNGRADE_FAILED = 311,
  QMI_VOICE_CM_IF_END_UPGRADE_DOWNGRADE_CANCELLED = 312,
  QMI_VOICE_CM_IF_END_SSAC_REJECT = 313,
  QMI_VOICE_CM_IF_END_THERMAL_EMERGENCY = 314,
  QMI_VOICE_CM_IF_END_1XCSFB_SOFT_FAILURE = 315,
  QMI_VOICE_CM_IF_END_1XCSFB_HARD_FAILURE  = 316,
  QMI_VOICE_CM_IF_END_CONNECTION_EST_FAILURE = 317,
  QMI_VOICE_CM_IF_END_CONNECTION_FAILURE = 318,
  QMI_VOICE_CM_IF_END_NO_RESPONSE_FROM_NW = 319,
  QMI_VOICE_CM_IF_END_ESR_FAILURE = 320,
  QMI_VOICE_CM_IF_END_MT_CSFB_NO_RESPONSE_FROM_NW = 321,
  QMI_VOICE_CM_IF_END_BUSY_EVERYWHERE = 322,
  QMI_VOICE_CM_IF_END_ANSWERED_ELSEWHERE = 323,
  QMI_VOICE_CM_IF_END_RLF_DURING_CC_DISCONNECT =324,
  QMI_VOICE_CM_IF_END_TEMP_REDIAL_ALLOWED = 325,
  QMI_VOICE_CM_IF_END_PERM_REDIAL_NOT_NEEDED = 326,
  QMI_VOICE_CM_IF_END_LOW_BATTERY = 328,
  QMI_VOICE_CM_IF_END_CALL_DEFLECTED = 329,
  QMI_VOICE_CM_IF_END_RTP_RTCP_TIMEOUT = 330,
  QMI_VOICE_CM_IF_END_RINGING_RINGBACK_TIMEOUT = 331,
  QMI_VOICE_CM_IF_END_REG_RESTORATION = 332,
  QMI_VOICE_CM_IF_END_CODEC_ERROR = 333,
  QMI_VOICE_CM_IF_END_UNSUPPORTED_SDP = 334,
  QMI_VOICE_CM_IF_END_RTP_FAILURE = 335,
  QMI_VOICE_CM_IF_END_QoS_FAILURE = 336,
  QMI_VOICE_CM_IF_END_MULTIPLE_CHOICES = 337,
  QMI_VOICE_CM_IF_END_MOVED_PERMANENTLY = 338,
  QMI_VOICE_CM_IF_END_MOVED_TEMPORARILY = 339,
  QMI_VOICE_CM_IF_END_USE_PROXY = 340,
  QMI_VOICE_CM_IF_END_ALTERNATE_SERVICE = 341,
  QMI_VOICE_CM_IF_END_ALTERNATE_EMERGENCY_CALL = 342,
  QMI_VOICE_CM_IF_END_UNAUTHORIZED = 343,
  QMI_VOICE_CM_IF_END_PAYMENT_REQUIRED = 344,
  QMI_VOICE_CM_IF_END_METHOD_NOT_ALLOWED = 345,
  QMI_VOICE_CM_IF_END_NOT_ACCEPTABLE = 346,
  QMI_VOICE_CM_IF_END_PROXY_AUTHENTICATION_REQUIRED = 347,
  QMI_VOICE_CM_IF_END_GONE = 348,
  QMI_VOICE_CM_IF_END_REQUEST_ENTITY_TOO_LARGE = 349,
  QMI_VOICE_CM_IF_END_REQUEST_URI_TOO_LARGE = 350,
  QMI_VOICE_CM_IF_END_UNSUPPORTED_URI_SCHEME = 351,
  QMI_VOICE_CM_IF_END_BAD_EXTENSION = 352,
  QMI_VOICE_CM_IF_END_EXTENSION_REQUIRED = 353,
  QMI_VOICE_CM_IF_END_INTERVAL_TOO_BRIEF = 354,
  QMI_VOICE_CM_IF_END_CALL_OR_TRANS_DOES_NOT_EXIST = 355,
  QMI_VOICE_CM_IF_END_LOOP_DETECTED = 356,
  QMI_VOICE_CM_IF_END_TOO_MANY_HOPS = 357,
  QMI_VOICE_CM_IF_END_ADDRESS_INCOMPLETE = 358,
  QMI_VOICE_CM_IF_END_AMBIGUOUS = 359,
  QMI_VOICE_CM_IF_END_REQUEST_TERMINATED = 360,
  QMI_VOICE_CM_IF_END_NOT_ACCEPTABLE_HERE = 361,
  QMI_VOICE_CM_IF_END_REQUEST_PENDING = 362,
  QMI_VOICE_CM_IF_END_UNDECIPHERABLE = 363,
  QMI_VOICE_CM_IF_END_SERVER_INTERNAL_ERROR = 364,
  QMI_VOICE_CM_IF_END_NOT_IMPLEMENTED = 365,
  QMI_VOICE_CM_IF_END_BAD_GATEWAY = 366,
  QMI_VOICE_CM_IF_END_SERVER_TIME_OUT = 367,
  QMI_VOICE_CM_IF_END_VERSION_NOT_SUPPORTED = 368,
  QMI_VOICE_CM_IF_END_MESSAGE_TOO_LARGE = 369,
  QMI_VOICE_CM_IF_END_DOES_NOT_EXIST_ANYWHERE = 370,
  QMI_VOICE_CM_IF_END_SESS_DESCR_NOT_ACCEPTABLE = 371,
  QMI_VOICE_CM_IF_END_SRVCC_END_CALL = 372,
  QMI_VOICE_CM_IF_END_INTERNAL_ERROR = 373,
  QMI_VOICE_CM_IF_END_PRECONDITION_FAILURE  = 375,
  QMI_VOICE_CM_IF_END_FALLBACK_TO_CS = 380,
  QMI_VOICE_CM_IF_END_DEAD_BATTERY = 381,
  QMI_VOICE_CM_IF_END_HO_NOT_FEASIBLE = 382,
  QMI_VOICE_CM_IF_END_PDN_DISCONNECTED = 383,
  QMI_VOICE_CM_IF_END_REJECTED_ELSEWHERE = 384,
  QMI_VOICE_CM_IF_END_CALL_PULLED   = 385,
  QMI_VOICE_CM_IF_END_CALL_PULL_OUT_OF_SYNC = 386,
  QMI_VOICE_CM_IF_END_HOLD_RESUME_FAILED = 387,
  QMI_VOICE_CM_IF_END_HOLD_RESUME_CANCELED = 388,
  QMI_VOICE_CM_IF_END_REINVITE_COLLISION = 389,
  QMI_VOICE_CM_IF_END_PROTOCOL_Q850_ERROR = 390,

  QMI_VOICE_CM_IF_END_INCOMING_REJ_CAUSE_CALL_ONGOING_CW_DISABLED = 393,
  QMI_VOICE_CM_IF_END_INCOMING_REJ_CAUSE_CALL_ON_OTHER_SUB = 394,
  QMI_VOICE_CM_IF_END_INCOMING_REJ_CAUSE_1X_COLLISION = 395,
  QMI_VOICE_CM_IF_END_CAUSE_SRV_NOT_REGISTERED = 396,
  QMI_VOICE_CM_IF_END_CAUSE_CALL_TYPE_NOT_ALLOWED = 397,
  QMI_VOICE_CM_IF_END_CAUSE_EMRG_CALL_ONGOING  = 398,
  QMI_VOICE_CM_IF_END_CAUSE_CALL_SETUP_ONGOING = 399,
  QMI_VOICE_CM_IF_END_CAUSE_MAX_CALL_LIMIT_REACHED = 400,
  QMI_VOICE_CM_IF_END_CAUSE_UNSUPPORTED_SIP_HDRS = 401,
  QMI_VOICE_CM_IF_END_CAUSE_CALL_TRANSFER_ONGOING = 402,
  QMI_VOICE_CM_IF_END_CAUSE_PRACK_TIMEOUT= 403,
  QMI_VOICE_CM_IF_END_CAUSE_QOS_FAILURE = 404,
  QMI_VOICE_CM_IF_END_CAUSE_ONGOING_HANDOVER = 405, 
  QMI_VOICE_CM_IF_END_CAUSE_VT_WITH_TTY_NOT_ALLOWED = 406, 
  QMI_VOICE_CM_IF_END_CAUSE_CALL_UPGRADE_ONGOING = 407,
  QMI_VOICE_CM_IF_END_CAUSE_CONFERENCE_WITH_TTY_NOT_ALLOWED = 408,
  QMI_VOICE_CM_IF_END_CAUSE_CALL_CONFERENCE_ONGOING = 409,
  QMI_VOICE_CM_IF_END_CAUSE_VT_WITH_AVPF_NOT_ALLOWED = 410,
  QMI_VOICE_CM_IF_END_CAUSE_ENCRYPTION_CALL_ONGOING = 411,
  QMI_VOICE_CM_IF_END_CAUSE_INCOM_REJ_CAUSE_UI_NOT_READY = 412,
  QMI_VOICE_CM_IF_END_CAUSE_CS_CALL_ONGOING = 413
}qmi_voice_cm_if_end_reason_e_type;


typedef struct
{
  uint8       alpha_dcs;
  uint8       alpha_len;
  uint8       alpha_text[QMI_VOICE_CM_IF_MAX_ALPHA_TAG_CHARS];
}qmi_voice_cm_if_alpha_id_s;

/*introduced when max possibel alpha size is increased to 255 */
typedef struct
{
  uint8       alpha_dcs;
  uint8       alpha_len;
  uint8       alpha_text[QMI_VOICE_CM_IF_MAX_CC_ALPHA_TAG_CHARS];
}qmi_voice_cm_if_cc_alpha_id_s;

typedef struct
{
  /* CM subsystem Voice specific data for cmdlist */
  cm_privacy_pref_e_type           privacy_pref;
} qmi_voice_cm_if_cmd_info_voice_type;

typedef struct
{
  uint8               name_presentation;
  uint8               coding_scheme;
  uint8               name_len;
  uint8               name[QMI_VOICE_CM_IF_MAX_ALPHA_TAG_CHARS];
}qmi_voice_cm_if_cnap_info_s_type;

typedef struct
{
  uint64         audio_attrib;
  uint32         audio_restrict_cause;
  uint64         video_attrib;
  uint32         video_restrict_cause;
}qmi_voice_cm_if_call_capabilities;

#ifdef FEATURE_UUS
typedef struct
{
  uint8               uus_type;
  uint8               uus_dcs;
  uint8               uus_data_len;
  uint8               uus_data[QMI_VOICE_CM_IF_MAX_UUS_DATA_LEN];
}qmi_voice_cm_if_uus_info_s_type;
#endif

typedef struct
{
   boolean                       present;
   char                          password[MAX_PWD_CHAR];

} qmi_voice_ss_password_T;

#if defined(FEATURE_MMODE_SS_SUPS) || defined FEATURE_MMODE_USS_SUPS
typedef struct
{
  /* CM subsystem Supplementary services specific data for cmdlist */
  int  ss_code;
  int  ss_ref;
  uint32  ss_service_class;              /* required for responding to interrogation result */
  qmi_voice_ss_password_T ss_pwd;      /* required for responding to password request from AMSS */
  uint8 cc_mod_conn_idx;
} qmi_voice_cm_if_cmd_info_sups_type;
#endif

typedef struct
{
  uint8                   pi;
  uint8                   len;
  uint8                   buf[CM_MAX_CALLED_INFO_CHARS];
} qmi_voice_cm_if_num_s_type;

typedef struct 
{
  uint8                   pi;
  uint8                   si;
  uint8                   num_type;
  uint8                   num_plan;
  uint8                   len;
  uint8                   buf[CM_MAX_CALLED_INFO_CHARS_IP];
} qmi_voice_cm_if_ip_num_s_type;

typedef struct 
{
  uint8                   text_len;
  uint16                   text[CM_MAX_DISPLAY_NUMBER_CHARS];
} qmi_voice_cm_if_display_text_s_type;


typedef struct 
{
  uint8                   info_len;
  uint8                   *info_text;
} qmi_voice_cm_if_adnl_call_info_s_type;

typedef struct 
{
  uint8                   name_len;
  uint16                   name[QMI_VOICE_CM_IF_MAX_IP_CALLER_NAME_LEN];
} qmi_voice_cm_if_ip_caller_name_s_type;


typedef struct 
{

  cm_npi_type              pi;
    /**< Presentation Indicator */
  cm_si_type               si;
    /**< screening Indicator */

  uint8                    num_type;
    /**< Number type */
  uint8                    num_plan;
    /**< Numbering Plan */
  uint8   len;
  uint8   num[CM_MAX_NUMBER_CHARS];
} qmi_voice_cm_if_num_info_s;

typedef struct
{

  cm_npi_type              pi;
    /**< Presentation Indicator */
  cm_si_type               si;
    /**< screening Indicator */

  uint8                    num_type;
    /**< Number type */
  uint8                    num_plan;
    /**< Numbering Plan */
  uint8   reason;
  uint8   len;
  uint8   num[CM_MAX_NUMBER_CHARS];
} qmi_voice_cm_if_redirect_num_info_s;


typedef struct
{
  byte                            diagnostic_length;
  byte                            diagnostics[MAX_DIAGNOSTICS_LENGTH];
}qmi_voice_cm_if_call_end_diagnostics_s_type;

typedef struct 
{
  uint8  end_reason_text_length;
  uint16 end_reason_text_buf[QMI_VOICE_CM_IF_MAX_END_REASON_TEXT_LEN];
}
qmi_voice_cm_if_end_reason_text_s_type;

typedef struct
{
  uint16 ip_hist_info_length;
  uint16 ip_hist_info_buf[QMI_VOICE_CM_IF_MAX_IP_HIST_INFO_LEN];
}qmi_voice_cm_if_ip_hist_info_s_type;

/* Unwanted call (Robocall) features
*/
typedef struct
{
  boolean                   is_nw_support_unwanted_call;
  uint32   mt_call_verstat;
  
}qmi_voice_unwanted_call_type;

typedef struct 
{
  uint8 alternate_uri_length;
  uint8 alternate_uri_buf[QMI_VOICE_SIP_URI_MAX_V02];
}
qmi_voice_cm_if_alternate_uri_s_type;


typedef struct 
{
  uint8                             call_id;
  uint8                             call_state;
  uint8                             call_type;
  uint8                             direction;
  uint8                             mode;
  uint8                             is_mpty;
  uint8                             als;
  boolean                           is_num_available;
  qmi_voice_cm_if_ip_num_s_type     num;
  boolean                           is_cnap_info_available;
  qmi_voice_cm_if_cnap_info_s_type  cnap_info;
  boolean                           is_alerting_type_available;
  uint8                             alerting_type;
  #ifdef FEATURE_UUS
  boolean                           is_uus_info_available;
  qmi_voice_cm_if_uus_info_s_type   uus_info;
  #endif
  boolean                           is_end_reason_available;
  uint16                            end_reason;
  boolean                           is_alpha_available;
  qmi_voice_cm_if_alpha_id_s   alpha_info;
  boolean                           is_conn_num_available;
  qmi_voice_cm_if_num_info_s        conn_num_data;
  boolean                             is_diagnostics_info_available;
  qmi_voice_cm_if_call_end_diagnostics_s_type diagnostic_data;  
  boolean                             is_as_id_available;   /* Subscription ID for Voice DSDS info valid */
  uint8                                       as_id;
  boolean                           is_called_party_num_available;
  qmi_voice_cm_if_num_info_s        called_party_num_data;
  boolean                           is_redirecting_party_num_available;
  qmi_voice_cm_if_num_info_s        redirecting_party_num_data;
  boolean                           is_alerting_pattern_available;
  uint32                             alerting_pattern;
  boolean                             is_audio_attrib_available;   /* Audio Attributes for VOIP/VT calls */
  uint64                              audio_attrib;
  boolean                             is_video_attrib_available;   /* Video Attributes for VOIP/VT calls */

  #ifndef FEATURE_MMODE_DISABLE_MISC_FEATURES
  uint64                              video_attrib;    
  boolean                             is_vs_call_variant_valid;
  uint32                               vs_call_variant;
  boolean                             is_srvcc_call_available;
  boolean                             is_srvcc_call;
  boolean                             is_parent_id_available;
  uint8                               parent_call_id;
  uint8                               is_parent_call_id_cleared;
  #endif
 

  boolean                             is_peer_cap_available;
  qmi_voice_cm_if_call_capabilities   peer_cap;
  boolean                             is_local_cap_available;
  qmi_voice_cm_if_call_capabilities   local_cap;
  boolean                             is_child_num_available;
  qmi_voice_cm_if_ip_num_s_type       child_num;                       

  boolean                             is_display_text_available;
  qmi_voice_cm_if_display_text_s_type display_text;
  boolean                           is_media_id_available;
  uint8                             media_id;

  boolean                             is_additional_call_info_available;
  uint16                              num_indications;
  boolean                             is_call_attrib_status_available;
  uint32                              call_attrib_status;

  boolean                             is_second_alpha_available;
  qmi_voice_cm_if_alpha_id_s          second_alpha_info;

  boolean                                 is_end_reason_text_available;
  qmi_voice_cm_if_end_reason_text_s_type  end_reason_text;

  boolean                             is_ip_caller_name_available;
  qmi_voice_cm_if_ip_caller_name_s_type ip_caller_name;

  boolean   is_orig_fail_reason_available;
  uint16    orig_fail_reason;

  boolean                              is_ip_hist_info_available;
  qmi_voice_cm_if_ip_hist_info_s_type  ip_hist_info;

  boolean   is_called_party_ringing_status_avail;
  boolean   is_called_party_ringing;
  boolean                             is_unwanted_call_feature_available;
  qmi_voice_unwanted_call_type        is_unwanted_call;

  boolean                             is_sip_error_code_available;
  uint16                              sip_error_code;

  boolean                               is_alternate_uri_available;
  qmi_voice_cm_if_alternate_uri_s_type  alternate_uri;  
} qmi_voice_cm_if_call_info_s;

typedef struct 
{
  uint8                         num_of_calls;
  qmi_voice_cm_if_call_info_s   call_info[QMI_VOICE_CM_IF_CALL_ID_MAX_PER_SUBS];
} qmi_voice_cm_if_all_call_info_s;

#if defined(FEATURE_MMODE_USS_SUPS)
typedef struct
{
  uint8          uss_dcs;
  boolean        uss_len;
  uint8          uss_data[QMI_VOICE_CM_IF_MAX_USS_DATA_LEN];
}qmi_voice_cm_if_ussd_info_s;
#endif

typedef struct
{
    uint8               ussd_data_utf16_len;
    uint16              ussd_data_utf16[QMI_VOICE_CM_IF_MAX_USS_DATA_LEN];
}qmi_voice_cm_if_ussd_info_utf16_s;

typedef struct
{
  boolean                  is_mod_to_sups; /* sups modified to another sups */
  uint8                    service;
  uint8                    reason;
  boolean                  is_mod_to_voice;/* sups modified to voice */
  uint8                    call_id;
}qmi_voice_cm_if_sups_cc_result_s;

/*===========================================================================

                    REQUESTS

===========================================================================*/
#ifdef FEATURE_MMODE_CALL_SUPS
typedef struct
{
  uint8               sups_type;
  boolean           call_id_valid;
  uint8                call_id;
  boolean           call_type_valid;
  uint8             call_type;
  boolean           is_audio_attrib_valid;   /* Audio Attributes for VOIP/VT calls */
  uint64            audio_attrib;
  boolean           is_video_attrib_valid;   /* Video Attributes for VOIP/VT calls */
  uint64            video_attrib;
  boolean           is_sip_uri_valid;
  uint8             sip_uri_len;
  uint8             sip_uri[QMI_VOICE_CONF_URI_MAX_LEN];

  boolean      reject_cause_valid;
  uint32        reject_cause;

  boolean      sip_reject_code_valid;
  uint16       sip_reject_code;
  boolean                  is_speech_codec_valid;
  uint32                   speech_codec;
}qmi_voice_cm_if_manage_calls_s;
#endif

typedef struct
{
  uint8                    num_type;
  /**< Number type */
  uint8                    num_plan;
  /**< Numbering Plan */
}qmi_voice_cm_if_set_sups_num_type_plan_s;

typedef struct
{
    uint8                      barr_num_len;
    uint8                      barr_num[QMI_VOICE_CM_IF_MAX_CALLING_NUM_LEN];
} qmi_voice_cm_if_icb_ind_s; //incoming call barring

#ifdef FEATURE_MMODE_SS_SUPS
typedef struct
{
  struct 
  {
  uint8               service;
  uint8               reason;
  }sups_service_info;
  boolean           service_class_valid;
  uint8               service_class;
  boolean           service_class_ext_valid;
  uint32               service_class_ext;
  boolean           password_valid;
  uint8               password[QMI_VOICE_CM_IF_MAX_PWD_LEN];
  boolean           fwd_number_valid;
  uint8               fwd_number_len;
  uint8               fwd_number[QMI_VOICE_CM_IF_MAX_CALLING_NUM_LEN];
  boolean           no_reply_timer_valid;
  uint8               no_reply_timer;
  boolean           num_type_plan_valid;
  qmi_voice_cm_if_set_sups_num_type_plan_s num_type_plan;
  boolean           barr_num_list_valid;
  uint8             barr_num_list_len;
  qmi_voice_cm_if_icb_ind_s     barr_num_list[QMI_VOICE_CM_IF_MAX_BARR_LIST_LEN];
  boolean           colr_pi_valid;
  uint32            colr_pi;
  boolean                                   fwd_start_time_valid;
  cm_ip_sups_call_fwd_time_s_type           fwd_start_time;
  boolean                                   fwd_end_time_valid;
  cm_ip_sups_call_fwd_time_s_type           fwd_end_time;
}qmi_voice_cm_if_set_sups_service_s;
#endif

#ifndef FEATURE_MMODE_DISABLE_MISC_FEATURES
typedef  struct{
  uint8             instance_id;
  uint8             call_type;
  uint8             call_state;
  uint8             call_substate;
  uint8             is_mpty_call;
  uint8             direction;
  uint8             num_len;
  uint8             num[QMI_VOICE_CM_IF_MAX_CALLING_NUM_LEN];
  boolean           is_alerting_type_valid;
  uint8             alerting_type;
}qmi_voice_srvcc_call_context;

typedef  struct{
  uint8             participant_call_state;
  uint8             participant_direction;
}qmi_voice_srcc_conf_participant;

typedef struct
{
  uint8                         num_calls; 
  qmi_voice_srvcc_call_context  srvcc_calls[QMI_VOICE_CM_IF_MAX_SRVCC_CALLS];
  uint8                         alerting_type_list_len;
}qmi_voice_cm_if_set_srvcc_call_context_s;
#endif

typedef struct
{
  uint8                        call_id;
}qmi_voice_cm_if_get_speech_codec_info_s;

/*===========================================================================

                    RESPONSES

===========================================================================*/

typedef struct
{
  qmi_error_e_type            error;
  qmi_voice_cm_if_all_call_info_s info;
}qmi_voice_cm_if_get_all_call_info_resp_s;

typedef struct
{
    uint8                      barr_num_status; /* number could be QMI_VOICE_CM_SUPS_STATUS_IN_ACTIVE  or inactive*/
    uint8                      barr_num_len;
    uint8                      barr_num[QMI_VOICE_CM_IF_MAX_CALLING_NUM_LEN];
} qmi_voice_cm_if_icb_sc_s; //incoming call barring per service class

typedef struct
{
  uint32                       barr_sc_ext;
  uint8                        barr_num_list_len;
  qmi_voice_cm_if_icb_sc_s    *barr_num_list_info;
} qmi_voice_cm_if_icb_resp_s; //incoming call barring response structure

typedef struct
{
  qmi_error_e_type                     error;
  uint8                                service_class;
  uint32                               service_class_ext;
  qmi_voice_cm_if_failure_cause_e_type sups_failure_cause;
  boolean                              is_alpha_available;
  qmi_voice_cm_if_alpha_id_s           alpha_id;
  boolean                              is_cc_modified;
  uint8                                cc_mod_type;
  qmi_voice_cm_if_sups_cc_result_s     cc_result;

  boolean                              sc_barr_num_list_valid;
  uint8                                sc_barr_num_list_len;
  qmi_voice_cm_if_icb_resp_s           sc_barr_num_list_info[QMI_VOICE_CM_IF_MAX_NUM_SC];
  boolean                              is_retry_duration_available;
  uint16                               retry_duration;

  uint8 failure_cause_description_valid;  
  uint32 failure_cause_description_len;  
  uint16 failure_cause_description[QMI_VOICE_CM_IF_MAX_FAILURE_DESC_LEN];

  uint8 sip_error_code_valid;  
  uint16 sip_error_code;

} qmi_voice_cm_if_get_call_barring_resp_s;

#ifndef FEATURE_MMODE_DISABLE_MISC_FEATURES
typedef struct
{
  qmi_error_e_type                      error;
} qmi_voice_cm_if_set_srvcc_call_context_resp_s;
#endif

typedef struct
{
  uint8 call_id_valid;
  uint8 call_id;
  uint8 network_mode_valid;
  voice_network_mode_enum_v02 network_mode;
  uint8 speech_codec_valid;
  voice_speech_codec_enum_v02 speech_codec;
  uint8  speech_enc_samp_freq_valid;
  uint32 speech_enc_samp_freq;

} qmi_voice_cm_if_get_speech_codec_info_resp_s;



/*===========================================================================

                    INDICATIONS

===========================================================================*/

typedef struct 
{
  uint8                   call_id;
  uint8                   call_event;
  uint8                   call_type;
  boolean                 is_call_end_reason_available;
  uint16                  call_end_reason;
} qmi_voice_cm_if_call_status_ind_s;

typedef struct
{
  boolean valid;
  uint8   len;
  uint8   buf[CM_MAX_ALPHA_TAG_CHARS];
    // caller name is retrieved from CM_CALL_EVENT_EXT_DISP and information
    // will be in cm_mm_call_info_s.alpha. So lenghth is limited to length
    // of cm_mm_call_info_s.alpha.buf.
} qmi_voice_cm_if_caller_name_s;

typedef struct 
{
  uint8   display_type;
  uint8   ext_display_info_len;
  uint8   ext_display_info[QMI_VOICE_CM_IF_EXT_DISPLAY_RECORD_LEN_MAX];
} qmi_voice_cm_if_ext_display_record_s;

typedef struct 
{
  qmi_voice_cm_if_all_call_info_s info;
} qmi_voice_cm_if_all_call_status_ind_s;

typedef struct 
{
  uint8                   num_cfw_instances;
  struct
  {
    uint8             service_status;
    uint8             service_class;
    uint8             num_len;
    uint8             num_buf[QMI_VOICE_CM_IF_MAX_CALLING_NUM_LEN];
    uint8             no_reply_timer;
  }sc_instances[QMI_VOICE_CM_IF_MAX_SERVICE_CLASS_INSTANCES];
}qmi_voice_cm_if_call_fwd_data_ntwk_s;


#if defined (FEATURE_MMODE_SS_SUPS) || defined(FEATURE_MMODE_USS_SUPS)
typedef struct 
{


  uint8  service_type;
  boolean     is_modified_by_call_control;
  boolean                           is_service_class_available;
  uint8                             service_class;
  boolean                           is_service_class_ext_available;
  uint32                             service_class_ext;
  boolean                           is_reason_available;
  uint8                             reason;
  boolean         is_cfw_number_available;
  uint8             num_len;
  uint8             num_buf[QMI_VOICE_CM_IF_MAX_CALLING_NUM_LEN];
  boolean                         is_cfw_nrtimer_available;
  uint8                             no_reply_timer;
  boolean           is_uss_available;
  qmi_voice_cm_if_ussd_info_s uss_info;


  boolean                         is_call_id_available;
  uint8                             call_id;
  boolean                     is_alpha_available;
  qmi_voice_cm_if_alpha_id_s  alpha_info;
  boolean                         is_cb_pwd_available;
  uint8                             pwd[QMI_VOICE_CM_IF_MAX_PWD_LEN];
  boolean                         is_new_pwd_available;
  uint8                             new_pwd[QMI_VOICE_CM_IF_MAX_PWD_LEN];
  uint8                             new_pwd_again[QMI_VOICE_CM_IF_MAX_PWD_LEN];
  boolean                      is_ntwk_resp;


  boolean                      is_failure_cause_valid;

  qmi_voice_cm_if_failure_cause_e_type   sups_failure_cause;

#if defined (FEATURE_MMODE_SS_SUPS)

  boolean                 is_call_fwd_info_from_ntwk_valid;
  qmi_voice_cm_if_call_fwd_data_ntwk_s  cf_data;
  boolean                 is_clip_status_valid;
  boolean                 is_clir_status_valid;
  boolean                 is_colp_status_valid;
  boolean                 is_colr_status_valid;
  boolean                 is_cnap_status_valid;
  struct
  {
    uint8                   active_status;
    uint8                   provision_status;
  }cli_status;
#endif
#if defined(FEATURE_MMODE_USS_SUPS)
  boolean                     is_ussd_info_utf16_available;  
  qmi_voice_cm_if_ussd_info_utf16_s    ussd_info_utf16;
  #endif
#if defined (FEATURE_MMODE_SS_SUPS)

  boolean                                 barr_num_list_valid;
  uint8                                   barr_num_list_len;
  qmi_voice_cm_if_icb_ind_s               barr_num_list[QMI_VOICE_CM_IF_MAX_BARR_LIST_LEN];
#endif
} qmi_voice_cm_if_sups_ind_s;
#endif

typedef struct {

  uint32 call_info_len;
  uint8  call_info[QMI_VOICE_CONF_ADNL_CALL_INFO_MAX_LEN];
  uint16 sequence_num;
  uint32 total_call_info_length;

}qmi_voice_cm_if_additional_call_info_s;

typedef struct
{
  uint8     call_id;
  uint16              end_reason;
}qmi_voice_cm_if_e911_orig_fail_ind_s;

/*===========================================================================

                   CALLBACKS

===========================================================================*/

typedef struct {
  int event;
  cm_mm_call_info_s_type call_info;
} qmi_voice_cm_if_call_evt_cb_s;

typedef struct {
  int event;
  cm_inband_info_s_type inband_info;
} qmi_voice_cm_if_inband_evt_cb_s;

typedef struct {
  int event;
  cm_sups_info_s_type sups_info;
} qmi_voice_cm_if_supsvc_evt_cb_s;

typedef struct {
  int event;
  cm_ph_info_s_type ph_info;
} qmi_voice_cm_if_ph_evt_cb_s;

typedef struct {
  int event;
  cm_mm_ss_info_s_type ss_info;
} qmi_voice_cm_if_ss_evt_cb_s;


typedef struct {
  cm_call_cmd_e_type     cmd;
  cm_call_cmd_err_e_type cmd_err;
} qmi_voice_cm_if_call_cmd_cb_s;

typedef struct {
  cm_call_cmd_e_type            cmd;
  cm_call_cmd_err_e_type        cmd_err;
  cm_call_cmd_err_cause_e_type  call_cmd_err_cause;
  cm_alpha_s_type               alpha;
} qmi_voice_cm_if_call_cmd_exten_cb_s;

#if defined(FEATURE_MMODE_USS_SUPS) || defined FEATURE_MMODE_SS_SUPS
typedef struct {
  cm_sups_cmd_e_type     cmd;
  cm_sups_cmd_err_e_type cmd_err;
} qmi_voice_cm_if_sups_cmd_cb_s;

typedef struct {
  cm_sups_cmd_e_type     cmd;
  cm_sups_cmd_err_e_type cmd_err;
  cm_sups_cmd_err_cause_e_type err_cause;
  cm_alpha_s_type              alpha;
} qmi_voice_cm_if_sups_exten_cmd_cb_s;
#endif

typedef struct {
  cm_inband_cmd_e_type     cmd;
  cm_inband_cmd_err_e_type cmd_err;
} qmi_voice_cm_if_inband_cmd_cb_s;

typedef struct {
  cm_ph_cmd_e_type     cmd;
  cm_ph_cmd_err_e_type cmd_err;
} qmi_voice_cm_if_ph_cmd_cb_s;

typedef struct {
  ecall_session_status_type session_status;
  cm_call_id_type call_id;
  cm_client_id_type eCall_client_id;
  boolean is_as_id_available;
  sys_modem_as_id_e_type as_id;
} qmi_voice_cm_if_ecall_orig_info_cb_s;

typedef struct {
  cm_call_id_type              call_id;
  cm_client_id_type            client_id;
  cm_call_cmd_e_type           cmd;
  cm_call_cmd_err_e_type       cmd_err;
} qmi_voice_cm_if_call_cmd_err_cb_s;

typedef struct
{
  int                                cause;
  qmi_voice_cm_if_end_reason_e_type  reason;
} qmi_voice_cm_if_cause_to_end_reason_table_s_type;

typedef struct
{
  cm_call_end_e_type                 cause;
  qmi_voice_cm_if_end_reason_e_type           reason;
} qmi_voice_cm_end_cause_to_qmi_end_reason_table_s_type;

typedef struct
{
  struct
  {
    uint16    cmd;
    uint32    handle;
    uint8    as_id;
  } header;

  union
  {
    /* requests*/
    voice_dial_call_req_msg_v02                             dial_call;
    voice_setup_answer_req_msg_v02                          setup_answer;
    voice_answer_call_req_msg_v02                           answer_call;
    voice_end_call_req_msg_v02                              end_call;
    voice_get_call_info_req_msg_v02                         get_call_info;
    voice_start_cont_dtmf_req_msg_v02                       start_cont_dtmf;
    voice_stop_cont_dtmf_req_msg_v02                        stop_cont_dtmf;
    voice_set_config_req_msg_v02                            set_config;
    voice_get_config_req_msg_v02                            get_config;
    voice_als_set_line_switching_req_msg_v02                set_line_switch;
    voice_aoc_reset_acm_req_msg_v02                         reset_acm;
    voice_aoc_set_acmmax_req_msg_v02                        set_acmmax;
    voice_aoc_get_call_meter_info_req_msg_v02               get_call_meter_info;
    voice_als_select_line_req_msg_v02                       select_line;
    voice_get_all_call_info_req_msg_v02                     get_all_call_info;
    #ifndef FEATURE_MMODE_DISABLE_MISC_FEATURES
    qmi_voice_cm_if_set_srvcc_call_context_s   srvcc_calls_info;
    #endif
	
    #if defined (FEATURE_MMODE_SS_SUPS) 
    voice_get_call_forwarding_req_msg_v02                   get_call_fwd;
    voice_get_call_waiting_req_msg_v02                      get_call_waiting;
    voice_get_call_barring_req_msg_v02                      get_call_barring;
    voice_set_call_barring_password_req_msg_v02             set_call_barring;
    #endif
    
#if defined(FEATURE_MMODE_CALL_SUPS)
    qmi_voice_cm_if_manage_calls_s                          manage_calls_info;
#endif
#if defined(FEATURE_MMODE_SS_SUPS)
    qmi_voice_cm_if_set_sups_service_s                      set_sups_info;
	#endif
	#if defined(FEATURE_MMODE_USS_SUPS)
    voice_orig_ussd_req_msg_v02                             ussd_orig_info;
    voice_answer_ussd_req_msg_v02                           answer_ussd;
    voice_orig_ussd_no_wait_req_msg_v02                     ussd_orig_no_wait_info;
	#endif
    #if defined (FEATURE_MMODE_SS_SUPS)

    voice_get_clip_req_msg_v02                              get_clip;
    voice_get_clir_req_msg_v02                              get_clir;
    voice_get_cnap_req_msg_v02                              get_cnap;
    voice_get_colp_req_msg_v02                              get_colp;
    voice_get_colr_req_msg_v02                              get_colr;
	#endif
#if defined(FEATURE_MMODE_USS_SUPS)

    voice_cancel_ussd_req_msg_v02                           cancel_ussd;
#endif
    
    voice_als_get_line_switching_status_req_msg_v02         get_line_switch_status;
    voice_als_get_selected_line_req_msg_v02                 get_selected_line;
    #ifndef FEATURE_MMODE_DISABLE_MISC_FEATURES
    voice_bind_subscription_req_msg_v02                     bind_subscription;
    #endif
    voice_indication_register_req_msg_v02                   register_req;
    voice_get_speech_codec_info_req_msg_v02                 get_speech_codec_info;

    /*responses*/
    voice_dial_call_resp_msg_v02                            dial_call_resp;
    voice_end_call_resp_msg_v02                             end_call_resp;
    voice_answer_call_resp_msg_v02                          answer_call_resp;
    voice_setup_answer_resp_msg_v02                         setup_answer_resp;
    voice_send_flash_resp_msg_v02                           send_flash_resp;
    voice_get_call_info_resp_msg_v02                        get_call_info_resp;
    voice_set_preferred_privacy_resp_msg_v02                set_pref_privacy_resp;
    voice_burst_dtmf_resp_msg_v02                           burst_dtmf_resp;
    voice_start_cont_dtmf_resp_msg_v02                      start_cont_dtmf_resp;
    voice_stop_cont_dtmf_resp_msg_v02                       stop_cont_dtmf_resp;
    qmi_voice_cm_if_get_all_call_info_resp_s                get_all_call_info_resp;
    voice_manage_calls_resp_msg_v02                         manage_calls_resp;
    voice_set_config_resp_msg_v02                           set_config_resp;
    voice_get_config_resp_msg_v02                           get_config_resp;
    voice_als_set_line_switching_resp_msg_v02               set_line_switch_resp;
    voice_aoc_reset_acm_resp_msg_v02                        reset_acm_resp;
    voice_aoc_set_acmmax_resp_msg_v02                       set_acmmax_resp;
    voice_aoc_get_call_meter_info_resp_msg_v02              get_call_meter_info_resp;
    voice_als_select_line_resp_msg_v02                      select_line_resp;
    voice_manage_ip_calls_resp_msg_v02                      mng_ip_calls_resp;
    voice_als_get_line_switching_status_resp_msg_v02        get_line_switch_status_resp;
    voice_als_get_selected_line_resp_msg_v02                get_selected_line_resp;
    
    #if defined (FEATURE_MMODE_SS_SUPS)

    voice_get_clir_resp_msg_v02                             get_clir_resp;
    voice_get_clip_resp_msg_v02                             get_clip_resp;
    voice_get_call_forwarding_resp_msg_v02                  get_call_fwd_resp;
    voice_get_call_waiting_resp_msg_v02                     get_call_waiting_resp;
    qmi_voice_cm_if_get_call_barring_resp_s     get_call_barring_resp;
    voice_set_call_barring_password_resp_msg_v02            set_call_barring_resp;
    voice_set_sups_service_resp_msg_v02                     set_sups_resp;
    #endif
	#if defined(FEATURE_MMODE_USS_SUPS)
    voice_orig_ussd_resp_msg_v02                            ussd_orig_resp;
    voice_answer_ussd_resp_msg_v02                          answer_ussd_resp;
    voice_cancel_ussd_resp_msg_v02                          cancel_ussd_resp;
	#endif
    #if defined (FEATURE_MMODE_SS_SUPS)
    voice_get_colp_resp_msg_v02                             get_colp_resp;
    voice_get_colr_resp_msg_v02                             get_colr_resp;
    voice_get_cnap_resp_msg_v02                             get_cnap_resp;
	#endif
    
    #ifndef FEATURE_MMODE_DISABLE_MISC_FEATURES
    qmi_voice_cm_if_set_srvcc_call_context_resp_s  set_srvcc_resp;
    #endif
    voice_get_speech_codec_info_resp_msg_v02		    get_speech_codec_info_resp;//mgk


    /*indications*/
    qmi_voice_cm_if_call_status_ind_s         call_status_ind;
    voice_info_rec_ind_msg_v02                              info_rec_ind;
    voice_otasp_status_ind_msg_v02                          otasp_status_ind;
    voice_privacy_ind_msg_v02                               privacy_ind;
    voice_dtmf_ind_msg_v02                                  dtmf_ind;
    voice_sups_notification_ind_msg_v02                     sups_notify_ind;
    qmi_voice_cm_if_all_call_status_ind_s     all_call_status_ind;
#if  defined(FEATURE_MMODE_USS_SUPS)
    voice_ussd_ind_msg_v02                                  ussd_ind;
#endif
    voice_uus_ind_msg_v02                                   uus_ind;
      
#if  defined(FEATURE_MMODE_USS_SUPS) || defined FEATURE_MMODE_SS_SUPS
	qmi_voice_cm_if_sups_ind_s                              sups_ind;
#endif
#if defined(FEATURE_MMODE_USS_SUPS)    
    voice_orig_ussd_no_wait_ind_msg_v02                     ussd_orig_no_wait_ind;
#endif
    voice_modified_ind_msg_v02                              call_modified_ind;
    voice_modify_accept_ind_msg_v02                         call_modify_accept_ind;
    voice_speech_codec_info_ind_msg_v02                     speech_codec_info_ind;
    voice_handover_ind_msg_v02                              handover_ind;
    voice_conference_info_ind_msg_v02                       conference_info_ind;
    voice_conference_join_ind_msg_v02                       conference_join_ind;
    voice_conference_participant_update_ind_msg_v02         conf_participant_info_ind;
    voice_ext_brst_intl_ind_msg_v02                         ext_brst_intl_ind;
    voice_mt_page_miss_ind_msg_v02                          mt_page_miss_ind;
    voice_call_control_result_info_ind_msg_v02              cc_result_info_ind;
    voice_conf_participants_info_ind_msg_v02                parsed_conf_info;
    voice_tty_ind_msg_v02                                   tty_info;
    voice_audio_rat_change_info_ind_msg_v02                 audio_rat_change_info;
    qmi_voice_cm_if_e911_orig_fail_ind_s                    e911_orig_fail_ind;
    voice_additional_call_info_ind_msg_v02                  additional_call_info;
    voice_aoc_low_funds_ind_msg_v02                         low_funds_ind;
    voice_ussd_release_ind_msg_v02                          ussd_release_ind;
    voice_conf_participant_status_info_ind_msg_v02          participant_status_info;    
    vice_dialog_info_ind_msg_v02                            vice_dialog_info_ind;
    auto_rejected_incoming_call_end_ind_msg_v02             auto_rejected_incoming_call_end_ind;

    /* CM event callback */
    qmi_voice_cm_if_call_evt_cb_s    call_evt_cb;
    qmi_voice_cm_if_inband_evt_cb_s  inband_evt_cb;
    qmi_voice_cm_if_supsvc_evt_cb_s  sups_evt_cb;
    qmi_voice_cm_if_ph_evt_cb_s      ph_evt_cb;
    qmi_voice_cm_if_ss_evt_cb_s      ss_evt_cb;



    /* CM command callbacks */
    qmi_voice_cm_if_call_cmd_cb_s    call_cmd_cb;
    qmi_voice_cm_if_call_cmd_exten_cb_s    call_cmd_exten_cb;
#if defined(FEATURE_MMODE_USS_SUPS) || defined FEATURE_MMODE_SS_SUPS
    qmi_voice_cm_if_sups_cmd_cb_s    sups_cmd_cb;
    qmi_voice_cm_if_sups_exten_cmd_cb_s    sups_exten_cmd_cb;
#endif
    qmi_voice_cm_if_inband_cmd_cb_s  inband_cmd_cb;
    qmi_voice_cm_if_ph_cmd_cb_s      ph_cmd_cb;
    qmi_voice_cm_if_ecall_orig_info_cb_s  ecall_orig_info_cb;
    qmi_voice_cm_if_call_cmd_err_cb_s   call_cmd_err_cb;
    


  } data;

} qmi_voice_cm_if_info_item_s;



/*= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
                        EXTERNAL FUNCTION DEFINTIONS
= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =*/

void qmi_voice_cm_if_init
(
  void
);

const char *qmi_voice_cm_if_lookup_event_name
(
  int event_id
);

const char *qmi_voice_cm_if_lookup_cmd_name
( 
  int cmd
);

void qmi_voice_cm_if_unsol_response
(
  qmi_voice_cm_if_cmd_e_type  ind_type,
  void                        *response,
  int                         response_len,
  uint8                       as_id
);

uint16 qmi_voice_cm_if_get_call_fail_cause(void);

void qmi_voice_ims_ext_e911_orig_fail_ind
(
  cm_mm_call_info_s_type *call_info_ptr,
  uint8     as_id
);

#ifdef FEATURE_MODEM_CONFIG_REFRESH
//called in case of MCFG refresh event (sim swap)
void qmi_voice_cm_if_mcfg_refresh_otasp( void );
#endif // FEATURE_MODEM_CONFIG_REFRESH

#endif /* _DS_QMI_VOICE_CM_IF_H */

