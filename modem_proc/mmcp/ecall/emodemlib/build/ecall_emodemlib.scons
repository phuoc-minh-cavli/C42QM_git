#===============================================================================
#
# ECALL_EMODEMLIB Subsystem build script
#
# Copyright(c) 2012 Qualcomm Technologies Incorporated.
# All rights reserved. 
# Qualcomm Confidential and Proprietary 
#
#-------------------------------------------------------------------------------
#
#  $Header: $
#  $DateTime: 2010/11/29 22:13:16 $
#
#                      EDIT HISTORY FOR FILE
#
#  This section contains comments describing changes made to the module.
#  Notice that changes are listed in reverse chronological order.
#
# when       who     what, where, why
# --------   ---     ---------------------------------------------------------
# 05/29/12   DL      Added new vocoder interface to eCall 
# 02/02/12   DL      Initial revision
#
#===============================================================================
#-------------------------------------------------------------------------------
# Import and clone the SCons environment
#-------------------------------------------------------------------------------
Import('env')

#-------------------------------------------------------------------------------
# Verify that either USES_ECALL_IVS or USES_ECALL_PSAP is set, otherwise bail 
# out now
#-------------------------------------------------------------------------------
if 'USES_ECALL_IVS' not in env and 'USES_ECALL_PSAP' not in env :
  Return()

#-----------------------------------------
# Setup source PATH
#-----------------------------------------
SRCPATH = "../src"
env.VariantDir('${BUILDPATH}', SRCPATH, duplicate=0)

#-----------------------------------------
# Set MSG_BT_SSID_DFLT for legacy MSG macros
#-----------------------------------------
env.Append(CPPDEFINES = [
   "MSG_BT_SSID_DFLT=MSG_SSID_ECALL",
])

#-------------------------------------------------------------------------------
# Request Necessary Public API's
#-------------------------------------------------------------------------------
CORE_PUBLIC_APIS = [
  'SERVICES',
  'DEBUGTOOLS',
  'KERNEL',
]

MULTIMEDIA_PUBLIC_APIS = [
  'AUDIO',
  'APR',
  'MMUTILS',
]

APR_PUBLIC_APIS = [
  'APR',
]

AVS_PUBLIC_APIS = [
  'MMUTILS',
]

# We need the following Core Public API's
env.RequirePublicApi(CORE_PUBLIC_APIS, area="CORE")

# We need the following Multimedia Public API's
env.RequirePublicApi(MULTIMEDIA_PUBLIC_APIS, area="MULTIMEDIA")

# We need the following APR Public API's
env.RequirePublicApi(APR_PUBLIC_APIS, area="APR")

# We need the following AVS Public API's
env.RequirePublicApi(AVS_PUBLIC_APIS, area="AVS")

# We need our Restricted API (in same area as we are)
env.RequireRestrictedApi(['ECALL'])


#-------------------------------------------------------------------------------
# Generate the library and add to an image
#-------------------------------------------------------------------------------

ECALL_LIB_SOURCES = [
  '${BUILDPATH}/ecall_fec.c',
  '${BUILDPATH}/ecall_modem.c',
  '${BUILDPATH}/ecall_rom.c',
  '${BUILDPATH}/ecall_sync.c',
  '${BUILDPATH}/ecall_control.c',
]

# Ship our code as binary library and add it to the MODEM image
env.AddLibrary(['MODEM_MODEM'], '${BUILDPATH}/ecall', ECALL_LIB_SOURCES)
