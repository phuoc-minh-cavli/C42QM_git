#===============================================================================
# Copyright (c) 2012,2017 by Qualcomm Technologies, Incorporated.
# All Rights Reserved.
# QUALCOMM Proprietary/GTDR
#===============================================================================
import os
Import('env')

env = env.Clone()

platform_root = '${BUILD_ROOT}/platform'
env.Replace(ADSP_PLATFORM_ROOT = platform_root)

env.RequirePublicApi([
  'PLATFORM_LIBS',
  'STDDEF',
  'UTILS',
  'A1STD',
  'REMOTE',
  'MOD_TABLE',
  'DLW',
  'HAPSDK',
  ])

core_public_apis = [
  'DAL',
  'SERVICES',
  'SYSTEMDRIVERS',
  'KERNEL',
  ]

env.RequirePublicApi(core_public_apis, area='core')

env.RequireRestrictedApi([
 'SECURITY',
 'QLIST',
 ])

#-------------------------------------------------------------------------------
# Source PATH
#-------------------------------------------------------------------------------
SRCPATH = "${ADSP_PLATFORM_ROOT}/security/src"
env.VariantDir('${BUILDPATH}', SRCPATH, duplicate=0)

# comment out following line to disable assembly modules
env.Append(CPPDEFINES = 'USE_QDSP_ASM')
env.PublishPrivateApi('SECURITY_PRIVATE', SRCPATH)

SECURITY_SOURCES =  [
  '${BUILDPATH}/secboot.c',
  '${BUILDPATH}/secboot_asn1.c',
  '${BUILDPATH}/secboot_hw_stub.c',
  '${BUILDPATH}/secboot_sha1.c',
  '${BUILDPATH}/secboot_sha2.c',
  '${BUILDPATH}/sha256_transform.S',
  '${BUILDPATH}/secboot_sw_hash.c',
  '${BUILDPATH}/secboot_x509.c',
  '${BUILDPATH}/secmath_barrett_reduce.c',
  '${BUILDPATH}/secmath_BIGINT_read_unsigned_bin.c',
  '${BUILDPATH}/secmath_mod_exp.c',
  '${BUILDPATH}/secmath_montmul_utils.c',
  '${BUILDPATH}/workthread.c',
  '${BUILDPATH}/parseelf.c',
  '${BUILDPATH}/util.c',
  '${BUILDPATH}/rsapubkey.c',
  '${BUILDPATH}/dtslicense.c',
  '${BUILDPATH}/dynconfig.c',
  '${BUILDPATH}/js.c',
  '${BUILDPATH}/sigverify_guestos.c',
  '${BUILDPATH}/montmul_one_opt.S',
  '${BUILDPATH}/montmul_ref.S',
  '${BUILDPATH}/sigverify.c',
  '${BUILDPATH}/sec_hwio.c',
  ]


#-------------------------------------------------------------------------------
# Add Libraries to image
#-------------------------------------------------------------------------------
if 'USES_PLATFORM_MINIMAL_RTLD' not in env:
   security_lib = env.AddBinaryLibrary(['SINGLE_IMAGE', 'CBSP_SINGLE_IMAGE', 'MODEM_IMAGE', 'CBSP_MODEM_IMAGE',
      'QDSP6_SW_IMAGE', 'CBSP_QDSP6_SW_IMAGE'], '${BUILDPATH}/security', SECURITY_SOURCES)

#-------------------------------------------------------------------------------
# Load Subunits (sys)
#-------------------------------------------------------------------------------
env.LoadSoftwareUnits()

#Clean and pack rules
CLEAN_LIST=[]
CLEAN_LIST.extend(env.FindFiles(['*.c', '*.cpp', '*.h', '*.S', '*.so'], '${ADSP_PLATFORM_ROOT}/security/src'))
env.CleanPack(['SINGLE_IMAGE', 'CBSP_SINGLE_IMAGE', 'MODEM_IMAGE', 'CBSP_MODEM_IMAGE','QDSP6_SW_IMAGE', 'CBSP_QDSP6_SW_IMAGE','CORE_QDSP6_SENSOR_SW', 'FASTRPC_SHELL_IMG'], CLEAN_LIST)
