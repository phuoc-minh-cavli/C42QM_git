#===============================================================================
#
# TCXOMGR Scons
#
# GENERAL DESCRIPTION
#    build script
#
# Copyright (c) 2010 by Qualcomm Technologies, Incorporated.
# All Rights Reserved.
# QUALCOMM Proprietary/GTDR
#
#-------------------------------------------------------------------------------
#
#  $Header: //components/rel/utils.mpss/2.3.4/a2/poi/build/utils_a2_driver_poi.scons#1 $
#
#                      EDIT HISTORY FOR FILE
#
#  This section contains comments describing changes made to the module.
#  Notice that changes are listed in reverse chronological order.
#
# when       who     what, where, why
# --------   ---     ---------------------------------------------------------
# 03/11/19    rs     Initial version.
#===============================================================================
Import('env')
env = env.Clone()

if 'USES_GNSS_SA' in env:
    Return()
from glob import glob
from os.path import join, basename

#-------------------------------------------------------------------------------
# Setup source PATH
#-------------------------------------------------------------------------------
SRCPATH = "../src"
CMNSRC = "../../common/src"

env.VariantDir('${BUILDPATH}', SRCPATH, duplicate=0)

#-------------------------------------------------------------------------------
# Set MSG_BT_SSID_DFLT for legacy MSG macros
#-------------------------------------------------------------------------------
env.Append(CPPDEFINES = [
   "MSG_BT_SSID_DFLT=MSG_SSID_A2",
])

#-------------------------------------------------------------------------------
# if this is Lykan, define Lykan feature flag
#-------------------------------------------------------------------------------
CHIPSET = env.get('CHIPSET')
if (CHIPSET == "mdm9607"):
  env.Append(CFLAGS = "-DFEATURE_A2_LYKAN") 

#-------------------------------------------------------------------------------
# Necessary Public and Restricted API's
#-------------------------------------------------------------------------------
env.RequirePublicApi([
    'HWENGINES',
    'DEBUGTOOLS',
    'SERVICES',
    'SYSTEMDRIVERS',
    'WIREDCONNECTIVITY',
    'STORAGE',
    'DAL',
    'POWER',
    'BUSES',
    'SECUREMSM',
    'MPROC',
    'KERNEL',                             # needs to be last 
    ], area='core')

# Need to get access to Modem Public headers
env.RequirePublicApi([
    'MCS',
    'MMODE',    
    'RFA',      
    'UTILS',
    'UIM',
    ])

env.RequirePublicApi([
	'MCFG',
        ],
        area='MCFG')

# Need get access to Modem Restricted headers
env.RequireRestrictedApi([
    'RFA',      
    'MDSP',     
    'MDSPSVC',  
    'MCS',
    'FW',
    'LTE',
    'UTILS',
    ])

env.PublishPrivateApi('A2_POI', '${INC_ROOT}/modem/utils/a2/poi/src')

env.RequirePrivateApi(['A2_POI'])

env.RequirePrivateApi(['UTILS_A2_INT'])

# Allow us to see headers in src dir.
#env.PublishPrivateApi('A2_DRIVER', '${INC_ROOT}/modem/utils/a2/driver/src')

env.PublishPrivateApi('VIOLATIONS', ['${INC_ROOT}/core/systemdrivers/clk/inc'])


#-------------------------------------------------------------------------------
# Generate the library and add to an image
#-------------------------------------------------------------------------------

# Construct the list of source files by looking for *.c
UTILS_A2_DRIVER_SOURCES = ['${BUILDPATH}/' + basename(fname)
                   for fname in glob(join(env.subst(SRCPATH), '*.c'))]

# Compile the UTILS A2 Driver source and convert to a binary library
env.AddBinaryLibrary(['MODEM_PAGEONLY','MOB_UTILS'], '${BUILDPATH}/utils_a2_driver_poi', UTILS_A2_DRIVER_SOURCES, pack_exception=['USES_CUSTOMER_GENERATE_LIBS'])

#-------------------------------------------------------------------------------
# Continue loading software units
#-------------------------------------------------------------------------------
env.LoadSoftwareUnits()
env.LoadAPIUnits()

