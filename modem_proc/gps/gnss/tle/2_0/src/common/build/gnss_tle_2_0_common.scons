# -------------------------------------------------------------------------------- #
#                         G N S S _ T L E _ 2 _ 0 _ C O M M O N . S C O N S
#
# DESCRIPTION
#   SCons file for the TLE 2.0 Common Source
#
#
# INITIALIZATION AND SEQUENCING REQUIREMENTS
#   None.
#
#  Copyright (c) 2015 Qualcomm Technologies, Inc.
#  Qualcomm Technologies Confidential and Proprietary. All Rights Reserved. 
#
# All Rights Reserved. Qualcomm Confidential and Proprietary
# Export of this technology or software is regulated by the U.S. Government.
# Diversion contrary to U.S. law prohibited.
#
# All ideas, data and information contained in or disclosed by
# this document are confidential and proprietary information of
# Qualcomm Technologies Incorporated and all rights therein are expressly reserved.
# By accepting this material the recipient agrees that this material
# and the information contained therein are held in confidence and in
# trust and will not be used, copied, reproduced in whole or in part,
# nor its contents revealed in any manner to others without the express
# written permission of Qualcomm Technologies Incorporated.
#
#  $Header: //components/rel/gnss8.mpss/9.5.1.1/gnss/tle/2_0/src/common/build/gnss_tle_2_0_common.scons#1 $
#  $DateTime: 2020/07/21 21:23:44 $
# --------------------------------------------------------------------------------- #

#--------------------------------------------------------------------------------
# Import the SCons environment
#--------------------------------------------------------------------------------
Import('gps_env')
from glob import glob
from os.path import join, basename

#--------------------------------------------------------------------------------
# Check USES flags and return if library isn't needed
#--------------------------------------------------------------------------------
# Handled at top-level TLE 2.0 Scons file

#--------------------------------------------------------------------------------
# Setup source PATH
#--------------------------------------------------------------------------------
SRCPATH = '../src'
gps_env.VariantDir('${BUILDPATH}', SRCPATH, duplicate=0)

gps_env.RequirePrivateApi(['GPS_TLE'])
#--------------------------------------------------------------------------------
# Name of the subsystem to which this unit belongs
#--------------------------------------------------------------------------------
LIB_TARGET = '${BUILDPATH}/' + 'tle_common'

#--------------------------------------------------------------------------------
# Images that this VU is added
#--------------------------------------------------------------------------------
IMAGES = ['MODEM_MODEM']

#--------------------------------------------------------------------------------
# Generate the library and add to an image
#--------------------------------------------------------------------------------
BINARY_LIB_SOURCES = gps_env.GenerateCompileList(SRCPATH, '*.c')
BINARY_LIB_CPP_SOURCES = gps_env.GenerateCompileList(SRCPATH, '*.cpp')

#--------------------------------------------------------------------------------
# Ship our code as binary library and add it to the Modem image
#--------------------------------------------------------------------------------
gps_env.AddGPSFullBinaryLibrary(IMAGES, (LIB_TARGET + '_pvt'), BINARY_LIB_SOURCES + BINARY_LIB_CPP_SOURCES)

#--------------------------------------------------------------------------------
# Initialize TLE Task through RCINIT
#--------------------------------------------------------------------------------
RCINIT_TASK_FN = {
    'thread_name'         : 'tle',
    'thread_entry'        : 'tle_task',
    'stack_size_bytes'    : gps_env.subst('$TLE_STKSZ'),
    'sequence_group'      : gps_env.subst('$MODEM_UPPERLAYER'),
    'priority_amss_order' : 'TLE_PRI_ORDER',
    'cpu_affinity'        : 'REX_ANY_CPU_AFFINITY_MASK',
    'policy_optin'        : ['default', 'ftm', ],
}
gps_env.AddRCInitTask (IMAGES, RCINIT_TASK_FN)