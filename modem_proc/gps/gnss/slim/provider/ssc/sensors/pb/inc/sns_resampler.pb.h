/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.7 at Fri Jul 14 02:01:39 2017. */

#ifndef PB_SNS_RESAMPLER_PB_H_INCLUDED
#define PB_SNS_RESAMPLER_PB_H_INCLUDED
#include <pb.h>

#include "sns_std.pb.h"

#include "sns_std_sensor.pb.h"

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _sns_resampler_msgid {
    SNS_RESAMPLER_MSGID_SNS_RESAMPLER_CONFIG = 512,
    SNS_RESAMPLER_MSGID_SNS_RESAMPLER_CONFIG_EVENT = 776
} sns_resampler_msgid;
#define _sns_resampler_msgid_MIN SNS_RESAMPLER_MSGID_SNS_RESAMPLER_CONFIG
#define _sns_resampler_msgid_MAX SNS_RESAMPLER_MSGID_SNS_RESAMPLER_CONFIG_EVENT
#define _sns_resampler_msgid_ARRAYSIZE ((sns_resampler_msgid)(SNS_RESAMPLER_MSGID_SNS_RESAMPLER_CONFIG_EVENT+1))
#define sns_resampler_msgid_SNS_RESAMPLER_MSGID_SNS_RESAMPLER_CONFIG SNS_RESAMPLER_MSGID_SNS_RESAMPLER_CONFIG
#define sns_resampler_msgid_SNS_RESAMPLER_MSGID_SNS_RESAMPLER_CONFIG_EVENT SNS_RESAMPLER_MSGID_SNS_RESAMPLER_CONFIG_EVENT

typedef enum _sns_resampler_rate {
    SNS_RESAMPLER_RATE_FIXED = 0,
    SNS_RESAMPLER_RATE_MINIMUM = 1
} sns_resampler_rate;
#define _sns_resampler_rate_MIN SNS_RESAMPLER_RATE_FIXED
#define _sns_resampler_rate_MAX SNS_RESAMPLER_RATE_MINIMUM
#define _sns_resampler_rate_ARRAYSIZE ((sns_resampler_rate)(SNS_RESAMPLER_RATE_MINIMUM+1))
#define sns_resampler_rate_SNS_RESAMPLER_RATE_FIXED SNS_RESAMPLER_RATE_FIXED
#define sns_resampler_rate_SNS_RESAMPLER_RATE_MINIMUM SNS_RESAMPLER_RATE_MINIMUM

typedef enum _sns_resampler_quality {
    SNS_RESAMPLER_QUALITY_CURRENT_SAMPLE = 0,
    SNS_RESAMPLER_QUALITY_FILTERED = 1,
    SNS_RESAMPLER_QUALITY_INTERPOLATED_FILTERED = 2,
    SNS_RESAMPLER_QUALITY_INTERPOLATED = 3
} sns_resampler_quality;
#define _sns_resampler_quality_MIN SNS_RESAMPLER_QUALITY_CURRENT_SAMPLE
#define _sns_resampler_quality_MAX SNS_RESAMPLER_QUALITY_INTERPOLATED
#define _sns_resampler_quality_ARRAYSIZE ((sns_resampler_quality)(SNS_RESAMPLER_QUALITY_INTERPOLATED+1))
#define sns_resampler_quality_SNS_RESAMPLER_QUALITY_CURRENT_SAMPLE SNS_RESAMPLER_QUALITY_CURRENT_SAMPLE
#define sns_resampler_quality_SNS_RESAMPLER_QUALITY_FILTERED SNS_RESAMPLER_QUALITY_FILTERED
#define sns_resampler_quality_SNS_RESAMPLER_QUALITY_INTERPOLATED_FILTERED SNS_RESAMPLER_QUALITY_INTERPOLATED_FILTERED
#define sns_resampler_quality_SNS_RESAMPLER_QUALITY_INTERPOLATED SNS_RESAMPLER_QUALITY_INTERPOLATED

/* Struct definitions */
typedef struct _sns_resampler_config {
    sns_std_suid sensor_uid;
    float resampled_rate;
    sns_resampler_rate rate_type;
    bool filter;
    bool has_event_gated;
    bool event_gated;
/* @@protoc_insertion_point(struct:sns_resampler_config) */
} sns_resampler_config;

typedef struct _sns_resampler_config_event {
    sns_resampler_quality quality;
/* @@protoc_insertion_point(struct:sns_resampler_config_event) */
} sns_resampler_config_event;

/* Default values for struct fields */

/* Initializer values for message structs */
#define sns_resampler_config_init_default        {sns_std_suid_init_default, 0, (sns_resampler_rate)0, 0, false, 0}
#define sns_resampler_config_event_init_default  {(sns_resampler_quality)0}
#define sns_resampler_config_init_zero           {sns_std_suid_init_zero, 0, (sns_resampler_rate)0, 0, false, 0}
#define sns_resampler_config_event_init_zero     {(sns_resampler_quality)0}

/* Field tags (for use in manual encoding/decoding) */
#define sns_resampler_config_sensor_uid_tag      1
#define sns_resampler_config_resampled_rate_tag  2
#define sns_resampler_config_rate_type_tag       3
#define sns_resampler_config_filter_tag          4
#define sns_resampler_config_event_gated_tag     5
#define sns_resampler_config_event_quality_tag   1

/* Struct field encoding specification for nanopb */
extern const pb_field_t sns_resampler_config_fields[6];
extern const pb_field_t sns_resampler_config_event_fields[2];

/* Maximum encoded size of messages (where known) */
#define sns_resampler_config_size                (17 + sns_std_suid_size)
#define sns_resampler_config_event_size          2

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define SNS_RESAMPLER_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
