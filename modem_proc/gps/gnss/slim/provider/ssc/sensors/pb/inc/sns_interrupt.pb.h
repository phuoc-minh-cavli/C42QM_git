/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.7 at Fri Jul 14 02:01:38 2017. */

#ifndef PB_SNS_INTERRUPT_PB_H_INCLUDED
#define PB_SNS_INTERRUPT_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _sns_interrupt_msgid {
    SNS_INTERRUPT_MSGID_SNS_INTERRUPT_REQ = 512,
    SNS_INTERRUPT_MSGID_SNS_INTERRUPT_EVENT = 1024,
    SNS_INTERRUPT_MSGID_SNS_INTERRUPT_REG_EVENT = 1025,
    SNS_INTERRUPT_MSGID_SNS_INTERRUPT_IS_CLEARED = 513
} sns_interrupt_msgid;
#define _sns_interrupt_msgid_MIN SNS_INTERRUPT_MSGID_SNS_INTERRUPT_REQ
#define _sns_interrupt_msgid_MAX SNS_INTERRUPT_MSGID_SNS_INTERRUPT_IS_CLEARED
#define _sns_interrupt_msgid_ARRAYSIZE ((sns_interrupt_msgid)(SNS_INTERRUPT_MSGID_SNS_INTERRUPT_IS_CLEARED+1))
#define sns_interrupt_msgid_SNS_INTERRUPT_MSGID_SNS_INTERRUPT_REQ SNS_INTERRUPT_MSGID_SNS_INTERRUPT_REQ
#define sns_interrupt_msgid_SNS_INTERRUPT_MSGID_SNS_INTERRUPT_EVENT SNS_INTERRUPT_MSGID_SNS_INTERRUPT_EVENT
#define sns_interrupt_msgid_SNS_INTERRUPT_MSGID_SNS_INTERRUPT_REG_EVENT SNS_INTERRUPT_MSGID_SNS_INTERRUPT_REG_EVENT
#define sns_interrupt_msgid_SNS_INTERRUPT_MSGID_SNS_INTERRUPT_IS_CLEARED SNS_INTERRUPT_MSGID_SNS_INTERRUPT_IS_CLEARED

typedef enum _sns_interrupt_trigger_type {
    SNS_INTERRUPT_TRIGGER_TYPE_RISING = 0,
    SNS_INTERRUPT_TRIGGER_TYPE_FALLING = 1,
    SNS_INTERRUPT_TRIGGER_TYPE_DUAL_EDGE = 2,
    SNS_INTERRUPT_TRIGGER_TYPE_HIGH = 3,
    SNS_INTERRUPT_TRIGGER_TYPE_LOW = 4
} sns_interrupt_trigger_type;
#define _sns_interrupt_trigger_type_MIN SNS_INTERRUPT_TRIGGER_TYPE_RISING
#define _sns_interrupt_trigger_type_MAX SNS_INTERRUPT_TRIGGER_TYPE_LOW
#define _sns_interrupt_trigger_type_ARRAYSIZE ((sns_interrupt_trigger_type)(SNS_INTERRUPT_TRIGGER_TYPE_LOW+1))
#define sns_interrupt_trigger_type_SNS_INTERRUPT_TRIGGER_TYPE_RISING SNS_INTERRUPT_TRIGGER_TYPE_RISING
#define sns_interrupt_trigger_type_SNS_INTERRUPT_TRIGGER_TYPE_FALLING SNS_INTERRUPT_TRIGGER_TYPE_FALLING
#define sns_interrupt_trigger_type_SNS_INTERRUPT_TRIGGER_TYPE_DUAL_EDGE SNS_INTERRUPT_TRIGGER_TYPE_DUAL_EDGE
#define sns_interrupt_trigger_type_SNS_INTERRUPT_TRIGGER_TYPE_HIGH SNS_INTERRUPT_TRIGGER_TYPE_HIGH
#define sns_interrupt_trigger_type_SNS_INTERRUPT_TRIGGER_TYPE_LOW SNS_INTERRUPT_TRIGGER_TYPE_LOW

typedef enum _sns_interrupt_drive_strength {
    SNS_INTERRUPT_DRIVE_STRENGTH_2_MILLI_AMP = 0,
    SNS_INTERRUPT_DRIVE_STRENGTH_4_MILLI_AMP = 1,
    SNS_INTERRUPT_DRIVE_STRENGTH_6_MILLI_AMP = 2,
    SNS_INTERRUPT_DRIVE_STRENGTH_8_MILLI_AMP = 3,
    SNS_INTERRUPT_DRIVE_STRENGTH_10_MILLI_AMP = 4,
    SNS_INTERRUPT_DRIVE_STRENGTH_12_MILLI_AMP = 5,
    SNS_INTERRUPT_DRIVE_STRENGTH_14_MILLI_AMP = 6,
    SNS_INTERRUPT_DRIVE_STRENGTH_16_MILLI_AMP = 7
} sns_interrupt_drive_strength;
#define _sns_interrupt_drive_strength_MIN SNS_INTERRUPT_DRIVE_STRENGTH_2_MILLI_AMP
#define _sns_interrupt_drive_strength_MAX SNS_INTERRUPT_DRIVE_STRENGTH_16_MILLI_AMP
#define _sns_interrupt_drive_strength_ARRAYSIZE ((sns_interrupt_drive_strength)(SNS_INTERRUPT_DRIVE_STRENGTH_16_MILLI_AMP+1))
#define sns_interrupt_drive_strength_SNS_INTERRUPT_DRIVE_STRENGTH_2_MILLI_AMP SNS_INTERRUPT_DRIVE_STRENGTH_2_MILLI_AMP
#define sns_interrupt_drive_strength_SNS_INTERRUPT_DRIVE_STRENGTH_4_MILLI_AMP SNS_INTERRUPT_DRIVE_STRENGTH_4_MILLI_AMP
#define sns_interrupt_drive_strength_SNS_INTERRUPT_DRIVE_STRENGTH_6_MILLI_AMP SNS_INTERRUPT_DRIVE_STRENGTH_6_MILLI_AMP
#define sns_interrupt_drive_strength_SNS_INTERRUPT_DRIVE_STRENGTH_8_MILLI_AMP SNS_INTERRUPT_DRIVE_STRENGTH_8_MILLI_AMP
#define sns_interrupt_drive_strength_SNS_INTERRUPT_DRIVE_STRENGTH_10_MILLI_AMP SNS_INTERRUPT_DRIVE_STRENGTH_10_MILLI_AMP
#define sns_interrupt_drive_strength_SNS_INTERRUPT_DRIVE_STRENGTH_12_MILLI_AMP SNS_INTERRUPT_DRIVE_STRENGTH_12_MILLI_AMP
#define sns_interrupt_drive_strength_SNS_INTERRUPT_DRIVE_STRENGTH_14_MILLI_AMP SNS_INTERRUPT_DRIVE_STRENGTH_14_MILLI_AMP
#define sns_interrupt_drive_strength_SNS_INTERRUPT_DRIVE_STRENGTH_16_MILLI_AMP SNS_INTERRUPT_DRIVE_STRENGTH_16_MILLI_AMP

typedef enum _sns_interrupt_pull_type {
    SNS_INTERRUPT_PULL_TYPE_NO_PULL = 0,
    SNS_INTERRUPT_PULL_TYPE_PULL_DOWN = 1,
    SNS_INTERRUPT_PULL_TYPE_KEEPER = 2,
    SNS_INTERRUPT_PULL_TYPE_PULL_UP = 3
} sns_interrupt_pull_type;
#define _sns_interrupt_pull_type_MIN SNS_INTERRUPT_PULL_TYPE_NO_PULL
#define _sns_interrupt_pull_type_MAX SNS_INTERRUPT_PULL_TYPE_PULL_UP
#define _sns_interrupt_pull_type_ARRAYSIZE ((sns_interrupt_pull_type)(SNS_INTERRUPT_PULL_TYPE_PULL_UP+1))
#define sns_interrupt_pull_type_SNS_INTERRUPT_PULL_TYPE_NO_PULL SNS_INTERRUPT_PULL_TYPE_NO_PULL
#define sns_interrupt_pull_type_SNS_INTERRUPT_PULL_TYPE_PULL_DOWN SNS_INTERRUPT_PULL_TYPE_PULL_DOWN
#define sns_interrupt_pull_type_SNS_INTERRUPT_PULL_TYPE_KEEPER SNS_INTERRUPT_PULL_TYPE_KEEPER
#define sns_interrupt_pull_type_SNS_INTERRUPT_PULL_TYPE_PULL_UP SNS_INTERRUPT_PULL_TYPE_PULL_UP

/* Struct definitions */
typedef struct _sns_interrupt_event {
    uint32_t interrupt_num;
    uint64_t timestamp;
/* @@protoc_insertion_point(struct:sns_interrupt_event) */
} sns_interrupt_event;

typedef struct _sns_interrupt_req {
    uint32_t interrupt_num;
    sns_interrupt_trigger_type interrupt_trigger_type;
    sns_interrupt_drive_strength interrupt_drive_strength;
    sns_interrupt_pull_type interrupt_pull_type;
    bool is_chip_pin;
/* @@protoc_insertion_point(struct:sns_interrupt_req) */
} sns_interrupt_req;

/* Default values for struct fields */

/* Initializer values for message structs */
#define sns_interrupt_req_init_default           {0, (sns_interrupt_trigger_type)0, (sns_interrupt_drive_strength)0, (sns_interrupt_pull_type)0, 0}
#define sns_interrupt_event_init_default         {0, 0}
#define sns_interrupt_req_init_zero              {0, (sns_interrupt_trigger_type)0, (sns_interrupt_drive_strength)0, (sns_interrupt_pull_type)0, 0}
#define sns_interrupt_event_init_zero            {0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define sns_interrupt_event_interrupt_num_tag    1
#define sns_interrupt_event_timestamp_tag        2
#define sns_interrupt_req_interrupt_num_tag      1
#define sns_interrupt_req_interrupt_trigger_type_tag 2
#define sns_interrupt_req_interrupt_drive_strength_tag 3
#define sns_interrupt_req_interrupt_pull_type_tag 4
#define sns_interrupt_req_is_chip_pin_tag        5

/* Struct field encoding specification for nanopb */
extern const pb_field_t sns_interrupt_req_fields[6];
extern const pb_field_t sns_interrupt_event_fields[3];

/* Maximum encoded size of messages (where known) */
#define sns_interrupt_req_size                   14
#define sns_interrupt_event_size                 17

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define SNS_INTERRUPT_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
