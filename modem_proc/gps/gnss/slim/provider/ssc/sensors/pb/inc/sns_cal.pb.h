/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.7 at Fri Jul 14 02:01:36 2017. */

#ifndef PB_SNS_CAL_PB_H_INCLUDED
#define PB_SNS_CAL_PB_H_INCLUDED
#include <pb.h>

#include "sns_std_sensor.pb.h"

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _sns_cal_msgid {
    SNS_CAL_MSGID_SNS_CAL_RESET = 512,
    SNS_CAL_MSGID_SNS_CAL_EVENT = 1024
} sns_cal_msgid;
#define _sns_cal_msgid_MIN SNS_CAL_MSGID_SNS_CAL_RESET
#define _sns_cal_msgid_MAX SNS_CAL_MSGID_SNS_CAL_EVENT
#define _sns_cal_msgid_ARRAYSIZE ((sns_cal_msgid)(SNS_CAL_MSGID_SNS_CAL_EVENT+1))
#define sns_cal_msgid_SNS_CAL_MSGID_SNS_CAL_RESET SNS_CAL_MSGID_SNS_CAL_RESET
#define sns_cal_msgid_SNS_CAL_MSGID_SNS_CAL_EVENT SNS_CAL_MSGID_SNS_CAL_EVENT

/* Struct definitions */
typedef struct _sns_cal_event {
    pb_callback_t bias;
    pb_callback_t scale_factor;
    pb_callback_t comp_matrix;
    sns_std_sensor_sample_status status;
    bool has_cal_id;
    uint32_t cal_id;
/* @@protoc_insertion_point(struct:sns_cal_event) */
} sns_cal_event;

/* Default values for struct fields */
extern const sns_std_sensor_sample_status sns_cal_event_status_default;

/* Initializer values for message structs */
#define sns_cal_event_init_default               {{{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, SNS_STD_SENSOR_SAMPLE_STATUS_UNRELIABLE, false, 0}
#define sns_cal_event_init_zero                  {{{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, (sns_std_sensor_sample_status)0, false, 0}

/* Field tags (for use in manual encoding/decoding) */
#define sns_cal_event_bias_tag                   1
#define sns_cal_event_scale_factor_tag           2
#define sns_cal_event_comp_matrix_tag            3
#define sns_cal_event_status_tag                 4
#define sns_cal_event_cal_id_tag                 5

/* Struct field encoding specification for nanopb */
extern const pb_field_t sns_cal_event_fields[6];

/* Maximum encoded size of messages (where known) */
/* sns_cal_event_size depends on runtime parameters */

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define SNS_CAL_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
