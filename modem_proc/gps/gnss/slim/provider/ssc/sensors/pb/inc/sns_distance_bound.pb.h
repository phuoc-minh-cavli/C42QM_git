/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.6 at Sun Oct 08 02:00:09 2017. */

#ifndef PB_SNS_DISTANCE_BOUND_PB_H_INCLUDED
#define PB_SNS_DISTANCE_BOUND_PB_H_INCLUDED
#include <pb.h>

#include "sns_std_sensor.pb.h"

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _sns_distance_bound_msgid {
    SNS_DISTANCE_BOUND_MSGID_SNS_SET_DISTANCE_BOUND = 516,
    SNS_DISTANCE_BOUND_MSGID_SNS_GET_DISTANCE_ACCUMULATED = 517,
    SNS_DISTANCE_BOUND_MSGID_SNS_DISTANCE_BOUND_EVENT = 772,
    SNS_DISTANCE_BOUND_MSGID_SNS_GET_DISTANCE_ACCUMULATED_EVENT = 773
} sns_distance_bound_msgid;
#define _sns_distance_bound_msgid_MIN SNS_DISTANCE_BOUND_MSGID_SNS_SET_DISTANCE_BOUND
#define _sns_distance_bound_msgid_MAX SNS_DISTANCE_BOUND_MSGID_SNS_GET_DISTANCE_ACCUMULATED_EVENT
#define _sns_distance_bound_msgid_ARRAYSIZE ((sns_distance_bound_msgid)(SNS_DISTANCE_BOUND_MSGID_SNS_GET_DISTANCE_ACCUMULATED_EVENT+1))
#define sns_distance_bound_msgid_SNS_DISTANCE_BOUND_MSGID_SNS_SET_DISTANCE_BOUND SNS_DISTANCE_BOUND_MSGID_SNS_SET_DISTANCE_BOUND
#define sns_distance_bound_msgid_SNS_DISTANCE_BOUND_MSGID_SNS_GET_DISTANCE_ACCUMULATED SNS_DISTANCE_BOUND_MSGID_SNS_GET_DISTANCE_ACCUMULATED
#define sns_distance_bound_msgid_SNS_DISTANCE_BOUND_MSGID_SNS_DISTANCE_BOUND_EVENT SNS_DISTANCE_BOUND_MSGID_SNS_DISTANCE_BOUND_EVENT
#define sns_distance_bound_msgid_SNS_DISTANCE_BOUND_MSGID_SNS_GET_DISTANCE_ACCUMULATED_EVENT SNS_DISTANCE_BOUND_MSGID_SNS_GET_DISTANCE_ACCUMULATED_EVENT

typedef enum _sns_distance_bound_motion_state {
    SNS_DB_MS_UNKNOWN = 0,
    SNS_DB_MS_STATIONARY = 1,
    SNS_DB_MS_MOVE = 2,
    SNS_DB_MS_FIDDLE = 3,
    SNS_DB_MS_PEDESTRIAN = 4,
    SNS_DB_MS_VEHICLE = 5,
    SNS_DB_MS_WALK = 6,
    SNS_DB_MS_RUN = 7,
    SNS_DB_MS_BIKE = 8,
    SNS_DB_MS_MAX = 9
} sns_distance_bound_motion_state;
#define _sns_distance_bound_motion_state_MIN SNS_DB_MS_UNKNOWN
#define _sns_distance_bound_motion_state_MAX SNS_DB_MS_MAX
#define _sns_distance_bound_motion_state_ARRAYSIZE ((sns_distance_bound_motion_state)(SNS_DB_MS_MAX+1))
#define sns_distance_bound_motion_state_SNS_DB_MS_UNKNOWN SNS_DB_MS_UNKNOWN
#define sns_distance_bound_motion_state_SNS_DB_MS_STATIONARY SNS_DB_MS_STATIONARY
#define sns_distance_bound_motion_state_SNS_DB_MS_MOVE SNS_DB_MS_MOVE
#define sns_distance_bound_motion_state_SNS_DB_MS_FIDDLE SNS_DB_MS_FIDDLE
#define sns_distance_bound_motion_state_SNS_DB_MS_PEDESTRIAN SNS_DB_MS_PEDESTRIAN
#define sns_distance_bound_motion_state_SNS_DB_MS_VEHICLE SNS_DB_MS_VEHICLE
#define sns_distance_bound_motion_state_SNS_DB_MS_WALK SNS_DB_MS_WALK
#define sns_distance_bound_motion_state_SNS_DB_MS_RUN SNS_DB_MS_RUN
#define sns_distance_bound_motion_state_SNS_DB_MS_BIKE SNS_DB_MS_BIKE
#define sns_distance_bound_motion_state_SNS_DB_MS_MAX SNS_DB_MS_MAX

/* Struct definitions */
typedef struct _sns_distance_bound_event {
    float distance_accumulated;
/* @@protoc_insertion_point(struct:sns_distance_bound_event) */
} sns_distance_bound_event;

typedef struct _sns_get_distance_accumulated_event {
    float distance_accumulated;
/* @@protoc_insertion_point(struct:sns_get_distance_accumulated_event) */
} sns_get_distance_accumulated_event;

typedef struct _sns_set_distance_bound {
    float distance_bound;
    pb_callback_t speed_bound;
/* @@protoc_insertion_point(struct:sns_set_distance_bound) */
} sns_set_distance_bound;

typedef struct _sns_set_distance_bound_speeds {
    sns_distance_bound_motion_state state;
    float speed;
/* @@protoc_insertion_point(struct:sns_set_distance_bound_speeds) */
} sns_set_distance_bound_speeds;

/* Default values for struct fields */

/* Initializer values for message structs */
#define sns_set_distance_bound_init_default      {0, {{NULL}, NULL}}
#define sns_set_distance_bound_speeds_init_default {(sns_distance_bound_motion_state)0, 0}
#define sns_distance_bound_event_init_default    {0}
#define sns_get_distance_accumulated_event_init_default {0}
#define sns_set_distance_bound_init_zero         {0, {{NULL}, NULL}}
#define sns_set_distance_bound_speeds_init_zero  {(sns_distance_bound_motion_state)0, 0}
#define sns_distance_bound_event_init_zero       {0}
#define sns_get_distance_accumulated_event_init_zero {0}

/* Field tags (for use in manual encoding/decoding) */
#define sns_distance_bound_event_distance_accumulated_tag 1
#define sns_get_distance_accumulated_event_distance_accumulated_tag 1
#define sns_set_distance_bound_distance_bound_tag 1
#define sns_set_distance_bound_speed_bound_tag   2
#define sns_set_distance_bound_speeds_state_tag  1
#define sns_set_distance_bound_speeds_speed_tag  2

/* Struct field encoding specification for nanopb */
extern const pb_field_t sns_set_distance_bound_fields[3];
extern const pb_field_t sns_set_distance_bound_speeds_fields[3];
extern const pb_field_t sns_distance_bound_event_fields[2];
extern const pb_field_t sns_get_distance_accumulated_event_fields[2];

/* Maximum encoded size of messages (where known) */
/* sns_set_distance_bound_size depends on runtime parameters */
#define sns_set_distance_bound_speeds_size       7
#define sns_distance_bound_event_size            5
#define sns_get_distance_accumulated_event_size  5

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define SNS_DISTANCE_BOUND_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
