/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.7 at Fri Jul 14 02:01:39 2017. */

#ifndef PB_SNS_REMOTE_PROC_STATE_PB_H_INCLUDED
#define PB_SNS_REMOTE_PROC_STATE_PB_H_INCLUDED
#include <pb.h>

#include "sns_std_type.pb.h"

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _sns_remote_proc_state_msgid {
    SNS_REMOTE_PROC_STATE_MSGID_SNS_REMOTE_PROC_STATE_CONFIG = 512,
    SNS_REMOTE_PROC_STATE_MSGID_SNS_REMOTE_PROC_STATE_EVENT = 1024
} sns_remote_proc_state_msgid;
#define _sns_remote_proc_state_msgid_MIN SNS_REMOTE_PROC_STATE_MSGID_SNS_REMOTE_PROC_STATE_CONFIG
#define _sns_remote_proc_state_msgid_MAX SNS_REMOTE_PROC_STATE_MSGID_SNS_REMOTE_PROC_STATE_EVENT
#define _sns_remote_proc_state_msgid_ARRAYSIZE ((sns_remote_proc_state_msgid)(SNS_REMOTE_PROC_STATE_MSGID_SNS_REMOTE_PROC_STATE_EVENT+1))
#define sns_remote_proc_state_msgid_SNS_REMOTE_PROC_STATE_MSGID_SNS_REMOTE_PROC_STATE_CONFIG SNS_REMOTE_PROC_STATE_MSGID_SNS_REMOTE_PROC_STATE_CONFIG
#define sns_remote_proc_state_msgid_SNS_REMOTE_PROC_STATE_MSGID_SNS_REMOTE_PROC_STATE_EVENT SNS_REMOTE_PROC_STATE_MSGID_SNS_REMOTE_PROC_STATE_EVENT

typedef enum _sns_remote_proc_state_event_type {
    SNS_REMOTE_PROC_STATE_SUSPEND = 0,
    SNS_REMOTE_PROC_STATE_AWAKE = 1
} sns_remote_proc_state_event_type;
#define _sns_remote_proc_state_event_type_MIN SNS_REMOTE_PROC_STATE_SUSPEND
#define _sns_remote_proc_state_event_type_MAX SNS_REMOTE_PROC_STATE_AWAKE
#define _sns_remote_proc_state_event_type_ARRAYSIZE ((sns_remote_proc_state_event_type)(SNS_REMOTE_PROC_STATE_AWAKE+1))
#define sns_remote_proc_state_event_type_SNS_REMOTE_PROC_STATE_SUSPEND SNS_REMOTE_PROC_STATE_SUSPEND
#define sns_remote_proc_state_event_type_SNS_REMOTE_PROC_STATE_AWAKE SNS_REMOTE_PROC_STATE_AWAKE

/* Struct definitions */
typedef struct _sns_remote_proc_state_config {
    sns_std_client_processor proc_type;
/* @@protoc_insertion_point(struct:sns_remote_proc_state_config) */
} sns_remote_proc_state_config;

typedef struct _sns_remote_proc_state_event {
    sns_std_client_processor proc_type;
    sns_remote_proc_state_event_type event_type;
/* @@protoc_insertion_point(struct:sns_remote_proc_state_event) */
} sns_remote_proc_state_event;

/* Default values for struct fields */

/* Initializer values for message structs */
#define sns_remote_proc_state_config_init_default {(sns_std_client_processor)0}
#define sns_remote_proc_state_event_init_default {(sns_std_client_processor)0, (sns_remote_proc_state_event_type)0}
#define sns_remote_proc_state_config_init_zero   {(sns_std_client_processor)0}
#define sns_remote_proc_state_event_init_zero    {(sns_std_client_processor)0, (sns_remote_proc_state_event_type)0}

/* Field tags (for use in manual encoding/decoding) */
#define sns_remote_proc_state_config_proc_type_tag 1
#define sns_remote_proc_state_event_proc_type_tag 1
#define sns_remote_proc_state_event_event_type_tag 2

/* Struct field encoding specification for nanopb */
extern const pb_field_t sns_remote_proc_state_config_fields[2];
extern const pb_field_t sns_remote_proc_state_event_fields[3];

/* Maximum encoded size of messages (where known) */
#define sns_remote_proc_state_config_size        2
#define sns_remote_proc_state_event_size         4

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define SNS_REMOTE_PROC_STATE_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
