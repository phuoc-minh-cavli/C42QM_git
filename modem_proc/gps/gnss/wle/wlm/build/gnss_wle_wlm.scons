# -------------------------------------------------------------------------------- #
#                    G N S S _ W L E _ W L M . S C O N S
#
# DESCRIPTION
#   SCons file for the GNSS WLE WLM subsystem.
#
#
# INITIALIZATION AND SEQUENCING REQUIREMENTS
#   None.
#
# 
#
#  Copyright (c) 2015 QUALCOMM Technologies, Inc.
#  All Rights Reserved.
#  Confidential and Proprietary - Qualcomm Technologies, Inc.
#
# Export of this technology or software is regulated by the U.S. Government.
# Diversion contrary to U.S. law prohibited.
#
# All ideas, data and information contained in or disclosed by
# this document are confidential and proprietary information of
# Qualcomm Technologies Incorporated and all rights therein are expressly reserved.
# By accepting this material the recipient agrees that this material
# and the information contained therein are held in confidence and in
# trust and will not be used, copied, reproduced in whole or in part,
# nor its contents revealed in any manner to others without the express
# written permission of Qualcomm Technologies Incorporated.
#
# $Header: //components/rel/gnss8.mpss/9.5.1.1/gnss/wle/wlm/build/gnss_wle_wlm.scons#1 $
# $DateTime: 2020/07/21 21:23:44 $
# $Author: pwbldsvc $ 
# 
# --------------------------------------------------------------------------------- #

#--------------------------------------------------------------------------------
# Import and clone the SCons environment
#--------------------------------------------------------------------------------
Import('gps_env')
from glob import glob
from os.path import join, basename

#--------------------------------------------------------------------------------
# Setup source PATH
#--------------------------------------------------------------------------------
SRCPATH = '../src'
gps_env.VariantDir('${BUILDPATH}', SRCPATH, duplicate=0)

#--------------------------------------------------------------------------------
# Name of the subsystem to which this unit belongs
#--------------------------------------------------------------------------------
LIB_TARGET = '${BUILDPATH}/' + 'gnss_wle_wlm'

#--------------------------------------------------------------------------------
# Images that this VU is added
#--------------------------------------------------------------------------------
IMAGES = ['MODEM_MODEM']

#--------------------------------------------------------------------------------
# Generate the library and add to an image
#--------------------------------------------------------------------------------
BINARY_LIB_SOURCES = gps_env.GenerateCompileList(SRCPATH, '*.c')
BINARY_LIB_CPP_SOURCES = gps_env.GenerateCompileList(SRCPATH, 'wlm_lowi_wrapper.cpp')

# If WLE is not enabled, switch to stubs.  Otherwise, remove stub file
if 'USES_FEATURE_CGPS_WLE' not in gps_env:
    BINARY_LIB_SOURCES = gps_env.GenerateCompileList(SRCPATH, 'wlm_stubs.c')
    BINARY_LIB_CPP_SOURCES = []
else:
    gps_env.RemoveCompileFile(BINARY_LIB_SOURCES, 'wlm_stubs.c')

# All src files are not shipped.
gps_env.CleanPack("CLEANPACK_TARGET", gps_env.FindFiles('*', '../src'))

#--------------------------------------------------------------------------------
# Ship our code as binary library and add it to the Modem image
#--------------------------------------------------------------------------------
gps_env.AddGPSFullBinaryLibrary(IMAGES, (LIB_TARGET + '_pvt'), [BINARY_LIB_SOURCES, BINARY_LIB_CPP_SOURCES])

# If WLE is not enabled, return now and don't start the WLM Task
if 'USES_FEATURE_CGPS_WLE' not in gps_env:
    Return()

#--------------------------------------------------------------------------------
# Initialize WLM Task through RCINIT
#--------------------------------------------------------------------------------
RCINIT_TASK_FN = {
    'thread_name'         : 'wlm',
    'stack_size_bytes'    : gps_env.subst('$TLM_STKSZ'),
    'sequence_group'      : gps_env.subst('$MODEM_UPPERLAYER'),
    'priority_amss_order' : 'TLM_PRI_ORDER',
    'cpu_affinity'        : 'REX_ANY_CPU_AFFINITY_MASK',
    'policy_optin'        : ['default', 'ftm', ],
}
gps_env.AddRCInitTask (IMAGES, RCINIT_TASK_FN)
