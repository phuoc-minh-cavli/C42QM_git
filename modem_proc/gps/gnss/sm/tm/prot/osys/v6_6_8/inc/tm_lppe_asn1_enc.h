/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 6.6.8, Date: 22-Sep-2016.
 */
#include "customer.h"
#ifdef FEATURE_GNSS_LPPE
#ifndef TM_LPPE_ASN1_ENC_H
#define TM_LPPE_ASN1_ENC_H

#ifdef __cplusplus
extern "C" {
#endif

#include <stdio.h>
#include <stdlib.h>
#include "rtkey_lppe.h"
#include "rtpersrc/asn1per.h"
#include "tm_lpp_asn1.h"

/**
 * Header file for ASN.1 module LPPe-PDU-Definitions
 */
/**************************************************************/
/*                                                            */
/*  OMA_LPPe_LPPeCompatibilityLevel                           */
/*                                                            */
/**************************************************************/
/*
OMA-LPPe-LPPeCompatibilityLevel ::= INTEGER (0..15)
*/
typedef OSUINT8 tm_encode_OMA_LPPe_LPPeCompatibilityLevel;

EXTERN int asn1PE_tm_encode_OMA_LPPe_LPPeCompatibilityLevel (OSCTXT* pctxt, tm_encode_OMA_LPPe_LPPeCompatibilityLevel value);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_LPPeVersion                                      */
/*                                                            */
/**************************************************************/
/*
OMA-LPPe-LPPeVersion ::= SEQUENCE {
   majorVersion [0] INTEGER (0..255),
   minorVersion [1] INTEGER (0..255)
}
*/
typedef struct EXTERN tm_encode_OMA_LPPe_LPPeVersion {
   OSUINT8 majorVersion;
   OSUINT8 minorVersion;
} tm_encode_OMA_LPPe_LPPeVersion;

EXTERN int asn1PE_tm_encode_OMA_LPPe_LPPeVersion (OSCTXT* pctxt, tm_encode_OMA_LPPe_LPPeVersion* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_LPPeMode                                         */
/*                                                            */
/**************************************************************/
/*
OMA-LPPe-LPPeMode ::= ENUMERATED { normal(0), reversed(1), ... }
*/
typedef enum {
   tm_encode_OMA_LPPe_LPPeMode_normal = 0,
   tm_encode_OMA_LPPe_LPPeMode_reversed = 1
} tm_encode_OMA_LPPe_LPPeMode_Root;

typedef OSUINT32 tm_encode_OMA_LPPe_LPPeMode;

EXTERN int asn1PE_tm_encode_OMA_LPPe_LPPeMode (OSCTXT* pctxt, tm_encode_OMA_LPPe_LPPeMode value);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_IP_Address_Capabilities_iP_Address_support       */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'OMA-LPPe-IP-Address-Capabilities'
*/
/* Named bit constants */

#define tm_encode_OMA_LPPe_IP_Address_Capabilities_iP_Address_support_tm_encode_iPv4                  0
#define tm_encode_OMA_LPPe_IP_Address_Capabilities_iP_Address_support_tm_encode_iPv6                  1
#define tm_encode_OMA_LPPe_IP_Address_Capabilities_iP_Address_support_tm_encode_nat                   2

typedef struct tm_encode_OMA_LPPe_IP_Address_Capabilities_iP_Address_support {
   OSUINT32 numbits;
   OSOCTET data[1];
} tm_encode_OMA_LPPe_IP_Address_Capabilities_iP_Address_support;

EXTERN int asn1PE_tm_encode_OMA_LPPe_IP_Address_Capabilities_iP_Address_support (OSCTXT* pctxt, tm_encode_OMA_LPPe_IP_Address_Capabilities_iP_Address_support* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_IP_Address_Capabilities                          */
/*                                                            */
/**************************************************************/
/*
OMA-LPPe-IP-Address-Capabilities ::= SEQUENCE {
   iP-Address-support [0] BIT STRING  { iPv4(0), iPv6(1), nat(2) } (SIZE (1..8)) OPTIONAL,
   ...
}
*/
typedef struct EXTERN tm_encode_OMA_LPPe_IP_Address_Capabilities {
   struct {
      unsigned iP_Address_supportPresent : 1;
   } m;
   tm_encode_OMA_LPPe_IP_Address_Capabilities_iP_Address_support iP_Address_support;
   OSRTDList extElem1;
} tm_encode_OMA_LPPe_IP_Address_Capabilities;

EXTERN int asn1PE_tm_encode_OMA_LPPe_IP_Address_Capabilities (OSCTXT* pctxt, tm_encode_OMA_LPPe_IP_Address_Capabilities* pvalue);

EXTERN void asn1Free_tm_encode_OMA_LPPe_IP_Address_Capabilities (OSCTXT *pctxt, 
   tm_encode_OMA_LPPe_IP_Address_Capabilities* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_CharArray                                        */
/*                                                            */
/**************************************************************/
/*
 ASN1STOP
 ASN1START

OMA-LPPe-CharArray ::= VisibleString (FROM ("a".."z" | "A".."Z" | "0".."9" | ".-")SIZE (1..31))
*/
typedef const char* tm_encode_OMA_LPPe_CharArray;

EXTERN int asn1PE_tm_encode_OMA_LPPe_CharArray (OSCTXT* pctxt, tm_encode_OMA_LPPe_CharArray value);

EXTERN void asn1Free_tm_encode_OMA_LPPe_CharArray (OSCTXT *pctxt, 
   tm_encode_OMA_LPPe_CharArray pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_NonStandard_VendorOrOperatorID                   */
/*                                                            */
/**************************************************************/
/*
OMA-LPPe-NonStandard-VendorOrOperatorID ::= SEQUENCE {
   encodedID [0] INTEGER (0..65535),
   visibleIdentification [1] OMA-LPPe-CharArray OPTIONAL,
   ...
}
*/
typedef struct EXTERN tm_encode_OMA_LPPe_NonStandard_VendorOrOperatorID {
   struct {
      unsigned visibleIdentificationPresent : 1;
   } m;
   OSUINT16 encodedID;
   tm_encode_OMA_LPPe_CharArray visibleIdentification;
   OSRTDList extElem1;
} tm_encode_OMA_LPPe_NonStandard_VendorOrOperatorID;

EXTERN int asn1PE_tm_encode_OMA_LPPe_NonStandard_VendorOrOperatorID (OSCTXT* pctxt, tm_encode_OMA_LPPe_NonStandard_VendorOrOperatorID* pvalue);

EXTERN void asn1Free_tm_encode_OMA_LPPe_NonStandard_VendorOrOperatorID (OSCTXT *pctxt, 
   tm_encode_OMA_LPPe_NonStandard_VendorOrOperatorID* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_VendorOrOperatorID                               */
/*                                                            */
/**************************************************************/
/*
 ASN1STOP
 ASN1START

OMA-LPPe-VendorOrOperatorID ::= CHOICE {
   standard-VendorOrOperatorID [0] INTEGER (1..1024),
   nonStandard-VendorOrOperatorID [1] OMA-LPPe-NonStandard-VendorOrOperatorID,
   ...
}
*/
/* Choice tag constants */

#define T_tm_encode_OMA_LPPe_VendorOrOperatorID_standard_VendorOrOperatorID 1
#define T_tm_encode_OMA_LPPe_VendorOrOperatorID_nonStandard_VendorOrOperatorID 2
#define T_tm_encode_OMA_LPPe_VendorOrOperatorID_extElem1 3

typedef struct EXTERN tm_encode_OMA_LPPe_VendorOrOperatorID {
   OSUINT32 t;
   union {
      /* t = 1 */
      OSUINT16 standard_VendorOrOperatorID;
      /* t = 2 */
      tm_encode_OMA_LPPe_NonStandard_VendorOrOperatorID *nonStandard_VendorOrOperatorID;
      /* t = 3 */
      ASN1OpenType *extElem1;
   } u;
} tm_encode_OMA_LPPe_VendorOrOperatorID;

EXTERN int asn1PE_tm_encode_OMA_LPPe_VendorOrOperatorID (OSCTXT* pctxt, tm_encode_OMA_LPPe_VendorOrOperatorID* pvalue);

EXTERN void asn1Free_tm_encode_OMA_LPPe_VendorOrOperatorID (OSCTXT *pctxt, 
   tm_encode_OMA_LPPe_VendorOrOperatorID* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_AssistanceContainerID                            */
/*                                                            */
/**************************************************************/
/*
 ASN1STOP
 ASN1START

OMA-LPPe-AssistanceContainerID ::= SEQUENCE {
   containerID [0] INTEGER (0..65535),
   ...
}
*/
typedef struct EXTERN tm_encode_OMA_LPPe_AssistanceContainerID {
   OSUINT16 containerID;
   OSRTDList extElem1;
} tm_encode_OMA_LPPe_AssistanceContainerID;

EXTERN int asn1PE_tm_encode_OMA_LPPe_AssistanceContainerID (OSCTXT* pctxt, tm_encode_OMA_LPPe_AssistanceContainerID* pvalue);

EXTERN void asn1Free_tm_encode_OMA_LPPe_AssistanceContainerID (OSCTXT *pctxt, 
   tm_encode_OMA_LPPe_AssistanceContainerID* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_AssistanceContainerList                          */
/*                                                            */
/**************************************************************/
/*
OMA-LPPe-AssistanceContainerList ::= SEQUENCE (SIZE (1..maxAssistanceContainerList)) OF OMA-LPPe-AssistanceContainerID
*/
typedef struct EXTERN tm_encode_OMA_LPPe_AssistanceContainerList {
   OSUINT32 n;
   tm_encode_OMA_LPPe_AssistanceContainerID *elem;
} tm_encode_OMA_LPPe_AssistanceContainerList;

EXTERN int asn1PE_tm_encode_OMA_LPPe_AssistanceContainerList (OSCTXT* pctxt, tm_encode_OMA_LPPe_AssistanceContainerList* pvalue);

EXTERN void asn1Free_tm_encode_OMA_LPPe_AssistanceContainerList (OSCTXT *pctxt, 
   tm_encode_OMA_LPPe_AssistanceContainerList* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_VendorOrOperatorAssistanceContainerList          */
/*                                                            */
/**************************************************************/
/*
OMA-LPPe-VendorOrOperatorAssistanceContainerList ::= SEQUENCE {
   vendorOrOperatorID [0] OMA-LPPe-VendorOrOperatorID,
   assistanceContainerList [1] OMA-LPPe-AssistanceContainerList,
   ...
}
*/
typedef struct EXTERN tm_encode_OMA_LPPe_VendorOrOperatorAssistanceContainerList {
   tm_encode_OMA_LPPe_VendorOrOperatorID vendorOrOperatorID;
   tm_encode_OMA_LPPe_AssistanceContainerList assistanceContainerList;
   OSRTDList extElem1;
} tm_encode_OMA_LPPe_VendorOrOperatorAssistanceContainerList;

EXTERN int asn1PE_tm_encode_OMA_LPPe_VendorOrOperatorAssistanceContainerList (OSCTXT* pctxt, tm_encode_OMA_LPPe_VendorOrOperatorAssistanceContainerList* pvalue);

EXTERN void asn1Free_tm_encode_OMA_LPPe_VendorOrOperatorAssistanceContainerList (OSCTXT *pctxt, 
   tm_encode_OMA_LPPe_VendorOrOperatorAssistanceContainerList* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_AssistanceContainerSupport                       */
/*                                                            */
/**************************************************************/
/*
OMA-LPPe-AssistanceContainerSupport ::= SEQUENCE (SIZE (1..maxVendorOrOperatorIDList)) OF OMA-LPPe-VendorOrOperatorAssistanceContainerList
*/
typedef struct EXTERN tm_encode_OMA_LPPe_AssistanceContainerSupport {
   OSUINT32 n;
   tm_encode_OMA_LPPe_VendorOrOperatorAssistanceContainerList *elem;
} tm_encode_OMA_LPPe_AssistanceContainerSupport;

EXTERN int asn1PE_tm_encode_OMA_LPPe_AssistanceContainerSupport (OSCTXT* pctxt, tm_encode_OMA_LPPe_AssistanceContainerSupport* pvalue);

EXTERN void asn1Free_tm_encode_OMA_LPPe_AssistanceContainerSupport (OSCTXT *pctxt, 
   tm_encode_OMA_LPPe_AssistanceContainerSupport* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_LocationInformationContainerID                   */
/*                                                            */
/**************************************************************/
/*
 ASN1STOP
 ASN1START

OMA-LPPe-LocationInformationContainerID ::= SEQUENCE {
   containerID [0] INTEGER (0..65535),
   ...
}
*/
typedef struct EXTERN tm_encode_OMA_LPPe_LocationInformationContainerID {
   OSUINT16 containerID;
   OSRTDList extElem1;
} tm_encode_OMA_LPPe_LocationInformationContainerID;

EXTERN int asn1PE_tm_encode_OMA_LPPe_LocationInformationContainerID (OSCTXT* pctxt, tm_encode_OMA_LPPe_LocationInformationContainerID* pvalue);

EXTERN void asn1Free_tm_encode_OMA_LPPe_LocationInformationContainerID (OSCTXT *pctxt, 
   tm_encode_OMA_LPPe_LocationInformationContainerID* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_LocationInformationContainerList                 */
/*                                                            */
/**************************************************************/
/*
OMA-LPPe-LocationInformationContainerList ::= SEQUENCE (SIZE (1..maxLocationInformationContainerList)) OF OMA-LPPe-LocationInformationContainerID
*/
typedef struct EXTERN tm_encode_OMA_LPPe_LocationInformationContainerList {
   OSUINT32 n;
   tm_encode_OMA_LPPe_LocationInformationContainerID *elem;
} tm_encode_OMA_LPPe_LocationInformationContainerList;

EXTERN int asn1PE_tm_encode_OMA_LPPe_LocationInformationContainerList (OSCTXT* pctxt, tm_encode_OMA_LPPe_LocationInformationContainerList* pvalue);

EXTERN void asn1Free_tm_encode_OMA_LPPe_LocationInformationContainerList (OSCTXT *pctxt, 
   tm_encode_OMA_LPPe_LocationInformationContainerList* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_VendorOrOperatorLocationInformationContainerLis  */
/*                                                            */
/**************************************************************/
/*
OMA-LPPe-VendorOrOperatorLocationInformationContainerList ::= SEQUENCE {
   vendorOrOperatorID [0] OMA-LPPe-VendorOrOperatorID,
   locationInformationContainerList [1] OMA-LPPe-LocationInformationContainerList,
   ...
}
*/
typedef struct EXTERN tm_encode_OMA_LPPe_VendorOrOperatorLocationInformationContainerList {
   tm_encode_OMA_LPPe_VendorOrOperatorID vendorOrOperatorID;
   tm_encode_OMA_LPPe_LocationInformationContainerList locationInformationContainerList;
   OSRTDList extElem1;
} tm_encode_OMA_LPPe_VendorOrOperatorLocationInformationContainerList;

EXTERN int asn1PE_tm_encode_OMA_LPPe_VendorOrOperatorLocationInformationContainerList (OSCTXT* pctxt, tm_encode_OMA_LPPe_VendorOrOperatorLocationInformationContainerList* pvalue);

EXTERN void asn1Free_tm_encode_OMA_LPPe_VendorOrOperatorLocationInformationContainerList (OSCTXT *pctxt, 
   tm_encode_OMA_LPPe_VendorOrOperatorLocationInformationContainerList* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_LocationInformationContainerSupport              */
/*                                                            */
/**************************************************************/
/*
OMA-LPPe-LocationInformationContainerSupport ::= SEQUENCE (SIZE (1..maxVendorOrOperatorIDList)) OF OMA-LPPe-VendorOrOperatorLocationInformationContainerList
*/
typedef struct EXTERN tm_encode_OMA_LPPe_LocationInformationContainerSupport {
   OSUINT32 n;
   tm_encode_OMA_LPPe_VendorOrOperatorLocationInformationContainerList *elem;
} tm_encode_OMA_LPPe_LocationInformationContainerSupport;

EXTERN int asn1PE_tm_encode_OMA_LPPe_LocationInformationContainerSupport (OSCTXT* pctxt, tm_encode_OMA_LPPe_LocationInformationContainerSupport* pvalue);

EXTERN void asn1Free_tm_encode_OMA_LPPe_LocationInformationContainerSupport (OSCTXT *pctxt, 
   tm_encode_OMA_LPPe_LocationInformationContainerSupport* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_RelativeLocationChange_Capabilities              */
/*                                                            */
/**************************************************************/
/*
OMA-LPPe-RelativeLocationChange-Capabilities ::= SEQUENCE {
   numberOfChanges [0] INTEGER (1..5) OPTIONAL,
   ...
}
*/
typedef struct EXTERN tm_encode_OMA_LPPe_RelativeLocationChange_Capabilities {
   struct {
      unsigned numberOfChangesPresent : 1;
   } m;
   OSUINT8 numberOfChanges;
   OSRTDList extElem1;
} tm_encode_OMA_LPPe_RelativeLocationChange_Capabilities;

EXTERN int asn1PE_tm_encode_OMA_LPPe_RelativeLocationChange_Capabilities (OSCTXT* pctxt, tm_encode_OMA_LPPe_RelativeLocationChange_Capabilities* pvalue);

EXTERN void asn1Free_tm_encode_OMA_LPPe_RelativeLocationChange_Capabilities (OSCTXT *pctxt, 
   tm_encode_OMA_LPPe_RelativeLocationChange_Capabilities* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_HighAccuracyFormatCapabilities                   */
/*                                                            */
/**************************************************************/
/*
OMA-LPPe-HighAccuracyFormatCapabilities ::= BIT STRING  { hAposition(0), hAvelocity(1) } (SIZE (1..8))
*/
/* Named bit constants */

#define tm_encode_OMA_LPPe_HighAccuracyFormatCapabilities_tm_encode_hAposition            0
#define tm_encode_OMA_LPPe_HighAccuracyFormatCapabilities_tm_encode_hAvelocity            1

typedef struct tm_encode_OMA_LPPe_HighAccuracyFormatCapabilities {
   OSUINT32 numbits;
   OSOCTET data[1];
} tm_encode_OMA_LPPe_HighAccuracyFormatCapabilities;

EXTERN int asn1PE_tm_encode_OMA_LPPe_HighAccuracyFormatCapabilities (OSCTXT* pctxt, tm_encode_OMA_LPPe_HighAccuracyFormatCapabilities* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_SegmentedAssistanceData_ProvideCapabs            */
/*                                                            */
/**************************************************************/
/*
OMA-LPPe-SegmentedAssistanceData-ProvideCapabs ::= SEQUENCE {
   maxSegments [0] INTEGER (2..4096) OPTIONAL,
   maxSize [1] INTEGER (1..5000) OPTIONAL,
   minSize [2] INTEGER (1..5000) OPTIONAL,
   resume [3] NULL OPTIONAL,
   ...
}
*/
typedef struct EXTERN tm_encode_OMA_LPPe_SegmentedAssistanceData_ProvideCapabs {
   struct {
      unsigned maxSegmentsPresent : 1;
      unsigned maxSizePresent : 1;
      unsigned minSizePresent : 1;
      unsigned resumePresent : 1;
   } m;
   OSUINT16 maxSegments;
   OSUINT16 maxSize;
   OSUINT16 minSize;
   OSRTDList extElem1;
} tm_encode_OMA_LPPe_SegmentedAssistanceData_ProvideCapabs;

EXTERN int asn1PE_tm_encode_OMA_LPPe_SegmentedAssistanceData_ProvideCapabs (OSCTXT* pctxt, tm_encode_OMA_LPPe_SegmentedAssistanceData_ProvideCapabs* pvalue);

EXTERN void asn1Free_tm_encode_OMA_LPPe_SegmentedAssistanceData_ProvideCapabs (OSCTXT *pctxt, 
   tm_encode_OMA_LPPe_SegmentedAssistanceData_ProvideCapabs* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_ReferencePointCapabilities_relativeLocationRepo  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'OMA-LPPe-ReferencePointCapabilities'
*/
/* Named bit constants */

#define tm_encode_OMA_LPPe_ReferencePointCapabilities_relativeLocationReportingSupport_tm_encode_geo                   0
#define tm_encode_OMA_LPPe_ReferencePointCapabilities_relativeLocationReportingSupport_tm_encode_civic                 1
#define tm_encode_OMA_LPPe_ReferencePointCapabilities_relativeLocationReportingSupport_tm_encode_otherProviders        2

typedef struct tm_encode_OMA_LPPe_ReferencePointCapabilities_relativeLocationReportingSupport {
   OSUINT32 numbits;
   OSOCTET data[1];
} tm_encode_OMA_LPPe_ReferencePointCapabilities_relativeLocationReportingSupport;

EXTERN int asn1PE_tm_encode_OMA_LPPe_ReferencePointCapabilities_relativeLocationReportingSupport (OSCTXT* pctxt, tm_encode_OMA_LPPe_ReferencePointCapabilities_relativeLocationReportingSupport* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_ReferencePointProviderSupportElement_mapDataSup  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'OMA-LPPe-ReferencePointProviderSupportElement'
*/
typedef struct EXTERN tm_encode_OMA_LPPe_ReferencePointProviderSupportElement_mapDataSupport {
   struct {
      unsigned mapDataFormatPresent : 1;
   } m;
   OSDynOctStr mapDataFormat;
   OSRTDList extElem1;
} tm_encode_OMA_LPPe_ReferencePointProviderSupportElement_mapDataSupport;

EXTERN int asn1PE_tm_encode_OMA_LPPe_ReferencePointProviderSupportElement_mapDataSupport (OSCTXT* pctxt, tm_encode_OMA_LPPe_ReferencePointProviderSupportElement_mapDataSupport* pvalue);

EXTERN void asn1Free_tm_encode_OMA_LPPe_ReferencePointProviderSupportElement_mapDataSupport (OSCTXT *pctxt, 
   tm_encode_OMA_LPPe_ReferencePointProviderSupportElement_mapDataSupport* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_ReferencePointProviderSupportElement             */
/*                                                            */
/**************************************************************/
/*
OMA-LPPe-ReferencePointProviderSupportElement ::= SEQUENCE {
   referencePointProvider [0] OMA-LPPe-VendorOrOperatorID,
   mapDataSupport [1] SEQUENCE {
      mapDataFormat [0] OCTET STRING OPTIONAL,
      ...
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN tm_encode_OMA_LPPe_ReferencePointProviderSupportElement {
   struct {
      unsigned mapDataSupportPresent : 1;
   } m;
   tm_encode_OMA_LPPe_VendorOrOperatorID referencePointProvider;
   tm_encode_OMA_LPPe_ReferencePointProviderSupportElement_mapDataSupport mapDataSupport;
   OSRTDList extElem1;
} tm_encode_OMA_LPPe_ReferencePointProviderSupportElement;

EXTERN int asn1PE_tm_encode_OMA_LPPe_ReferencePointProviderSupportElement (OSCTXT* pctxt, tm_encode_OMA_LPPe_ReferencePointProviderSupportElement* pvalue);

EXTERN void asn1Free_tm_encode_OMA_LPPe_ReferencePointProviderSupportElement (OSCTXT *pctxt, 
   tm_encode_OMA_LPPe_ReferencePointProviderSupportElement* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_ReferencePointCapabilities_referencePointProvid  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'OMA-LPPe-ReferencePointCapabilities'
*/
typedef struct EXTERN tm_encode_OMA_LPPe_ReferencePointCapabilities_referencePointProviderSupportList {
   OSUINT32 n;
   tm_encode_OMA_LPPe_ReferencePointProviderSupportElement *elem;
} tm_encode_OMA_LPPe_ReferencePointCapabilities_referencePointProviderSupportList;

EXTERN int asn1PE_tm_encode_OMA_LPPe_ReferencePointCapabilities_referencePointProviderSupportList (OSCTXT* pctxt, tm_encode_OMA_LPPe_ReferencePointCapabilities_referencePointProviderSupportList* pvalue);

EXTERN void asn1Free_tm_encode_OMA_LPPe_ReferencePointCapabilities_referencePointProviderSupportList (OSCTXT *pctxt, 
   tm_encode_OMA_LPPe_ReferencePointCapabilities_referencePointProviderSupportList* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_ReferencePointCapabilities                       */
/*                                                            */
/**************************************************************/
/*
OMA-LPPe-ReferencePointCapabilities ::= SEQUENCE {
   relativeLocationReportingSupport [0] BIT STRING  { geo(0), civic(1), otherProviders(2) } (SIZE (1..8)),
   referencePointProviderSupportList [1] SEQUENCE (SIZE (1..128)) OF OMA-LPPe-ReferencePointProviderSupportElement OPTIONAL,
   ...
}
*/
typedef struct EXTERN tm_encode_OMA_LPPe_ReferencePointCapabilities {
   struct {
      unsigned referencePointProviderSupportListPresent : 1;
   } m;
   tm_encode_OMA_LPPe_ReferencePointCapabilities_relativeLocationReportingSupport relativeLocationReportingSupport;
   tm_encode_OMA_LPPe_ReferencePointCapabilities_referencePointProviderSupportList referencePointProviderSupportList;
   OSRTDList extElem1;
} tm_encode_OMA_LPPe_ReferencePointCapabilities;

EXTERN int asn1PE_tm_encode_OMA_LPPe_ReferencePointCapabilities (OSCTXT* pctxt, tm_encode_OMA_LPPe_ReferencePointCapabilities* pvalue);

EXTERN void asn1Free_tm_encode_OMA_LPPe_ReferencePointCapabilities (OSCTXT *pctxt, 
   tm_encode_OMA_LPPe_ReferencePointCapabilities* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_ScheduledLocation_Capabilities_networkTimeRefer  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'OMA-LPPe-ScheduledLocation-Capabilities'
*/
typedef enum {
   tm_encode_OMA_LPPe_ScheduledLocation_Capabilities_networkTimeReference_serving = 0,
   tm_encode_OMA_LPPe_ScheduledLocation_Capabilities_networkTimeReference_servingOrNonServing = 1
} tm_encode_OMA_LPPe_ScheduledLocation_Capabilities_networkTimeReference_Root;

typedef OSUINT32 tm_encode_OMA_LPPe_ScheduledLocation_Capabilities_networkTimeReference;

EXTERN int asn1PE_tm_encode_OMA_LPPe_ScheduledLocation_Capabilities_networkTimeReference (OSCTXT* pctxt, tm_encode_OMA_LPPe_ScheduledLocation_Capabilities_networkTimeReference value);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_ScheduledLocation_Capabilities                   */
/*                                                            */
/**************************************************************/
/*
OMA-LPPe-ScheduledLocation-Capabilities ::= SEQUENCE {
   minimumWindow [0] INTEGER (1..1024) OPTIONAL,
   gnssTimeReference [1] GNSS-ID-Bitmap OPTIONAL,
   networkTimeReference [2] ENUMERATED { serving(0), servingOrNonServing(1), ... } OPTIONAL,
   ...
}
*/
typedef struct EXTERN tm_encode_OMA_LPPe_ScheduledLocation_Capabilities {
   struct {
      unsigned minimumWindowPresent : 1;
      unsigned gnssTimeReferencePresent : 1;
      unsigned networkTimeReferencePresent : 1;
   } m;
   OSUINT16 minimumWindow;
   GNSS_ID_Bitmap gnssTimeReference;
   tm_encode_OMA_LPPe_ScheduledLocation_Capabilities_networkTimeReference networkTimeReference;
   OSRTDList extElem1;
} tm_encode_OMA_LPPe_ScheduledLocation_Capabilities;

EXTERN int asn1PE_tm_encode_OMA_LPPe_ScheduledLocation_Capabilities (OSCTXT* pctxt, tm_encode_OMA_LPPe_ScheduledLocation_Capabilities* pvalue);

EXTERN void asn1Free_tm_encode_OMA_LPPe_ScheduledLocation_Capabilities (OSCTXT *pctxt, 
   tm_encode_OMA_LPPe_ScheduledLocation_Capabilities* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_FixedAccessTypes                                 */
/*                                                            */
/**************************************************************/
/*
 ASN1STOP
 ASN1START

OMA-LPPe-FixedAccessTypes ::= BIT STRING  { cable(0), dsl(1), lan(2), pstn(3), other(4) } (SIZE (1..16))
*/
/* Named bit constants */

#define tm_encode_OMA_LPPe_FixedAccessTypes_tm_encode_cable                 0
#define tm_encode_OMA_LPPe_FixedAccessTypes_tm_encode_dsl                   1
#define tm_encode_OMA_LPPe_FixedAccessTypes_tm_encode_lan                   2
#define tm_encode_OMA_LPPe_FixedAccessTypes_tm_encode_pstn                  3
#define tm_encode_OMA_LPPe_FixedAccessTypes_tm_encode_other                 4

typedef struct tm_encode_OMA_LPPe_FixedAccessTypes {
   OSUINT32 numbits;
   OSOCTET data[2];
} tm_encode_OMA_LPPe_FixedAccessTypes;

EXTERN int asn1PE_tm_encode_OMA_LPPe_FixedAccessTypes (OSCTXT* pctxt, tm_encode_OMA_LPPe_FixedAccessTypes* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_WirelessAccessTypes                              */
/*                                                            */
/**************************************************************/
/*
 ASN1STOP
 ASN1START

OMA-LPPe-WirelessAccessTypes ::= BIT STRING  { gsm(0), utra(1), lte(2), wimax(3), wifi(4), other(5) } (SIZE (1..16))
*/
/* Named bit constants */

#define tm_encode_OMA_LPPe_WirelessAccessTypes_tm_encode_gsm                   0
#define tm_encode_OMA_LPPe_WirelessAccessTypes_tm_encode_utra                  1
#define tm_encode_OMA_LPPe_WirelessAccessTypes_tm_encode_lte                   2
#define tm_encode_OMA_LPPe_WirelessAccessTypes_tm_encode_wimax                 3
#define tm_encode_OMA_LPPe_WirelessAccessTypes_tm_encode_wifi                  4
#define tm_encode_OMA_LPPe_WirelessAccessTypes_tm_encode_other_1               5

typedef struct tm_encode_OMA_LPPe_WirelessAccessTypes {
   OSUINT32 numbits;
   OSOCTET data[2];
} tm_encode_OMA_LPPe_WirelessAccessTypes;

EXTERN int asn1PE_tm_encode_OMA_LPPe_WirelessAccessTypes (OSCTXT* pctxt, tm_encode_OMA_LPPe_WirelessAccessTypes* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_AccessCapabilities                               */
/*                                                            */
/**************************************************************/
/*
OMA-LPPe-AccessCapabilities ::= SEQUENCE {
   accessTypeUnknown [0] NULL OPTIONAL,
   fixedAccessTypes [1] OMA-LPPe-FixedAccessTypes OPTIONAL,
   wirelessAccessTypes [2] OMA-LPPe-WirelessAccessTypes OPTIONAL,
   ...
}
*/
typedef struct EXTERN tm_encode_OMA_LPPe_AccessCapabilities {
   struct {
      unsigned accessTypeUnknownPresent : 1;
      unsigned fixedAccessTypesPresent : 1;
      unsigned wirelessAccessTypesPresent : 1;
   } m;
   tm_encode_OMA_LPPe_FixedAccessTypes fixedAccessTypes;
   tm_encode_OMA_LPPe_WirelessAccessTypes wirelessAccessTypes;
   OSRTDList extElem1;
} tm_encode_OMA_LPPe_AccessCapabilities;

EXTERN int asn1PE_tm_encode_OMA_LPPe_AccessCapabilities (OSCTXT* pctxt, tm_encode_OMA_LPPe_AccessCapabilities* pvalue);

EXTERN void asn1Free_tm_encode_OMA_LPPe_AccessCapabilities (OSCTXT *pctxt, 
   tm_encode_OMA_LPPe_AccessCapabilities* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_SegmentedLocationInformation_ProvideCapabs       */
/*                                                            */
/**************************************************************/
/*
OMA-LPPe-SegmentedLocationInformation-ProvideCapabs ::= SEQUENCE {
   maxSegments [0] INTEGER (2..4096) OPTIONAL,
   maxSize [1] INTEGER (1..5000) OPTIONAL,
   minSize [2] INTEGER (1..5000) OPTIONAL,
   resume [3] NULL OPTIONAL,
   ...
}
*/
typedef struct EXTERN tm_encode_OMA_LPPe_SegmentedLocationInformation_ProvideCapabs {
   struct {
      unsigned maxSegmentsPresent : 1;
      unsigned maxSizePresent : 1;
      unsigned minSizePresent : 1;
      unsigned resumePresent : 1;
   } m;
   OSUINT16 maxSegments;
   OSUINT16 maxSize;
   OSUINT16 minSize;
   OSRTDList extElem1;
} tm_encode_OMA_LPPe_SegmentedLocationInformation_ProvideCapabs;

EXTERN int asn1PE_tm_encode_OMA_LPPe_SegmentedLocationInformation_ProvideCapabs (OSCTXT* pctxt, tm_encode_OMA_LPPe_SegmentedLocationInformation_ProvideCapabs* pvalue);

EXTERN void asn1Free_tm_encode_OMA_LPPe_SegmentedLocationInformation_ProvideCapabs (OSCTXT *pctxt, 
   tm_encode_OMA_LPPe_SegmentedLocationInformation_ProvideCapabs* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_CommonIEsProvideCapabilities                     */
/*                                                            */
/**************************************************************/
/*
 ASN1STOP
 ASN1START

OMA-LPPe-CommonIEsProvideCapabilities ::= SEQUENCE {
   iP-Address-Capabilities [0] OMA-LPPe-IP-Address-Capabilities OPTIONAL,
   assistanceContainerSupport [1] OMA-LPPe-AssistanceContainerSupport OPTIONAL,
   locationInformationContainerSupport [2] OMA-LPPe-LocationInformationContainerSupport OPTIONAL,
   relativeLocationChange-Capabilities [3] OMA-LPPe-RelativeLocationChange-Capabilities OPTIONAL,
   highAccuracyFormatCapabilities [4] OMA-LPPe-HighAccuracyFormatCapabilities OPTIONAL,
   segmentedAssistanceData-ProvideCapabs [5] OMA-LPPe-SegmentedAssistanceData-ProvideCapabs OPTIONAL,
   referencePointCapabilities [6] OMA-LPPe-ReferencePointCapabilities OPTIONAL,
   scheduledLocation-Capabilities [7] OMA-LPPe-ScheduledLocation-Capabilities OPTIONAL,
   accessCapabilities [8] OMA-LPPe-AccessCapabilities OPTIONAL,
   segmentedLocationInformation-ProvideCapabs [9] OMA-LPPe-SegmentedLocationInformation-ProvideCapabs OPTIONAL,
   ...
}
*/
typedef struct EXTERN tm_encode_OMA_LPPe_CommonIEsProvideCapabilities {
   struct {
      unsigned iP_Address_CapabilitiesPresent : 1;
      unsigned assistanceContainerSupportPresent : 1;
      unsigned locationInformationContainerSupportPresent : 1;
      unsigned relativeLocationChange_CapabilitiesPresent : 1;
      unsigned highAccuracyFormatCapabilitiesPresent : 1;
      unsigned segmentedAssistanceData_ProvideCapabsPresent : 1;
      unsigned referencePointCapabilitiesPresent : 1;
      unsigned scheduledLocation_CapabilitiesPresent : 1;
      unsigned accessCapabilitiesPresent : 1;
      unsigned segmentedLocationInformation_ProvideCapabsPresent : 1;
   } m;
   tm_encode_OMA_LPPe_IP_Address_Capabilities iP_Address_Capabilities;
   tm_encode_OMA_LPPe_AssistanceContainerSupport assistanceContainerSupport;
   tm_encode_OMA_LPPe_LocationInformationContainerSupport locationInformationContainerSupport;
   tm_encode_OMA_LPPe_RelativeLocationChange_Capabilities relativeLocationChange_Capabilities;
   tm_encode_OMA_LPPe_HighAccuracyFormatCapabilities highAccuracyFormatCapabilities;
   tm_encode_OMA_LPPe_SegmentedAssistanceData_ProvideCapabs segmentedAssistanceData_ProvideCapabs;
   tm_encode_OMA_LPPe_ReferencePointCapabilities referencePointCapabilities;
   tm_encode_OMA_LPPe_ScheduledLocation_Capabilities scheduledLocation_Capabilities;
   tm_encode_OMA_LPPe_AccessCapabilities accessCapabilities;
   tm_encode_OMA_LPPe_SegmentedLocationInformation_ProvideCapabs segmentedLocationInformation_ProvideCapabs;
   OSRTDList extElem1;
} tm_encode_OMA_LPPe_CommonIEsProvideCapabilities;

EXTERN int asn1PE_tm_encode_OMA_LPPe_CommonIEsProvideCapabilities (OSCTXT* pctxt, tm_encode_OMA_LPPe_CommonIEsProvideCapabilities* pvalue);

EXTERN void asn1Free_tm_encode_OMA_LPPe_CommonIEsProvideCapabilities (OSCTXT *pctxt, 
   tm_encode_OMA_LPPe_CommonIEsProvideCapabilities* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_WLAN_AP_ProvideCapabilities_wlan_ecid_MeasSuppo  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'OMA-LPPe-WLAN-AP-ProvideCapabilities'
*/
/* Named bit constants */

#define tm_encode_OMA_LPPe_WLAN_AP_ProvideCapabilities_wlan_ecid_MeasSupported_tm_encode_apSSID_1              0
#define tm_encode_OMA_LPPe_WLAN_AP_ProvideCapabilities_wlan_ecid_MeasSupported_tm_encode_apSN_1                1
#define tm_encode_OMA_LPPe_WLAN_AP_ProvideCapabilities_wlan_ecid_MeasSupported_tm_encode_apDevType_1           2
#define tm_encode_OMA_LPPe_WLAN_AP_ProvideCapabilities_wlan_ecid_MeasSupported_tm_encode_apPhyType_1           3
#define tm_encode_OMA_LPPe_WLAN_AP_ProvideCapabilities_wlan_ecid_MeasSupported_tm_encode_apRSSI_1              4
#define tm_encode_OMA_LPPe_WLAN_AP_ProvideCapabilities_wlan_ecid_MeasSupported_tm_encode_apChanFreq_1          5
#define tm_encode_OMA_LPPe_WLAN_AP_ProvideCapabilities_wlan_ecid_MeasSupported_tm_encode_apRTD_1               6
#define tm_encode_OMA_LPPe_WLAN_AP_ProvideCapabilities_wlan_ecid_MeasSupported_tm_encode_ueTP_1                7
#define tm_encode_OMA_LPPe_WLAN_AP_ProvideCapabilities_wlan_ecid_MeasSupported_tm_encode_ueAG_1                8
#define tm_encode_OMA_LPPe_WLAN_AP_ProvideCapabilities_wlan_ecid_MeasSupported_tm_encode_apRepLoc_1            9
#define tm_encode_OMA_LPPe_WLAN_AP_ProvideCapabilities_wlan_ecid_MeasSupported_tm_encode_non_serving_12        10
#define tm_encode_OMA_LPPe_WLAN_AP_ProvideCapabilities_wlan_ecid_MeasSupported_tm_encode_historic_7            11
#define tm_encode_OMA_LPPe_WLAN_AP_ProvideCapabilities_wlan_ecid_MeasSupported_tm_encode_apTP_1                12
#define tm_encode_OMA_LPPe_WLAN_AP_ProvideCapabilities_wlan_ecid_MeasSupported_tm_encode_apAG_1                13
#define tm_encode_OMA_LPPe_WLAN_AP_ProvideCapabilities_wlan_ecid_MeasSupported_tm_encode_ueSN_1                14
#define tm_encode_OMA_LPPe_WLAN_AP_ProvideCapabilities_wlan_ecid_MeasSupported_tm_encode_ueRSSI_1              15

typedef struct tm_encode_OMA_LPPe_WLAN_AP_ProvideCapabilities_wlan_ecid_MeasSupported {
   OSUINT32 numbits;
   OSOCTET data[2];
} tm_encode_OMA_LPPe_WLAN_AP_ProvideCapabilities_wlan_ecid_MeasSupported;

EXTERN int asn1PE_tm_encode_OMA_LPPe_WLAN_AP_ProvideCapabilities_wlan_ecid_MeasSupported (OSCTXT* pctxt, tm_encode_OMA_LPPe_WLAN_AP_ProvideCapabilities_wlan_ecid_MeasSupported* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_WLAN_AP_Type_List                                */
/*                                                            */
/**************************************************************/
/*
 ASN1STOP
 ASN1START

OMA-LPPe-WLAN-AP-Type-List ::= BIT STRING  { ieee802-11a(0), ieee802-11b(1), ieee802-11g(2), ieee802-11n(3), ieee802-11ac(4), ieee802-11ad(5) } (SIZE (1..16))
*/
/* Named bit constants */

#define tm_encode_OMA_LPPe_WLAN_AP_Type_List_tm_encode_ieee802_11a           0
#define tm_encode_OMA_LPPe_WLAN_AP_Type_List_tm_encode_ieee802_11b           1
#define tm_encode_OMA_LPPe_WLAN_AP_Type_List_tm_encode_ieee802_11g           2
#define tm_encode_OMA_LPPe_WLAN_AP_Type_List_tm_encode_ieee802_11n           3
#define tm_encode_OMA_LPPe_WLAN_AP_Type_List_tm_encode_ieee802_11ac          4
#define tm_encode_OMA_LPPe_WLAN_AP_Type_List_tm_encode_ieee802_11ad          5

typedef struct tm_encode_OMA_LPPe_WLAN_AP_Type_List {
   OSUINT32 numbits;
   OSOCTET data[2];
} tm_encode_OMA_LPPe_WLAN_AP_Type_List;

EXTERN int asn1PE_tm_encode_OMA_LPPe_WLAN_AP_Type_List (OSCTXT* pctxt, tm_encode_OMA_LPPe_WLAN_AP_Type_List* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_WLAN_AP_ID_apMacAddress                          */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'OMA-LPPe-WLAN-AP-ID'
*/
typedef struct tm_encode_OMA_LPPe_WLAN_AP_ID_apMacAddress {
   OSUINT32 numbits;
   OSOCTET data[6];
} tm_encode_OMA_LPPe_WLAN_AP_ID_apMacAddress;

EXTERN int asn1PE_tm_encode_OMA_LPPe_WLAN_AP_ID_apMacAddress (OSCTXT* pctxt, tm_encode_OMA_LPPe_WLAN_AP_ID_apMacAddress* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_WLAN_AP_ID                                       */
/*                                                            */
/**************************************************************/
/*
 ASN1STOP
 ASN1START

OMA-LPPe-WLAN-AP-ID ::= SEQUENCE {
   apMacAddress [0] BIT STRING  (SIZE (48)),
   ...
}
*/
typedef struct EXTERN tm_encode_OMA_LPPe_WLAN_AP_ID {
   tm_encode_OMA_LPPe_WLAN_AP_ID_apMacAddress apMacAddress;
   OSRTDList extElem1;
} tm_encode_OMA_LPPe_WLAN_AP_ID;

EXTERN int asn1PE_tm_encode_OMA_LPPe_WLAN_AP_ID (OSCTXT* pctxt, tm_encode_OMA_LPPe_WLAN_AP_ID* pvalue);

EXTERN void asn1Free_tm_encode_OMA_LPPe_WLAN_AP_ID (OSCTXT *pctxt, 
   tm_encode_OMA_LPPe_WLAN_AP_ID* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_WLAN_AP_Capability                               */
/*                                                            */
/**************************************************************/
/*
OMA-LPPe-WLAN-AP-Capability ::= SEQUENCE {
   apMACAddress [0] OMA-LPPe-WLAN-AP-ID,
   apTypes [1] OMA-LPPe-WLAN-AP-Type-List,
   ...
}
*/
typedef struct EXTERN tm_encode_OMA_LPPe_WLAN_AP_Capability {
   tm_encode_OMA_LPPe_WLAN_AP_ID apMACAddress;
   tm_encode_OMA_LPPe_WLAN_AP_Type_List apTypes;
   OSRTDList extElem1;
} tm_encode_OMA_LPPe_WLAN_AP_Capability;

EXTERN int asn1PE_tm_encode_OMA_LPPe_WLAN_AP_Capability (OSCTXT* pctxt, tm_encode_OMA_LPPe_WLAN_AP_Capability* pvalue);

EXTERN void asn1Free_tm_encode_OMA_LPPe_WLAN_AP_Capability (OSCTXT *pctxt, 
   tm_encode_OMA_LPPe_WLAN_AP_Capability* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_WLAN_AP_ProvideCapabilities_wlan_ap_ADSupported  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'OMA-LPPe-WLAN-AP-ProvideCapabilities'
*/
/* Named bit constants */

#define tm_encode_OMA_LPPe_WLAN_AP_ProvideCapabilities_wlan_ap_ADSupported_tm_encode_aplist                0
#define tm_encode_OMA_LPPe_WLAN_AP_ProvideCapabilities_wlan_ap_ADSupported_tm_encode_aplocation            1
#define tm_encode_OMA_LPPe_WLAN_AP_ProvideCapabilities_wlan_ap_ADSupported_tm_encode_locationreliability_2 2
#define tm_encode_OMA_LPPe_WLAN_AP_ProvideCapabilities_wlan_ap_ADSupported_tm_encode_transmit_power_5      3
#define tm_encode_OMA_LPPe_WLAN_AP_ProvideCapabilities_wlan_ap_ADSupported_tm_encode_antenna_gain_3        4
#define tm_encode_OMA_LPPe_WLAN_AP_ProvideCapabilities_wlan_ap_ADSupported_tm_encode_coveragearea_2        5
#define tm_encode_OMA_LPPe_WLAN_AP_ProvideCapabilities_wlan_ap_ADSupported_tm_encode_non_serving_13        6

typedef struct tm_encode_OMA_LPPe_WLAN_AP_ProvideCapabilities_wlan_ap_ADSupported {
   OSUINT32 numbits;
   OSOCTET data[2];
} tm_encode_OMA_LPPe_WLAN_AP_ProvideCapabilities_wlan_ap_ADSupported;

EXTERN int asn1PE_tm_encode_OMA_LPPe_WLAN_AP_ProvideCapabilities_wlan_ap_ADSupported (OSCTXT* pctxt, tm_encode_OMA_LPPe_WLAN_AP_ProvideCapabilities_wlan_ap_ADSupported* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_WLAN_AP_ProvideCapabilities_additional_wlan_eci  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'OMA-LPPe-WLAN-AP-ProvideCapabilities'
*/
/* Named bit constants */

#define tm_encode_OMA_LPPe_WLAN_AP_ProvideCapabilities_additional_wlan_ecid_MeasSupported_tm_encode_oc_1                  0
#define tm_encode_OMA_LPPe_WLAN_AP_ProvideCapabilities_additional_wlan_ecid_MeasSupported_tm_encode_ueMacAddr_1           1

typedef struct tm_encode_OMA_LPPe_WLAN_AP_ProvideCapabilities_additional_wlan_ecid_MeasSupported {
   OSUINT32 numbits;
   OSOCTET data[2];
} tm_encode_OMA_LPPe_WLAN_AP_ProvideCapabilities_additional_wlan_ecid_MeasSupported;

EXTERN int asn1PE_tm_encode_OMA_LPPe_WLAN_AP_ProvideCapabilities_additional_wlan_ecid_MeasSupported (OSCTXT* pctxt, tm_encode_OMA_LPPe_WLAN_AP_ProvideCapabilities_additional_wlan_ecid_MeasSupported* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_WLAN_AP_ProvideCapabilities                      */
/*                                                            */
/**************************************************************/
/*
 ASN1STOP
 ASN1START

OMA-LPPe-WLAN-AP-ProvideCapabilities ::= SEQUENCE {
   wlan-ecid-MeasSupported [0] BIT STRING  { apSSID(0), apSN(1), apDevType(2), apPhyType(3), apRSSI(4), apChanFreq(5), apRTD(6), ueTP(7), ueAG(8), apRepLoc(9), non-serving(10), historic(11), apTP(12), apAG(13), ueSN(14), ueRSSI(15) } (SIZE (1..16)),
   wlan-types-Supported [1] OMA-LPPe-WLAN-AP-Type-List OPTIONAL,
   ap-Capability [2] OMA-LPPe-WLAN-AP-Capability OPTIONAL,
   wlan-ap-ADSupported [3] BIT STRING  { aplist(0), aplocation(1), locationreliability(2), transmit-power(3), antenna-gain(4), coveragearea(5), non-serving(6) } (SIZE (1..16)),
   ...,
   additional-wlan-ecid-MeasSupported [4] BIT STRING  { oc(0), ueMacAddr(1) } (SIZE (1..16)) OPTIONAL
}
*/
typedef struct EXTERN tm_encode_OMA_LPPe_WLAN_AP_ProvideCapabilities {
   struct {
      unsigned wlan_types_SupportedPresent : 1;
      unsigned ap_CapabilityPresent : 1;
      unsigned additional_wlan_ecid_MeasSupportedPresent : 1;
   } m;
   tm_encode_OMA_LPPe_WLAN_AP_ProvideCapabilities_wlan_ecid_MeasSupported wlan_ecid_MeasSupported;
   tm_encode_OMA_LPPe_WLAN_AP_Type_List wlan_types_Supported;
   tm_encode_OMA_LPPe_WLAN_AP_Capability ap_Capability;
   tm_encode_OMA_LPPe_WLAN_AP_ProvideCapabilities_wlan_ap_ADSupported wlan_ap_ADSupported;
   tm_encode_OMA_LPPe_WLAN_AP_ProvideCapabilities_additional_wlan_ecid_MeasSupported additional_wlan_ecid_MeasSupported;
   OSRTDList extElem1;
} tm_encode_OMA_LPPe_WLAN_AP_ProvideCapabilities;

EXTERN int asn1PE_tm_encode_OMA_LPPe_WLAN_AP_ProvideCapabilities (OSCTXT* pctxt, tm_encode_OMA_LPPe_WLAN_AP_ProvideCapabilities* pvalue);

EXTERN void asn1Free_tm_encode_OMA_LPPe_WLAN_AP_ProvideCapabilities (OSCTXT *pctxt, 
   tm_encode_OMA_LPPe_WLAN_AP_ProvideCapabilities* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_Sensor_ProvideCapabilities                       */
/*                                                            */
/**************************************************************/
/*
 ASN1STOP
 ASN1START

OMA-LPPe-Sensor-ProvideCapabilities ::= SEQUENCE {
   motionStateSupport [0] NULL OPTIONAL,
   secondarySupport [1] NULL OPTIONAL,
   ...,
   atmosphericPressureADSupport [2] NULL OPTIONAL,
   atmosphericPressureSupport [3] NULL OPTIONAL
}
*/
typedef struct EXTERN tm_encode_OMA_LPPe_Sensor_ProvideCapabilities {
   struct {
      unsigned motionStateSupportPresent : 1;
      unsigned secondarySupportPresent : 1;
      unsigned atmosphericPressureADSupportPresent : 1;
      unsigned atmosphericPressureSupportPresent : 1;
   } m;
   OSRTDList extElem1;
} tm_encode_OMA_LPPe_Sensor_ProvideCapabilities;

EXTERN int asn1PE_tm_encode_OMA_LPPe_Sensor_ProvideCapabilities (OSCTXT* pctxt, tm_encode_OMA_LPPe_Sensor_ProvideCapabilities* pvalue);

EXTERN void asn1Free_tm_encode_OMA_LPPe_Sensor_ProvideCapabilities (OSCTXT *pctxt, 
   tm_encode_OMA_LPPe_Sensor_ProvideCapabilities* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_SRN_Technologies_srnTechnologies                 */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'OMA-LPPe-SRN-Technologies'
*/
typedef enum {
   tm_encode_OMA_LPPe_SRN_Technologies_srnTechnologies_bt = 0,
   tm_encode_OMA_LPPe_SRN_Technologies_srnTechnologies_btle = 1,
   tm_encode_OMA_LPPe_SRN_Technologies_srnTechnologies_nfc = 2,
   tm_encode_OMA_LPPe_SRN_Technologies_srnTechnologies_mobileCode = 3,
   tm_encode_OMA_LPPe_SRN_Technologies_srnTechnologies_other = 4
} tm_encode_OMA_LPPe_SRN_Technologies_srnTechnologies_Root;

typedef OSUINT32 tm_encode_OMA_LPPe_SRN_Technologies_srnTechnologies;

EXTERN int asn1PE_tm_encode_OMA_LPPe_SRN_Technologies_srnTechnologies (OSCTXT* pctxt, tm_encode_OMA_LPPe_SRN_Technologies_srnTechnologies value);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_SRN_Technologies                                 */
/*                                                            */
/**************************************************************/
/*
 ASN1STOP
 ASN1START

OMA-LPPe-SRN-Technologies ::= SEQUENCE {
   srnTechnologies [0] ENUMERATED { bt(0), btle(1), nfc(2), mobileCode(3), other(4), ... },
   ...
}
*/
typedef struct EXTERN tm_encode_OMA_LPPe_SRN_Technologies {
   tm_encode_OMA_LPPe_SRN_Technologies_srnTechnologies srnTechnologies;
   OSRTDList extElem1;
} tm_encode_OMA_LPPe_SRN_Technologies;

EXTERN int asn1PE_tm_encode_OMA_LPPe_SRN_Technologies (OSCTXT* pctxt, tm_encode_OMA_LPPe_SRN_Technologies* pvalue);

EXTERN void asn1Free_tm_encode_OMA_LPPe_SRN_Technologies (OSCTXT *pctxt, 
   tm_encode_OMA_LPPe_SRN_Technologies* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_SRN_Category_srnVendorInformation                */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'OMA-LPPe-SRN-Category'
*/
typedef struct EXTERN tm_encode_OMA_LPPe_SRN_Category_srnVendorInformation {
   struct {
      unsigned vendorInfoPresent : 1;
   } m;
   tm_encode_OMA_LPPe_VendorOrOperatorID vendor;
   OSDynOctStr vendorInfo;
   OSRTDList extElem1;
} tm_encode_OMA_LPPe_SRN_Category_srnVendorInformation;

EXTERN int asn1PE_tm_encode_OMA_LPPe_SRN_Category_srnVendorInformation (OSCTXT* pctxt, tm_encode_OMA_LPPe_SRN_Category_srnVendorInformation* pvalue);

EXTERN void asn1Free_tm_encode_OMA_LPPe_SRN_Category_srnVendorInformation (OSCTXT *pctxt, 
   tm_encode_OMA_LPPe_SRN_Category_srnVendorInformation* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_SRN_Category                                     */
/*                                                            */
/**************************************************************/
/*
 ASN1STOP
 ASN1START

OMA-LPPe-SRN-Category ::= SEQUENCE {
   srnTechnologyType [0] OMA-LPPe-SRN-Technologies,
   srnVendorInformation [1] SEQUENCE {
      vendor [0] OMA-LPPe-VendorOrOperatorID,
      vendorInfo [1] OCTET STRING OPTIONAL,
      ...
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN tm_encode_OMA_LPPe_SRN_Category {
   struct {
      unsigned srnVendorInformationPresent : 1;
   } m;
   tm_encode_OMA_LPPe_SRN_Technologies srnTechnologyType;
   tm_encode_OMA_LPPe_SRN_Category_srnVendorInformation srnVendorInformation;
   OSRTDList extElem1;
} tm_encode_OMA_LPPe_SRN_Category;

EXTERN int asn1PE_tm_encode_OMA_LPPe_SRN_Category (OSCTXT* pctxt, tm_encode_OMA_LPPe_SRN_Category* pvalue);

EXTERN void asn1Free_tm_encode_OMA_LPPe_SRN_Category (OSCTXT *pctxt, 
   tm_encode_OMA_LPPe_SRN_Category* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_SRN_MeasurementMask_srnMeasurements              */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'OMA-LPPe-SRN-MeasurementMask'
*/
/* Named bit constants */

#define tm_encode_OMA_LPPe_SRN_MeasurementMask_srnMeasurements_tm_encode_rssi                  0
#define tm_encode_OMA_LPPe_SRN_MeasurementMask_srnMeasurements_tm_encode_rtd                   1

typedef struct tm_encode_OMA_LPPe_SRN_MeasurementMask_srnMeasurements {
   OSUINT32 numbits;
   OSOCTET data[2];
} tm_encode_OMA_LPPe_SRN_MeasurementMask_srnMeasurements;

EXTERN int asn1PE_tm_encode_OMA_LPPe_SRN_MeasurementMask_srnMeasurements (OSCTXT* pctxt, tm_encode_OMA_LPPe_SRN_MeasurementMask_srnMeasurements* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_SRN_MeasurementMask                              */
/*                                                            */
/**************************************************************/
/*
 ASN1STOP
 ASN1START

OMA-LPPe-SRN-MeasurementMask ::= SEQUENCE {
   srnMeasurements [0] BIT STRING  { rssi(0), rtd(1) } (SIZE (1..16)),
   ...
}
*/
typedef struct EXTERN tm_encode_OMA_LPPe_SRN_MeasurementMask {
   tm_encode_OMA_LPPe_SRN_MeasurementMask_srnMeasurements srnMeasurements;
   OSRTDList extElem1;
} tm_encode_OMA_LPPe_SRN_MeasurementMask;

EXTERN int asn1PE_tm_encode_OMA_LPPe_SRN_MeasurementMask (OSCTXT* pctxt, tm_encode_OMA_LPPe_SRN_MeasurementMask* pvalue);

EXTERN void asn1Free_tm_encode_OMA_LPPe_SRN_MeasurementMask (OSCTXT *pctxt, 
   tm_encode_OMA_LPPe_SRN_MeasurementMask* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_SRN_ProvideCapabilitiesElement_supportedAssista  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'OMA-LPPe-SRN-ProvideCapabilitiesElement'
*/
/* Named bit constants */

#define tm_encode_OMA_LPPe_SRN_ProvideCapabilitiesElement_supportedAssistanceData_tm_encode_srnGroup              0
#define tm_encode_OMA_LPPe_SRN_ProvideCapabilitiesElement_supportedAssistanceData_tm_encode_antennaPattern        1

typedef struct tm_encode_OMA_LPPe_SRN_ProvideCapabilitiesElement_supportedAssistanceData {
   OSUINT32 numbits;
   OSOCTET data[2];
} tm_encode_OMA_LPPe_SRN_ProvideCapabilitiesElement_supportedAssistanceData;

EXTERN int asn1PE_tm_encode_OMA_LPPe_SRN_ProvideCapabilitiesElement_supportedAssistanceData (OSCTXT* pctxt, tm_encode_OMA_LPPe_SRN_ProvideCapabilitiesElement_supportedAssistanceData* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_SRN_ProvideCapabilitiesElement                   */
/*                                                            */
/**************************************************************/
/*
OMA-LPPe-SRN-ProvideCapabilitiesElement ::= SEQUENCE {
   srnCategory [0] OMA-LPPe-SRN-Category,
   supportedMeasurements [1] OMA-LPPe-SRN-MeasurementMask OPTIONAL,
   supportedAssistanceData [2] BIT STRING  { srnGroup(0), antennaPattern(1) } (SIZE (1..16)),
   historicMeasurementsSupported [3] NULL OPTIONAL,
   ...
}
*/
typedef struct EXTERN tm_encode_OMA_LPPe_SRN_ProvideCapabilitiesElement {
   struct {
      unsigned supportedMeasurementsPresent : 1;
      unsigned historicMeasurementsSupportedPresent : 1;
   } m;
   tm_encode_OMA_LPPe_SRN_Category srnCategory;
   tm_encode_OMA_LPPe_SRN_MeasurementMask supportedMeasurements;
   tm_encode_OMA_LPPe_SRN_ProvideCapabilitiesElement_supportedAssistanceData supportedAssistanceData;
   OSRTDList extElem1;
} tm_encode_OMA_LPPe_SRN_ProvideCapabilitiesElement;

EXTERN int asn1PE_tm_encode_OMA_LPPe_SRN_ProvideCapabilitiesElement (OSCTXT* pctxt, tm_encode_OMA_LPPe_SRN_ProvideCapabilitiesElement* pvalue);

EXTERN void asn1Free_tm_encode_OMA_LPPe_SRN_ProvideCapabilitiesElement (OSCTXT *pctxt, 
   tm_encode_OMA_LPPe_SRN_ProvideCapabilitiesElement* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_SRN_ProvideCapabilities_capabilitiesPerSRNCateg  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'OMA-LPPe-SRN-ProvideCapabilities'
*/
typedef struct EXTERN tm_encode_OMA_LPPe_SRN_ProvideCapabilities_capabilitiesPerSRNCategory {
   OSUINT32 n;
   tm_encode_OMA_LPPe_SRN_ProvideCapabilitiesElement *elem;
} tm_encode_OMA_LPPe_SRN_ProvideCapabilities_capabilitiesPerSRNCategory;

EXTERN int asn1PE_tm_encode_OMA_LPPe_SRN_ProvideCapabilities_capabilitiesPerSRNCategory (OSCTXT* pctxt, tm_encode_OMA_LPPe_SRN_ProvideCapabilities_capabilitiesPerSRNCategory* pvalue);

EXTERN void asn1Free_tm_encode_OMA_LPPe_SRN_ProvideCapabilities_capabilitiesPerSRNCategory (OSCTXT *pctxt, 
   tm_encode_OMA_LPPe_SRN_ProvideCapabilities_capabilitiesPerSRNCategory* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_SRN_ProvideCapabilities                          */
/*                                                            */
/**************************************************************/
/*
 ASN1STOP
 ASN1START

OMA-LPPe-SRN-ProvideCapabilities ::= SEQUENCE {
   capabilitiesPerSRNCategory [0] SEQUENCE (SIZE (1..16)) OF OMA-LPPe-SRN-ProvideCapabilitiesElement OPTIONAL,
   ...
}
*/
typedef struct EXTERN tm_encode_OMA_LPPe_SRN_ProvideCapabilities {
   struct {
      unsigned capabilitiesPerSRNCategoryPresent : 1;
   } m;
   tm_encode_OMA_LPPe_SRN_ProvideCapabilities_capabilitiesPerSRNCategory capabilitiesPerSRNCategory;
   OSRTDList extElem1;
} tm_encode_OMA_LPPe_SRN_ProvideCapabilities;

EXTERN int asn1PE_tm_encode_OMA_LPPe_SRN_ProvideCapabilities (OSCTXT* pctxt, tm_encode_OMA_LPPe_SRN_ProvideCapabilities* pvalue);

EXTERN void asn1Free_tm_encode_OMA_LPPe_SRN_ProvideCapabilities (OSCTXT *pctxt, 
   tm_encode_OMA_LPPe_SRN_ProvideCapabilities* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_ProvideCapabilities                              */
/*                                                            */
/**************************************************************/
/*
 ASN1STOP
 ASN1START

OMA-LPPe-ProvideCapabilities ::= SEQUENCE {
   commonIEsProvideCapabilities [0] OMA-LPPe-CommonIEsProvideCapabilities OPTIONAL,
   agnss-ProvideCapabilities [1] NULL OPTIONAL,
   otdoa-ProvideCapabilities [2] NULL OPTIONAL,
   eotd-ProvideCapabilities [3] NULL OPTIONAL,
   otdoa-utra-ProvideCapabilities [4] NULL OPTIONAL,
   ecid-lte-ProvideCapabilities [5] NULL OPTIONAL,
   ecid-gsm-ProvideCapabilities [6] NULL OPTIONAL,
   ecid-utra-ProvideCapabilities [7] NULL OPTIONAL,
   wlan-ap-ProvideCapabilities [8] OMA-LPPe-WLAN-AP-ProvideCapabilities OPTIONAL,
   ecid-wimax-ProvideCapabilities [9] NULL OPTIONAL,
   sensor-ProvideCapabilities [10] OMA-LPPe-Sensor-ProvideCapabilities OPTIONAL,
   srn-ProvideCapabilities [11] OMA-LPPe-SRN-ProvideCapabilities OPTIONAL,
   ...
}
*/
typedef struct EXTERN tm_encode_OMA_LPPe_ProvideCapabilities {
   struct {
      unsigned commonIEsProvideCapabilitiesPresent : 1;
      unsigned agnss_ProvideCapabilitiesPresent : 1;
      unsigned otdoa_ProvideCapabilitiesPresent : 1;
      unsigned eotd_ProvideCapabilitiesPresent : 1;
      unsigned otdoa_utra_ProvideCapabilitiesPresent : 1;
      unsigned ecid_lte_ProvideCapabilitiesPresent : 1;
      unsigned ecid_gsm_ProvideCapabilitiesPresent : 1;
      unsigned ecid_utra_ProvideCapabilitiesPresent : 1;
      unsigned wlan_ap_ProvideCapabilitiesPresent : 1;
      unsigned ecid_wimax_ProvideCapabilitiesPresent : 1;
      unsigned sensor_ProvideCapabilitiesPresent : 1;
      unsigned srn_ProvideCapabilitiesPresent : 1;
   } m;
   tm_encode_OMA_LPPe_CommonIEsProvideCapabilities commonIEsProvideCapabilities;
   tm_encode_OMA_LPPe_WLAN_AP_ProvideCapabilities wlan_ap_ProvideCapabilities;
   tm_encode_OMA_LPPe_Sensor_ProvideCapabilities sensor_ProvideCapabilities;
   tm_encode_OMA_LPPe_SRN_ProvideCapabilities srn_ProvideCapabilities;
   OSRTDList extElem1;
} tm_encode_OMA_LPPe_ProvideCapabilities;

EXTERN int asn1PE_tm_encode_OMA_LPPe_ProvideCapabilities (OSCTXT* pctxt, tm_encode_OMA_LPPe_ProvideCapabilities* pvalue);

EXTERN void asn1Free_tm_encode_OMA_LPPe_ProvideCapabilities (OSCTXT *pctxt, 
   tm_encode_OMA_LPPe_ProvideCapabilities* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_CommonIEsRequestAssistanceData                   */
/*                                                            */
/**************************************************************/
/*
 ASN1STOP
 ASN1START

OMA-LPPe-CommonIEsRequestAssistanceData ::= SEQUENCE {
   ...
}
*/
typedef struct EXTERN tm_encode_OMA_LPPe_CommonIEsRequestAssistanceData {
   OSRTDList extElem1;
} tm_encode_OMA_LPPe_CommonIEsRequestAssistanceData;

EXTERN int asn1PE_tm_encode_OMA_LPPe_CommonIEsRequestAssistanceData (OSCTXT* pctxt, tm_encode_OMA_LPPe_CommonIEsRequestAssistanceData* pvalue);

EXTERN void asn1Free_tm_encode_OMA_LPPe_CommonIEsRequestAssistanceData (OSCTXT *pctxt, 
   tm_encode_OMA_LPPe_CommonIEsRequestAssistanceData* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_AGNSS_RequestAssistanceData                      */
/*                                                            */
/**************************************************************/
/*
 ASN1STOP
 ASN1START

OMA-LPPe-AGNSS-RequestAssistanceData ::= SEQUENCE {
   ...
}
*/
typedef struct EXTERN tm_encode_OMA_LPPe_AGNSS_RequestAssistanceData {
   OSRTDList extElem1;
} tm_encode_OMA_LPPe_AGNSS_RequestAssistanceData;

EXTERN int asn1PE_tm_encode_OMA_LPPe_AGNSS_RequestAssistanceData (OSCTXT* pctxt, tm_encode_OMA_LPPe_AGNSS_RequestAssistanceData* pvalue);

EXTERN void asn1Free_tm_encode_OMA_LPPe_AGNSS_RequestAssistanceData (OSCTXT *pctxt, 
   tm_encode_OMA_LPPe_AGNSS_RequestAssistanceData* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_OTDOA_RequestAssistanceData                      */
/*                                                            */
/**************************************************************/
/*
 ASN1STOP
 ASN1START

OMA-LPPe-OTDOA-RequestAssistanceData ::= SEQUENCE {
   ...
}
*/
typedef struct EXTERN tm_encode_OMA_LPPe_OTDOA_RequestAssistanceData {
   OSRTDList extElem1;
} tm_encode_OMA_LPPe_OTDOA_RequestAssistanceData;

EXTERN int asn1PE_tm_encode_OMA_LPPe_OTDOA_RequestAssistanceData (OSCTXT* pctxt, tm_encode_OMA_LPPe_OTDOA_RequestAssistanceData* pvalue);

EXTERN void asn1Free_tm_encode_OMA_LPPe_OTDOA_RequestAssistanceData (OSCTXT *pctxt, 
   tm_encode_OMA_LPPe_OTDOA_RequestAssistanceData* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_EOTD_RequestAssistanceData                       */
/*                                                            */
/**************************************************************/
/*
 ASN1STOP
 ASN1START

OMA-LPPe-EOTD-RequestAssistanceData ::= SEQUENCE {
   ...
}
*/
typedef struct EXTERN tm_encode_OMA_LPPe_EOTD_RequestAssistanceData {
   OSRTDList extElem1;
} tm_encode_OMA_LPPe_EOTD_RequestAssistanceData;

EXTERN int asn1PE_tm_encode_OMA_LPPe_EOTD_RequestAssistanceData (OSCTXT* pctxt, tm_encode_OMA_LPPe_EOTD_RequestAssistanceData* pvalue);

EXTERN void asn1Free_tm_encode_OMA_LPPe_EOTD_RequestAssistanceData (OSCTXT *pctxt, 
   tm_encode_OMA_LPPe_EOTD_RequestAssistanceData* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_OTDOA_UTRA_RequestAssistanceData                 */
/*                                                            */
/**************************************************************/
/*
 ASN1STOP
 ASN1START

OMA-LPPe-OTDOA-UTRA-RequestAssistanceData ::= SEQUENCE {
   ...
}
*/
typedef struct EXTERN tm_encode_OMA_LPPe_OTDOA_UTRA_RequestAssistanceData {
   OSRTDList extElem1;
} tm_encode_OMA_LPPe_OTDOA_UTRA_RequestAssistanceData;

EXTERN int asn1PE_tm_encode_OMA_LPPe_OTDOA_UTRA_RequestAssistanceData (OSCTXT* pctxt, tm_encode_OMA_LPPe_OTDOA_UTRA_RequestAssistanceData* pvalue);

EXTERN void asn1Free_tm_encode_OMA_LPPe_OTDOA_UTRA_RequestAssistanceData (OSCTXT *pctxt, 
   tm_encode_OMA_LPPe_OTDOA_UTRA_RequestAssistanceData* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_ECID_LTE_RequestAssistanceData                   */
/*                                                            */
/**************************************************************/
/*
 ASN1STOP
 ASN1START

OMA-LPPe-ECID-LTE-RequestAssistanceData ::= SEQUENCE {
   ...
}
*/
typedef struct EXTERN tm_encode_OMA_LPPe_ECID_LTE_RequestAssistanceData {
   OSRTDList extElem1;
} tm_encode_OMA_LPPe_ECID_LTE_RequestAssistanceData;

EXTERN int asn1PE_tm_encode_OMA_LPPe_ECID_LTE_RequestAssistanceData (OSCTXT* pctxt, tm_encode_OMA_LPPe_ECID_LTE_RequestAssistanceData* pvalue);

EXTERN void asn1Free_tm_encode_OMA_LPPe_ECID_LTE_RequestAssistanceData (OSCTXT *pctxt, 
   tm_encode_OMA_LPPe_ECID_LTE_RequestAssistanceData* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_ECID_GSM_RequestAssistanceData                   */
/*                                                            */
/**************************************************************/
/*
 ASN1STOP
 ASN1START

OMA-LPPe-ECID-GSM-RequestAssistanceData ::= SEQUENCE {
   ...
}
*/
typedef struct EXTERN tm_encode_OMA_LPPe_ECID_GSM_RequestAssistanceData {
   OSRTDList extElem1;
} tm_encode_OMA_LPPe_ECID_GSM_RequestAssistanceData;

EXTERN int asn1PE_tm_encode_OMA_LPPe_ECID_GSM_RequestAssistanceData (OSCTXT* pctxt, tm_encode_OMA_LPPe_ECID_GSM_RequestAssistanceData* pvalue);

EXTERN void asn1Free_tm_encode_OMA_LPPe_ECID_GSM_RequestAssistanceData (OSCTXT *pctxt, 
   tm_encode_OMA_LPPe_ECID_GSM_RequestAssistanceData* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_ECID_UTRA_RequestAssistanceData                  */
/*                                                            */
/**************************************************************/
/*
 ASN1STOP
 ASN1START

OMA-LPPe-ECID-UTRA-RequestAssistanceData ::= SEQUENCE {
   ...
}
*/
typedef struct EXTERN tm_encode_OMA_LPPe_ECID_UTRA_RequestAssistanceData {
   OSRTDList extElem1;
} tm_encode_OMA_LPPe_ECID_UTRA_RequestAssistanceData;

EXTERN int asn1PE_tm_encode_OMA_LPPe_ECID_UTRA_RequestAssistanceData (OSCTXT* pctxt, tm_encode_OMA_LPPe_ECID_UTRA_RequestAssistanceData* pvalue);

EXTERN void asn1Free_tm_encode_OMA_LPPe_ECID_UTRA_RequestAssistanceData (OSCTXT *pctxt, 
   tm_encode_OMA_LPPe_ECID_UTRA_RequestAssistanceData* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_WLAN_AP_RequestAssistanceData                    */
/*                                                            */
/**************************************************************/
/*
 ASN1STOP
 ASN1START

OMA-LPPe-WLAN-AP-RequestAssistanceData ::= SEQUENCE {
   ...
}
*/
typedef struct EXTERN tm_encode_OMA_LPPe_WLAN_AP_RequestAssistanceData {
   OSRTDList extElem1;
} tm_encode_OMA_LPPe_WLAN_AP_RequestAssistanceData;

EXTERN int asn1PE_tm_encode_OMA_LPPe_WLAN_AP_RequestAssistanceData (OSCTXT* pctxt, tm_encode_OMA_LPPe_WLAN_AP_RequestAssistanceData* pvalue);

EXTERN void asn1Free_tm_encode_OMA_LPPe_WLAN_AP_RequestAssistanceData (OSCTXT *pctxt, 
   tm_encode_OMA_LPPe_WLAN_AP_RequestAssistanceData* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_Sensor_RequestAssistanceData                     */
/*                                                            */
/**************************************************************/
/*
 ASN1STOP
 ASN1START

OMA-LPPe-Sensor-RequestAssistanceData ::= SEQUENCE {
   ...
}
*/
typedef struct EXTERN tm_encode_OMA_LPPe_Sensor_RequestAssistanceData {
   OSRTDList extElem1;
} tm_encode_OMA_LPPe_Sensor_RequestAssistanceData;

EXTERN int asn1PE_tm_encode_OMA_LPPe_Sensor_RequestAssistanceData (OSCTXT* pctxt, tm_encode_OMA_LPPe_Sensor_RequestAssistanceData* pvalue);

EXTERN void asn1Free_tm_encode_OMA_LPPe_Sensor_RequestAssistanceData (OSCTXT *pctxt, 
   tm_encode_OMA_LPPe_Sensor_RequestAssistanceData* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_SRN_RequestAssistanceData                        */
/*                                                            */
/**************************************************************/
/*
 ASN1STOP
 ASN1START

OMA-LPPe-SRN-RequestAssistanceData ::= SEQUENCE {
   ...
}
*/
typedef struct EXTERN tm_encode_OMA_LPPe_SRN_RequestAssistanceData {
   OSRTDList extElem1;
} tm_encode_OMA_LPPe_SRN_RequestAssistanceData;

EXTERN int asn1PE_tm_encode_OMA_LPPe_SRN_RequestAssistanceData (OSCTXT* pctxt, tm_encode_OMA_LPPe_SRN_RequestAssistanceData* pvalue);

EXTERN void asn1Free_tm_encode_OMA_LPPe_SRN_RequestAssistanceData (OSCTXT *pctxt, 
   tm_encode_OMA_LPPe_SRN_RequestAssistanceData* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_RequestAssistanceData                            */
/*                                                            */
/**************************************************************/
/*
 ASN1STOP
 ASN1START

OMA-LPPe-RequestAssistanceData ::= SEQUENCE {
   commonIEsRequestAssistanceData [0] OMA-LPPe-CommonIEsRequestAssistanceData OPTIONAL,
   agnss-RequestAssistanceData [1] OMA-LPPe-AGNSS-RequestAssistanceData OPTIONAL,
   otdoa-RequestAssistanceData [2] OMA-LPPe-OTDOA-RequestAssistanceData OPTIONAL,
   eotd-RequestAssistanceData [3] OMA-LPPe-EOTD-RequestAssistanceData OPTIONAL,
   otdoa-utra-RequestAssistanceData [4] OMA-LPPe-OTDOA-UTRA-RequestAssistanceData OPTIONAL,
   ecid-lte-RequestAssistanceData [5] OMA-LPPe-ECID-LTE-RequestAssistanceData OPTIONAL,
   ecid-gsm-RequestAssistanceData [6] OMA-LPPe-ECID-GSM-RequestAssistanceData OPTIONAL,
   ecid-utra-RequestAssistanceData [7] OMA-LPPe-ECID-UTRA-RequestAssistanceData OPTIONAL,
   wlan-ap-RequestAssistanceData [8] OMA-LPPe-WLAN-AP-RequestAssistanceData OPTIONAL,
   sensor-RequestAssistanceData [9] OMA-LPPe-Sensor-RequestAssistanceData OPTIONAL,
   srn-RequestAssistanceData [10] OMA-LPPe-SRN-RequestAssistanceData OPTIONAL,
   ...
}
*/
typedef struct EXTERN tm_encode_OMA_LPPe_RequestAssistanceData {
   struct {
      unsigned commonIEsRequestAssistanceDataPresent : 1;
      unsigned agnss_RequestAssistanceDataPresent : 1;
      unsigned otdoa_RequestAssistanceDataPresent : 1;
      unsigned eotd_RequestAssistanceDataPresent : 1;
      unsigned otdoa_utra_RequestAssistanceDataPresent : 1;
      unsigned ecid_lte_RequestAssistanceDataPresent : 1;
      unsigned ecid_gsm_RequestAssistanceDataPresent : 1;
      unsigned ecid_utra_RequestAssistanceDataPresent : 1;
      unsigned wlan_ap_RequestAssistanceDataPresent : 1;
      unsigned sensor_RequestAssistanceDataPresent : 1;
      unsigned srn_RequestAssistanceDataPresent : 1;
   } m;
   tm_encode_OMA_LPPe_CommonIEsRequestAssistanceData commonIEsRequestAssistanceData;
   tm_encode_OMA_LPPe_AGNSS_RequestAssistanceData agnss_RequestAssistanceData;
   tm_encode_OMA_LPPe_OTDOA_RequestAssistanceData otdoa_RequestAssistanceData;
   tm_encode_OMA_LPPe_EOTD_RequestAssistanceData eotd_RequestAssistanceData;
   tm_encode_OMA_LPPe_OTDOA_UTRA_RequestAssistanceData otdoa_utra_RequestAssistanceData;
   tm_encode_OMA_LPPe_ECID_LTE_RequestAssistanceData ecid_lte_RequestAssistanceData;
   tm_encode_OMA_LPPe_ECID_GSM_RequestAssistanceData ecid_gsm_RequestAssistanceData;
   tm_encode_OMA_LPPe_ECID_UTRA_RequestAssistanceData ecid_utra_RequestAssistanceData;
   tm_encode_OMA_LPPe_WLAN_AP_RequestAssistanceData wlan_ap_RequestAssistanceData;
   tm_encode_OMA_LPPe_Sensor_RequestAssistanceData sensor_RequestAssistanceData;
   tm_encode_OMA_LPPe_SRN_RequestAssistanceData srn_RequestAssistanceData;
   OSRTDList extElem1;
} tm_encode_OMA_LPPe_RequestAssistanceData;

EXTERN int asn1PE_tm_encode_OMA_LPPe_RequestAssistanceData (OSCTXT* pctxt, tm_encode_OMA_LPPe_RequestAssistanceData* pvalue);

EXTERN void asn1Free_tm_encode_OMA_LPPe_RequestAssistanceData (OSCTXT *pctxt, 
   tm_encode_OMA_LPPe_RequestAssistanceData* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_HighAccuracy3Dposition                           */
/*                                                            */
/**************************************************************/
/*
 ASN1STOP
 ASN1START

OMA-LPPe-HighAccuracy3Dposition ::= SEQUENCE {
   latitude [0] INTEGER (-2147483648..2147483647),
   longitude [1] INTEGER (-2147483648..2147483647),
   cep [2] INTEGER (0..255) OPTIONAL,
   uncertainty-semimajor [3] INTEGER (0..255) OPTIONAL,
   uncertainty-semiminor [4] INTEGER (0..255) OPTIONAL,
   offset-angle [5] INTEGER (0..179) OPTIONAL,
   confidenceHorizontal [6] INTEGER (0..99) OPTIONAL,
   altitude [7] INTEGER (-64000..1280000),
   uncertainty-altitude [8] INTEGER (0..255),
   confidenceVertical [9] INTEGER (0..99) OPTIONAL,
   ...,
   extUncertRange [10] BOOLEAN OPTIONAL
}
*/
typedef struct EXTERN tm_encode_OMA_LPPe_HighAccuracy3Dposition {
   struct {
      unsigned cepPresent : 1;
      unsigned uncertainty_semimajorPresent : 1;
      unsigned uncertainty_semiminorPresent : 1;
      unsigned offset_anglePresent : 1;
      unsigned confidenceHorizontalPresent : 1;
      unsigned confidenceVerticalPresent : 1;
      unsigned extUncertRangePresent : 1;
   } m;
   OSINT32 latitude;
   OSINT32 longitude;
   OSUINT8 cep;
   OSUINT8 uncertainty_semimajor;
   OSUINT8 uncertainty_semiminor;
   OSUINT8 offset_angle;
   OSUINT8 confidenceHorizontal;
   OSINT32 altitude;
   OSUINT8 uncertainty_altitude;
   OSUINT8 confidenceVertical;
   OSBOOL extUncertRange;
   OSRTDList extElem1;
} tm_encode_OMA_LPPe_HighAccuracy3Dposition;

EXTERN int asn1PE_tm_encode_OMA_LPPe_HighAccuracy3Dposition (OSCTXT* pctxt, tm_encode_OMA_LPPe_HighAccuracy3Dposition* pvalue);

EXTERN void asn1Free_tm_encode_OMA_LPPe_HighAccuracy3Dposition (OSCTXT *pctxt, 
   tm_encode_OMA_LPPe_HighAccuracy3Dposition* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_ReferencePointUniqueID                           */
/*                                                            */
/**************************************************************/
/*
 ASN1STOP
 ASN1START

OMA-LPPe-ReferencePointUniqueID ::= SEQUENCE {
   providerID [0] OMA-LPPe-VendorOrOperatorID,
   providerAssignedID [1] OCTET STRING,
   version [2] INTEGER (1..64),
   ...
}
*/
typedef struct EXTERN tm_encode_OMA_LPPe_ReferencePointUniqueID {
   tm_encode_OMA_LPPe_VendorOrOperatorID providerID;
   OSDynOctStr providerAssignedID;
   OSUINT8 version;
   OSRTDList extElem1;
} tm_encode_OMA_LPPe_ReferencePointUniqueID;

EXTERN int asn1PE_tm_encode_OMA_LPPe_ReferencePointUniqueID (OSCTXT* pctxt, tm_encode_OMA_LPPe_ReferencePointUniqueID* pvalue);

EXTERN void asn1Free_tm_encode_OMA_LPPe_ReferencePointUniqueID (OSCTXT *pctxt, 
   tm_encode_OMA_LPPe_ReferencePointUniqueID* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_RelativeLocation_units                           */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'OMA-LPPe-RelativeLocation'
*/
typedef enum {
   tm_encode_OMA_LPPe_RelativeLocation_units_cm = 0,
   tm_encode_OMA_LPPe_RelativeLocation_units_dm = 1,
   tm_encode_OMA_LPPe_RelativeLocation_units_m10 = 2
} tm_encode_OMA_LPPe_RelativeLocation_units_Root;

typedef OSUINT32 tm_encode_OMA_LPPe_RelativeLocation_units;

EXTERN int asn1PE_tm_encode_OMA_LPPe_RelativeLocation_units (OSCTXT* pctxt, tm_encode_OMA_LPPe_RelativeLocation_units value);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_RelativeLocation_arc_second_units                */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'OMA-LPPe-RelativeLocation'
*/
typedef enum {
   tm_encode_OMA_LPPe_RelativeLocation_arc_second_units_as0_0003 = 0,
   tm_encode_OMA_LPPe_RelativeLocation_arc_second_units_as0_003 = 1,
   tm_encode_OMA_LPPe_RelativeLocation_arc_second_units_as0_03 = 2,
   tm_encode_OMA_LPPe_RelativeLocation_arc_second_units_as0_3 = 3
} tm_encode_OMA_LPPe_RelativeLocation_arc_second_units_Root;

typedef OSUINT32 tm_encode_OMA_LPPe_RelativeLocation_arc_second_units;

EXTERN int asn1PE_tm_encode_OMA_LPPe_RelativeLocation_arc_second_units (OSCTXT* pctxt, tm_encode_OMA_LPPe_RelativeLocation_arc_second_units value);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_GeodeticUncertaintyAndConfidence                 */
/*                                                            */
/**************************************************************/
/*
OMA-LPPe-GeodeticUncertaintyAndConfidence ::= SEQUENCE {
   uncertainty [0] INTEGER (0..127),
   confidence [1] INTEGER (0..99) OPTIONAL,
   ...
}
*/
typedef struct EXTERN tm_encode_OMA_LPPe_GeodeticUncertaintyAndConfidence {
   struct {
      unsigned confidencePresent : 1;
   } m;
   OSUINT8 uncertainty;
   OSUINT8 confidence;
   OSRTDList extElem1;
} tm_encode_OMA_LPPe_GeodeticUncertaintyAndConfidence;

EXTERN int asn1PE_tm_encode_OMA_LPPe_GeodeticUncertaintyAndConfidence (OSCTXT* pctxt, tm_encode_OMA_LPPe_GeodeticUncertaintyAndConfidence* pvalue);

EXTERN void asn1Free_tm_encode_OMA_LPPe_GeodeticUncertaintyAndConfidence (OSCTXT *pctxt, 
   tm_encode_OMA_LPPe_GeodeticUncertaintyAndConfidence* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_GeodeticRelativeAltitude                         */
/*                                                            */
/**************************************************************/
/*
OMA-LPPe-GeodeticRelativeAltitude ::= SEQUENCE {
   geodetic-height-depth [0] INTEGER (-32768..32767),
   geodetic-uncertainty-and-confidence [1] OMA-LPPe-GeodeticUncertaintyAndConfidence OPTIONAL,
   ...
}
*/
typedef struct EXTERN tm_encode_OMA_LPPe_GeodeticRelativeAltitude {
   struct {
      unsigned geodetic_uncertainty_and_confidencePresent : 1;
   } m;
   OSINT16 geodetic_height_depth;
   tm_encode_OMA_LPPe_GeodeticUncertaintyAndConfidence geodetic_uncertainty_and_confidence;
   OSRTDList extElem1;
} tm_encode_OMA_LPPe_GeodeticRelativeAltitude;

EXTERN int asn1PE_tm_encode_OMA_LPPe_GeodeticRelativeAltitude (OSCTXT* pctxt, tm_encode_OMA_LPPe_GeodeticRelativeAltitude* pvalue);

EXTERN void asn1Free_tm_encode_OMA_LPPe_GeodeticRelativeAltitude (OSCTXT *pctxt, 
   tm_encode_OMA_LPPe_GeodeticRelativeAltitude* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_CivicUncertaintyAndConfidence                    */
/*                                                            */
/**************************************************************/
/*
OMA-LPPe-CivicUncertaintyAndConfidence ::= SEQUENCE {
   uncertainty [0] INTEGER (0..127),
   confidence [1] INTEGER (0..99) OPTIONAL,
   ...
}
*/
typedef struct EXTERN tm_encode_OMA_LPPe_CivicUncertaintyAndConfidence {
   struct {
      unsigned confidencePresent : 1;
   } m;
   OSUINT8 uncertainty;
   OSUINT8 confidence;
   OSRTDList extElem1;
} tm_encode_OMA_LPPe_CivicUncertaintyAndConfidence;

EXTERN int asn1PE_tm_encode_OMA_LPPe_CivicUncertaintyAndConfidence (OSCTXT* pctxt, tm_encode_OMA_LPPe_CivicUncertaintyAndConfidence* pvalue);

EXTERN void asn1Free_tm_encode_OMA_LPPe_CivicUncertaintyAndConfidence (OSCTXT *pctxt, 
   tm_encode_OMA_LPPe_CivicUncertaintyAndConfidence* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_CivicRelativeAltitude                            */
/*                                                            */
/**************************************************************/
/*
OMA-LPPe-CivicRelativeAltitude ::= SEQUENCE {
   civic-floors [0] INTEGER (-255..256),
   civic-uncertainty-and-confidence [1] OMA-LPPe-CivicUncertaintyAndConfidence OPTIONAL,
   ...
}
*/
typedef struct EXTERN tm_encode_OMA_LPPe_CivicRelativeAltitude {
   struct {
      unsigned civic_uncertainty_and_confidencePresent : 1;
   } m;
   OSINT16 civic_floors;
   tm_encode_OMA_LPPe_CivicUncertaintyAndConfidence civic_uncertainty_and_confidence;
   OSRTDList extElem1;
} tm_encode_OMA_LPPe_CivicRelativeAltitude;

EXTERN int asn1PE_tm_encode_OMA_LPPe_CivicRelativeAltitude (OSCTXT* pctxt, tm_encode_OMA_LPPe_CivicRelativeAltitude* pvalue);

EXTERN void asn1Free_tm_encode_OMA_LPPe_CivicRelativeAltitude (OSCTXT *pctxt, 
   tm_encode_OMA_LPPe_CivicRelativeAltitude* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_RelativeAltitude                                 */
/*                                                            */
/**************************************************************/
/*
OMA-LPPe-RelativeAltitude ::= SEQUENCE {
   geodeticRelativeAltitude [0] OMA-LPPe-GeodeticRelativeAltitude OPTIONAL,
   civicRelativeAltitude [1] OMA-LPPe-CivicRelativeAltitude OPTIONAL,
   ...
}
*/
typedef struct EXTERN tm_encode_OMA_LPPe_RelativeAltitude {
   struct {
      unsigned geodeticRelativeAltitudePresent : 1;
      unsigned civicRelativeAltitudePresent : 1;
   } m;
   tm_encode_OMA_LPPe_GeodeticRelativeAltitude geodeticRelativeAltitude;
   tm_encode_OMA_LPPe_CivicRelativeAltitude civicRelativeAltitude;
   OSRTDList extElem1;
} tm_encode_OMA_LPPe_RelativeAltitude;

EXTERN int asn1PE_tm_encode_OMA_LPPe_RelativeAltitude (OSCTXT* pctxt, tm_encode_OMA_LPPe_RelativeAltitude* pvalue);

EXTERN void asn1Free_tm_encode_OMA_LPPe_RelativeAltitude (OSCTXT *pctxt, 
   tm_encode_OMA_LPPe_RelativeAltitude* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_HorizontalUncertaintyAndConfidence_uncShape_ell  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'OMA-LPPe-HorizontalUncertaintyAndConfidence'
*/
typedef struct EXTERN tm_encode_OMA_LPPe_HorizontalUncertaintyAndConfidence_uncShape_ellipse {
   OSUINT8 semimajor;
   OSUINT8 semiminor;
   OSUINT8 offsetAngle;
} tm_encode_OMA_LPPe_HorizontalUncertaintyAndConfidence_uncShape_ellipse;

EXTERN int asn1PE_tm_encode_OMA_LPPe_HorizontalUncertaintyAndConfidence_uncShape_ellipse (OSCTXT* pctxt, tm_encode_OMA_LPPe_HorizontalUncertaintyAndConfidence_uncShape_ellipse* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_HorizontalUncertaintyAndConfidence_uncShape      */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'OMA-LPPe-HorizontalUncertaintyAndConfidence'
*/
/* Choice tag constants */

#define T_tm_encode_OMA_LPPe_HorizontalUncertaintyAndConfidence_uncShape_circle 1
#define T_tm_encode_OMA_LPPe_HorizontalUncertaintyAndConfidence_uncShape_ellipse 2
#define T_tm_encode_OMA_LPPe_HorizontalUncertaintyAndConfidence_uncShape_extElem1 3

typedef struct EXTERN tm_encode_OMA_LPPe_HorizontalUncertaintyAndConfidence_uncShape {
   OSUINT32 t;
   union {
      /* t = 1 */
      OSUINT8 circle;
      /* t = 2 */
      tm_encode_OMA_LPPe_HorizontalUncertaintyAndConfidence_uncShape_ellipse *ellipse;
      /* t = 3 */
      ASN1OpenType *extElem1;
   } u;
} tm_encode_OMA_LPPe_HorizontalUncertaintyAndConfidence_uncShape;

EXTERN int asn1PE_tm_encode_OMA_LPPe_HorizontalUncertaintyAndConfidence_uncShape (OSCTXT* pctxt, tm_encode_OMA_LPPe_HorizontalUncertaintyAndConfidence_uncShape* pvalue);

EXTERN void asn1Free_tm_encode_OMA_LPPe_HorizontalUncertaintyAndConfidence_uncShape (OSCTXT *pctxt, 
   tm_encode_OMA_LPPe_HorizontalUncertaintyAndConfidence_uncShape* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_HorizontalUncertaintyAndConfidence               */
/*                                                            */
/**************************************************************/
/*
OMA-LPPe-HorizontalUncertaintyAndConfidence ::= SEQUENCE {
   uncShape [0] CHOICE {
      circle [0] INTEGER (0..127),
      ellipse [1] SEQUENCE {
         semimajor [0] INTEGER (0..127),
         semiminor [1] INTEGER (0..127),
         offsetAngle [2] INTEGER (0..179)
      },
      ...
   },
   confidence [1] INTEGER (0..99) OPTIONAL,
   ...
}
*/
typedef struct EXTERN tm_encode_OMA_LPPe_HorizontalUncertaintyAndConfidence {
   struct {
      unsigned confidencePresent : 1;
   } m;
   tm_encode_OMA_LPPe_HorizontalUncertaintyAndConfidence_uncShape uncShape;
   OSUINT8 confidence;
   OSRTDList extElem1;
} tm_encode_OMA_LPPe_HorizontalUncertaintyAndConfidence;

EXTERN int asn1PE_tm_encode_OMA_LPPe_HorizontalUncertaintyAndConfidence (OSCTXT* pctxt, tm_encode_OMA_LPPe_HorizontalUncertaintyAndConfidence* pvalue);

EXTERN void asn1Free_tm_encode_OMA_LPPe_HorizontalUncertaintyAndConfidence (OSCTXT *pctxt, 
   tm_encode_OMA_LPPe_HorizontalUncertaintyAndConfidence* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_RelativeLocation                                 */
/*                                                            */
/**************************************************************/
/*
 ASN1STOP
 ASN1START

OMA-LPPe-RelativeLocation ::= SEQUENCE {
   units [0] ENUMERATED { cm(0), dm(1), m10(2), ... } OPTIONAL,
   arc-second-units [1] ENUMERATED { as0-0003(0), as0-003(1), as0-03(2), as0-3(3), ... } OPTIONAL,
   relativeNorth [2] INTEGER (-524288..524287),
   relativeEast [3] INTEGER (-524288..524287),
   relativeAltitude [4] OMA-LPPe-RelativeAltitude OPTIONAL,
   horizontalUncertainty [5] OMA-LPPe-HorizontalUncertaintyAndConfidence OPTIONAL,
   ...
}
*/
typedef struct EXTERN tm_encode_OMA_LPPe_RelativeLocation {
   struct {
      unsigned unitsPresent : 1;
      unsigned arc_second_unitsPresent : 1;
      unsigned relativeAltitudePresent : 1;
      unsigned horizontalUncertaintyPresent : 1;
   } m;
   tm_encode_OMA_LPPe_RelativeLocation_units units;
   tm_encode_OMA_LPPe_RelativeLocation_arc_second_units arc_second_units;
   OSINT32 relativeNorth;
   OSINT32 relativeEast;
   tm_encode_OMA_LPPe_RelativeAltitude relativeAltitude;
   tm_encode_OMA_LPPe_HorizontalUncertaintyAndConfidence horizontalUncertainty;
   OSRTDList extElem1;
} tm_encode_OMA_LPPe_RelativeLocation;

EXTERN int asn1PE_tm_encode_OMA_LPPe_RelativeLocation (OSCTXT* pctxt, tm_encode_OMA_LPPe_RelativeLocation* pvalue);

EXTERN void asn1Free_tm_encode_OMA_LPPe_RelativeLocation (OSCTXT *pctxt, 
   tm_encode_OMA_LPPe_RelativeLocation* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_LocalPosition                                    */
/*                                                            */
/**************************************************************/
/*
OMA-LPPe-LocalPosition ::= SEQUENCE {
   referencePoint [0] OMA-LPPe-ReferencePointUniqueID,
   subjectLocation [1] OMA-LPPe-RelativeLocation OPTIONAL,
   ...
}
*/
typedef struct EXTERN tm_encode_OMA_LPPe_LocalPosition {
   struct {
      unsigned subjectLocationPresent : 1;
   } m;
   tm_encode_OMA_LPPe_ReferencePointUniqueID referencePoint;
   tm_encode_OMA_LPPe_RelativeLocation subjectLocation;
   OSRTDList extElem1;
} tm_encode_OMA_LPPe_LocalPosition;

EXTERN int asn1PE_tm_encode_OMA_LPPe_LocalPosition (OSCTXT* pctxt, tm_encode_OMA_LPPe_LocalPosition* pvalue);

EXTERN void asn1Free_tm_encode_OMA_LPPe_LocalPosition (OSCTXT *pctxt, 
   tm_encode_OMA_LPPe_LocalPosition* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_HighAccuracy3Dvelocity                           */
/*                                                            */
/**************************************************************/
/*
 ASN1STOP
 ASN1START

OMA-LPPe-HighAccuracy3Dvelocity ::= SEQUENCE {
   enu-origin [0] OMA-LPPe-HighAccuracy3Dposition OPTIONAL,
   east-component [1] INTEGER (0..511),
   negative-sign-east [2] NULL OPTIONAL,
   north-component [3] INTEGER (0..511),
   negative-sign-north [4] NULL OPTIONAL,
   up-component [5] INTEGER (0..511),
   negative-sign-up [6] NULL OPTIONAL,
   cep [7] INTEGER (0..255) OPTIONAL,
   uncertainty-semimajor [8] INTEGER (0..255) OPTIONAL,
   uncertainty-semiminor [9] INTEGER (0..255) OPTIONAL,
   offset-angle [10] INTEGER (0..179) OPTIONAL,
   confidenceHorizontal [11] INTEGER (0..99) OPTIONAL,
   uncertainty-up-component [12] INTEGER (0..255),
   confidenceUp [13] INTEGER (0..99) OPTIONAL,
   ...
}
*/
typedef struct EXTERN tm_encode_OMA_LPPe_HighAccuracy3Dvelocity {
   struct {
      unsigned enu_originPresent : 1;
      unsigned negative_sign_eastPresent : 1;
      unsigned negative_sign_northPresent : 1;
      unsigned negative_sign_upPresent : 1;
      unsigned cepPresent : 1;
      unsigned uncertainty_semimajorPresent : 1;
      unsigned uncertainty_semiminorPresent : 1;
      unsigned offset_anglePresent : 1;
      unsigned confidenceHorizontalPresent : 1;
      unsigned confidenceUpPresent : 1;
   } m;
   tm_encode_OMA_LPPe_HighAccuracy3Dposition enu_origin;
   OSUINT16 east_component;
   OSUINT16 north_component;
   OSUINT16 up_component;
   OSUINT8 cep;
   OSUINT8 uncertainty_semimajor;
   OSUINT8 uncertainty_semiminor;
   OSUINT8 offset_angle;
   OSUINT8 confidenceHorizontal;
   OSUINT8 uncertainty_up_component;
   OSUINT8 confidenceUp;
   OSRTDList extElem1;
} tm_encode_OMA_LPPe_HighAccuracy3Dvelocity;

EXTERN int asn1PE_tm_encode_OMA_LPPe_HighAccuracy3Dvelocity (OSCTXT* pctxt, tm_encode_OMA_LPPe_HighAccuracy3Dvelocity* pvalue);

EXTERN void asn1Free_tm_encode_OMA_LPPe_HighAccuracy3Dvelocity (OSCTXT *pctxt, 
   tm_encode_OMA_LPPe_HighAccuracy3Dvelocity* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_IP_Address_local_IP_Address_iPv6                 */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'OMA-LPPe-IP-Address'
*/
typedef struct tm_encode_OMA_LPPe_IP_Address_local_IP_Address_iPv6 {
   OSUINT32 numbits;
   OSOCTET data[16];
} tm_encode_OMA_LPPe_IP_Address_local_IP_Address_iPv6;

EXTERN int asn1PE_tm_encode_OMA_LPPe_IP_Address_local_IP_Address_iPv6 (OSCTXT* pctxt, tm_encode_OMA_LPPe_IP_Address_local_IP_Address_iPv6* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_IP_Address_local_IP_Address                      */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'OMA-LPPe-IP-Address'
*/
/* Choice tag constants */

#define T_tm_encode_OMA_LPPe_IP_Address_local_IP_Address_iPv4 1
#define T_tm_encode_OMA_LPPe_IP_Address_local_IP_Address_iPv6 2
#define T_tm_encode_OMA_LPPe_IP_Address_local_IP_Address_extElem1 3

typedef struct EXTERN tm_encode_OMA_LPPe_IP_Address_local_IP_Address {
   OSUINT32 t;
   union {
      /* t = 1 */
      ASN1BitStr32 *iPv4;
      /* t = 2 */
      tm_encode_OMA_LPPe_IP_Address_local_IP_Address_iPv6 *iPv6;
      /* t = 3 */
      ASN1OpenType *extElem1;
   } u;
} tm_encode_OMA_LPPe_IP_Address_local_IP_Address;

EXTERN int asn1PE_tm_encode_OMA_LPPe_IP_Address_local_IP_Address (OSCTXT* pctxt, tm_encode_OMA_LPPe_IP_Address_local_IP_Address* pvalue);

EXTERN void asn1Free_tm_encode_OMA_LPPe_IP_Address_local_IP_Address (OSCTXT *pctxt, 
   tm_encode_OMA_LPPe_IP_Address_local_IP_Address* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_Bearer                                           */
/*                                                            */
/**************************************************************/
/*
OMA-LPPe-Bearer ::= ENUMERATED { unknown(0), gsm(1), utran(2), lte(3), wlan(4), wimax(5), dsl(6), pktcable(7), other(8), ... }
*/
typedef enum {
   tm_encode_OMA_LPPe_Bearer_unknown = 0,
   tm_encode_OMA_LPPe_Bearer_gsm = 1,
   tm_encode_OMA_LPPe_Bearer_utran = 2,
   tm_encode_OMA_LPPe_Bearer_lte = 3,
   tm_encode_OMA_LPPe_Bearer_wlan = 4,
   tm_encode_OMA_LPPe_Bearer_wimax = 5,
   tm_encode_OMA_LPPe_Bearer_dsl = 6,
   tm_encode_OMA_LPPe_Bearer_pktcable = 7,
   tm_encode_OMA_LPPe_Bearer_other = 8
} tm_encode_OMA_LPPe_Bearer_Root;

typedef OSUINT32 tm_encode_OMA_LPPe_Bearer;

EXTERN int asn1PE_tm_encode_OMA_LPPe_Bearer (OSCTXT* pctxt, tm_encode_OMA_LPPe_Bearer value);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_IP_Address                                       */
/*                                                            */
/**************************************************************/
/*
OMA-LPPe-IP-Address ::= SEQUENCE {
   local-IP-Address [0] CHOICE {
      iPv4 [0] BIT STRING  (SIZE (32)),
      iPv6 [1] BIT STRING  (SIZE (128)),
      ...
   },
   bearer [1] OMA-LPPe-Bearer,
   nat [2] BOOLEAN OPTIONAL,
   ...
}
*/
typedef struct EXTERN tm_encode_OMA_LPPe_IP_Address {
   struct {
      unsigned natPresent : 1;
   } m;
   tm_encode_OMA_LPPe_IP_Address_local_IP_Address local_IP_Address;
   tm_encode_OMA_LPPe_Bearer bearer;
   OSBOOL nat;
   OSRTDList extElem1;
} tm_encode_OMA_LPPe_IP_Address;

EXTERN int asn1PE_tm_encode_OMA_LPPe_IP_Address (OSCTXT* pctxt, tm_encode_OMA_LPPe_IP_Address* pvalue);

EXTERN void asn1Free_tm_encode_OMA_LPPe_IP_Address (OSCTXT *pctxt, 
   tm_encode_OMA_LPPe_IP_Address* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_IP_Address_List                                  */
/*                                                            */
/**************************************************************/
/*
OMA-LPPe-IP-Address-List ::= SEQUENCE (SIZE (1..maxIPAddress)) OF OMA-LPPe-IP-Address
*/
typedef struct EXTERN tm_encode_OMA_LPPe_IP_Address_List {
   OSUINT32 n;
   tm_encode_OMA_LPPe_IP_Address *elem;
} tm_encode_OMA_LPPe_IP_Address_List;

EXTERN int asn1PE_tm_encode_OMA_LPPe_IP_Address_List (OSCTXT* pctxt, tm_encode_OMA_LPPe_IP_Address_List* pvalue);

EXTERN void asn1Free_tm_encode_OMA_LPPe_IP_Address_List (OSCTXT *pctxt, 
   tm_encode_OMA_LPPe_IP_Address_List* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_LocationInformationContainerData                 */
/*                                                            */
/**************************************************************/
/*
OMA-LPPe-LocationInformationContainerData ::= SEQUENCE {
   containerID [0] OMA-LPPe-LocationInformationContainerID,
   containerData [1] OCTET STRING,
   ...
}
*/
typedef struct EXTERN tm_encode_OMA_LPPe_LocationInformationContainerData {
   tm_encode_OMA_LPPe_LocationInformationContainerID containerID;
   OSDynOctStr containerData;
   OSRTDList extElem1;
} tm_encode_OMA_LPPe_LocationInformationContainerData;

EXTERN int asn1PE_tm_encode_OMA_LPPe_LocationInformationContainerData (OSCTXT* pctxt, tm_encode_OMA_LPPe_LocationInformationContainerData* pvalue);

EXTERN void asn1Free_tm_encode_OMA_LPPe_LocationInformationContainerData (OSCTXT *pctxt, 
   tm_encode_OMA_LPPe_LocationInformationContainerData* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_LocationInformationContainerDataList             */
/*                                                            */
/**************************************************************/
/*
OMA-LPPe-LocationInformationContainerDataList ::= SEQUENCE (SIZE (1..maxLocationInformationContainerDataList)) OF OMA-LPPe-LocationInformationContainerData
*/
typedef struct EXTERN tm_encode_OMA_LPPe_LocationInformationContainerDataList {
   OSUINT32 n;
   tm_encode_OMA_LPPe_LocationInformationContainerData *elem;
} tm_encode_OMA_LPPe_LocationInformationContainerDataList;

EXTERN int asn1PE_tm_encode_OMA_LPPe_LocationInformationContainerDataList (OSCTXT* pctxt, tm_encode_OMA_LPPe_LocationInformationContainerDataList* pvalue);

EXTERN void asn1Free_tm_encode_OMA_LPPe_LocationInformationContainerDataList (OSCTXT *pctxt, 
   tm_encode_OMA_LPPe_LocationInformationContainerDataList* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_LocationInformationContainer                     */
/*                                                            */
/**************************************************************/
/*
 ASN1STOP
 ASN1START

OMA-LPPe-LocationInformationContainer ::= SEQUENCE {
   vendorOrOperatorID [0] OMA-LPPe-VendorOrOperatorID,
   locationInformationContainerDataList [1] OMA-LPPe-LocationInformationContainerDataList,
   ...
}
*/
typedef struct EXTERN tm_encode_OMA_LPPe_LocationInformationContainer {
   tm_encode_OMA_LPPe_VendorOrOperatorID vendorOrOperatorID;
   tm_encode_OMA_LPPe_LocationInformationContainerDataList locationInformationContainerDataList;
   OSRTDList extElem1;
} tm_encode_OMA_LPPe_LocationInformationContainer;

EXTERN int asn1PE_tm_encode_OMA_LPPe_LocationInformationContainer (OSCTXT* pctxt, tm_encode_OMA_LPPe_LocationInformationContainer* pvalue);

EXTERN void asn1Free_tm_encode_OMA_LPPe_LocationInformationContainer (OSCTXT *pctxt, 
   tm_encode_OMA_LPPe_LocationInformationContainer* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_ProvidePeriodicLocInfowithUpdate_session_ID      */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'OMA-LPPe-ProvidePeriodicLocInfowithUpdate'
*/
typedef struct EXTERN tm_encode_OMA_LPPe_ProvidePeriodicLocInfowithUpdate_session_ID {
   OSUINT32 numocts;
   OSOCTET data[4];
} tm_encode_OMA_LPPe_ProvidePeriodicLocInfowithUpdate_session_ID;

EXTERN int asn1PE_tm_encode_OMA_LPPe_ProvidePeriodicLocInfowithUpdate_session_ID (OSCTXT* pctxt, tm_encode_OMA_LPPe_ProvidePeriodicLocInfowithUpdate_session_ID* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_TypeOfLocInfoProvide                             */
/*                                                            */
/**************************************************************/
/*
OMA-LPPe-TypeOfLocInfoProvide ::= ENUMERATED { responseToInitialRequest(0), providePeriodicLocInfo(1), responseToServerUpdateRequest(2), targetUpdate(3), ... }
*/
typedef enum {
   tm_encode_OMA_LPPe_TypeOfLocInfoProvide_responseToInitialRequest = 0,
   tm_encode_OMA_LPPe_TypeOfLocInfoProvide_providePeriodicLocInfo = 1,
   tm_encode_OMA_LPPe_TypeOfLocInfoProvide_responseToServerUpdateRequest = 2,
   tm_encode_OMA_LPPe_TypeOfLocInfoProvide_targetUpdate = 3
} tm_encode_OMA_LPPe_TypeOfLocInfoProvide_Root;

typedef OSUINT32 tm_encode_OMA_LPPe_TypeOfLocInfoProvide;

EXTERN int asn1PE_tm_encode_OMA_LPPe_TypeOfLocInfoProvide (OSCTXT* pctxt, tm_encode_OMA_LPPe_TypeOfLocInfoProvide value);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_ProvidePeriodicLocInfowithUpdate                 */
/*                                                            */
/**************************************************************/
/*
OMA-LPPe-ProvidePeriodicLocInfowithUpdate ::= SEQUENCE {
   session-ID [0] OCTET STRING (SIZE (4)),
   typeOfLocInfoProvide [1] OMA-LPPe-TypeOfLocInfoProvide,
   ...
}
*/
typedef struct EXTERN tm_encode_OMA_LPPe_ProvidePeriodicLocInfowithUpdate {
   tm_encode_OMA_LPPe_ProvidePeriodicLocInfowithUpdate_session_ID session_ID;
   tm_encode_OMA_LPPe_TypeOfLocInfoProvide typeOfLocInfoProvide;
   OSRTDList extElem1;
} tm_encode_OMA_LPPe_ProvidePeriodicLocInfowithUpdate;

EXTERN int asn1PE_tm_encode_OMA_LPPe_ProvidePeriodicLocInfowithUpdate (OSCTXT* pctxt, tm_encode_OMA_LPPe_ProvidePeriodicLocInfowithUpdate* pvalue);

EXTERN void asn1Free_tm_encode_OMA_LPPe_ProvidePeriodicLocInfowithUpdate (OSCTXT *pctxt, 
   tm_encode_OMA_LPPe_ProvidePeriodicLocInfowithUpdate* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_RelativeLocationChange                           */
/*                                                            */
/**************************************************************/
/*
OMA-LPPe-RelativeLocationChange ::= SEQUENCE {
   relativeTime [0] INTEGER (0..65535) OPTIONAL,
   transactionID [1] INTEGER (0..255) OPTIONAL,
   relativeLocation [2] OMA-LPPe-RelativeLocation,
   ...
}
*/
typedef struct EXTERN tm_encode_OMA_LPPe_RelativeLocationChange {
   struct {
      unsigned relativeTimePresent : 1;
      unsigned transactionIDPresent : 1;
   } m;
   OSUINT16 relativeTime;
   OSUINT8 transactionID;
   tm_encode_OMA_LPPe_RelativeLocation relativeLocation;
   OSRTDList extElem1;
} tm_encode_OMA_LPPe_RelativeLocationChange;

EXTERN int asn1PE_tm_encode_OMA_LPPe_RelativeLocationChange (OSCTXT* pctxt, tm_encode_OMA_LPPe_RelativeLocationChange* pvalue);

EXTERN void asn1Free_tm_encode_OMA_LPPe_RelativeLocationChange (OSCTXT *pctxt, 
   tm_encode_OMA_LPPe_RelativeLocationChange* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_RelativeLocationChangeList                       */
/*                                                            */
/**************************************************************/
/*
OMA-LPPe-RelativeLocationChangeList ::= SEQUENCE (SIZE (1..maxRelativeLocation)) OF OMA-LPPe-RelativeLocationChange
*/
typedef struct EXTERN tm_encode_OMA_LPPe_RelativeLocationChangeList {
   OSUINT32 n;
   tm_encode_OMA_LPPe_RelativeLocationChange *elem;
} tm_encode_OMA_LPPe_RelativeLocationChangeList;

EXTERN int asn1PE_tm_encode_OMA_LPPe_RelativeLocationChangeList (OSCTXT* pctxt, tm_encode_OMA_LPPe_RelativeLocationChangeList* pvalue);

EXTERN void asn1Free_tm_encode_OMA_LPPe_RelativeLocationChangeList (OSCTXT *pctxt, 
   tm_encode_OMA_LPPe_RelativeLocationChangeList* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_ScheduledLocation_disposition                    */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'OMA-LPPe-ScheduledLocation'
*/
typedef enum {
   tm_encode_OMA_LPPe_ScheduledLocation_disposition_withinWindow = 0,
   tm_encode_OMA_LPPe_ScheduledLocation_disposition_outsideWindowOrNoWindow = 1,
   tm_encode_OMA_LPPe_ScheduledLocation_disposition_notSupportedDueToNoCapability = 2,
   tm_encode_OMA_LPPe_ScheduledLocation_disposition_notSupportedDueToNoTimeReference = 3,
   tm_encode_OMA_LPPe_ScheduledLocation_disposition_notSupportedDueToConflictWithAnotherRequest = 4,
   tm_encode_OMA_LPPe_ScheduledLocation_disposition_notSupportedForOtherReasons = 5
} tm_encode_OMA_LPPe_ScheduledLocation_disposition_Root;

typedef OSUINT32 tm_encode_OMA_LPPe_ScheduledLocation_disposition;

EXTERN int asn1PE_tm_encode_OMA_LPPe_ScheduledLocation_disposition (OSCTXT* pctxt, tm_encode_OMA_LPPe_ScheduledLocation_disposition value);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_ScheduledLocation_actualWindow                   */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'OMA-LPPe-ScheduledLocation'
*/
typedef struct EXTERN tm_encode_OMA_LPPe_ScheduledLocation_actualWindow {
   OSINT16 start;
   OSUINT16 duration;
} tm_encode_OMA_LPPe_ScheduledLocation_actualWindow;

EXTERN int asn1PE_tm_encode_OMA_LPPe_ScheduledLocation_actualWindow (OSCTXT* pctxt, tm_encode_OMA_LPPe_ScheduledLocation_actualWindow* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_ScheduledLocation                                */
/*                                                            */
/**************************************************************/
/*
OMA-LPPe-ScheduledLocation ::= SEQUENCE {
   disposition [0] ENUMERATED { withinWindow(0), outsideWindowOrNoWindow(1), notSupportedDueToNoCapability(2), notSupportedDueToNoTimeReference(3), notSupportedDueToConflictWithAnotherRequest(4), notSupportedForOtherReasons(5), ... },
   actualWindow [1] SEQUENCE {
      start [0] INTEGER (-512..511),
      duration [1] INTEGER (0..2047)
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN tm_encode_OMA_LPPe_ScheduledLocation {
   struct {
      unsigned actualWindowPresent : 1;
   } m;
   tm_encode_OMA_LPPe_ScheduledLocation_disposition disposition;
   tm_encode_OMA_LPPe_ScheduledLocation_actualWindow actualWindow;
   OSRTDList extElem1;
} tm_encode_OMA_LPPe_ScheduledLocation;

EXTERN int asn1PE_tm_encode_OMA_LPPe_ScheduledLocation (OSCTXT* pctxt, tm_encode_OMA_LPPe_ScheduledLocation* pvalue);

EXTERN void asn1Free_tm_encode_OMA_LPPe_ScheduledLocation (OSCTXT *pctxt, 
   tm_encode_OMA_LPPe_ScheduledLocation* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_AccessTypes                                      */
/*                                                            */
/**************************************************************/
/*
OMA-LPPe-AccessTypes ::= SEQUENCE {
   accessTypeUnknown [0] NULL OPTIONAL,
   fixedAccessTypes [1] OMA-LPPe-FixedAccessTypes OPTIONAL,
   wirelessAccessTypes [2] OMA-LPPe-WirelessAccessTypes OPTIONAL,
   ...
}
*/
typedef struct EXTERN tm_encode_OMA_LPPe_AccessTypes {
   struct {
      unsigned accessTypeUnknownPresent : 1;
      unsigned fixedAccessTypesPresent : 1;
      unsigned wirelessAccessTypesPresent : 1;
   } m;
   tm_encode_OMA_LPPe_FixedAccessTypes fixedAccessTypes;
   tm_encode_OMA_LPPe_WirelessAccessTypes wirelessAccessTypes;
   OSRTDList extElem1;
} tm_encode_OMA_LPPe_AccessTypes;

EXTERN int asn1PE_tm_encode_OMA_LPPe_AccessTypes (OSCTXT* pctxt, tm_encode_OMA_LPPe_AccessTypes* pvalue);

EXTERN void asn1Free_tm_encode_OMA_LPPe_AccessTypes (OSCTXT *pctxt, 
   tm_encode_OMA_LPPe_AccessTypes* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_SegmentedLITransfer                              */
/*                                                            */
/**************************************************************/
/*
OMA-LPPe-SegmentedLITransfer ::= SEQUENCE {
   segmentedLI-session-ID [0] INTEGER (1..256),
   segment-number [1] INTEGER (1..4096),
   ...
}
*/
typedef struct EXTERN tm_encode_OMA_LPPe_SegmentedLITransfer {
   OSUINT16 segmentedLI_session_ID;
   OSUINT16 segment_number;
   OSRTDList extElem1;
} tm_encode_OMA_LPPe_SegmentedLITransfer;

EXTERN int asn1PE_tm_encode_OMA_LPPe_SegmentedLITransfer (OSCTXT* pctxt, tm_encode_OMA_LPPe_SegmentedLITransfer* pvalue);

EXTERN void asn1Free_tm_encode_OMA_LPPe_SegmentedLITransfer (OSCTXT *pctxt, 
   tm_encode_OMA_LPPe_SegmentedLITransfer* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_TimeStamp                                        */
/*                                                            */
/**************************************************************/
/*
OMA-LPPe-TimeStamp ::= CHOICE {
   gnssTime [0] GNSS-SystemTime,
   networkTime [1] NetworkTime,
   relativeTime [2] INTEGER (0..1024),
   ...
}
*/
/* Choice tag constants */

#define T_tm_encode_OMA_LPPe_TimeStamp_gnssTime 1
#define T_tm_encode_OMA_LPPe_TimeStamp_networkTime 2
#define T_tm_encode_OMA_LPPe_TimeStamp_relativeTime 3
#define T_tm_encode_OMA_LPPe_TimeStamp_extElem1 4

typedef struct EXTERN tm_encode_OMA_LPPe_TimeStamp {
   OSUINT32 t;
   union {
      /* t = 1 */
      GNSS_SystemTime *gnssTime;
      /* t = 2 */
      NetworkTime *networkTime;
      /* t = 3 */
      OSUINT16 relativeTime;
      /* t = 4 */
      ASN1OpenType *extElem1;
   } u;
} tm_encode_OMA_LPPe_TimeStamp;

EXTERN int asn1PE_tm_encode_OMA_LPPe_TimeStamp (OSCTXT* pctxt, tm_encode_OMA_LPPe_TimeStamp* pvalue);

EXTERN void asn1Free_tm_encode_OMA_LPPe_TimeStamp (OSCTXT *pctxt, 
   tm_encode_OMA_LPPe_TimeStamp* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_LocationSource                                   */
/*                                                            */
/**************************************************************/
/*
OMA-LPPe-LocationSource ::= SEQUENCE {
   agnss [0] NULL OPTIONAL,
   otdoa [1] NULL OPTIONAL,
   eotd [2] NULL OPTIONAL,
   otdoaUTRA [3] NULL OPTIONAL,
   ecidLTE [4] NULL OPTIONAL,
   ecidGSM [5] NULL OPTIONAL,
   ecidUTRA [6] NULL OPTIONAL,
   wlanAP [7] NULL OPTIONAL,
   srn [8] NULL OPTIONAL,
   sensors [9] NULL OPTIONAL,
   ...
}
*/
typedef struct EXTERN tm_encode_OMA_LPPe_LocationSource {
   struct {
      unsigned agnssPresent : 1;
      unsigned otdoaPresent : 1;
      unsigned eotdPresent : 1;
      unsigned otdoaUTRAPresent : 1;
      unsigned ecidLTEPresent : 1;
      unsigned ecidGSMPresent : 1;
      unsigned ecidUTRAPresent : 1;
      unsigned wlanAPPresent : 1;
      unsigned srnPresent : 1;
      unsigned sensorsPresent : 1;
   } m;
   OSRTDList extElem1;
} tm_encode_OMA_LPPe_LocationSource;

EXTERN int asn1PE_tm_encode_OMA_LPPe_LocationSource (OSCTXT* pctxt, tm_encode_OMA_LPPe_LocationSource* pvalue);

EXTERN void asn1Free_tm_encode_OMA_LPPe_LocationSource (OSCTXT *pctxt, 
   tm_encode_OMA_LPPe_LocationSource* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_CommonIEsProvideLocationInformation              */
/*                                                            */
/**************************************************************/
/*
 ASN1STOP
 ASN1START

OMA-LPPe-CommonIEsProvideLocationInformation ::= SEQUENCE {
   highAccuracy3Dposition [0] OMA-LPPe-HighAccuracy3Dposition OPTIONAL,
   localPosition [1] OMA-LPPe-LocalPosition OPTIONAL,
   highAccuracy3Dvelocity [2] OMA-LPPe-HighAccuracy3Dvelocity OPTIONAL,
   iP-Address-List [3] OMA-LPPe-IP-Address-List OPTIONAL,
   locationInformationContainer [4] OMA-LPPe-LocationInformationContainer OPTIONAL,
   providePeriodicLocInfoWithUpdate [5] OMA-LPPe-ProvidePeriodicLocInfowithUpdate OPTIONAL,
   relativeLocationChangeList [6] OMA-LPPe-RelativeLocationChangeList OPTIONAL,
   scheduledLocation [7] OMA-LPPe-ScheduledLocation OPTIONAL,
   accessTypes [8] OMA-LPPe-AccessTypes OPTIONAL,
   segmentedLITransfer [9] OMA-LPPe-SegmentedLITransfer OPTIONAL,
   locationInformationTimeStamp [10] OMA-LPPe-TimeStamp OPTIONAL,
   ...,
   locationSource [11] OMA-LPPe-LocationSource OPTIONAL
}
*/
typedef struct EXTERN tm_encode_OMA_LPPe_CommonIEsProvideLocationInformation {
   struct {
      unsigned highAccuracy3DpositionPresent : 1;
      unsigned localPositionPresent : 1;
      unsigned highAccuracy3DvelocityPresent : 1;
      unsigned iP_Address_ListPresent : 1;
      unsigned locationInformationContainerPresent : 1;
      unsigned providePeriodicLocInfoWithUpdatePresent : 1;
      unsigned relativeLocationChangeListPresent : 1;
      unsigned scheduledLocationPresent : 1;
      unsigned accessTypesPresent : 1;
      unsigned segmentedLITransferPresent : 1;
      unsigned locationInformationTimeStampPresent : 1;
      unsigned locationSourcePresent : 1;
   } m;
   tm_encode_OMA_LPPe_HighAccuracy3Dposition highAccuracy3Dposition;
   tm_encode_OMA_LPPe_LocalPosition localPosition;
   tm_encode_OMA_LPPe_HighAccuracy3Dvelocity highAccuracy3Dvelocity;
   tm_encode_OMA_LPPe_IP_Address_List iP_Address_List;
   tm_encode_OMA_LPPe_LocationInformationContainer locationInformationContainer;
   tm_encode_OMA_LPPe_ProvidePeriodicLocInfowithUpdate providePeriodicLocInfoWithUpdate;
   tm_encode_OMA_LPPe_RelativeLocationChangeList relativeLocationChangeList;
   tm_encode_OMA_LPPe_ScheduledLocation scheduledLocation;
   tm_encode_OMA_LPPe_AccessTypes accessTypes;
   tm_encode_OMA_LPPe_SegmentedLITransfer segmentedLITransfer;
   tm_encode_OMA_LPPe_TimeStamp locationInformationTimeStamp;
   tm_encode_OMA_LPPe_LocationSource locationSource;
   OSRTDList extElem1;
} tm_encode_OMA_LPPe_CommonIEsProvideLocationInformation;

EXTERN int asn1PE_tm_encode_OMA_LPPe_CommonIEsProvideLocationInformation (OSCTXT* pctxt, tm_encode_OMA_LPPe_CommonIEsProvideLocationInformation* pvalue);

EXTERN void asn1Free_tm_encode_OMA_LPPe_CommonIEsProvideLocationInformation (OSCTXT *pctxt, 
   tm_encode_OMA_LPPe_CommonIEsProvideLocationInformation* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_WLAN_AP_LocationInformation_apSSID               */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'OMA-LPPe-WLAN-AP-LocationInformation'
*/
typedef struct EXTERN tm_encode_OMA_LPPe_WLAN_AP_LocationInformation_apSSID {
   OSUINT32 numocts;
   OSOCTET data[32];
} tm_encode_OMA_LPPe_WLAN_AP_LocationInformation_apSSID;

EXTERN int asn1PE_tm_encode_OMA_LPPe_WLAN_AP_LocationInformation_apSSID (OSCTXT* pctxt, tm_encode_OMA_LPPe_WLAN_AP_LocationInformation_apSSID* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_WLAN_AP_Type                                     */
/*                                                            */
/**************************************************************/
/*
 ASN1STOP
 ASN1START

OMA-LPPe-WLAN-AP-Type ::= ENUMERATED { ieee802-11a(0), ieee802-11b(1), ieee802-11g(2), ieee802-11n(3), ..., ieee802-11ac(4), ieee802-11ad(5) }
*/
typedef enum {
   tm_encode_OMA_LPPe_WLAN_AP_Type_ieee802_11a = 0,
   tm_encode_OMA_LPPe_WLAN_AP_Type_ieee802_11b = 1,
   tm_encode_OMA_LPPe_WLAN_AP_Type_ieee802_11g = 2,
   tm_encode_OMA_LPPe_WLAN_AP_Type_ieee802_11n = 3
} tm_encode_OMA_LPPe_WLAN_AP_Type_Root;

typedef enum {
   tm_encode_OMA_LPPe_WLAN_AP_Type_ieee802_11ac = 4,
   tm_encode_OMA_LPPe_WLAN_AP_Type_ieee802_11ad = 5
} tm_encode_OMA_LPPe_WLAN_AP_Type_Ext;

typedef OSUINT32 tm_encode_OMA_LPPe_WLAN_AP_Type;

EXTERN int asn1PE_tm_encode_OMA_LPPe_WLAN_AP_Type (OSCTXT* pctxt, tm_encode_OMA_LPPe_WLAN_AP_Type value);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_WLAN_AP_PHY_Type                                 */
/*                                                            */
/**************************************************************/
/*
OMA-LPPe-WLAN-AP-PHY-Type ::= ENUMERATED { unknown(0), any(1), fhss(2), dsss(3), irbaseband(4), ofdm(5), hrdsss(6), erp(7), ht(8), ihv(9), ... }
*/
typedef enum {
   tm_encode_OMA_LPPe_WLAN_AP_PHY_Type_unknown = 0,
   tm_encode_OMA_LPPe_WLAN_AP_PHY_Type_any = 1,
   tm_encode_OMA_LPPe_WLAN_AP_PHY_Type_fhss = 2,
   tm_encode_OMA_LPPe_WLAN_AP_PHY_Type_dsss = 3,
   tm_encode_OMA_LPPe_WLAN_AP_PHY_Type_irbaseband = 4,
   tm_encode_OMA_LPPe_WLAN_AP_PHY_Type_ofdm = 5,
   tm_encode_OMA_LPPe_WLAN_AP_PHY_Type_hrdsss = 6,
   tm_encode_OMA_LPPe_WLAN_AP_PHY_Type_erp = 7,
   tm_encode_OMA_LPPe_WLAN_AP_PHY_Type_ht = 8,
   tm_encode_OMA_LPPe_WLAN_AP_PHY_Type_ihv = 9
} tm_encode_OMA_LPPe_WLAN_AP_PHY_Type_Root;

typedef OSUINT32 tm_encode_OMA_LPPe_WLAN_AP_PHY_Type;

EXTERN int asn1PE_tm_encode_OMA_LPPe_WLAN_AP_PHY_Type (OSCTXT* pctxt, tm_encode_OMA_LPPe_WLAN_AP_PHY_Type value);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_WLAN_RTDUnits                                    */
/*                                                            */
/**************************************************************/
/*
OMA-LPPe-WLAN-RTDUnits ::= ENUMERATED { microseconds(0), hundredsofnanoseconds(1), tensofnanoseconds(2), nanoseconds(3), tenthsofnanoseconds(4), ... }
*/
typedef enum {
   tm_encode_OMA_LPPe_WLAN_RTDUnits_microseconds = 0,
   tm_encode_OMA_LPPe_WLAN_RTDUnits_hundredsofnanoseconds = 1,
   tm_encode_OMA_LPPe_WLAN_RTDUnits_tensofnanoseconds = 2,
   tm_encode_OMA_LPPe_WLAN_RTDUnits_nanoseconds = 3,
   tm_encode_OMA_LPPe_WLAN_RTDUnits_tenthsofnanoseconds = 4
} tm_encode_OMA_LPPe_WLAN_RTDUnits_Root;

typedef OSUINT32 tm_encode_OMA_LPPe_WLAN_RTDUnits;

EXTERN int asn1PE_tm_encode_OMA_LPPe_WLAN_RTDUnits (OSCTXT* pctxt, tm_encode_OMA_LPPe_WLAN_RTDUnits value);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_WLAN_RTD                                         */
/*                                                            */
/**************************************************************/
/*
OMA-LPPe-WLAN-RTD ::= SEQUENCE {
   rTDValue [0] INTEGER (0..16777215),
   rTDUnits [1] OMA-LPPe-WLAN-RTDUnits,
   rTDAccuracy [2] INTEGER (0..255) OPTIONAL,
   ...
}
*/
typedef struct EXTERN tm_encode_OMA_LPPe_WLAN_RTD {
   struct {
      unsigned rTDAccuracyPresent : 1;
   } m;
   OSUINT32 rTDValue;
   tm_encode_OMA_LPPe_WLAN_RTDUnits rTDUnits;
   OSUINT8 rTDAccuracy;
   OSRTDList extElem1;
} tm_encode_OMA_LPPe_WLAN_RTD;

EXTERN int asn1PE_tm_encode_OMA_LPPe_WLAN_RTD (OSCTXT* pctxt, tm_encode_OMA_LPPe_WLAN_RTD* pvalue);

EXTERN void asn1Free_tm_encode_OMA_LPPe_WLAN_RTD (OSCTXT *pctxt, 
   tm_encode_OMA_LPPe_WLAN_RTD* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_WLAN_LocationDataLCI_latitude                    */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'OMA-LPPe-WLAN-LocationDataLCI'
*/
typedef struct tm_encode_OMA_LPPe_WLAN_LocationDataLCI_latitude {
   OSUINT32 numbits;
   OSOCTET data[5];
} tm_encode_OMA_LPPe_WLAN_LocationDataLCI_latitude;

EXTERN int asn1PE_tm_encode_OMA_LPPe_WLAN_LocationDataLCI_latitude (OSCTXT* pctxt, tm_encode_OMA_LPPe_WLAN_LocationDataLCI_latitude* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_WLAN_LocationDataLCI_longitude                   */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'OMA-LPPe-WLAN-LocationDataLCI'
*/
typedef struct tm_encode_OMA_LPPe_WLAN_LocationDataLCI_longitude {
   OSUINT32 numbits;
   OSOCTET data[5];
} tm_encode_OMA_LPPe_WLAN_LocationDataLCI_longitude;

EXTERN int asn1PE_tm_encode_OMA_LPPe_WLAN_LocationDataLCI_longitude (OSCTXT* pctxt, tm_encode_OMA_LPPe_WLAN_LocationDataLCI_longitude* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_WLAN_LocationDataLCI                             */
/*                                                            */
/**************************************************************/
/*
OMA-LPPe-WLAN-LocationDataLCI ::= SEQUENCE {
   latitudeResolution [0] BIT STRING  (SIZE (6)),
   latitude [1] BIT STRING  (SIZE (34)),
   longitudeResolution [2] BIT STRING  (SIZE (6)),
   longitude [3] BIT STRING  (SIZE (34)),
   altitudeType [4] BIT STRING  (SIZE (4)),
   altitudeResolution [5] BIT STRING  (SIZE (6)),
   altitude [6] BIT STRING  (SIZE (30)),
   datum [7] BIT STRING  (SIZE (8)),
   ...
}
*/
typedef struct EXTERN tm_encode_OMA_LPPe_WLAN_LocationDataLCI {
   ASN1BitStr32 latitudeResolution;
   tm_encode_OMA_LPPe_WLAN_LocationDataLCI_latitude latitude;
   ASN1BitStr32 longitudeResolution;
   tm_encode_OMA_LPPe_WLAN_LocationDataLCI_longitude longitude;
   ASN1BitStr32 altitudeType;
   ASN1BitStr32 altitudeResolution;
   ASN1BitStr32 altitude;
   ASN1BitStr32 datum;
   OSRTDList extElem1;
} tm_encode_OMA_LPPe_WLAN_LocationDataLCI;

EXTERN int asn1PE_tm_encode_OMA_LPPe_WLAN_LocationDataLCI (OSCTXT* pctxt, tm_encode_OMA_LPPe_WLAN_LocationDataLCI* pvalue);

EXTERN void asn1Free_tm_encode_OMA_LPPe_WLAN_LocationDataLCI (OSCTXT *pctxt, 
   tm_encode_OMA_LPPe_WLAN_LocationDataLCI* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_WLAN_ReportedLocation                            */
/*                                                            */
/**************************************************************/
/*
OMA-LPPe-WLAN-ReportedLocation ::= SEQUENCE {
   locationDataLCI [0] OMA-LPPe-WLAN-LocationDataLCI OPTIONAL,
   ...
}
*/
typedef struct EXTERN tm_encode_OMA_LPPe_WLAN_ReportedLocation {
   struct {
      unsigned locationDataLCIPresent : 1;
   } m;
   tm_encode_OMA_LPPe_WLAN_LocationDataLCI locationDataLCI;
   OSRTDList extElem1;
} tm_encode_OMA_LPPe_WLAN_ReportedLocation;

EXTERN int asn1PE_tm_encode_OMA_LPPe_WLAN_ReportedLocation (OSCTXT* pctxt, tm_encode_OMA_LPPe_WLAN_ReportedLocation* pvalue);

EXTERN void asn1Free_tm_encode_OMA_LPPe_WLAN_ReportedLocation (OSCTXT *pctxt, 
   tm_encode_OMA_LPPe_WLAN_ReportedLocation* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_WLAN_AP_LocationInformation_ueMacAddress         */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'OMA-LPPe-WLAN-AP-LocationInformation'
*/
typedef struct tm_encode_OMA_LPPe_WLAN_AP_LocationInformation_ueMacAddress {
   OSUINT32 numbits;
   OSOCTET data[6];
} tm_encode_OMA_LPPe_WLAN_AP_LocationInformation_ueMacAddress;

EXTERN int asn1PE_tm_encode_OMA_LPPe_WLAN_AP_LocationInformation_ueMacAddress (OSCTXT* pctxt, tm_encode_OMA_LPPe_WLAN_AP_LocationInformation_ueMacAddress* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_WLAN_AP_LocationInformation                      */
/*                                                            */
/**************************************************************/
/*
 ASN1STOP
 ASN1START

OMA-LPPe-WLAN-AP-LocationInformation ::= SEQUENCE {
   apMACAddress [0] OMA-LPPe-WLAN-AP-ID,
   apSSID [1] OCTET STRING (SIZE (1..32)) OPTIONAL,
   apSignaltoNoise [2] INTEGER (-127..128) OPTIONAL,
   apDeviceType [3] OMA-LPPe-WLAN-AP-Type OPTIONAL,
   apPHYtype [4] OMA-LPPe-WLAN-AP-PHY-Type OPTIONAL,
   apSignalStrength [5] INTEGER (-127..128) OPTIONAL,
   apChannelFrequency [6] INTEGER (0..256) OPTIONAL,
   apRoundTripDelay [7] OMA-LPPe-WLAN-RTD OPTIONAL,
   ueTransmitPower [8] INTEGER (-127..128) OPTIONAL,
   ueAntennaGain [9] INTEGER (-127..128) OPTIONAL,
   apReportedLocation [10] OMA-LPPe-WLAN-ReportedLocation OPTIONAL,
   ...,
   apTransmitPower [11] INTEGER (-127..128) OPTIONAL,
   apAntennaGain [12] INTEGER (-127..128) OPTIONAL,
   ueSignaltoNoise [13] INTEGER (-127..128) OPTIONAL,
   ueSignalStrength [14] INTEGER (-127..128) OPTIONAL,
   apSignalStrengthDelta [15] INTEGER (0..1) OPTIONAL,
   ueSignalStrengthDelta [16] INTEGER (0..1) OPTIONAL,
   apSignaltoNoiseDelta [17] INTEGER (0..1) OPTIONAL,
   ueSignaltoNoiseDelta [18] INTEGER (0..1) OPTIONAL,
   operatingClass [19] INTEGER (0..255) OPTIONAL,
   ueMacAddress [20] BIT STRING  (SIZE (48)) OPTIONAL
}
*/
typedef struct EXTERN tm_encode_OMA_LPPe_WLAN_AP_LocationInformation {
   struct {
      unsigned apSSIDPresent : 1;
      unsigned apSignaltoNoisePresent : 1;
      unsigned apDeviceTypePresent : 1;
      unsigned apPHYtypePresent : 1;
      unsigned apSignalStrengthPresent : 1;
      unsigned apChannelFrequencyPresent : 1;
      unsigned apRoundTripDelayPresent : 1;
      unsigned ueTransmitPowerPresent : 1;
      unsigned ueAntennaGainPresent : 1;
      unsigned apReportedLocationPresent : 1;
      unsigned apTransmitPowerPresent : 1;
      unsigned apAntennaGainPresent : 1;
      unsigned ueSignaltoNoisePresent : 1;
      unsigned ueSignalStrengthPresent : 1;
      unsigned apSignalStrengthDeltaPresent : 1;
      unsigned ueSignalStrengthDeltaPresent : 1;
      unsigned apSignaltoNoiseDeltaPresent : 1;
      unsigned ueSignaltoNoiseDeltaPresent : 1;
      unsigned operatingClassPresent : 1;
      unsigned ueMacAddressPresent : 1;
   } m;
   tm_encode_OMA_LPPe_WLAN_AP_ID apMACAddress;
   tm_encode_OMA_LPPe_WLAN_AP_LocationInformation_apSSID apSSID;
   OSINT16 apSignaltoNoise;
   tm_encode_OMA_LPPe_WLAN_AP_Type apDeviceType;
   tm_encode_OMA_LPPe_WLAN_AP_PHY_Type apPHYtype;
   OSINT16 apSignalStrength;
   OSUINT16 apChannelFrequency;
   tm_encode_OMA_LPPe_WLAN_RTD apRoundTripDelay;
   OSINT16 ueTransmitPower;
   OSINT16 ueAntennaGain;
   tm_encode_OMA_LPPe_WLAN_ReportedLocation apReportedLocation;
   OSINT16 apTransmitPower;
   OSINT16 apAntennaGain;
   OSINT16 ueSignaltoNoise;
   OSINT16 ueSignalStrength;
   OSUINT8 apSignalStrengthDelta;
   OSUINT8 ueSignalStrengthDelta;
   OSUINT8 apSignaltoNoiseDelta;
   OSUINT8 ueSignaltoNoiseDelta;
   OSUINT8 operatingClass;
   tm_encode_OMA_LPPe_WLAN_AP_LocationInformation_ueMacAddress ueMacAddress;
   OSRTDList extElem1;
} tm_encode_OMA_LPPe_WLAN_AP_LocationInformation;

EXTERN int asn1PE_tm_encode_OMA_LPPe_WLAN_AP_LocationInformation (OSCTXT* pctxt, tm_encode_OMA_LPPe_WLAN_AP_LocationInformation* pvalue);

EXTERN void asn1Free_tm_encode_OMA_LPPe_WLAN_AP_LocationInformation (OSCTXT *pctxt, 
   tm_encode_OMA_LPPe_WLAN_AP_LocationInformation* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_WLAN_AP_LocationInformationList                  */
/*                                                            */
/**************************************************************/
/*
OMA-LPPe-WLAN-AP-LocationInformationList ::= SEQUENCE {
   wlan-AP-LocationInformation [0] OMA-LPPe-WLAN-AP-LocationInformation,
   relativeTimeStamp [1] INTEGER (0..65535) OPTIONAL,
   servingFlag [2] BOOLEAN,
   ...
}
*/
typedef struct EXTERN tm_encode_OMA_LPPe_WLAN_AP_LocationInformationList {
   struct {
      unsigned relativeTimeStampPresent : 1;
   } m;
   tm_encode_OMA_LPPe_WLAN_AP_LocationInformation wlan_AP_LocationInformation;
   OSUINT16 relativeTimeStamp;
   OSBOOL servingFlag;
   OSRTDList extElem1;
} tm_encode_OMA_LPPe_WLAN_AP_LocationInformationList;

EXTERN int asn1PE_tm_encode_OMA_LPPe_WLAN_AP_LocationInformationList (OSCTXT* pctxt, tm_encode_OMA_LPPe_WLAN_AP_LocationInformationList* pvalue);

EXTERN void asn1Free_tm_encode_OMA_LPPe_WLAN_AP_LocationInformationList (OSCTXT *pctxt, 
   tm_encode_OMA_LPPe_WLAN_AP_LocationInformationList* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_WLAN_AP_ProvideLocationInformation_wlan_AP_Comb  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'OMA-LPPe-WLAN-AP-ProvideLocationInformation'
*/
typedef struct EXTERN tm_encode_OMA_LPPe_WLAN_AP_ProvideLocationInformation_wlan_AP_CombinedLocationInformation {
   OSUINT32 n;
   tm_encode_OMA_LPPe_WLAN_AP_LocationInformationList *elem;
} tm_encode_OMA_LPPe_WLAN_AP_ProvideLocationInformation_wlan_AP_CombinedLocationInformation;

EXTERN int asn1PE_tm_encode_OMA_LPPe_WLAN_AP_ProvideLocationInformation_wlan_AP_CombinedLocationInformation (OSCTXT* pctxt, tm_encode_OMA_LPPe_WLAN_AP_ProvideLocationInformation_wlan_AP_CombinedLocationInformation* pvalue);

EXTERN void asn1Free_tm_encode_OMA_LPPe_WLAN_AP_ProvideLocationInformation_wlan_AP_CombinedLocationInformation (OSCTXT *pctxt, 
   tm_encode_OMA_LPPe_WLAN_AP_ProvideLocationInformation_wlan_AP_CombinedLocationInformation* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_WLAN_AP_LocationServerErrorCauses_cause          */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'OMA-LPPe-WLAN-AP-LocationServerErrorCauses'
*/
typedef enum {
   tm_encode_OMA_LPPe_WLAN_AP_LocationServerErrorCauses_cause_undefined = 0,
   tm_encode_OMA_LPPe_WLAN_AP_LocationServerErrorCauses_cause_requestedADNotAvailable = 1,
   tm_encode_OMA_LPPe_WLAN_AP_LocationServerErrorCauses_cause_notAllrequestedADAvailable = 2
} tm_encode_OMA_LPPe_WLAN_AP_LocationServerErrorCauses_cause_Root;

typedef OSUINT32 tm_encode_OMA_LPPe_WLAN_AP_LocationServerErrorCauses_cause;

EXTERN int asn1PE_tm_encode_OMA_LPPe_WLAN_AP_LocationServerErrorCauses_cause (OSCTXT* pctxt, tm_encode_OMA_LPPe_WLAN_AP_LocationServerErrorCauses_cause value);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_WLAN_AP_LocationServerErrorCauses                */
/*                                                            */
/**************************************************************/
/*
 ASN1STOP
 ASN1START

OMA-LPPe-WLAN-AP-LocationServerErrorCauses ::= SEQUENCE {
   cause [0] ENUMERATED { undefined(0), requestedADNotAvailable(1), notAllrequestedADAvailable(2), ... },
   apMandatoryDataUnavailable [1] NULL OPTIONAL,
   apLocationsUnavailable [2] NULL OPTIONAL,
   apLocationReliabilityUnavailable [3] NULL OPTIONAL,
   apTransmitPowerUnavailable [4] NULL OPTIONAL,
   apAntennaGainUnavailable [5] NULL OPTIONAL,
   apCoverageAreaUnavailable [6] NULL OPTIONAL,
   nonservingADUnavailable [7] NULL OPTIONAL,
   ...,
   apTPNotAvailable [8] NULL OPTIONAL,
   apAGNotAvailable [9] NULL OPTIONAL,
   ueSNNotAvailable [10] NULL OPTIONAL,
   ueRSSINotAvailable [11] NULL OPTIONAL,
   ocNotAvailable [12] NULL OPTIONAL
}
*/
typedef struct EXTERN tm_encode_OMA_LPPe_WLAN_AP_LocationServerErrorCauses {
   struct {
      unsigned apMandatoryDataUnavailablePresent : 1;
      unsigned apLocationsUnavailablePresent : 1;
      unsigned apLocationReliabilityUnavailablePresent : 1;
      unsigned apTransmitPowerUnavailablePresent : 1;
      unsigned apAntennaGainUnavailablePresent : 1;
      unsigned apCoverageAreaUnavailablePresent : 1;
      unsigned nonservingADUnavailablePresent : 1;
      unsigned apTPNotAvailablePresent : 1;
      unsigned apAGNotAvailablePresent : 1;
      unsigned ueSNNotAvailablePresent : 1;
      unsigned ueRSSINotAvailablePresent : 1;
      unsigned ocNotAvailablePresent : 1;
   } m;
   tm_encode_OMA_LPPe_WLAN_AP_LocationServerErrorCauses_cause cause;
   OSRTDList extElem1;
} tm_encode_OMA_LPPe_WLAN_AP_LocationServerErrorCauses;

EXTERN int asn1PE_tm_encode_OMA_LPPe_WLAN_AP_LocationServerErrorCauses (OSCTXT* pctxt, tm_encode_OMA_LPPe_WLAN_AP_LocationServerErrorCauses* pvalue);

EXTERN void asn1Free_tm_encode_OMA_LPPe_WLAN_AP_LocationServerErrorCauses (OSCTXT *pctxt, 
   tm_encode_OMA_LPPe_WLAN_AP_LocationServerErrorCauses* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_WLAN_AP_TargetDeviceErrorCauses_cause            */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'OMA-LPPe-WLAN-AP-TargetDeviceErrorCauses'
*/
typedef enum {
   tm_encode_OMA_LPPe_WLAN_AP_TargetDeviceErrorCauses_cause_undefined = 0,
   tm_encode_OMA_LPPe_WLAN_AP_TargetDeviceErrorCauses_cause_requestedMeasurementsNotAvailable = 1,
   tm_encode_OMA_LPPe_WLAN_AP_TargetDeviceErrorCauses_cause_notAllrequestedMeasurementsPossible = 2
} tm_encode_OMA_LPPe_WLAN_AP_TargetDeviceErrorCauses_cause_Root;

typedef OSUINT32 tm_encode_OMA_LPPe_WLAN_AP_TargetDeviceErrorCauses_cause;

EXTERN int asn1PE_tm_encode_OMA_LPPe_WLAN_AP_TargetDeviceErrorCauses_cause (OSCTXT* pctxt, tm_encode_OMA_LPPe_WLAN_AP_TargetDeviceErrorCauses_cause value);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_WLAN_AP_TargetDeviceErrorCauses                  */
/*                                                            */
/**************************************************************/
/*
 ASN1STOP
 ASN1START

OMA-LPPe-WLAN-AP-TargetDeviceErrorCauses ::= SEQUENCE {
   cause [0] ENUMERATED { undefined(0), requestedMeasurementsNotAvailable(1), notAllrequestedMeasurementsPossible(2), ... },
   apSSIDnotAvailable [1] NULL OPTIONAL,
   apSNMeasurementNotPossible [2] NULL OPTIONAL,
   apDevTypeNotAvailable [3] NULL OPTIONAL,
   apPhyTypeNotAvailable [4] NULL OPTIONAL,
   apRSSIMeasurementNotPossible [5] NULL OPTIONAL,
   apChanFreqNotAvailable [6] NULL OPTIONAL,
   apRTDMeasurementNotPossible [7] NULL OPTIONAL,
   ueTPNotAvailable [8] NULL OPTIONAL,
   ueAGNotAvailable [9] NULL OPTIONAL,
   apRecLocNotAvailable [10] NULL OPTIONAL,
   non-servingMeasurementsNotAvailable [11] NULL OPTIONAL,
   historicMeasurementsNotAvailable [12] NULL OPTIONAL,
   ...,
   apTPNotAvailable [13] NULL OPTIONAL,
   apAGNotAvailable [14] NULL OPTIONAL,
   ueSNNotAvailable [15] NULL OPTIONAL,
   ueRSSINotAvailable [16] NULL OPTIONAL,
   ocNotAvailable [17] NULL OPTIONAL,
   ueMACAddressNotAvailable [18] NULL OPTIONAL
}
*/
typedef struct EXTERN tm_encode_OMA_LPPe_WLAN_AP_TargetDeviceErrorCauses {
   struct {
      unsigned apSSIDnotAvailablePresent : 1;
      unsigned apSNMeasurementNotPossiblePresent : 1;
      unsigned apDevTypeNotAvailablePresent : 1;
      unsigned apPhyTypeNotAvailablePresent : 1;
      unsigned apRSSIMeasurementNotPossiblePresent : 1;
      unsigned apChanFreqNotAvailablePresent : 1;
      unsigned apRTDMeasurementNotPossiblePresent : 1;
      unsigned ueTPNotAvailablePresent : 1;
      unsigned ueAGNotAvailablePresent : 1;
      unsigned apRecLocNotAvailablePresent : 1;
      unsigned non_servingMeasurementsNotAvailablePresent : 1;
      unsigned historicMeasurementsNotAvailablePresent : 1;
      unsigned apTPNotAvailablePresent : 1;
      unsigned apAGNotAvailablePresent : 1;
      unsigned ueSNNotAvailablePresent : 1;
      unsigned ueRSSINotAvailablePresent : 1;
      unsigned ocNotAvailablePresent : 1;
      unsigned ueMACAddressNotAvailablePresent : 1;
   } m;
   tm_encode_OMA_LPPe_WLAN_AP_TargetDeviceErrorCauses_cause cause;
   OSRTDList extElem1;
} tm_encode_OMA_LPPe_WLAN_AP_TargetDeviceErrorCauses;

EXTERN int asn1PE_tm_encode_OMA_LPPe_WLAN_AP_TargetDeviceErrorCauses (OSCTXT* pctxt, tm_encode_OMA_LPPe_WLAN_AP_TargetDeviceErrorCauses* pvalue);

EXTERN void asn1Free_tm_encode_OMA_LPPe_WLAN_AP_TargetDeviceErrorCauses (OSCTXT *pctxt, 
   tm_encode_OMA_LPPe_WLAN_AP_TargetDeviceErrorCauses* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_WLAN_AP_Error                                    */
/*                                                            */
/**************************************************************/
/*
 ASN1STOP
 ASN1START

OMA-LPPe-WLAN-AP-Error ::= CHOICE {
   locationServerErrorCauses [0] OMA-LPPe-WLAN-AP-LocationServerErrorCauses,
   targetDeviceErrorCauses [1] OMA-LPPe-WLAN-AP-TargetDeviceErrorCauses,
   ...
}
*/
/* Choice tag constants */

#define T_tm_encode_OMA_LPPe_WLAN_AP_Error_locationServerErrorCauses 1
#define T_tm_encode_OMA_LPPe_WLAN_AP_Error_targetDeviceErrorCauses 2
#define T_tm_encode_OMA_LPPe_WLAN_AP_Error_extElem1 3

typedef struct EXTERN tm_encode_OMA_LPPe_WLAN_AP_Error {
   OSUINT32 t;
   union {
      /* t = 1 */
      tm_encode_OMA_LPPe_WLAN_AP_LocationServerErrorCauses *locationServerErrorCauses;
      /* t = 2 */
      tm_encode_OMA_LPPe_WLAN_AP_TargetDeviceErrorCauses *targetDeviceErrorCauses;
      /* t = 3 */
      ASN1OpenType *extElem1;
   } u;
} tm_encode_OMA_LPPe_WLAN_AP_Error;

EXTERN int asn1PE_tm_encode_OMA_LPPe_WLAN_AP_Error (OSCTXT* pctxt, tm_encode_OMA_LPPe_WLAN_AP_Error* pvalue);

EXTERN void asn1Free_tm_encode_OMA_LPPe_WLAN_AP_Error (OSCTXT *pctxt, 
   tm_encode_OMA_LPPe_WLAN_AP_Error* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_WLAN_AP_ProvideLocationInformation               */
/*                                                            */
/**************************************************************/
/*
 ASN1STOP
 ASN1START

OMA-LPPe-WLAN-AP-ProvideLocationInformation ::= SEQUENCE {
   wlan-AP-CombinedLocationInformation [0] SEQUENCE (SIZE (1..maxWLANAPSize)) OF OMA-LPPe-WLAN-AP-LocationInformationList OPTIONAL,
   wlan-AP-Error [1] OMA-LPPe-WLAN-AP-Error OPTIONAL,
   ...
}
*/
typedef struct EXTERN tm_encode_OMA_LPPe_WLAN_AP_ProvideLocationInformation {
   struct {
      unsigned wlan_AP_CombinedLocationInformationPresent : 1;
      unsigned wlan_AP_ErrorPresent : 1;
   } m;
   tm_encode_OMA_LPPe_WLAN_AP_ProvideLocationInformation_wlan_AP_CombinedLocationInformation wlan_AP_CombinedLocationInformation;
   tm_encode_OMA_LPPe_WLAN_AP_Error wlan_AP_Error;
   OSRTDList extElem1;
} tm_encode_OMA_LPPe_WLAN_AP_ProvideLocationInformation;

EXTERN int asn1PE_tm_encode_OMA_LPPe_WLAN_AP_ProvideLocationInformation (OSCTXT* pctxt, tm_encode_OMA_LPPe_WLAN_AP_ProvideLocationInformation* pvalue);

EXTERN void asn1Free_tm_encode_OMA_LPPe_WLAN_AP_ProvideLocationInformation (OSCTXT *pctxt, 
   tm_encode_OMA_LPPe_WLAN_AP_ProvideLocationInformation* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_ECID_WiMax_ProvideLocationInformation            */
/*                                                            */
/**************************************************************/
/*
 ASN1STOP
 ASN1START

OMA-LPPe-ECID-WiMax-ProvideLocationInformation ::= SEQUENCE {
   ...
}
*/
typedef struct EXTERN tm_encode_OMA_LPPe_ECID_WiMax_ProvideLocationInformation {
   OSRTDList extElem1;
} tm_encode_OMA_LPPe_ECID_WiMax_ProvideLocationInformation;

EXTERN int asn1PE_tm_encode_OMA_LPPe_ECID_WiMax_ProvideLocationInformation (OSCTXT* pctxt, tm_encode_OMA_LPPe_ECID_WiMax_ProvideLocationInformation* pvalue);

EXTERN void asn1Free_tm_encode_OMA_LPPe_ECID_WiMax_ProvideLocationInformation (OSCTXT *pctxt, 
   tm_encode_OMA_LPPe_ECID_WiMax_ProvideLocationInformation* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_Sensor_MotionStateElement_primaryMotionState     */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'OMA-LPPe-Sensor-MotionStateElement'
*/
typedef enum {
   tm_encode_OMA_LPPe_Sensor_MotionStateElement_primaryMotionState_unknown = 0,
   tm_encode_OMA_LPPe_Sensor_MotionStateElement_primaryMotionState_stationary = 1,
   tm_encode_OMA_LPPe_Sensor_MotionStateElement_primaryMotionState_pedestrian = 2,
   tm_encode_OMA_LPPe_Sensor_MotionStateElement_primaryMotionState_running = 3,
   tm_encode_OMA_LPPe_Sensor_MotionStateElement_primaryMotionState_cycling = 4,
   tm_encode_OMA_LPPe_Sensor_MotionStateElement_primaryMotionState_car = 5,
   tm_encode_OMA_LPPe_Sensor_MotionStateElement_primaryMotionState_train = 6,
   tm_encode_OMA_LPPe_Sensor_MotionStateElement_primaryMotionState_aeroplane = 7,
   tm_encode_OMA_LPPe_Sensor_MotionStateElement_primaryMotionState_boat = 8,
   tm_encode_OMA_LPPe_Sensor_MotionStateElement_primaryMotionState_fidgeting = 9
} tm_encode_OMA_LPPe_Sensor_MotionStateElement_primaryMotionState_Root;

typedef OSUINT32 tm_encode_OMA_LPPe_Sensor_MotionStateElement_primaryMotionState;

EXTERN int asn1PE_tm_encode_OMA_LPPe_Sensor_MotionStateElement_primaryMotionState (OSCTXT* pctxt, tm_encode_OMA_LPPe_Sensor_MotionStateElement_primaryMotionState value);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_Sensor_MotionStateElement_secondaryMotionState   */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'OMA-LPPe-Sensor-MotionStateElement'
*/
/* Named bit constants */

#define tm_encode_OMA_LPPe_Sensor_MotionStateElement_secondaryMotionState_tm_encode_stationary            0
#define tm_encode_OMA_LPPe_Sensor_MotionStateElement_secondaryMotionState_tm_encode_pedestrian            1
#define tm_encode_OMA_LPPe_Sensor_MotionStateElement_secondaryMotionState_tm_encode_running               2
#define tm_encode_OMA_LPPe_Sensor_MotionStateElement_secondaryMotionState_tm_encode_cycling               3
#define tm_encode_OMA_LPPe_Sensor_MotionStateElement_secondaryMotionState_tm_encode_car                   4
#define tm_encode_OMA_LPPe_Sensor_MotionStateElement_secondaryMotionState_tm_encode_train                 5
#define tm_encode_OMA_LPPe_Sensor_MotionStateElement_secondaryMotionState_tm_encode_aeroplane             6
#define tm_encode_OMA_LPPe_Sensor_MotionStateElement_secondaryMotionState_tm_encode_boat                  7
#define tm_encode_OMA_LPPe_Sensor_MotionStateElement_secondaryMotionState_tm_encode_fidgeting             8

typedef struct tm_encode_OMA_LPPe_Sensor_MotionStateElement_secondaryMotionState {
   OSUINT32 numbits;
   OSOCTET data[2];
} tm_encode_OMA_LPPe_Sensor_MotionStateElement_secondaryMotionState;

EXTERN int asn1PE_tm_encode_OMA_LPPe_Sensor_MotionStateElement_secondaryMotionState (OSCTXT* pctxt, tm_encode_OMA_LPPe_Sensor_MotionStateElement_secondaryMotionState* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_Sensor_MotionStateElement                        */
/*                                                            */
/**************************************************************/
/*
OMA-LPPe-Sensor-MotionStateElement ::= SEQUENCE {
   primaryMotionState [0] ENUMERATED { unknown(0), stationary(1), pedestrian(2), running(3), cycling(4), car(5), train(6), aeroplane(7), boat(8), fidgeting(9), ... },
   confidence [1] INTEGER (0..99),
   secondaryMotionState [2] BIT STRING  { stationary(0), pedestrian(1), running(2), cycling(3), car(4), train(5), aeroplane(6), boat(7), fidgeting(8) } (SIZE (1..16)) OPTIONAL,
   ...
}
*/
typedef struct EXTERN tm_encode_OMA_LPPe_Sensor_MotionStateElement {
   struct {
      unsigned secondaryMotionStatePresent : 1;
   } m;
   tm_encode_OMA_LPPe_Sensor_MotionStateElement_primaryMotionState primaryMotionState;
   OSUINT8 confidence;
   tm_encode_OMA_LPPe_Sensor_MotionStateElement_secondaryMotionState secondaryMotionState;
   OSRTDList extElem1;
} tm_encode_OMA_LPPe_Sensor_MotionStateElement;

EXTERN int asn1PE_tm_encode_OMA_LPPe_Sensor_MotionStateElement (OSCTXT* pctxt, tm_encode_OMA_LPPe_Sensor_MotionStateElement* pvalue);

EXTERN void asn1Free_tm_encode_OMA_LPPe_Sensor_MotionStateElement (OSCTXT *pctxt, 
   tm_encode_OMA_LPPe_Sensor_MotionStateElement* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_Sensor_MotionStateList                           */
/*                                                            */
/**************************************************************/
/*
 ASN1STOP
 ASN1START

OMA-LPPe-Sensor-MotionStateList ::= SEQUENCE (SIZE (1..8)) OF OMA-LPPe-Sensor-MotionStateElement
*/
typedef struct EXTERN tm_encode_OMA_LPPe_Sensor_MotionStateList {
   OSUINT32 n;
   tm_encode_OMA_LPPe_Sensor_MotionStateElement *elem;
} tm_encode_OMA_LPPe_Sensor_MotionStateList;

EXTERN int asn1PE_tm_encode_OMA_LPPe_Sensor_MotionStateList (OSCTXT* pctxt, tm_encode_OMA_LPPe_Sensor_MotionStateList* pvalue);

EXTERN void asn1Free_tm_encode_OMA_LPPe_Sensor_MotionStateList (OSCTXT *pctxt, 
   tm_encode_OMA_LPPe_Sensor_MotionStateList* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_Sensor_TargetError_motionStateError              */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'OMA-LPPe-Sensor-TargetError'
*/
typedef enum {
   tm_encode_OMA_LPPe_Sensor_TargetError_motionStateError_primaryMotionStateNotAvailable = 0,
   tm_encode_OMA_LPPe_Sensor_TargetError_motionStateError_primaryMotionStateNotSupported = 1
} tm_encode_OMA_LPPe_Sensor_TargetError_motionStateError_Root;

typedef OSUINT32 tm_encode_OMA_LPPe_Sensor_TargetError_motionStateError;

EXTERN int asn1PE_tm_encode_OMA_LPPe_Sensor_TargetError_motionStateError (OSCTXT* pctxt, tm_encode_OMA_LPPe_Sensor_TargetError_motionStateError value);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_Sensor_TargetError_secondaryMotionStateError     */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'OMA-LPPe-Sensor-TargetError'
*/
typedef enum {
   tm_encode_OMA_LPPe_Sensor_TargetError_secondaryMotionStateError_secondaryMotionStateNotAvailable = 0,
   tm_encode_OMA_LPPe_Sensor_TargetError_secondaryMotionStateError_secondaryMotionStateNotSupported = 1
} tm_encode_OMA_LPPe_Sensor_TargetError_secondaryMotionStateError_Root;

typedef OSUINT32 tm_encode_OMA_LPPe_Sensor_TargetError_secondaryMotionStateError;

EXTERN int asn1PE_tm_encode_OMA_LPPe_Sensor_TargetError_secondaryMotionStateError (OSCTXT* pctxt, tm_encode_OMA_LPPe_Sensor_TargetError_secondaryMotionStateError value);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_Sensor_TargetError_atmosphericPressureError      */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'OMA-LPPe-Sensor-TargetError'
*/
typedef enum {
   tm_encode_OMA_LPPe_Sensor_TargetError_atmosphericPressureError_pressureNotAvailable = 0,
   tm_encode_OMA_LPPe_Sensor_TargetError_atmosphericPressureError_pressureNotSupported = 1
} tm_encode_OMA_LPPe_Sensor_TargetError_atmosphericPressureError_Root;

typedef OSUINT32 tm_encode_OMA_LPPe_Sensor_TargetError_atmosphericPressureError;

EXTERN int asn1PE_tm_encode_OMA_LPPe_Sensor_TargetError_atmosphericPressureError (OSCTXT* pctxt, tm_encode_OMA_LPPe_Sensor_TargetError_atmosphericPressureError value);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_Sensor_TargetError                               */
/*                                                            */
/**************************************************************/
/*
OMA-LPPe-Sensor-TargetError ::= SEQUENCE {
   motionStateError [0] ENUMERATED { primaryMotionStateNotAvailable(0), primaryMotionStateNotSupported(1), ... } OPTIONAL,
   secondaryMotionStateError [1] ENUMERATED { secondaryMotionStateNotAvailable(0), secondaryMotionStateNotSupported(1), ... } OPTIONAL,
   ...,
   atmosphericPressureError [2] ENUMERATED { pressureNotAvailable(0), pressureNotSupported(1), ... } OPTIONAL
}
*/
typedef struct EXTERN tm_encode_OMA_LPPe_Sensor_TargetError {
   struct {
      unsigned motionStateErrorPresent : 1;
      unsigned secondaryMotionStateErrorPresent : 1;
      unsigned atmosphericPressureErrorPresent : 1;
   } m;
   tm_encode_OMA_LPPe_Sensor_TargetError_motionStateError motionStateError;
   tm_encode_OMA_LPPe_Sensor_TargetError_secondaryMotionStateError secondaryMotionStateError;
   tm_encode_OMA_LPPe_Sensor_TargetError_atmosphericPressureError atmosphericPressureError;
   OSRTDList extElem1;
} tm_encode_OMA_LPPe_Sensor_TargetError;

EXTERN int asn1PE_tm_encode_OMA_LPPe_Sensor_TargetError (OSCTXT* pctxt, tm_encode_OMA_LPPe_Sensor_TargetError* pvalue);

EXTERN void asn1Free_tm_encode_OMA_LPPe_Sensor_TargetError (OSCTXT *pctxt, 
   tm_encode_OMA_LPPe_Sensor_TargetError* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_Sensor_Error                                     */
/*                                                            */
/**************************************************************/
/*
 ASN1STOP
 ASN1START

OMA-LPPe-Sensor-Error ::= CHOICE {
   targetError [0] OMA-LPPe-Sensor-TargetError,
   ...
}
*/
/* Choice tag constants */

#define T_tm_encode_OMA_LPPe_Sensor_Error_targetError 1
#define T_tm_encode_OMA_LPPe_Sensor_Error_extElem1 2

typedef struct EXTERN tm_encode_OMA_LPPe_Sensor_Error {
   OSUINT32 t;
   union {
      /* t = 1 */
      tm_encode_OMA_LPPe_Sensor_TargetError *targetError;
      /* t = 2 */
      ASN1OpenType *extElem1;
   } u;
} tm_encode_OMA_LPPe_Sensor_Error;

EXTERN int asn1PE_tm_encode_OMA_LPPe_Sensor_Error (OSCTXT* pctxt, tm_encode_OMA_LPPe_Sensor_Error* pvalue);

EXTERN void asn1Free_tm_encode_OMA_LPPe_Sensor_Error (OSCTXT *pctxt, 
   tm_encode_OMA_LPPe_Sensor_Error* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_PressureMeasurement_uncertainty                  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'OMA-LPPe-PressureMeasurement'
*/
typedef struct EXTERN tm_encode_OMA_LPPe_PressureMeasurement_uncertainty {
   OSUINT16 range;
   OSUINT8 confidence;
} tm_encode_OMA_LPPe_PressureMeasurement_uncertainty;

EXTERN int asn1PE_tm_encode_OMA_LPPe_PressureMeasurement_uncertainty (OSCTXT* pctxt, tm_encode_OMA_LPPe_PressureMeasurement_uncertainty* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_PressureMeasurement                              */
/*                                                            */
/**************************************************************/
/*
 ASN1STOP
 ASN1START

OMA-LPPe-PressureMeasurement ::= SEQUENCE {
   sensorMeasurement [0] INTEGER (30000..115000),
   adjustment [1] INTEGER (-5000..5000) OPTIONAL,
   uncertainty [2] SEQUENCE {
      range [0] INTEGER (0..1000),
      confidence [1] INTEGER (1..100)
   } OPTIONAL,
   temperature [3] INTEGER (-100..150) OPTIONAL,
   ...
}
*/
typedef struct EXTERN tm_encode_OMA_LPPe_PressureMeasurement {
   struct {
      unsigned adjustmentPresent : 1;
      unsigned uncertaintyPresent : 1;
      unsigned temperaturePresent : 1;
   } m;
   OSUINT32 sensorMeasurement;
   OSINT16 adjustment;
   tm_encode_OMA_LPPe_PressureMeasurement_uncertainty uncertainty;
   OSINT16 temperature;
   OSRTDList extElem1;
} tm_encode_OMA_LPPe_PressureMeasurement;

EXTERN int asn1PE_tm_encode_OMA_LPPe_PressureMeasurement (OSCTXT* pctxt, tm_encode_OMA_LPPe_PressureMeasurement* pvalue);

EXTERN void asn1Free_tm_encode_OMA_LPPe_PressureMeasurement (OSCTXT *pctxt, 
   tm_encode_OMA_LPPe_PressureMeasurement* pvalue);

/**************************************************************/
/*                                                            */
/*  PressureStats                                             */
/*                                                            */
/**************************************************************/
/*
PressureStats ::= SEQUENCE {
   sensorMeanPressure [0] INTEGER (30000..115000),
   sensorStddevPressure [1] INTEGER (0..2000) OPTIONAL,
   duration [2] INTEGER (5..40),
   ...
}
*/
typedef struct EXTERN tm_encode_PressureStats {
   struct {
      unsigned sensorStddevPressurePresent : 1;
   } m;
   OSUINT32 sensorMeanPressure;
   OSUINT16 sensorStddevPressure;
   OSUINT8 duration;
   OSRTDList extElem1;
} tm_encode_PressureStats;

EXTERN int asn1PE_tm_encode_PressureStats (OSCTXT* pctxt, tm_encode_PressureStats* pvalue);

EXTERN void asn1Free_tm_encode_PressureStats (OSCTXT *pctxt, 
   tm_encode_PressureStats* pvalue);

/**************************************************************/
/*                                                            */
/*  CalibrationPoints_element                                 */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'CalibrationPoints'
*/
typedef struct EXTERN tm_encode_CalibrationPoints_element {
   struct {
      unsigned motionStatePresent : 1;
      unsigned velocityPresent : 1;
      unsigned locationSourcePresent : 1;
   } m;
   tm_encode_OMA_LPPe_PressureMeasurement pressure;
   const char* time_;
   EllipsoidPointWithAltitudeAndUncertaintyEllipsoid location;
   tm_encode_OMA_LPPe_Sensor_MotionStateList motionState;
   Velocity velocity;
   tm_encode_OMA_LPPe_LocationSource locationSource;
   OSRTDList extElem1;
} tm_encode_CalibrationPoints_element;

EXTERN int asn1PE_tm_encode_CalibrationPoints_element (OSCTXT* pctxt, tm_encode_CalibrationPoints_element* pvalue);

EXTERN void asn1Free_tm_encode_CalibrationPoints_element (OSCTXT *pctxt, 
   tm_encode_CalibrationPoints_element* pvalue);

/**************************************************************/
/*                                                            */
/*  CalibrationPoints                                         */
/*                                                            */
/**************************************************************/
/*
CalibrationPoints ::= SEQUENCE (SIZE (1..10)) OF SEQUENCE {
   pressure [0] OMA-LPPe-PressureMeasurement,
   time [1] UTCTime,
   location [2] EllipsoidPointWithAltitudeAndUncertaintyEllipsoid,
   motionState [3] OMA-LPPe-Sensor-MotionStateList OPTIONAL,
   velocity [4] Velocity OPTIONAL,
   locationSource [5] OMA-LPPe-LocationSource OPTIONAL,
   ...
}
*/
typedef struct EXTERN tm_encode_CalibrationPoints {
   OSUINT32 n;
   tm_encode_CalibrationPoints_element *elem;
} tm_encode_CalibrationPoints;

EXTERN int asn1PE_tm_encode_CalibrationPoints (OSCTXT* pctxt, tm_encode_CalibrationPoints* pvalue);

EXTERN void asn1Free_tm_encode_CalibrationPoints (OSCTXT *pctxt, 
   tm_encode_CalibrationPoints* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_AtmosphericPressure                              */
/*                                                            */
/**************************************************************/
/*
 ASN1STOP
 ASN1START

OMA-LPPe-AtmosphericPressure ::= SEQUENCE {
   pressureMeasurement [0] OMA-LPPe-PressureMeasurement,
   pressureStats [1] PressureStats OPTIONAL,
   calibrationPoints [2] CalibrationPoints OPTIONAL,
   ...
}
*/
typedef struct EXTERN tm_encode_OMA_LPPe_AtmosphericPressure {
   struct {
      unsigned pressureStatsPresent : 1;
      unsigned calibrationPointsPresent : 1;
   } m;
   tm_encode_OMA_LPPe_PressureMeasurement pressureMeasurement;
   tm_encode_PressureStats pressureStats;
   tm_encode_CalibrationPoints calibrationPoints;
   OSRTDList extElem1;
} tm_encode_OMA_LPPe_AtmosphericPressure;

EXTERN int asn1PE_tm_encode_OMA_LPPe_AtmosphericPressure (OSCTXT* pctxt, tm_encode_OMA_LPPe_AtmosphericPressure* pvalue);

EXTERN void asn1Free_tm_encode_OMA_LPPe_AtmosphericPressure (OSCTXT *pctxt, 
   tm_encode_OMA_LPPe_AtmosphericPressure* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_Sensor_ProvideLocationInformation                */
/*                                                            */
/**************************************************************/
/*
 ASN1STOP
 ASN1START

OMA-LPPe-Sensor-ProvideLocationInformation ::= SEQUENCE {
   motionStateList [0] OMA-LPPe-Sensor-MotionStateList OPTIONAL,
   sensorError [1] OMA-LPPe-Sensor-Error OPTIONAL,
   ...,
   atmosphericPressure [2] OMA-LPPe-AtmosphericPressure OPTIONAL
}
*/
typedef struct EXTERN tm_encode_OMA_LPPe_Sensor_ProvideLocationInformation {
   struct {
      unsigned motionStateListPresent : 1;
      unsigned sensorErrorPresent : 1;
      unsigned atmosphericPressurePresent : 1;
   } m;
   tm_encode_OMA_LPPe_Sensor_MotionStateList motionStateList;
   tm_encode_OMA_LPPe_Sensor_Error sensorError;
   tm_encode_OMA_LPPe_AtmosphericPressure atmosphericPressure;
   OSRTDList extElem1;
} tm_encode_OMA_LPPe_Sensor_ProvideLocationInformation;

EXTERN int asn1PE_tm_encode_OMA_LPPe_Sensor_ProvideLocationInformation (OSCTXT* pctxt, tm_encode_OMA_LPPe_Sensor_ProvideLocationInformation* pvalue);

EXTERN void asn1Free_tm_encode_OMA_LPPe_Sensor_ProvideLocationInformation (OSCTXT *pctxt, 
   tm_encode_OMA_LPPe_Sensor_ProvideLocationInformation* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_SRN_SRNid_srn_id_mac                             */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'OMA-LPPe-SRN-SRNid'
*/
typedef struct tm_encode_OMA_LPPe_SRN_SRNid_srn_id_mac {
   OSUINT32 numbits;
   OSOCTET data[6];
} tm_encode_OMA_LPPe_SRN_SRNid_srn_id_mac;

EXTERN int asn1PE_tm_encode_OMA_LPPe_SRN_SRNid_srn_id_mac (OSCTXT* pctxt, tm_encode_OMA_LPPe_SRN_SRNid_srn_id_mac* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_SRN_SRNid_srn_id_nfc_uniqueNumber                */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'OMA-LPPe-SRN-SRNid'
*/
typedef struct tm_encode_OMA_LPPe_SRN_SRNid_srn_id_nfc_uniqueNumber {
   OSUINT32 numbits;
   OSOCTET data[6];
} tm_encode_OMA_LPPe_SRN_SRNid_srn_id_nfc_uniqueNumber;

EXTERN int asn1PE_tm_encode_OMA_LPPe_SRN_SRNid_srn_id_nfc_uniqueNumber (OSCTXT* pctxt, tm_encode_OMA_LPPe_SRN_SRNid_srn_id_nfc_uniqueNumber* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_SRN_SRNid_srn_id_nfc                             */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'OMA-LPPe-SRN-SRNid'
*/
typedef struct EXTERN tm_encode_OMA_LPPe_SRN_SRNid_srn_id_nfc {
   ASN1BitStr32 manufacturer;
   tm_encode_OMA_LPPe_SRN_SRNid_srn_id_nfc_uniqueNumber uniqueNumber;
   OSRTDList extElem1;
} tm_encode_OMA_LPPe_SRN_SRNid_srn_id_nfc;

EXTERN int asn1PE_tm_encode_OMA_LPPe_SRN_SRNid_srn_id_nfc (OSCTXT* pctxt, tm_encode_OMA_LPPe_SRN_SRNid_srn_id_nfc* pvalue);

EXTERN void asn1Free_tm_encode_OMA_LPPe_SRN_SRNid_srn_id_nfc (OSCTXT *pctxt, 
   tm_encode_OMA_LPPe_SRN_SRNid_srn_id_nfc* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_SRN_SRNid_srn_id_mobileCode_remainingPart        */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'OMA-LPPe-SRN-SRNid'
*/
typedef struct EXTERN tm_encode_OMA_LPPe_SRN_SRNid_srn_id_mobileCode_remainingPart {
   OSUINT32 numocts;
   OSOCTET data[16];
} tm_encode_OMA_LPPe_SRN_SRNid_srn_id_mobileCode_remainingPart;

EXTERN int asn1PE_tm_encode_OMA_LPPe_SRN_SRNid_srn_id_mobileCode_remainingPart (OSCTXT* pctxt, tm_encode_OMA_LPPe_SRN_SRNid_srn_id_mobileCode_remainingPart* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_SRN_SRNid_srn_id_mobileCode_resolutionIdentifie  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'OMA-LPPe-SRN-SRNid'
*/
typedef struct EXTERN tm_encode_OMA_LPPe_SRN_SRNid_srn_id_mobileCode_resolutionIdentifier {
   OSUINT32 numocts;
   OSOCTET data[18];
} tm_encode_OMA_LPPe_SRN_SRNid_srn_id_mobileCode_resolutionIdentifier;

EXTERN int asn1PE_tm_encode_OMA_LPPe_SRN_SRNid_srn_id_mobileCode_resolutionIdentifier (OSCTXT* pctxt, tm_encode_OMA_LPPe_SRN_SRNid_srn_id_mobileCode_resolutionIdentifier* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_SRN_SRNid_srn_id_mobileCode                      */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'OMA-LPPe-SRN-SRNid'
*/
typedef struct EXTERN tm_encode_OMA_LPPe_SRN_SRNid_srn_id_mobileCode {
   ASN1BitStr32 registryID;
   tm_encode_OMA_LPPe_SRN_SRNid_srn_id_mobileCode_remainingPart remainingPart;
   tm_encode_OMA_LPPe_SRN_SRNid_srn_id_mobileCode_resolutionIdentifier resolutionIdentifier;
   OSRTDList extElem1;
} tm_encode_OMA_LPPe_SRN_SRNid_srn_id_mobileCode;

EXTERN int asn1PE_tm_encode_OMA_LPPe_SRN_SRNid_srn_id_mobileCode (OSCTXT* pctxt, tm_encode_OMA_LPPe_SRN_SRNid_srn_id_mobileCode* pvalue);

EXTERN void asn1Free_tm_encode_OMA_LPPe_SRN_SRNid_srn_id_mobileCode (OSCTXT *pctxt, 
   tm_encode_OMA_LPPe_SRN_SRNid_srn_id_mobileCode* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_SRN_SRNid_srn_id                                 */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'OMA-LPPe-SRN-SRNid'
*/
/* Choice tag constants */

#define T_tm_encode_OMA_LPPe_SRN_SRNid_srn_id_mac 1
#define T_tm_encode_OMA_LPPe_SRN_SRNid_srn_id_nfc 2
#define T_tm_encode_OMA_LPPe_SRN_SRNid_srn_id_mobileCode 3
#define T_tm_encode_OMA_LPPe_SRN_SRNid_srn_id_other 4
#define T_tm_encode_OMA_LPPe_SRN_SRNid_srn_id_extElem1 5

typedef struct EXTERN tm_encode_OMA_LPPe_SRN_SRNid_srn_id {
   OSUINT32 t;
   union {
      /* t = 1 */
      tm_encode_OMA_LPPe_SRN_SRNid_srn_id_mac *mac;
      /* t = 2 */
      tm_encode_OMA_LPPe_SRN_SRNid_srn_id_nfc *nfc;
      /* t = 3 */
      tm_encode_OMA_LPPe_SRN_SRNid_srn_id_mobileCode *mobileCode;
      /* t = 4 */
      OSDynOctStr *other;
      /* t = 5 */
      ASN1OpenType *extElem1;
   } u;
} tm_encode_OMA_LPPe_SRN_SRNid_srn_id;

EXTERN int asn1PE_tm_encode_OMA_LPPe_SRN_SRNid_srn_id (OSCTXT* pctxt, tm_encode_OMA_LPPe_SRN_SRNid_srn_id* pvalue);

EXTERN void asn1Free_tm_encode_OMA_LPPe_SRN_SRNid_srn_id (OSCTXT *pctxt, 
   tm_encode_OMA_LPPe_SRN_SRNid_srn_id* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_SRN_SRNid                                        */
/*                                                            */
/**************************************************************/
/*
 ASN1STOP
 ASN1START

OMA-LPPe-SRN-SRNid ::= SEQUENCE {
   srn-id [0] CHOICE {
      mac [0] BIT STRING  (SIZE (48)),
      nfc [1] SEQUENCE {
         manufacturer [0] BIT STRING  (SIZE (8)),
         uniqueNumber [1] BIT STRING  (SIZE (48)),
         ...
      },
      mobileCode [2] SEQUENCE {
         registryID [0] BIT STRING  (SIZE (12)),
         remainingPart [1] OCTET STRING (SIZE (1..16)),
         resolutionIdentifier [2] OCTET STRING (SIZE (1..18)),
         ...
      },
      other [3] OCTET STRING,
      ...
   },
   ...
}
*/
typedef struct EXTERN tm_encode_OMA_LPPe_SRN_SRNid {
   tm_encode_OMA_LPPe_SRN_SRNid_srn_id srn_id;
   OSRTDList extElem1;
} tm_encode_OMA_LPPe_SRN_SRNid;

EXTERN int asn1PE_tm_encode_OMA_LPPe_SRN_SRNid (OSCTXT* pctxt, tm_encode_OMA_LPPe_SRN_SRNid* pvalue);

EXTERN void asn1Free_tm_encode_OMA_LPPe_SRN_SRNid (OSCTXT *pctxt, 
   tm_encode_OMA_LPPe_SRN_SRNid* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_SRN_SRNgroupUniqueID                             */
/*                                                            */
/**************************************************************/
/*
 ASN1STOP
 ASN1START

OMA-LPPe-SRN-SRNgroupUniqueID ::= SEQUENCE {
   providerID [0] OMA-LPPe-VendorOrOperatorID,
   providerAssignedID [1] OCTET STRING,
   srnDataVersion [2] INTEGER (0..4294967295) OPTIONAL,
   ...
}
*/
typedef struct EXTERN tm_encode_OMA_LPPe_SRN_SRNgroupUniqueID {
   struct {
      unsigned srnDataVersionPresent : 1;
   } m;
   tm_encode_OMA_LPPe_VendorOrOperatorID providerID;
   OSDynOctStr providerAssignedID;
   OSUINT32 srnDataVersion;
   OSRTDList extElem1;
} tm_encode_OMA_LPPe_SRN_SRNgroupUniqueID;

EXTERN int asn1PE_tm_encode_OMA_LPPe_SRN_SRNgroupUniqueID (OSCTXT* pctxt, tm_encode_OMA_LPPe_SRN_SRNgroupUniqueID* pvalue);

EXTERN void asn1Free_tm_encode_OMA_LPPe_SRN_SRNgroupUniqueID (OSCTXT *pctxt, 
   tm_encode_OMA_LPPe_SRN_SRNgroupUniqueID* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_SRN_srnMeasurementElement                        */
/*                                                            */
/**************************************************************/
/*
OMA-LPPe-SRN-srnMeasurementElement ::= SEQUENCE {
   relativeTimeStamp [0] INTEGER (0..1000) OPTIONAL,
   rssi [1] INTEGER (-128..127) OPTIONAL,
   rtd [2] OMA-LPPe-WLAN-RTD OPTIONAL,
   ...
}
*/
typedef struct EXTERN tm_encode_OMA_LPPe_SRN_srnMeasurementElement {
   struct {
      unsigned relativeTimeStampPresent : 1;
      unsigned rssiPresent : 1;
      unsigned rtdPresent : 1;
   } m;
   OSUINT16 relativeTimeStamp;
   OSINT8 rssi;
   tm_encode_OMA_LPPe_WLAN_RTD rtd;
   OSRTDList extElem1;
} tm_encode_OMA_LPPe_SRN_srnMeasurementElement;

EXTERN int asn1PE_tm_encode_OMA_LPPe_SRN_srnMeasurementElement (OSCTXT* pctxt, tm_encode_OMA_LPPe_SRN_srnMeasurementElement* pvalue);

EXTERN void asn1Free_tm_encode_OMA_LPPe_SRN_srnMeasurementElement (OSCTXT *pctxt, 
   tm_encode_OMA_LPPe_SRN_srnMeasurementElement* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_SRN_MeasurementElement_measurementList           */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'OMA-LPPe-SRN-MeasurementElement'
*/
typedef struct EXTERN tm_encode_OMA_LPPe_SRN_MeasurementElement_measurementList {
   OSUINT32 n;
   tm_encode_OMA_LPPe_SRN_srnMeasurementElement *elem;
} tm_encode_OMA_LPPe_SRN_MeasurementElement_measurementList;

EXTERN int asn1PE_tm_encode_OMA_LPPe_SRN_MeasurementElement_measurementList (OSCTXT* pctxt, tm_encode_OMA_LPPe_SRN_MeasurementElement_measurementList* pvalue);

EXTERN void asn1Free_tm_encode_OMA_LPPe_SRN_MeasurementElement_measurementList (OSCTXT *pctxt, 
   tm_encode_OMA_LPPe_SRN_MeasurementElement_measurementList* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_SRN_MeasurementElement                           */
/*                                                            */
/**************************************************************/
/*
 ASN1STOP
 ASN1START

OMA-LPPe-SRN-MeasurementElement ::= SEQUENCE {
   srnID [0] OMA-LPPe-SRN-SRNid,
   srnCategory [1] OMA-LPPe-SRN-Category OPTIONAL,
   srnGroupID [2] OMA-LPPe-SRN-SRNgroupUniqueID OPTIONAL,
   measurementList [3] SEQUENCE (SIZE (1..64)) OF OMA-LPPe-SRN-srnMeasurementElement OPTIONAL,
   ...
}
*/
typedef struct EXTERN tm_encode_OMA_LPPe_SRN_MeasurementElement {
   struct {
      unsigned srnCategoryPresent : 1;
      unsigned srnGroupIDPresent : 1;
      unsigned measurementListPresent : 1;
   } m;
   tm_encode_OMA_LPPe_SRN_SRNid srnID;
   tm_encode_OMA_LPPe_SRN_Category srnCategory;
   tm_encode_OMA_LPPe_SRN_SRNgroupUniqueID srnGroupID;
   tm_encode_OMA_LPPe_SRN_MeasurementElement_measurementList measurementList;
   OSRTDList extElem1;
} tm_encode_OMA_LPPe_SRN_MeasurementElement;

EXTERN int asn1PE_tm_encode_OMA_LPPe_SRN_MeasurementElement (OSCTXT* pctxt, tm_encode_OMA_LPPe_SRN_MeasurementElement* pvalue);

EXTERN void asn1Free_tm_encode_OMA_LPPe_SRN_MeasurementElement (OSCTXT *pctxt, 
   tm_encode_OMA_LPPe_SRN_MeasurementElement* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_SRN_ProvideLocationInformation_srnMeasurementLi  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'OMA-LPPe-SRN-ProvideLocationInformation'
*/
typedef struct EXTERN tm_encode_OMA_LPPe_SRN_ProvideLocationInformation_srnMeasurementList {
   OSUINT32 n;
   tm_encode_OMA_LPPe_SRN_MeasurementElement *elem;
} tm_encode_OMA_LPPe_SRN_ProvideLocationInformation_srnMeasurementList;

EXTERN int asn1PE_tm_encode_OMA_LPPe_SRN_ProvideLocationInformation_srnMeasurementList (OSCTXT* pctxt, tm_encode_OMA_LPPe_SRN_ProvideLocationInformation_srnMeasurementList* pvalue);

EXTERN void asn1Free_tm_encode_OMA_LPPe_SRN_ProvideLocationInformation_srnMeasurementList (OSCTXT *pctxt, 
   tm_encode_OMA_LPPe_SRN_ProvideLocationInformation_srnMeasurementList* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_SRN_LocationServerErrorCauses_groupErrors        */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'OMA-LPPe-SRN-LocationServerErrorCauses'
*/
typedef enum {
   tm_encode_OMA_LPPe_SRN_LocationServerErrorCauses_groupErrors_undefined = 0,
   tm_encode_OMA_LPPe_SRN_LocationServerErrorCauses_groupErrors_someGroupOrCategoryOrSRNidUnknownOrUnsupported = 1,
   tm_encode_OMA_LPPe_SRN_LocationServerErrorCauses_groupErrors_allGroupAndCategoryOrSRNidUnknownOrUnsupported = 2,
   tm_encode_OMA_LPPe_SRN_LocationServerErrorCauses_groupErrors_noSRNgroupsNearby = 3
} tm_encode_OMA_LPPe_SRN_LocationServerErrorCauses_groupErrors_Root;

typedef OSUINT32 tm_encode_OMA_LPPe_SRN_LocationServerErrorCauses_groupErrors;

EXTERN int asn1PE_tm_encode_OMA_LPPe_SRN_LocationServerErrorCauses_groupErrors (OSCTXT* pctxt, tm_encode_OMA_LPPe_SRN_LocationServerErrorCauses_groupErrors value);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_SRN_LocationServerErrorCauses_groupUpdateErrors  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'OMA-LPPe-SRN-LocationServerErrorCauses'
*/
typedef enum {
   tm_encode_OMA_LPPe_SRN_LocationServerErrorCauses_groupUpdateErrors_undefined = 0,
   tm_encode_OMA_LPPe_SRN_LocationServerErrorCauses_groupUpdateErrors_allSRNgroupIDsUnknown = 1,
   tm_encode_OMA_LPPe_SRN_LocationServerErrorCauses_groupUpdateErrors_allSRNgroupIDsknownButSomeSRNgroupVersionsUnknown = 2,
   tm_encode_OMA_LPPe_SRN_LocationServerErrorCauses_groupUpdateErrors_allSRNgroupIDsknownAndAllSRNgroupVersionsUnknown = 3,
   tm_encode_OMA_LPPe_SRN_LocationServerErrorCauses_groupUpdateErrors_someSRNgroupIDsUnknown = 4,
   tm_encode_OMA_LPPe_SRN_LocationServerErrorCauses_groupUpdateErrors_someSRNgroupVersionsUnknownAndAllSRNGroupVersionsUnknown = 5,
   tm_encode_OMA_LPPe_SRN_LocationServerErrorCauses_groupUpdateErrors_someSRNgroupIDsAndSomeSRNgroupVersionsUnknown = 6,
   tm_encode_OMA_LPPe_SRN_LocationServerErrorCauses_groupUpdateErrors_inTheGroupInformationDoesNotMatchWithGroupID = 7
} tm_encode_OMA_LPPe_SRN_LocationServerErrorCauses_groupUpdateErrors_Root;

typedef OSUINT32 tm_encode_OMA_LPPe_SRN_LocationServerErrorCauses_groupUpdateErrors;

EXTERN int asn1PE_tm_encode_OMA_LPPe_SRN_LocationServerErrorCauses_groupUpdateErrors (OSCTXT* pctxt, tm_encode_OMA_LPPe_SRN_LocationServerErrorCauses_groupUpdateErrors value);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_SRN_LocationServerErrorCauses_srnAntennaErrors   */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'OMA-LPPe-SRN-LocationServerErrorCauses'
*/
typedef enum {
   tm_encode_OMA_LPPe_SRN_LocationServerErrorCauses_srnAntennaErrors_undefined = 0,
   tm_encode_OMA_LPPe_SRN_LocationServerErrorCauses_srnAntennaErrors_someAntennaPatternIDsUnknown = 1,
   tm_encode_OMA_LPPe_SRN_LocationServerErrorCauses_srnAntennaErrors_allAntennaPatternIDsUnknown = 2
} tm_encode_OMA_LPPe_SRN_LocationServerErrorCauses_srnAntennaErrors_Root;

typedef OSUINT32 tm_encode_OMA_LPPe_SRN_LocationServerErrorCauses_srnAntennaErrors;

EXTERN int asn1PE_tm_encode_OMA_LPPe_SRN_LocationServerErrorCauses_srnAntennaErrors (OSCTXT* pctxt, tm_encode_OMA_LPPe_SRN_LocationServerErrorCauses_srnAntennaErrors value);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_SRN_LocationServerErrorCauses                    */
/*                                                            */
/**************************************************************/
/*
 ASN1STOP
 ASN1START

OMA-LPPe-SRN-LocationServerErrorCauses ::= SEQUENCE {
   groupErrors [0] ENUMERATED { undefined(0), someGroupOrCategoryOrSRNidUnknownOrUnsupported(1), allGroupAndCategoryOrSRNidUnknownOrUnsupported(2), noSRNgroupsNearby(3), ... } OPTIONAL,
   groupUpdateErrors [1] ENUMERATED { undefined(0), allSRNgroupIDsUnknown(1), allSRNgroupIDsknownButSomeSRNgroupVersionsUnknown(2), allSRNgroupIDsknownAndAllSRNgroupVersionsUnknown(3), someSRNgroupIDsUnknown(4), someSRNgroupVersionsUnknownAndAllSRNGroupVersionsUnknown(5), someSRNgroupIDsAndSomeSRNgroupVersionsUnknown(6), inTheGroupInformationDoesNotMatchWithGroupID(7), ... } OPTIONAL,
   srnAntennaErrors [2] ENUMERATED { undefined(0), someAntennaPatternIDsUnknown(1), allAntennaPatternIDsUnknown(2), ... } OPTIONAL,
   ...
}
*/
typedef struct EXTERN tm_encode_OMA_LPPe_SRN_LocationServerErrorCauses {
   struct {
      unsigned groupErrorsPresent : 1;
      unsigned groupUpdateErrorsPresent : 1;
      unsigned srnAntennaErrorsPresent : 1;
   } m;
   tm_encode_OMA_LPPe_SRN_LocationServerErrorCauses_groupErrors groupErrors;
   tm_encode_OMA_LPPe_SRN_LocationServerErrorCauses_groupUpdateErrors groupUpdateErrors;
   tm_encode_OMA_LPPe_SRN_LocationServerErrorCauses_srnAntennaErrors srnAntennaErrors;
   OSRTDList extElem1;
} tm_encode_OMA_LPPe_SRN_LocationServerErrorCauses;

EXTERN int asn1PE_tm_encode_OMA_LPPe_SRN_LocationServerErrorCauses (OSCTXT* pctxt, tm_encode_OMA_LPPe_SRN_LocationServerErrorCauses* pvalue);

EXTERN void asn1Free_tm_encode_OMA_LPPe_SRN_LocationServerErrorCauses (OSCTXT *pctxt, 
   tm_encode_OMA_LPPe_SRN_LocationServerErrorCauses* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_SRN_TargetDeviceError_srnErrors                  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'OMA-LPPe-SRN-TargetDeviceError'
*/
typedef enum {
   tm_encode_OMA_LPPe_SRN_TargetDeviceError_srnErrors_undefined = 0,
   tm_encode_OMA_LPPe_SRN_TargetDeviceError_srnErrors_requestedMeasurementsNotAvailable = 1,
   tm_encode_OMA_LPPe_SRN_TargetDeviceError_srnErrors_notAllrequestedMeasurementsPossible = 2,
   tm_encode_OMA_LPPe_SRN_TargetDeviceError_srnErrors_categoryNotSupported = 3
} tm_encode_OMA_LPPe_SRN_TargetDeviceError_srnErrors_Root;

typedef OSUINT32 tm_encode_OMA_LPPe_SRN_TargetDeviceError_srnErrors;

EXTERN int asn1PE_tm_encode_OMA_LPPe_SRN_TargetDeviceError_srnErrors (OSCTXT* pctxt, tm_encode_OMA_LPPe_SRN_TargetDeviceError_srnErrors value);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_SRN_TargetDeviceError                            */
/*                                                            */
/**************************************************************/
/*
OMA-LPPe-SRN-TargetDeviceError ::= SEQUENCE {
   category [0] OMA-LPPe-SRN-Category,
   srnErrors [1] ENUMERATED { undefined(0), requestedMeasurementsNotAvailable(1), notAllrequestedMeasurementsPossible(2), categoryNotSupported(3), ... },
   rssiNotAvailable [2] NULL OPTIONAL,
   rtdNotAvailable [3] NULL OPTIONAL,
   multipleSetsNotAvailable [4] NULL OPTIONAL,
   historicMeasurementsNotAvailable [5] NULL OPTIONAL,
   ...
}
*/
typedef struct EXTERN tm_encode_OMA_LPPe_SRN_TargetDeviceError {
   struct {
      unsigned rssiNotAvailablePresent : 1;
      unsigned rtdNotAvailablePresent : 1;
      unsigned multipleSetsNotAvailablePresent : 1;
      unsigned historicMeasurementsNotAvailablePresent : 1;
   } m;
   tm_encode_OMA_LPPe_SRN_Category category;
   tm_encode_OMA_LPPe_SRN_TargetDeviceError_srnErrors srnErrors;
   OSRTDList extElem1;
} tm_encode_OMA_LPPe_SRN_TargetDeviceError;

EXTERN int asn1PE_tm_encode_OMA_LPPe_SRN_TargetDeviceError (OSCTXT* pctxt, tm_encode_OMA_LPPe_SRN_TargetDeviceError* pvalue);

EXTERN void asn1Free_tm_encode_OMA_LPPe_SRN_TargetDeviceError (OSCTXT *pctxt, 
   tm_encode_OMA_LPPe_SRN_TargetDeviceError* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_SRN_TargetDeviceErrorCauses_srnErrorsPerCategor  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'OMA-LPPe-SRN-TargetDeviceErrorCauses'
*/
typedef struct EXTERN tm_encode_OMA_LPPe_SRN_TargetDeviceErrorCauses_srnErrorsPerCategory {
   OSUINT32 n;
   tm_encode_OMA_LPPe_SRN_TargetDeviceError *elem;
} tm_encode_OMA_LPPe_SRN_TargetDeviceErrorCauses_srnErrorsPerCategory;

EXTERN int asn1PE_tm_encode_OMA_LPPe_SRN_TargetDeviceErrorCauses_srnErrorsPerCategory (OSCTXT* pctxt, tm_encode_OMA_LPPe_SRN_TargetDeviceErrorCauses_srnErrorsPerCategory* pvalue);

EXTERN void asn1Free_tm_encode_OMA_LPPe_SRN_TargetDeviceErrorCauses_srnErrorsPerCategory (OSCTXT *pctxt, 
   tm_encode_OMA_LPPe_SRN_TargetDeviceErrorCauses_srnErrorsPerCategory* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_SRN_TargetDeviceErrorCauses                      */
/*                                                            */
/**************************************************************/
/*
 ASN1STOP
 ASN1START

OMA-LPPe-SRN-TargetDeviceErrorCauses ::= SEQUENCE {
   srnErrorsPerCategory [0] SEQUENCE (SIZE (1..16)) OF OMA-LPPe-SRN-TargetDeviceError,
   ...
}
*/
typedef struct EXTERN tm_encode_OMA_LPPe_SRN_TargetDeviceErrorCauses {
   tm_encode_OMA_LPPe_SRN_TargetDeviceErrorCauses_srnErrorsPerCategory srnErrorsPerCategory;
   OSRTDList extElem1;
} tm_encode_OMA_LPPe_SRN_TargetDeviceErrorCauses;

EXTERN int asn1PE_tm_encode_OMA_LPPe_SRN_TargetDeviceErrorCauses (OSCTXT* pctxt, tm_encode_OMA_LPPe_SRN_TargetDeviceErrorCauses* pvalue);

EXTERN void asn1Free_tm_encode_OMA_LPPe_SRN_TargetDeviceErrorCauses (OSCTXT *pctxt, 
   tm_encode_OMA_LPPe_SRN_TargetDeviceErrorCauses* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_SRN_Error                                        */
/*                                                            */
/**************************************************************/
/*
 ASN1STOP
 ASN1START

OMA-LPPe-SRN-Error ::= CHOICE {
   srnLocationServerErrorCauses [0] OMA-LPPe-SRN-LocationServerErrorCauses,
   srnTargetDeviceErrorCauses [1] OMA-LPPe-SRN-TargetDeviceErrorCauses,
   ...
}
*/
/* Choice tag constants */

#define T_tm_encode_OMA_LPPe_SRN_Error_srnLocationServerErrorCauses 1
#define T_tm_encode_OMA_LPPe_SRN_Error_srnTargetDeviceErrorCauses 2
#define T_tm_encode_OMA_LPPe_SRN_Error_extElem1 3

typedef struct EXTERN tm_encode_OMA_LPPe_SRN_Error {
   OSUINT32 t;
   union {
      /* t = 1 */
      tm_encode_OMA_LPPe_SRN_LocationServerErrorCauses *srnLocationServerErrorCauses;
      /* t = 2 */
      tm_encode_OMA_LPPe_SRN_TargetDeviceErrorCauses *srnTargetDeviceErrorCauses;
      /* t = 3 */
      ASN1OpenType *extElem1;
   } u;
} tm_encode_OMA_LPPe_SRN_Error;

EXTERN int asn1PE_tm_encode_OMA_LPPe_SRN_Error (OSCTXT* pctxt, tm_encode_OMA_LPPe_SRN_Error* pvalue);

EXTERN void asn1Free_tm_encode_OMA_LPPe_SRN_Error (OSCTXT *pctxt, 
   tm_encode_OMA_LPPe_SRN_Error* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_SRN_ProvideLocationInformation                   */
/*                                                            */
/**************************************************************/
/*
 ASN1STOP
 ASN1START

OMA-LPPe-SRN-ProvideLocationInformation ::= SEQUENCE {
   srnMeasurementList [0] SEQUENCE (SIZE (1..64)) OF OMA-LPPe-SRN-MeasurementElement OPTIONAL,
   srnError [1] OMA-LPPe-SRN-Error OPTIONAL,
   ...
}
*/
typedef struct EXTERN tm_encode_OMA_LPPe_SRN_ProvideLocationInformation {
   struct {
      unsigned srnMeasurementListPresent : 1;
      unsigned srnErrorPresent : 1;
   } m;
   tm_encode_OMA_LPPe_SRN_ProvideLocationInformation_srnMeasurementList srnMeasurementList;
   tm_encode_OMA_LPPe_SRN_Error srnError;
   OSRTDList extElem1;
} tm_encode_OMA_LPPe_SRN_ProvideLocationInformation;

EXTERN int asn1PE_tm_encode_OMA_LPPe_SRN_ProvideLocationInformation (OSCTXT* pctxt, tm_encode_OMA_LPPe_SRN_ProvideLocationInformation* pvalue);

EXTERN void asn1Free_tm_encode_OMA_LPPe_SRN_ProvideLocationInformation (OSCTXT *pctxt, 
   tm_encode_OMA_LPPe_SRN_ProvideLocationInformation* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_ProvideLocationInformation                       */
/*                                                            */
/**************************************************************/
/*
 ASN1STOP
 ASN1START

OMA-LPPe-ProvideLocationInformation ::= SEQUENCE {
   commonIEsProvideLocationInformation [0] OMA-LPPe-CommonIEsProvideLocationInformation OPTIONAL,
   agnss-ProvideLocationInformation [1] NULL OPTIONAL,
   otdoa-ProvideLocationInformation [2] NULL OPTIONAL,
   eotd-ProvideLocationInformation [3] NULL OPTIONAL,
   otdoa-utra-ProvideLocationInformation [4] NULL OPTIONAL,
   ecid-lte-ProvideLocationInformation [5] NULL OPTIONAL,
   ecid-gsm-ProvideLocationInformation [6] NULL OPTIONAL,
   ecid-utra-ProvideLocationInformation [7] NULL OPTIONAL,
   wlan-ap-ProvideLocationInformastion [8] OMA-LPPe-WLAN-AP-ProvideLocationInformation OPTIONAL,
   ecid-wimax-ProvideLocationInformastion [9] OMA-LPPe-ECID-WiMax-ProvideLocationInformation OPTIONAL,
   sensor-ProvideLocationInformation [10] OMA-LPPe-Sensor-ProvideLocationInformation OPTIONAL,
   srn-ProvideLocationInformation [11] OMA-LPPe-SRN-ProvideLocationInformation OPTIONAL,
   ...
}
*/
typedef struct EXTERN tm_encode_OMA_LPPe_ProvideLocationInformation {
   struct {
      unsigned commonIEsProvideLocationInformationPresent : 1;
      unsigned agnss_ProvideLocationInformationPresent : 1;
      unsigned otdoa_ProvideLocationInformationPresent : 1;
      unsigned eotd_ProvideLocationInformationPresent : 1;
      unsigned otdoa_utra_ProvideLocationInformationPresent : 1;
      unsigned ecid_lte_ProvideLocationInformationPresent : 1;
      unsigned ecid_gsm_ProvideLocationInformationPresent : 1;
      unsigned ecid_utra_ProvideLocationInformationPresent : 1;
      unsigned wlan_ap_ProvideLocationInformastionPresent : 1;
      unsigned ecid_wimax_ProvideLocationInformastionPresent : 1;
      unsigned sensor_ProvideLocationInformationPresent : 1;
      unsigned srn_ProvideLocationInformationPresent : 1;
   } m;
   tm_encode_OMA_LPPe_CommonIEsProvideLocationInformation commonIEsProvideLocationInformation;
   tm_encode_OMA_LPPe_WLAN_AP_ProvideLocationInformation wlan_ap_ProvideLocationInformastion;
   tm_encode_OMA_LPPe_ECID_WiMax_ProvideLocationInformation ecid_wimax_ProvideLocationInformastion;
   tm_encode_OMA_LPPe_Sensor_ProvideLocationInformation sensor_ProvideLocationInformation;
   tm_encode_OMA_LPPe_SRN_ProvideLocationInformation srn_ProvideLocationInformation;
   OSRTDList extElem1;
} tm_encode_OMA_LPPe_ProvideLocationInformation;

EXTERN int asn1PE_tm_encode_OMA_LPPe_ProvideLocationInformation (OSCTXT* pctxt, tm_encode_OMA_LPPe_ProvideLocationInformation* pvalue);

EXTERN void asn1Free_tm_encode_OMA_LPPe_ProvideLocationInformation (OSCTXT *pctxt, 
   tm_encode_OMA_LPPe_ProvideLocationInformation* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_MessageExtensionBody                             */
/*                                                            */
/**************************************************************/
/*
OMA-LPPe-MessageExtensionBody ::= CHOICE {
   requestCapabilities [0] NULL,
   provideCapabilities [1] OMA-LPPe-ProvideCapabilities,
   requestAssistanceData [2] OMA-LPPe-RequestAssistanceData,
   provideAssistanceData [3] NULL,
   requestLocationInformation [4] NULL,
   provideLocationInformation [5] OMA-LPPe-ProvideLocationInformation,
   error [6] NULL,
   abort [7] NULL,
   ...
}
*/
/* Choice tag constants */

#define T_tm_encode_OMA_LPPe_MessageExtensionBody_requestCapabilities 1
#define T_tm_encode_OMA_LPPe_MessageExtensionBody_provideCapabilities 2
#define T_tm_encode_OMA_LPPe_MessageExtensionBody_requestAssistanceData 3
#define T_tm_encode_OMA_LPPe_MessageExtensionBody_provideAssistanceData 4
#define T_tm_encode_OMA_LPPe_MessageExtensionBody_requestLocationInformation 5
#define T_tm_encode_OMA_LPPe_MessageExtensionBody_provideLocationInformation 6
#define T_tm_encode_OMA_LPPe_MessageExtensionBody_error 7
#define T_tm_encode_OMA_LPPe_MessageExtensionBody_abort_ 8
#define T_tm_encode_OMA_LPPe_MessageExtensionBody_extElem1 9

typedef struct EXTERN tm_encode_OMA_LPPe_MessageExtensionBody {
   OSUINT32 t;
   union {
      /* t = 1 */
      /* t = 2 */
      tm_encode_OMA_LPPe_ProvideCapabilities *provideCapabilities;
      /* t = 3 */
      tm_encode_OMA_LPPe_RequestAssistanceData *requestAssistanceData;
      /* t = 4 */
      /* t = 5 */
      /* t = 6 */
      tm_encode_OMA_LPPe_ProvideLocationInformation *provideLocationInformation;
      /* t = 7 */
      /* t = 8 */
      /* t = 9 */
      ASN1OpenType *extElem1;
   } u;
} tm_encode_OMA_LPPe_MessageExtensionBody;

EXTERN int asn1PE_tm_encode_OMA_LPPe_MessageExtensionBody (OSCTXT* pctxt, tm_encode_OMA_LPPe_MessageExtensionBody* pvalue);

EXTERN void asn1Free_tm_encode_OMA_LPPe_MessageExtensionBody (OSCTXT *pctxt, 
   tm_encode_OMA_LPPe_MessageExtensionBody* pvalue);

/**************************************************************/
/*                                                            */
/*  OMA_LPPe_MessageExtension                                 */
/*                                                            */
/**************************************************************/
/*
 ASN1STOP
 ASN1START

OMA-LPPe-MessageExtension ::= SEQUENCE {
   lppeCompatibilityLevel [0] OMA-LPPe-LPPeCompatibilityLevel,
   lppeVersion [1] OMA-LPPe-LPPeVersion,
   lppeMode [2] OMA-LPPe-LPPeMode,
   messageExtensionBody [3] OMA-LPPe-MessageExtensionBody,
   ...
}
*/
typedef struct EXTERN tm_encode_OMA_LPPe_MessageExtension {
   tm_encode_OMA_LPPe_LPPeCompatibilityLevel lppeCompatibilityLevel;
   tm_encode_OMA_LPPe_LPPeVersion lppeVersion;
   tm_encode_OMA_LPPe_LPPeMode lppeMode;
   tm_encode_OMA_LPPe_MessageExtensionBody messageExtensionBody;
   OSRTDList extElem1;
} tm_encode_OMA_LPPe_MessageExtension;

EXTERN int asn1PE_tm_encode_OMA_LPPe_MessageExtension (OSCTXT* pctxt, tm_encode_OMA_LPPe_MessageExtension* pvalue);

EXTERN void asn1Free_tm_encode_OMA_LPPe_MessageExtension (OSCTXT *pctxt, 
   tm_encode_OMA_LPPe_MessageExtension* pvalue);

/* Value definitions */

#ifdef __cplusplus
}
#endif

#endif
#endif /* FEATURE_GNSS_LPPE */
