/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 6.6.8, Date: 13-Jan-2017.
 */
#ifndef TM_RRLP_ASN1_DECODE_H
#define TM_RRLP_ASN1_DECODE_H

#ifdef __cplusplus
extern "C" {
#endif

#include <stdio.h>
#include <stdlib.h>
#include "rtkey.h"
#include "rtpersrc/asn1per.h"

/**
 * Header file for ASN.1 module MAP-ExtensionDataTypes
 */
/**************************************************************/
/*                                                            */
/*  PrivateExtension                                          */
/*                                                            */
/**************************************************************/
/*
PrivateExtension ::= SEQUENCE {
   extId MAP-EXTENSION.&extensionId ({ExtensionSet}),
   extType MAP-EXTENSION.&ExtensionType ({ExtensionSet}{@extId}) OPTIONAL
}
*/
typedef struct EXTERN rrlp_dec_PrivateExtension {
   struct {
      unsigned extTypePresent : 1;
   } m;
   ASN1OBJID extId;
   ASN1OpenType extType;
} rrlp_dec_PrivateExtension;

EXTERN int asn1PD_rrlp_dec_PrivateExtension (OSCTXT* pctxt, rrlp_dec_PrivateExtension* pvalue);

EXTERN void asn1Free_rrlp_dec_PrivateExtension (OSCTXT *pctxt, 
   rrlp_dec_PrivateExtension* pvalue);

/**************************************************************/
/*                                                            */
/*  PrivateExtensionList                                      */
/*                                                            */
/**************************************************************/
/*
PrivateExtensionList ::= SEQUENCE (SIZE (1..maxNumOfPrivateExtensions)) OF PrivateExtension
*/
typedef struct EXTERN rrlp_dec_PrivateExtensionList {
   OSUINT32 n;
   rrlp_dec_PrivateExtension *elem;
} rrlp_dec_PrivateExtensionList;

EXTERN int asn1PD_rrlp_dec_PrivateExtensionList (OSCTXT* pctxt, rrlp_dec_PrivateExtensionList* pvalue);

EXTERN void asn1Free_rrlp_dec_PrivateExtensionList (OSCTXT *pctxt, 
   rrlp_dec_PrivateExtensionList* pvalue);

/**************************************************************/
/*                                                            */
/*  PCS_Extensions                                            */
/*                                                            */
/**************************************************************/
/*
 Unsupported private extensions shall be discarded if received.

PCS-Extensions ::= SEQUENCE {
   ...
}
*/
typedef struct EXTERN rrlp_dec_PCS_Extensions {
   OSRTDList extElem1;
} rrlp_dec_PCS_Extensions;

EXTERN int asn1PD_rrlp_dec_PCS_Extensions (OSCTXT* pctxt, rrlp_dec_PCS_Extensions* pvalue);

EXTERN void asn1Free_rrlp_dec_PCS_Extensions (OSCTXT *pctxt, 
   rrlp_dec_PCS_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  ExtensionContainer                                        */
/*                                                            */
/**************************************************************/
/*
 The length of the Object Identifier shall not exceed 16 octets and the
 number of components of the Object Identifier shall not exceed 16
 data types

ExtensionContainer ::= SEQUENCE {
   privateExtensionList [0] PrivateExtensionList OPTIONAL,
   pcs-Extensions [1] PCS-Extensions OPTIONAL,
   ...
}
*/
typedef struct EXTERN rrlp_dec_ExtensionContainer {
   struct {
      unsigned privateExtensionListPresent : 1;
      unsigned pcs_ExtensionsPresent : 1;
   } m;
   rrlp_dec_PrivateExtensionList privateExtensionList;
   rrlp_dec_PCS_Extensions pcs_Extensions;
   OSRTDList extElem1;
} rrlp_dec_ExtensionContainer;

EXTERN int asn1PD_rrlp_dec_ExtensionContainer (OSCTXT* pctxt, rrlp_dec_ExtensionContainer* pvalue);

EXTERN void asn1Free_rrlp_dec_ExtensionContainer (OSCTXT *pctxt, 
   rrlp_dec_ExtensionContainer* pvalue);

/**************************************************************/
/*                                                            */
/*  SLR_Arg_PCS_Extensions                                    */
/*                                                            */
/**************************************************************/
/*
SLR-Arg-PCS-Extensions ::= SEQUENCE {
   ...na-ESRK-Request [0] NULL OPTIONAL
}
*/
typedef struct EXTERN rrlp_dec_SLR_Arg_PCS_Extensions {
   struct {
      unsigned na_ESRK_RequestPresent : 1;
   } m;
   OSRTDList extElem1;
} rrlp_dec_SLR_Arg_PCS_Extensions;

EXTERN int asn1PD_rrlp_dec_SLR_Arg_PCS_Extensions (OSCTXT* pctxt, rrlp_dec_SLR_Arg_PCS_Extensions* pvalue);

EXTERN void asn1Free_rrlp_dec_SLR_Arg_PCS_Extensions (OSCTXT *pctxt, 
   rrlp_dec_SLR_Arg_PCS_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  SLR_ArgExtensionContainer                                 */
/*                                                            */
/**************************************************************/
/*
SLR-ArgExtensionContainer ::= SEQUENCE {
   privateExtensionList [0] PrivateExtensionList OPTIONAL,
   slr-Arg-PCS-Extensions [1] SLR-Arg-PCS-Extensions OPTIONAL,
   ...
}
*/
typedef struct EXTERN rrlp_dec_SLR_ArgExtensionContainer {
   struct {
      unsigned privateExtensionListPresent : 1;
      unsigned slr_Arg_PCS_ExtensionsPresent : 1;
   } m;
   rrlp_dec_PrivateExtensionList privateExtensionList;
   rrlp_dec_SLR_Arg_PCS_Extensions slr_Arg_PCS_Extensions;
   OSRTDList extElem1;
} rrlp_dec_SLR_ArgExtensionContainer;

EXTERN int asn1PD_rrlp_dec_SLR_ArgExtensionContainer (OSCTXT* pctxt, rrlp_dec_SLR_ArgExtensionContainer* pvalue);

EXTERN void asn1Free_rrlp_dec_SLR_ArgExtensionContainer (OSCTXT *pctxt, 
   rrlp_dec_SLR_ArgExtensionContainer* pvalue);

/* Value definitions */

#define ASN1V_maxNumOfPrivateExtensions 10

/**
 * Header file for ASN.1 module MAP-LCS-DataTypes
 */
/**************************************************************/
/*                                                            */
/*  Ext_GeographicalInformation                               */
/*                                                            */
/**************************************************************/
/*
Ext-GeographicalInformation ::= OCTET STRING (SIZE (1..maxExt-GeographicalInformation))
*/
typedef struct EXTERN rrlp_dec_Ext_GeographicalInformation {
   OSUINT32 numocts;
   OSOCTET data[20];
} rrlp_dec_Ext_GeographicalInformation;

EXTERN int asn1PD_rrlp_dec_Ext_GeographicalInformation (OSCTXT* pctxt, rrlp_dec_Ext_GeographicalInformation* pvalue);

/**************************************************************/
/*                                                            */
/*  VelocityEstimate                                          */
/*                                                            */
/**************************************************************/
/*
 the maximum length allows for further shapes in 3GPP TS 23.032 to be included in later 
 versions of 3GPP TS 29.002

VelocityEstimate ::= OCTET STRING (SIZE (4..7))
*/
typedef struct EXTERN rrlp_dec_VelocityEstimate {
   OSUINT32 numocts;
   OSOCTET data[7];
} rrlp_dec_VelocityEstimate;

EXTERN int asn1PD_rrlp_dec_VelocityEstimate (OSCTXT* pctxt, rrlp_dec_VelocityEstimate* pvalue);

/* Value definitions */

#define ASN1V_maxExt_GeographicalInformation 20

/**
 * Header file for ASN.1 module RRLP-Components
 */
/**************************************************************/
/*                                                            */
/*  Accuracy                                                  */
/*                                                            */
/**************************************************************/
/*
 The values of this field are defined in 3GPP TS 23.032 (Uncertainty code)

Accuracy ::= INTEGER (0..127)
*/
typedef OSUINT8 rrlp_dec_Accuracy;

EXTERN int asn1PD_rrlp_dec_Accuracy (OSCTXT* pctxt, rrlp_dec_Accuracy* pvalue);

/**************************************************************/
/*                                                            */
/*  AccuracyOpt                                               */
/*                                                            */
/**************************************************************/
/*
 Accuracy of the location estimation

AccuracyOpt ::= SEQUENCE {
   accuracy [0] Accuracy OPTIONAL
}
*/
typedef struct EXTERN rrlp_dec_AccuracyOpt {
   struct {
      unsigned accuracyPresent : 1;
   } m;
   rrlp_dec_Accuracy accuracy;
} rrlp_dec_AccuracyOpt;

EXTERN int asn1PD_rrlp_dec_AccuracyOpt (OSCTXT* pctxt, rrlp_dec_AccuracyOpt* pvalue);

/**************************************************************/
/*                                                            */
/*  MethodType                                                */
/*                                                            */
/**************************************************************/
/*


MethodType ::= CHOICE {
   msAssisted [0] AccuracyOpt,
   msBased [1] Accuracy,
   msBasedPref [2] Accuracy,
   msAssistedPref [3] Accuracy
}
*/
/* Choice tag constants */

#define T_rrlp_dec_MethodType_msAssisted 1
#define T_rrlp_dec_MethodType_msBased   2
#define T_rrlp_dec_MethodType_msBasedPref 3
#define T_rrlp_dec_MethodType_msAssistedPref 4

typedef struct EXTERN rrlp_dec_MethodType {
   OSUINT32 t;
   union {
      /* t = 1 */
      rrlp_dec_AccuracyOpt *msAssisted;
      /* t = 2 */
      rrlp_dec_Accuracy msBased;
      /* t = 3 */
      rrlp_dec_Accuracy msBasedPref;
      /* t = 4 */
      rrlp_dec_Accuracy msAssistedPref;
   } u;
} rrlp_dec_MethodType;

EXTERN int asn1PD_rrlp_dec_MethodType (OSCTXT* pctxt, rrlp_dec_MethodType* pvalue);

EXTERN void asn1Free_rrlp_dec_MethodType (OSCTXT *pctxt, rrlp_dec_MethodType* pvalue);

/**************************************************************/
/*                                                            */
/*  PositionMethod                                            */
/*                                                            */
/**************************************************************/
/*
 Position Method

PositionMethod ::= ENUMERATED { eotd(0), gps(1), gpsOrEOTD(2) }
*/
typedef enum {
   rrlp_dec_PositionMethod_eotd = 0,
   rrlp_dec_PositionMethod_gps = 1,
   rrlp_dec_PositionMethod_gpsOrEOTD = 2
} rrlp_dec_PositionMethod_Root;

typedef OSUINT32 rrlp_dec_PositionMethod;

EXTERN int asn1PD_rrlp_dec_PositionMethod (OSCTXT* pctxt, rrlp_dec_PositionMethod* pvalue);

/**************************************************************/
/*                                                            */
/*  MeasureResponseTime                                       */
/*                                                            */
/**************************************************************/
/*
 Measurement request response time

MeasureResponseTime ::= INTEGER (0..7)
*/
typedef OSUINT8 rrlp_dec_MeasureResponseTime;

EXTERN int asn1PD_rrlp_dec_MeasureResponseTime (OSCTXT* pctxt, rrlp_dec_MeasureResponseTime* pvalue);

/**************************************************************/
/*                                                            */
/*  UseMultipleSets                                           */
/*                                                            */
/**************************************************************/
/*
 useMultiple Sets, FFS!

UseMultipleSets ::= ENUMERATED { multipleSets(0), oneSet(1) }
*/
typedef enum {
   rrlp_dec_UseMultipleSets_multipleSets = 0,
   rrlp_dec_UseMultipleSets_oneSet = 1
} rrlp_dec_UseMultipleSets_Root;

typedef OSUINT32 rrlp_dec_UseMultipleSets;

EXTERN int asn1PD_rrlp_dec_UseMultipleSets (OSCTXT* pctxt, rrlp_dec_UseMultipleSets* pvalue);

/**************************************************************/
/*                                                            */
/*  EnvironmentCharacter                                      */
/*                                                            */
/**************************************************************/
/*
 Environment characterization

EnvironmentCharacter ::= ENUMERATED { badArea(0), notBadArea(1), mixedArea(2), ... }
*/
typedef enum {
   rrlp_dec_EnvironmentCharacter_badArea = 0,
   rrlp_dec_EnvironmentCharacter_notBadArea = 1,
   rrlp_dec_EnvironmentCharacter_mixedArea = 2
} rrlp_dec_EnvironmentCharacter_Root;

typedef OSUINT32 rrlp_dec_EnvironmentCharacter;

EXTERN int asn1PD_rrlp_dec_EnvironmentCharacter (OSCTXT* pctxt, rrlp_dec_EnvironmentCharacter* pvalue);

/**************************************************************/
/*                                                            */
/*  PositionInstruct                                          */
/*                                                            */
/**************************************************************/
/*
 add these defintions to RRLP-Components module
 Position instructions

PositionInstruct ::= SEQUENCE {
   methodType [0] MethodType,
   positionMethod [1] PositionMethod,
   measureResponseTime [2] MeasureResponseTime,
   useMultipleSets [3] UseMultipleSets,
   environmentCharacter [4] EnvironmentCharacter OPTIONAL
}
*/
typedef struct EXTERN rrlp_dec_PositionInstruct {
   struct {
      unsigned environmentCharacterPresent : 1;
   } m;
   rrlp_dec_MethodType methodType;
   rrlp_dec_PositionMethod positionMethod;
   rrlp_dec_MeasureResponseTime measureResponseTime;
   rrlp_dec_UseMultipleSets useMultipleSets;
   rrlp_dec_EnvironmentCharacter environmentCharacter;
} rrlp_dec_PositionInstruct;

EXTERN int asn1PD_rrlp_dec_PositionInstruct (OSCTXT* pctxt, rrlp_dec_PositionInstruct* pvalue);

EXTERN void asn1Free_rrlp_dec_PositionInstruct (OSCTXT *pctxt, 
   rrlp_dec_PositionInstruct* pvalue);

/**************************************************************/
/*                                                            */
/*  BCCHCarrier                                               */
/*                                                            */
/**************************************************************/
/*
 RF channel number of BCCH

BCCHCarrier ::= INTEGER (0..1023)
*/
typedef OSUINT16 rrlp_dec_BCCHCarrier;

EXTERN int asn1PD_rrlp_dec_BCCHCarrier (OSCTXT* pctxt, rrlp_dec_BCCHCarrier* pvalue);

/**************************************************************/
/*                                                            */
/*  BSIC                                                      */
/*                                                            */
/**************************************************************/
/*
 Base station Identity Code

BSIC ::= INTEGER (0..63)
*/
typedef OSUINT8 rrlp_dec_BSIC;

EXTERN int asn1PD_rrlp_dec_BSIC (OSCTXT* pctxt, rrlp_dec_BSIC* pvalue);

/**************************************************************/
/*                                                            */
/*  TimeSlotScheme                                            */
/*                                                            */
/**************************************************************/
/*
 Timeslot scheme

TimeSlotScheme ::= ENUMERATED { equalLength(0), variousLength(1) }
*/
typedef enum {
   rrlp_dec_TimeSlotScheme_equalLength = 0,
   rrlp_dec_TimeSlotScheme_variousLength = 1
} rrlp_dec_TimeSlotScheme_Root;

typedef OSUINT32 rrlp_dec_TimeSlotScheme;

EXTERN int asn1PD_rrlp_dec_TimeSlotScheme (OSCTXT* pctxt, rrlp_dec_TimeSlotScheme* pvalue);

/**************************************************************/
/*                                                            */
/*  BTSPosition                                               */
/*                                                            */
/**************************************************************/
/*
 ellipsoid point and
 ellipsoid point with altitude and uncertainty ellipsoid shapes are supported

BTSPosition ::= Ext-GeographicalInformation
*/
typedef rrlp_dec_Ext_GeographicalInformation rrlp_dec_BTSPosition;

EXTERN int asn1PD_rrlp_dec_BTSPosition (OSCTXT* pctxt, rrlp_dec_BTSPosition* pvalue);

/**************************************************************/
/*                                                            */
/*  ReferenceAssistData                                       */
/*                                                            */
/**************************************************************/
/*
 E-OTD reference BTS for Assitance data IE

ReferenceAssistData ::= SEQUENCE {
   bcchCarrier [0] BCCHCarrier,
   bsic [1] BSIC,
   timeSlotScheme [2] TimeSlotScheme,
   btsPosition [3] BTSPosition OPTIONAL
}
*/
typedef struct EXTERN rrlp_dec_ReferenceAssistData {
   struct {
      unsigned btsPositionPresent : 1;
   } m;
   rrlp_dec_BCCHCarrier bcchCarrier;
   rrlp_dec_BSIC bsic;
   rrlp_dec_TimeSlotScheme timeSlotScheme;
   rrlp_dec_BTSPosition btsPosition;
} rrlp_dec_ReferenceAssistData;

EXTERN int asn1PD_rrlp_dec_ReferenceAssistData (OSCTXT* pctxt, rrlp_dec_ReferenceAssistData* pvalue);

/**************************************************************/
/*                                                            */
/*  MultiFrameOffset                                          */
/*                                                            */
/**************************************************************/
/*
 Multiframe offset

MultiFrameOffset ::= INTEGER (0..51)
*/
typedef OSUINT8 rrlp_dec_MultiFrameOffset;

EXTERN int asn1PD_rrlp_dec_MultiFrameOffset (OSCTXT* pctxt, rrlp_dec_MultiFrameOffset* pvalue);

/**************************************************************/
/*                                                            */
/*  RoughRTD                                                  */
/*                                                            */
/**************************************************************/
/*
 The Multiframe Offset value 51 shall not be encoded by the transmitting entity and
 shall be treated by the receiving entity as 0.
 Rough RTD value between one base station and reference BTS

RoughRTD ::= INTEGER (0..1250)
*/
typedef OSUINT16 rrlp_dec_RoughRTD;

EXTERN int asn1PD_rrlp_dec_RoughRTD (OSCTXT* pctxt, rrlp_dec_RoughRTD* pvalue);

/**************************************************************/
/*                                                            */
/*  FineRTD                                                   */
/*                                                            */
/**************************************************************/
/*
 Fine RTD value between this BTS and the reference BTS	

FineRTD ::= INTEGER (0..255)
*/
typedef OSUINT8 rrlp_dec_FineRTD;

EXTERN int asn1PD_rrlp_dec_FineRTD (OSCTXT* pctxt, rrlp_dec_FineRTD* pvalue);

/**************************************************************/
/*                                                            */
/*  RelDistance                                               */
/*                                                            */
/**************************************************************/
/*
 Relative north/east distance

RelDistance ::= INTEGER (-200000..200000)
*/
typedef OSINT32 rrlp_dec_RelDistance;

EXTERN int asn1PD_rrlp_dec_RelDistance (OSCTXT* pctxt, rrlp_dec_RelDistance* pvalue);

/**************************************************************/
/*                                                            */
/*  RelativeAlt                                               */
/*                                                            */
/**************************************************************/
/*
 Relative altitude

RelativeAlt ::= INTEGER (-4000..4000)
*/
typedef OSINT16 rrlp_dec_RelativeAlt;

EXTERN int asn1PD_rrlp_dec_RelativeAlt (OSCTXT* pctxt, rrlp_dec_RelativeAlt* pvalue);

/**************************************************************/
/*                                                            */
/*  ReferenceWGS84                                            */
/*                                                            */
/**************************************************************/
/*
 Coordinates of neighbour BTS, WGS-84 ellipsoid

ReferenceWGS84 ::= SEQUENCE {
   relativeNorth [0] RelDistance,
   relativeEast [1] RelDistance,
   relativeAlt [2] RelativeAlt OPTIONAL
}
*/
typedef struct EXTERN rrlp_dec_ReferenceWGS84 {
   struct {
      unsigned relativeAltPresent : 1;
   } m;
   rrlp_dec_RelDistance relativeNorth;
   rrlp_dec_RelDistance relativeEast;
   rrlp_dec_RelativeAlt relativeAlt;
} rrlp_dec_ReferenceWGS84;

EXTERN int asn1PD_rrlp_dec_ReferenceWGS84 (OSCTXT* pctxt, rrlp_dec_ReferenceWGS84* pvalue);

/**************************************************************/
/*                                                            */
/*  CalcAssistanceBTS                                         */
/*                                                            */
/**************************************************************/
/*
 E-OTD Location calculation assistance data,
 CalcAssistanceBTS element is optional not subfields

CalcAssistanceBTS ::= SEQUENCE {
   fineRTD [0] FineRTD,
   referenceWGS84 [1] ReferenceWGS84
}
*/
typedef struct EXTERN rrlp_dec_CalcAssistanceBTS {
   rrlp_dec_FineRTD fineRTD;
   rrlp_dec_ReferenceWGS84 referenceWGS84;
} rrlp_dec_CalcAssistanceBTS;

EXTERN int asn1PD_rrlp_dec_CalcAssistanceBTS (OSCTXT* pctxt, rrlp_dec_CalcAssistanceBTS* pvalue);

/**************************************************************/
/*                                                            */
/*  MsrAssistBTS                                              */
/*                                                            */
/**************************************************************/
/*
MsrAssistBTS ::= SEQUENCE {
   bcchCarrier [0] BCCHCarrier,
   bsic [1] BSIC,
   multiFrameOffset [2] MultiFrameOffset,
   timeSlotScheme [3] TimeSlotScheme,
   roughRTD [4] RoughRTD,
   calcAssistanceBTS [5] CalcAssistanceBTS OPTIONAL
}
*/
typedef struct EXTERN rrlp_dec_MsrAssistBTS {
   struct {
      unsigned calcAssistanceBTSPresent : 1;
   } m;
   rrlp_dec_BCCHCarrier bcchCarrier;
   rrlp_dec_BSIC bsic;
   rrlp_dec_MultiFrameOffset multiFrameOffset;
   rrlp_dec_TimeSlotScheme timeSlotScheme;
   rrlp_dec_RoughRTD roughRTD;
   rrlp_dec_CalcAssistanceBTS calcAssistanceBTS;
} rrlp_dec_MsrAssistBTS;

EXTERN int asn1PD_rrlp_dec_MsrAssistBTS (OSCTXT* pctxt, rrlp_dec_MsrAssistBTS* pvalue);

/**************************************************************/
/*                                                            */
/*  SeqOfMsrAssistBTS                                         */
/*                                                            */
/**************************************************************/
/*
SeqOfMsrAssistBTS ::= SEQUENCE (SIZE (1..15)) OF MsrAssistBTS
*/
typedef struct EXTERN rrlp_dec_SeqOfMsrAssistBTS {
   OSUINT32 n;
   rrlp_dec_MsrAssistBTS *elem;
} rrlp_dec_SeqOfMsrAssistBTS;

EXTERN int asn1PD_rrlp_dec_SeqOfMsrAssistBTS (OSCTXT* pctxt, rrlp_dec_SeqOfMsrAssistBTS* pvalue);

EXTERN void asn1Free_rrlp_dec_SeqOfMsrAssistBTS (OSCTXT *pctxt, 
   rrlp_dec_SeqOfMsrAssistBTS* pvalue);

/**************************************************************/
/*                                                            */
/*  MsrAssistData                                             */
/*                                                            */
/**************************************************************/
/*
 E-OTD measurement assistance data IE
 The total number of neighbors in this element (MsrAssistData)
 and in SystemInfoAssistData element (presented neighbors
 can be at a maximum 15!)

MsrAssistData ::= SEQUENCE {
   msrAssistList [0] SeqOfMsrAssistBTS
}
*/
typedef struct EXTERN rrlp_dec_MsrAssistData {
   rrlp_dec_SeqOfMsrAssistBTS msrAssistList;
} rrlp_dec_MsrAssistData;

EXTERN int asn1PD_rrlp_dec_MsrAssistData (OSCTXT* pctxt, rrlp_dec_MsrAssistData* pvalue);

EXTERN void asn1Free_rrlp_dec_MsrAssistData (OSCTXT *pctxt, 
   rrlp_dec_MsrAssistData* pvalue);

/**************************************************************/
/*                                                            */
/*  AssistBTSData                                             */
/*                                                            */
/**************************************************************/
/*
 Actual assistance data for system information base station

AssistBTSData ::= SEQUENCE {
   bsic [0] BSIC,
   multiFrameOffset [1] MultiFrameOffset,
   timeSlotScheme [2] TimeSlotScheme,
   roughRTD [3] RoughRTD,
   calcAssistanceBTS [4] CalcAssistanceBTS OPTIONAL
}
*/
typedef struct EXTERN rrlp_dec_AssistBTSData {
   struct {
      unsigned calcAssistanceBTSPresent : 1;
   } m;
   rrlp_dec_BSIC bsic;
   rrlp_dec_MultiFrameOffset multiFrameOffset;
   rrlp_dec_TimeSlotScheme timeSlotScheme;
   rrlp_dec_RoughRTD roughRTD;
   rrlp_dec_CalcAssistanceBTS calcAssistanceBTS;
} rrlp_dec_AssistBTSData;

EXTERN int asn1PD_rrlp_dec_AssistBTSData (OSCTXT* pctxt, rrlp_dec_AssistBTSData* pvalue);

/**************************************************************/
/*                                                            */
/*  SystemInfoAssistBTS                                       */
/*                                                            */
/**************************************************************/
/*
 whether n.th is present or not ?

SystemInfoAssistBTS ::= CHOICE {
   notPresent [0] NULL,
   present [1] AssistBTSData
}
*/
/* Choice tag constants */

#define T_rrlp_dec_SystemInfoAssistBTS_notPresent 1
#define T_rrlp_dec_SystemInfoAssistBTS_present 2

typedef struct EXTERN rrlp_dec_SystemInfoAssistBTS {
   OSUINT32 t;
   union {
      /* t = 1 */
      /* t = 2 */
      rrlp_dec_AssistBTSData *present;
   } u;
} rrlp_dec_SystemInfoAssistBTS;

EXTERN int asn1PD_rrlp_dec_SystemInfoAssistBTS (OSCTXT* pctxt, rrlp_dec_SystemInfoAssistBTS* pvalue);

EXTERN void asn1Free_rrlp_dec_SystemInfoAssistBTS (OSCTXT *pctxt, 
   rrlp_dec_SystemInfoAssistBTS* pvalue);

/**************************************************************/
/*                                                            */
/*  SeqOfSystemInfoAssistBTS                                  */
/*                                                            */
/**************************************************************/
/*
SeqOfSystemInfoAssistBTS ::= SEQUENCE (SIZE (1..32)) OF SystemInfoAssistBTS
*/
typedef struct EXTERN rrlp_dec_SeqOfSystemInfoAssistBTS {
   OSUINT32 n;
   rrlp_dec_SystemInfoAssistBTS *elem;
} rrlp_dec_SeqOfSystemInfoAssistBTS;

EXTERN int asn1PD_rrlp_dec_SeqOfSystemInfoAssistBTS (OSCTXT* pctxt, rrlp_dec_SeqOfSystemInfoAssistBTS* pvalue);

EXTERN void asn1Free_rrlp_dec_SeqOfSystemInfoAssistBTS (OSCTXT *pctxt, 
   rrlp_dec_SeqOfSystemInfoAssistBTS* pvalue);

/**************************************************************/
/*                                                            */
/*  SystemInfoAssistData                                      */
/*                                                            */
/**************************************************************/
/*
 The RoughRTD value 1250 shall not be encoded by the transmitting entity and shall
 be treated by the receiving entity as 0.
 E-OTD Measurement assistance data for system information List IE
 The total number of base stations in this element (SystemInfoAssistData
 presented neighbors) and in MsrAssistData element can be at a maximum 15.

SystemInfoAssistData ::= SEQUENCE {
   systemInfoAssistList [0] SeqOfSystemInfoAssistBTS
}
*/
typedef struct EXTERN rrlp_dec_SystemInfoAssistData {
   rrlp_dec_SeqOfSystemInfoAssistBTS systemInfoAssistList;
} rrlp_dec_SystemInfoAssistData;

EXTERN int asn1PD_rrlp_dec_SystemInfoAssistData (OSCTXT* pctxt, rrlp_dec_SystemInfoAssistData* pvalue);

EXTERN void asn1Free_rrlp_dec_SystemInfoAssistData (OSCTXT *pctxt, 
   rrlp_dec_SystemInfoAssistData* pvalue);

/**************************************************************/
/*                                                            */
/*  GPSTOW23b                                                 */
/*                                                            */
/**************************************************************/
/*
 GPSTOW, range 0-604799.92, resolution 0.08 sec, 23-bit presentation

GPSTOW23b ::= INTEGER (0..7559999)
*/
typedef OSUINT32 rrlp_dec_GPSTOW23b;

EXTERN int asn1PD_rrlp_dec_GPSTOW23b (OSCTXT* pctxt, rrlp_dec_GPSTOW23b* pvalue);

/**************************************************************/
/*                                                            */
/*  GPSWeek                                                   */
/*                                                            */
/**************************************************************/
/*
 GPS week number

GPSWeek ::= INTEGER (0..1023)
*/
typedef OSUINT16 rrlp_dec_GPSWeek;

EXTERN int asn1PD_rrlp_dec_GPSWeek (OSCTXT* pctxt, rrlp_dec_GPSWeek* pvalue);

/**************************************************************/
/*                                                            */
/*  GPSTime                                                   */
/*                                                            */
/**************************************************************/
/*
 GPS Time includes week number and time-of-week (TOW)

GPSTime ::= SEQUENCE {
   gpsTOW23b [0] GPSTOW23b,
   gpsWeek [1] GPSWeek
}
*/
typedef struct EXTERN rrlp_dec_GPSTime {
   rrlp_dec_GPSTOW23b gpsTOW23b;
   rrlp_dec_GPSWeek gpsWeek;
} rrlp_dec_GPSTime;

EXTERN int asn1PD_rrlp_dec_GPSTime (OSCTXT* pctxt, rrlp_dec_GPSTime* pvalue);

/**************************************************************/
/*                                                            */
/*  FrameNumber                                               */
/*                                                            */
/**************************************************************/
/*
 Frame number

FrameNumber ::= INTEGER (0..2097151)
*/
typedef OSUINT32 rrlp_dec_FrameNumber;

EXTERN int asn1PD_rrlp_dec_FrameNumber (OSCTXT* pctxt, rrlp_dec_FrameNumber* pvalue);

/**************************************************************/
/*                                                            */
/*  TimeSlot                                                  */
/*                                                            */
/**************************************************************/
/*
 Time slot number

TimeSlot ::= INTEGER (0..7)
*/
typedef OSUINT8 rrlp_dec_TimeSlot;

EXTERN int asn1PD_rrlp_dec_TimeSlot (OSCTXT* pctxt, rrlp_dec_TimeSlot* pvalue);

/**************************************************************/
/*                                                            */
/*  BitNumber                                                 */
/*                                                            */
/**************************************************************/
/*
 Bit number

BitNumber ::= INTEGER (0..156)
*/
typedef OSUINT8 rrlp_dec_BitNumber;

EXTERN int asn1PD_rrlp_dec_BitNumber (OSCTXT* pctxt, rrlp_dec_BitNumber* pvalue);

/**************************************************************/
/*                                                            */
/*  GSMTime                                                   */
/*                                                            */
/**************************************************************/
/*
GSMTime ::= SEQUENCE {
   bcchCarrier [0] BCCHCarrier,
   bsic [1] BSIC,
   frameNumber [2] FrameNumber,
   timeSlot [3] TimeSlot,
   bitNumber [4] BitNumber
}
*/
typedef struct EXTERN rrlp_dec_GSMTime {
   rrlp_dec_BCCHCarrier bcchCarrier;
   rrlp_dec_BSIC bsic;
   rrlp_dec_FrameNumber frameNumber;
   rrlp_dec_TimeSlot timeSlot;
   rrlp_dec_BitNumber bitNumber;
} rrlp_dec_GSMTime;

EXTERN int asn1PD_rrlp_dec_GSMTime (OSCTXT* pctxt, rrlp_dec_GSMTime* pvalue);

/**************************************************************/
/*                                                            */
/*  SatelliteID                                               */
/*                                                            */
/**************************************************************/
/*
SatelliteID ::= INTEGER (0..63)
*/
typedef OSUINT8 rrlp_dec_SatelliteID;

EXTERN int asn1PD_rrlp_dec_SatelliteID (OSCTXT* pctxt, rrlp_dec_SatelliteID* pvalue);

/**************************************************************/
/*                                                            */
/*  TLMWord                                                   */
/*                                                            */
/**************************************************************/
/*
 TLM Word, 14 bits

TLMWord ::= INTEGER (0..16383)
*/
typedef OSUINT16 rrlp_dec_TLMWord;

EXTERN int asn1PD_rrlp_dec_TLMWord (OSCTXT* pctxt, rrlp_dec_TLMWord* pvalue);

/**************************************************************/
/*                                                            */
/*  AntiSpoofFlag                                             */
/*                                                            */
/**************************************************************/
/*
 Anti-Spoof flag

AntiSpoofFlag ::= INTEGER (0..1)
*/
typedef OSUINT8 rrlp_dec_AntiSpoofFlag;

EXTERN int asn1PD_rrlp_dec_AntiSpoofFlag (OSCTXT* pctxt, rrlp_dec_AntiSpoofFlag* pvalue);

/**************************************************************/
/*                                                            */
/*  AlertFlag                                                 */
/*                                                            */
/**************************************************************/
/*
 Alert flag

AlertFlag ::= INTEGER (0..1)
*/
typedef OSUINT8 rrlp_dec_AlertFlag;

EXTERN int asn1PD_rrlp_dec_AlertFlag (OSCTXT* pctxt, rrlp_dec_AlertFlag* pvalue);

/**************************************************************/
/*                                                            */
/*  TLMReservedBits                                           */
/*                                                            */
/**************************************************************/
/*
 Reserved bits in TLM word, MSB occurs earlier in TLM Word transmitted by satellite

TLMReservedBits ::= INTEGER (0..3)
*/
typedef OSUINT8 rrlp_dec_TLMReservedBits;

EXTERN int asn1PD_rrlp_dec_TLMReservedBits (OSCTXT* pctxt, rrlp_dec_TLMReservedBits* pvalue);

/**************************************************************/
/*                                                            */
/*  GPSTOWAssistElement                                       */
/*                                                            */
/**************************************************************/
/*
GPSTOWAssistElement ::= SEQUENCE {
   satelliteID [0] SatelliteID,
   tlmWord [1] TLMWord,
   antiSpoof [2] AntiSpoofFlag,
   alert [3] AlertFlag,
   tlmRsvdBits [4] TLMReservedBits
}
*/
typedef struct EXTERN rrlp_dec_GPSTOWAssistElement {
   rrlp_dec_SatelliteID satelliteID;
   rrlp_dec_TLMWord tlmWord;
   rrlp_dec_AntiSpoofFlag antiSpoof;
   rrlp_dec_AlertFlag alert;
   rrlp_dec_TLMReservedBits tlmRsvdBits;
} rrlp_dec_GPSTOWAssistElement;

EXTERN int asn1PD_rrlp_dec_GPSTOWAssistElement (OSCTXT* pctxt, rrlp_dec_GPSTOWAssistElement* pvalue);

/**************************************************************/
/*                                                            */
/*  GPSTOWAssist                                              */
/*                                                            */
/**************************************************************/
/*
 GPSTOWAssist consists of TLM message, Anti-spoof flag, Alert flag, and 2 reserved bits in TLM Word
 for each visible satellite.
 N_SAT can be read from number of elements in GPSTOWAssist

GPSTOWAssist ::= SEQUENCE (SIZE (1..12)) OF GPSTOWAssistElement
*/
typedef struct EXTERN rrlp_dec_GPSTOWAssist {
   OSUINT32 n;
   rrlp_dec_GPSTOWAssistElement *elem;
} rrlp_dec_GPSTOWAssist;

EXTERN int asn1PD_rrlp_dec_GPSTOWAssist (OSCTXT* pctxt, rrlp_dec_GPSTOWAssist* pvalue);

EXTERN void asn1Free_rrlp_dec_GPSTOWAssist (OSCTXT *pctxt, 
   rrlp_dec_GPSTOWAssist* pvalue);

/**************************************************************/
/*                                                            */
/*  ReferenceTime                                             */
/*                                                            */
/**************************************************************/
/*
ReferenceTime ::= SEQUENCE {
   gpsTime [0] GPSTime,
   gsmTime [1] GSMTime OPTIONAL,
   gpsTowAssist [2] GPSTOWAssist OPTIONAL
}
*/
typedef struct EXTERN rrlp_dec_ReferenceTime {
   struct {
      unsigned gsmTimePresent : 1;
      unsigned gpsTowAssistPresent : 1;
   } m;
   rrlp_dec_GPSTime gpsTime;
   rrlp_dec_GSMTime gsmTime;
   rrlp_dec_GPSTOWAssist gpsTowAssist;
} rrlp_dec_ReferenceTime;

EXTERN int asn1PD_rrlp_dec_ReferenceTime (OSCTXT* pctxt, rrlp_dec_ReferenceTime* pvalue);

EXTERN void asn1Free_rrlp_dec_ReferenceTime (OSCTXT *pctxt, 
   rrlp_dec_ReferenceTime* pvalue);

/**************************************************************/
/*                                                            */
/*  RefLocation                                               */
/*                                                            */
/**************************************************************/
/*
 Reference Location IE

RefLocation ::= SEQUENCE {
   threeDLocation [0] Ext-GeographicalInformation
}
*/
typedef struct EXTERN rrlp_dec_RefLocation {
   rrlp_dec_Ext_GeographicalInformation threeDLocation;
} rrlp_dec_RefLocation;

EXTERN int asn1PD_rrlp_dec_RefLocation (OSCTXT* pctxt, rrlp_dec_RefLocation* pvalue);

/**************************************************************/
/*                                                            */
/*  SatElement                                                */
/*                                                            */
/**************************************************************/
/*
 number of correction for satellites

SatElement ::= SEQUENCE {
   satelliteID [0] SatelliteID,
   iode [1] INTEGER (0..239),
   udre [2] INTEGER (0..3),
   pseudoRangeCor [3] INTEGER (-2047..2047),
   rangeRateCor [4] INTEGER (-127..127),
   deltaPseudoRangeCor2 [5] INTEGER (-127..127),
   deltaRangeRateCor2 [6] INTEGER (-7..7),
   deltaPseudoRangeCor3 [7] INTEGER (-127..127),
   deltaRangeRateCor3 [8] INTEGER (-7..7)
}
*/
typedef struct EXTERN rrlp_dec_SatElement {
   rrlp_dec_SatelliteID satelliteID;
   OSUINT8 iode;
   OSUINT8 udre;
   OSINT16 pseudoRangeCor;
   OSINT8 rangeRateCor;
   OSINT8 deltaPseudoRangeCor2;
   OSINT8 deltaRangeRateCor2;
   OSINT8 deltaPseudoRangeCor3;
   OSINT8 deltaRangeRateCor3;
} rrlp_dec_SatElement;

EXTERN int asn1PD_rrlp_dec_SatElement (OSCTXT* pctxt, rrlp_dec_SatElement* pvalue);

/**************************************************************/
/*                                                            */
/*  SeqOfSatElement                                           */
/*                                                            */
/**************************************************************/
/*
SeqOfSatElement ::= SEQUENCE (SIZE (1..16)) OF SatElement
*/
typedef struct EXTERN rrlp_dec_SeqOfSatElement {
   OSUINT32 n;
   rrlp_dec_SatElement *elem;
} rrlp_dec_SeqOfSatElement;

EXTERN int asn1PD_rrlp_dec_SeqOfSatElement (OSCTXT* pctxt, rrlp_dec_SeqOfSatElement* pvalue);

EXTERN void asn1Free_rrlp_dec_SeqOfSatElement (OSCTXT *pctxt, 
   rrlp_dec_SeqOfSatElement* pvalue);

/**************************************************************/
/*                                                            */
/*  DGPSCorrections                                           */
/*                                                            */
/**************************************************************/
/*
 DGPS Corrections IE

DGPSCorrections ::= SEQUENCE {
   gpsTOW [0] INTEGER (0..604799),
   status [1] INTEGER (0..7),
   satList [2] SeqOfSatElement
}
*/
typedef struct EXTERN rrlp_dec_DGPSCorrections {
   OSUINT32 gpsTOW;
   OSUINT8 status;
   rrlp_dec_SeqOfSatElement satList;
} rrlp_dec_DGPSCorrections;

EXTERN int asn1PD_rrlp_dec_DGPSCorrections (OSCTXT* pctxt, rrlp_dec_DGPSCorrections* pvalue);

EXTERN void asn1Free_rrlp_dec_DGPSCorrections (OSCTXT *pctxt, 
   rrlp_dec_DGPSCorrections* pvalue);

/**************************************************************/
/*                                                            */
/*  EphemerisSubframe1Reserved                                */
/*                                                            */
/**************************************************************/
/*
 Reserved bits in subframe 1 of navigation message

EphemerisSubframe1Reserved ::= SEQUENCE {
   reserved1 [0] INTEGER (0..8388607),
   reserved2 [1] INTEGER (0..16777215),
   reserved3 [2] INTEGER (0..16777215),
   reserved4 [3] INTEGER (0..65535)
}
*/
typedef struct EXTERN rrlp_dec_EphemerisSubframe1Reserved {
   OSUINT32 reserved1;
   OSUINT32 reserved2;
   OSUINT32 reserved3;
   OSUINT16 reserved4;
} rrlp_dec_EphemerisSubframe1Reserved;

EXTERN int asn1PD_rrlp_dec_EphemerisSubframe1Reserved (OSCTXT* pctxt, rrlp_dec_EphemerisSubframe1Reserved* pvalue);

/**************************************************************/
/*                                                            */
/*  UncompressedEphemeris                                     */
/*                                                            */
/**************************************************************/
/*
 Uncompressed satellite emhemeris and clock corrections

UncompressedEphemeris ::= SEQUENCE {
   ephemCodeOnL2 [0] INTEGER (0..3),
   ephemURA [1] INTEGER (0..15),
   ephemSVhealth [2] INTEGER (0..63),
   ephemIODC [3] INTEGER (0..1023),
   ephemL2Pflag [4] INTEGER (0..1),
   ephemSF1Rsvd [5] EphemerisSubframe1Reserved,
   ephemTgd [6] INTEGER (-128..127),
   ephemToc [7] INTEGER (0..37799),
   ephemAF2 [8] INTEGER (-128..127),
   ephemAF1 [9] INTEGER (-32768..32767),
   ephemAF0 [10] INTEGER (-2097152..2097151),
   ephemCrs [11] INTEGER (-32768..32767),
   ephemDeltaN [12] INTEGER (-32768..32767),
   ephemM0 [13] INTEGER (-2147483648..2147483647),
   ephemCuc [14] INTEGER (-32768..32767),
   ephemE [15] INTEGER (0..4294967295),
   ephemCus [16] INTEGER (-32768..32767),
   ephemAPowerHalf [17] INTEGER (0..4294967295),
   ephemToe [18] INTEGER (0..37799),
   ephemFitFlag [19] INTEGER (0..1),
   ephemAODA [20] INTEGER (0..31),
   ephemCic [21] INTEGER (-32768..32767),
   ephemOmegaA0 [22] INTEGER (-2147483648..2147483647),
   ephemCis [23] INTEGER (-32768..32767),
   ephemI0 [24] INTEGER (-2147483648..2147483647),
   ephemCrc [25] INTEGER (-32768..32767),
   ephemW [26] INTEGER (-2147483648..2147483647),
   ephemOmegaADot [27] INTEGER (-8388608..8388607),
   ephemIDot [28] INTEGER (-8192..8191)
}
*/
typedef struct EXTERN rrlp_dec_UncompressedEphemeris {
   OSUINT8 ephemCodeOnL2;
   OSUINT8 ephemURA;
   OSUINT8 ephemSVhealth;
   OSUINT16 ephemIODC;
   OSUINT8 ephemL2Pflag;
   rrlp_dec_EphemerisSubframe1Reserved ephemSF1Rsvd;
   OSINT8 ephemTgd;
   OSUINT16 ephemToc;
   OSINT8 ephemAF2;
   OSINT16 ephemAF1;
   OSINT32 ephemAF0;
   OSINT16 ephemCrs;
   OSINT16 ephemDeltaN;
   OSINT32 ephemM0;
   OSINT16 ephemCuc;
   OSUINT32 ephemE;
   OSINT16 ephemCus;
   OSUINT32 ephemAPowerHalf;
   OSUINT16 ephemToe;
   OSUINT8 ephemFitFlag;
   OSUINT8 ephemAODA;
   OSINT16 ephemCic;
   OSINT32 ephemOmegaA0;
   OSINT16 ephemCis;
   OSINT32 ephemI0;
   OSINT16 ephemCrc;
   OSINT32 ephemW;
   OSINT32 ephemOmegaADot;
   OSINT16 ephemIDot;
} rrlp_dec_UncompressedEphemeris;

EXTERN int asn1PD_rrlp_dec_UncompressedEphemeris (OSCTXT* pctxt, rrlp_dec_UncompressedEphemeris* pvalue);

/**************************************************************/
/*                                                            */
/*  SatStatus                                                 */
/*                                                            */
/**************************************************************/
/*
 the Status of the navigation model

SatStatus ::= CHOICE {
   newSatelliteAndModelUC [0] UncompressedEphemeris,
   oldSatelliteAndModel [1] NULL,
   newNaviModelUC [2] UncompressedEphemeris,
   ...
}
*/
/* Choice tag constants */

#define T_rrlp_dec_SatStatus_newSatelliteAndModelUC 1
#define T_rrlp_dec_SatStatus_oldSatelliteAndModel 2
#define T_rrlp_dec_SatStatus_newNaviModelUC 3
#define T_rrlp_dec_SatStatus_extElem1   4

typedef struct EXTERN rrlp_dec_SatStatus {
   OSUINT32 t;
   union {
      /* t = 1 */
      rrlp_dec_UncompressedEphemeris *newSatelliteAndModelUC;
      /* t = 2 */
      /* t = 3 */
      rrlp_dec_UncompressedEphemeris *newNaviModelUC;
      /* t = 4 */
      ASN1OpenType *extElem1;
   } u;
} rrlp_dec_SatStatus;

EXTERN int asn1PD_rrlp_dec_SatStatus (OSCTXT* pctxt, rrlp_dec_SatStatus* pvalue);

EXTERN void asn1Free_rrlp_dec_SatStatus (OSCTXT *pctxt, rrlp_dec_SatStatus* pvalue);

/**************************************************************/
/*                                                            */
/*  NavModelElement                                           */
/*                                                            */
/**************************************************************/
/*
NavModelElement ::= SEQUENCE {
   satelliteID [0] SatelliteID,
   satStatus [1] SatStatus
}
*/
typedef struct EXTERN rrlp_dec_NavModelElement {
   rrlp_dec_SatelliteID satelliteID;
   rrlp_dec_SatStatus satStatus;
} rrlp_dec_NavModelElement;

EXTERN int asn1PD_rrlp_dec_NavModelElement (OSCTXT* pctxt, rrlp_dec_NavModelElement* pvalue);

EXTERN void asn1Free_rrlp_dec_NavModelElement (OSCTXT *pctxt, 
   rrlp_dec_NavModelElement* pvalue);

/**************************************************************/
/*                                                            */
/*  SeqOfNavModelElement                                      */
/*                                                            */
/**************************************************************/
/*
 navigation model satellite list

SeqOfNavModelElement ::= SEQUENCE (SIZE (1..16)) OF NavModelElement
*/
typedef struct EXTERN rrlp_dec_SeqOfNavModelElement {
   OSUINT32 n;
   rrlp_dec_NavModelElement *elem;
} rrlp_dec_SeqOfNavModelElement;

EXTERN int asn1PD_rrlp_dec_SeqOfNavModelElement (OSCTXT* pctxt, rrlp_dec_SeqOfNavModelElement* pvalue);

EXTERN void asn1Free_rrlp_dec_SeqOfNavModelElement (OSCTXT *pctxt, 
   rrlp_dec_SeqOfNavModelElement* pvalue);

/**************************************************************/
/*                                                            */
/*  NavigationModel                                           */
/*                                                            */
/**************************************************************/
/*
 identifies satellite
 Navigation Model IE

NavigationModel ::= SEQUENCE {
   navModelList [0] SeqOfNavModelElement
}
*/
typedef struct EXTERN rrlp_dec_NavigationModel {
   rrlp_dec_SeqOfNavModelElement navModelList;
} rrlp_dec_NavigationModel;

EXTERN int asn1PD_rrlp_dec_NavigationModel (OSCTXT* pctxt, rrlp_dec_NavigationModel* pvalue);

EXTERN void asn1Free_rrlp_dec_NavigationModel (OSCTXT *pctxt, 
   rrlp_dec_NavigationModel* pvalue);

/**************************************************************/
/*                                                            */
/*  IonosphericModel                                          */
/*                                                            */
/**************************************************************/
/*
 Ionospheric Model IE

IonosphericModel ::= SEQUENCE {
   alfa0 [0] INTEGER (-128..127),
   alfa1 [1] INTEGER (-128..127),
   alfa2 [2] INTEGER (-128..127),
   alfa3 [3] INTEGER (-128..127),
   beta0 [4] INTEGER (-128..127),
   beta1 [5] INTEGER (-128..127),
   beta2 [6] INTEGER (-128..127),
   beta3 [7] INTEGER (-128..127)
}
*/
typedef struct EXTERN rrlp_dec_IonosphericModel {
   OSINT8 alfa0;
   OSINT8 alfa1;
   OSINT8 alfa2;
   OSINT8 alfa3;
   OSINT8 beta0;
   OSINT8 beta1;
   OSINT8 beta2;
   OSINT8 beta3;
} rrlp_dec_IonosphericModel;

EXTERN int asn1PD_rrlp_dec_IonosphericModel (OSCTXT* pctxt, rrlp_dec_IonosphericModel* pvalue);

/**************************************************************/
/*                                                            */
/*  UTCModel                                                  */
/*                                                            */
/**************************************************************/
/*
 Universal Time Coordinate Model

UTCModel ::= SEQUENCE {
   utcA1 [0] INTEGER (-8388608..8388607),
   utcA0 [1] INTEGER (-2147483648..2147483647),
   utcTot [2] INTEGER (0..255),
   utcWNt [3] INTEGER (0..255),
   utcDeltaTls [4] INTEGER (-128..127),
   utcWNlsf [5] INTEGER (0..255),
   utcDN [6] INTEGER (-128..127),
   utcDeltaTlsf [7] INTEGER (-128..127)
}
*/
typedef struct EXTERN rrlp_dec_UTCModel {
   OSINT32 utcA1;
   OSINT32 utcA0;
   OSUINT8 utcTot;
   OSUINT8 utcWNt;
   OSINT8 utcDeltaTls;
   OSUINT8 utcWNlsf;
   OSINT8 utcDN;
   OSINT8 utcDeltaTlsf;
} rrlp_dec_UTCModel;

EXTERN int asn1PD_rrlp_dec_UTCModel (OSCTXT* pctxt, rrlp_dec_UTCModel* pvalue);

/**************************************************************/
/*                                                            */
/*  AlmanacElement                                            */
/*                                                            */
/**************************************************************/
/*
 Almanac info once per satellite

AlmanacElement ::= SEQUENCE {
   satelliteID [0] SatelliteID,
   almanacE [1] INTEGER (0..65535),
   alamanacToa [2] INTEGER (0..255),
   almanacKsii [3] INTEGER (-32768..32767),
   almanacOmegaDot [4] INTEGER (-32768..32767),
   almanacSVhealth [5] INTEGER (0..255),
   almanacAPowerHalf [6] INTEGER (0..16777215),
   almanacOmega0 [7] INTEGER (-8388608..8388607),
   almanacW [8] INTEGER (-8388608..8388607),
   almanacM0 [9] INTEGER (-8388608..8388607),
   almanacAF0 [10] INTEGER (-1024..1023),
   almanacAF1 [11] INTEGER (-1024..1023)
}
*/
typedef struct EXTERN rrlp_dec_AlmanacElement {
   rrlp_dec_SatelliteID satelliteID;
   OSUINT16 almanacE;
   OSUINT8 alamanacToa;
   OSINT16 almanacKsii;
   OSINT16 almanacOmegaDot;
   OSUINT8 almanacSVhealth;
   OSUINT32 almanacAPowerHalf;
   OSINT32 almanacOmega0;
   OSINT32 almanacW;
   OSINT32 almanacM0;
   OSINT16 almanacAF0;
   OSINT16 almanacAF1;
} rrlp_dec_AlmanacElement;

EXTERN int asn1PD_rrlp_dec_AlmanacElement (OSCTXT* pctxt, rrlp_dec_AlmanacElement* pvalue);

/**************************************************************/
/*                                                            */
/*  SeqOfAlmanacElement                                       */
/*                                                            */
/**************************************************************/
/*
SeqOfAlmanacElement ::= SEQUENCE (SIZE (1..64)) OF AlmanacElement
*/
typedef struct EXTERN rrlp_dec_SeqOfAlmanacElement {
   OSUINT32 n;
   rrlp_dec_AlmanacElement *elem;
} rrlp_dec_SeqOfAlmanacElement;

EXTERN int asn1PD_rrlp_dec_SeqOfAlmanacElement (OSCTXT* pctxt, rrlp_dec_SeqOfAlmanacElement* pvalue);

EXTERN void asn1Free_rrlp_dec_SeqOfAlmanacElement (OSCTXT *pctxt, 
   rrlp_dec_SeqOfAlmanacElement* pvalue);

/**************************************************************/
/*                                                            */
/*  Almanac                                                   */
/*                                                            */
/**************************************************************/
/*
 Almanac, Long term model
 NOTE: These are parameters are subset of the ephemeris
 NOTE: But with reduced resolution and accuracy

Almanac ::= SEQUENCE {
   alamanacWNa [0] INTEGER (0..255),
   almanacList [1] SeqOfAlmanacElement
}
*/
typedef struct EXTERN rrlp_dec_Almanac {
   OSUINT8 alamanacWNa;
   rrlp_dec_SeqOfAlmanacElement almanacList;
} rrlp_dec_Almanac;

EXTERN int asn1PD_rrlp_dec_Almanac (OSCTXT* pctxt, rrlp_dec_Almanac* pvalue);

EXTERN void asn1Free_rrlp_dec_Almanac (OSCTXT *pctxt, rrlp_dec_Almanac* pvalue);

/**************************************************************/
/*                                                            */
/*  TimeRelation                                              */
/*                                                            */
/**************************************************************/
/*
 the relationship between GPS time and air-interface timing

TimeRelation ::= SEQUENCE {
   gpsTOW [0] GPSTOW23b,
   gsmTime [1] GSMTime OPTIONAL
}
*/
typedef struct EXTERN rrlp_dec_TimeRelation {
   struct {
      unsigned gsmTimePresent : 1;
   } m;
   rrlp_dec_GPSTOW23b gpsTOW;
   rrlp_dec_GSMTime gsmTime;
} rrlp_dec_TimeRelation;

EXTERN int asn1PD_rrlp_dec_TimeRelation (OSCTXT* pctxt, rrlp_dec_TimeRelation* pvalue);

/**************************************************************/
/*                                                            */
/*  AddionalDopplerFields                                     */
/*                                                            */
/**************************************************************/
/*
AddionalDopplerFields ::= SEQUENCE {
   doppler1 [0] INTEGER (0..63),
   dopplerUncertainty [1] INTEGER (0..7)
}
*/
typedef struct EXTERN rrlp_dec_AddionalDopplerFields {
   OSUINT8 doppler1;
   OSUINT8 dopplerUncertainty;
} rrlp_dec_AddionalDopplerFields;

EXTERN int asn1PD_rrlp_dec_AddionalDopplerFields (OSCTXT* pctxt, rrlp_dec_AddionalDopplerFields* pvalue);

/**************************************************************/
/*                                                            */
/*  AddionalAngleFields                                       */
/*                                                            */
/**************************************************************/
/*
AddionalAngleFields ::= SEQUENCE {
   azimuth [0] INTEGER (0..31),
   elevation [1] INTEGER (0..7)
}
*/
typedef struct EXTERN rrlp_dec_AddionalAngleFields {
   OSUINT8 azimuth;
   OSUINT8 elevation;
} rrlp_dec_AddionalAngleFields;

EXTERN int asn1PD_rrlp_dec_AddionalAngleFields (OSCTXT* pctxt, rrlp_dec_AddionalAngleFields* pvalue);

/**************************************************************/
/*                                                            */
/*  AcquisElement                                             */
/*                                                            */
/**************************************************************/
/*
 data occuring per number of satellites

AcquisElement ::= SEQUENCE {
   svid [0] SatelliteID,
   doppler0 [1] INTEGER (-2048..2047),
   addionalDoppler [2] AddionalDopplerFields OPTIONAL,
   codePhase [3] INTEGER (0..1022),
   intCodePhase [4] INTEGER (0..19),
   gpsBitNumber [5] INTEGER (0..3),
   codePhaseSearchWindow [6] INTEGER (0..15),
   addionalAngle [7] AddionalAngleFields OPTIONAL
}
*/
typedef struct EXTERN rrlp_dec_AcquisElement {
   struct {
      unsigned addionalDopplerPresent : 1;
      unsigned addionalAnglePresent : 1;
   } m;
   rrlp_dec_SatelliteID svid;
   OSINT16 doppler0;
   rrlp_dec_AddionalDopplerFields addionalDoppler;
   OSUINT16 codePhase;
   OSUINT8 intCodePhase;
   OSUINT8 gpsBitNumber;
   OSUINT8 codePhaseSearchWindow;
   rrlp_dec_AddionalAngleFields addionalAngle;
} rrlp_dec_AcquisElement;

EXTERN int asn1PD_rrlp_dec_AcquisElement (OSCTXT* pctxt, rrlp_dec_AcquisElement* pvalue);

/**************************************************************/
/*                                                            */
/*  SeqOfAcquisElement                                        */
/*                                                            */
/**************************************************************/
/*
SeqOfAcquisElement ::= SEQUENCE (SIZE (1..16)) OF AcquisElement
*/
typedef struct EXTERN rrlp_dec_SeqOfAcquisElement {
   OSUINT32 n;
   rrlp_dec_AcquisElement *elem;
} rrlp_dec_SeqOfAcquisElement;

EXTERN int asn1PD_rrlp_dec_SeqOfAcquisElement (OSCTXT* pctxt, rrlp_dec_SeqOfAcquisElement* pvalue);

EXTERN void asn1Free_rrlp_dec_SeqOfAcquisElement (OSCTXT *pctxt, 
   rrlp_dec_SeqOfAcquisElement* pvalue);

/**************************************************************/
/*                                                            */
/*  AcquisAssist                                              */
/*                                                            */
/**************************************************************/
/*
 Acquisition Assistance

AcquisAssist ::= SEQUENCE {
   timeRelation [0] TimeRelation,
   acquisList [1] SeqOfAcquisElement
}
*/
typedef struct EXTERN rrlp_dec_AcquisAssist {
   rrlp_dec_TimeRelation timeRelation;
   rrlp_dec_SeqOfAcquisElement acquisList;
} rrlp_dec_AcquisAssist;

EXTERN int asn1PD_rrlp_dec_AcquisAssist (OSCTXT* pctxt, rrlp_dec_AcquisAssist* pvalue);

EXTERN void asn1Free_rrlp_dec_AcquisAssist (OSCTXT *pctxt, 
   rrlp_dec_AcquisAssist* pvalue);

/**************************************************************/
/*                                                            */
/*  SeqOf_BadSatelliteSet                                     */
/*                                                            */
/**************************************************************/
/*
 Real-Time Integrity
 number of bad satellites can be read from this element

SeqOf-BadSatelliteSet ::= SEQUENCE (SIZE (1..16)) OF SatelliteID
*/
typedef struct EXTERN rrlp_dec_SeqOf_BadSatelliteSet {
   OSUINT32 n;
   rrlp_dec_SatelliteID *elem;
} rrlp_dec_SeqOf_BadSatelliteSet;

EXTERN int asn1PD_rrlp_dec_SeqOf_BadSatelliteSet (OSCTXT* pctxt, rrlp_dec_SeqOf_BadSatelliteSet* pvalue);

EXTERN void asn1Free_rrlp_dec_SeqOf_BadSatelliteSet (OSCTXT *pctxt, 
   rrlp_dec_SeqOf_BadSatelliteSet* pvalue);

/**************************************************************/
/*                                                            */
/*  ControlHeader                                             */
/*                                                            */
/**************************************************************/
/*
 Control header of the GPS assistance data

ControlHeader ::= SEQUENCE {
   referenceTime [0] ReferenceTime OPTIONAL,
   refLocation [1] RefLocation OPTIONAL,
   dgpsCorrections [2] DGPSCorrections OPTIONAL,
   navigationModel [3] NavigationModel OPTIONAL,
   ionosphericModel [4] IonosphericModel OPTIONAL,
   utcModel [5] UTCModel OPTIONAL,
   almanac [6] Almanac OPTIONAL,
   acquisAssist [7] AcquisAssist OPTIONAL,
   realTimeIntegrity [8] SeqOf-BadSatelliteSet OPTIONAL
}
*/
typedef struct EXTERN rrlp_dec_ControlHeader {
   struct {
      unsigned referenceTimePresent : 1;
      unsigned refLocationPresent : 1;
      unsigned dgpsCorrectionsPresent : 1;
      unsigned navigationModelPresent : 1;
      unsigned ionosphericModelPresent : 1;
      unsigned utcModelPresent : 1;
      unsigned almanacPresent : 1;
      unsigned acquisAssistPresent : 1;
      unsigned realTimeIntegrityPresent : 1;
   } m;
   rrlp_dec_ReferenceTime referenceTime;
   rrlp_dec_RefLocation refLocation;
   rrlp_dec_DGPSCorrections dgpsCorrections;
   rrlp_dec_NavigationModel navigationModel;
   rrlp_dec_IonosphericModel ionosphericModel;
   rrlp_dec_UTCModel utcModel;
   rrlp_dec_Almanac almanac;
   rrlp_dec_AcquisAssist acquisAssist;
   rrlp_dec_SeqOf_BadSatelliteSet realTimeIntegrity;
} rrlp_dec_ControlHeader;

EXTERN int asn1PD_rrlp_dec_ControlHeader (OSCTXT* pctxt, rrlp_dec_ControlHeader* pvalue);

EXTERN void asn1Free_rrlp_dec_ControlHeader (OSCTXT *pctxt, 
   rrlp_dec_ControlHeader* pvalue);

/**************************************************************/
/*                                                            */
/*  GPS_AssistData                                            */
/*                                                            */
/**************************************************************/
/*
 exception handling:
 an unrecognized value shall be treated the same as value 0
 GPS assistance data IE

GPS-AssistData ::= SEQUENCE {
   controlHeader [0] ControlHeader
}
*/
typedef struct EXTERN rrlp_dec_GPS_AssistData {
   rrlp_dec_ControlHeader controlHeader;
} rrlp_dec_GPS_AssistData;

EXTERN int asn1PD_rrlp_dec_GPS_AssistData (OSCTXT* pctxt, rrlp_dec_GPS_AssistData* pvalue);

EXTERN void asn1Free_rrlp_dec_GPS_AssistData (OSCTXT *pctxt, 
   rrlp_dec_GPS_AssistData* pvalue);

/**************************************************************/
/*                                                            */
/*  ExpectedOTD                                               */
/*                                                            */
/**************************************************************/
/*
 Expected OTD value between nbor base station and reference BTS
 at MS's current estimated location.

ExpectedOTD ::= INTEGER (0..1250)
*/
typedef OSUINT16 rrlp_dec_ExpectedOTD;

EXTERN int asn1PD_rrlp_dec_ExpectedOTD (OSCTXT* pctxt, rrlp_dec_ExpectedOTD* pvalue);

/**************************************************************/
/*                                                            */
/*  ExpOTDUncertainty                                         */
/*                                                            */
/**************************************************************/
/*
 The ExpectedOTD value 1250 shall not be encoded by the transmitting entity and
 shall be treated by the receiving entity as 0.
 Uncertainty of Exptected OTD in bits

ExpOTDUncertainty ::= INTEGER (0..7)
*/
typedef OSUINT8 rrlp_dec_ExpOTDUncertainty;

EXTERN int asn1PD_rrlp_dec_ExpOTDUncertainty (OSCTXT* pctxt, rrlp_dec_ExpOTDUncertainty* pvalue);

/**************************************************************/
/*                                                            */
/*  MsrAssistBTS_R98_ExpOTD                                   */
/*                                                            */
/**************************************************************/
/*
 This element completes MsrAssistBTS IE

MsrAssistBTS-R98-ExpOTD ::= SEQUENCE {
   expectedOTD [0] ExpectedOTD,
   expOTDUncertainty [1] ExpOTDUncertainty
}
*/
typedef struct EXTERN rrlp_dec_MsrAssistBTS_R98_ExpOTD {
   rrlp_dec_ExpectedOTD expectedOTD;
   rrlp_dec_ExpOTDUncertainty expOTDUncertainty;
} rrlp_dec_MsrAssistBTS_R98_ExpOTD;

EXTERN int asn1PD_rrlp_dec_MsrAssistBTS_R98_ExpOTD (OSCTXT* pctxt, rrlp_dec_MsrAssistBTS_R98_ExpOTD* pvalue);

/**************************************************************/
/*                                                            */
/*  SeqOfMsrAssistBTS_R98_ExpOTD                              */
/*                                                            */
/**************************************************************/
/*
 Indexes in SeqOfMsrAssistBTS-R98-ExpOTD refer to SeqOfMsrAssistBTS
 If the index exceeds the SegOfMsrAssistBTS range or if there is other
 inconsistencies between the BTS indices, the MS shall apply protocol
 error cause incorrectData

SeqOfMsrAssistBTS-R98-ExpOTD ::= SEQUENCE (SIZE (1..15)) OF MsrAssistBTS-R98-ExpOTD
*/
typedef struct EXTERN rrlp_dec_SeqOfMsrAssistBTS_R98_ExpOTD {
   OSUINT32 n;
   rrlp_dec_MsrAssistBTS_R98_ExpOTD *elem;
} rrlp_dec_SeqOfMsrAssistBTS_R98_ExpOTD;

EXTERN int asn1PD_rrlp_dec_SeqOfMsrAssistBTS_R98_ExpOTD (OSCTXT* pctxt, rrlp_dec_SeqOfMsrAssistBTS_R98_ExpOTD* pvalue);

EXTERN void asn1Free_rrlp_dec_SeqOfMsrAssistBTS_R98_ExpOTD (OSCTXT *pctxt, 
   rrlp_dec_SeqOfMsrAssistBTS_R98_ExpOTD* pvalue);

/**************************************************************/
/*                                                            */
/*  MsrAssistData_R98_ExpOTD                                  */
/*                                                            */
/**************************************************************/
/*
 MsrAssistData R98 extension

MsrAssistData-R98-ExpOTD ::= SEQUENCE {
   msrAssistList-R98-ExpOTD [0] SeqOfMsrAssistBTS-R98-ExpOTD
}
*/
typedef struct EXTERN rrlp_dec_MsrAssistData_R98_ExpOTD {
   rrlp_dec_SeqOfMsrAssistBTS_R98_ExpOTD msrAssistList_R98_ExpOTD;
} rrlp_dec_MsrAssistData_R98_ExpOTD;

EXTERN int asn1PD_rrlp_dec_MsrAssistData_R98_ExpOTD (OSCTXT* pctxt, rrlp_dec_MsrAssistData_R98_ExpOTD* pvalue);

EXTERN void asn1Free_rrlp_dec_MsrAssistData_R98_ExpOTD (OSCTXT *pctxt, 
   rrlp_dec_MsrAssistData_R98_ExpOTD* pvalue);

/**************************************************************/
/*                                                            */
/*  AssistBTSData_R98_ExpOTD                                  */
/*                                                            */
/**************************************************************/
/*
 This element completes AssistBTSData IE

AssistBTSData-R98-ExpOTD ::= SEQUENCE {
   expectedOTD [0] ExpectedOTD,
   expOTDuncertainty [1] ExpOTDUncertainty
}
*/
typedef struct EXTERN rrlp_dec_AssistBTSData_R98_ExpOTD {
   rrlp_dec_ExpectedOTD expectedOTD;
   rrlp_dec_ExpOTDUncertainty expOTDuncertainty;
} rrlp_dec_AssistBTSData_R98_ExpOTD;

EXTERN int asn1PD_rrlp_dec_AssistBTSData_R98_ExpOTD (OSCTXT* pctxt, rrlp_dec_AssistBTSData_R98_ExpOTD* pvalue);

/**************************************************************/
/*                                                            */
/*  SystemInfoAssistBTS_R98_ExpOTD                            */
/*                                                            */
/**************************************************************/
/*
 whether n.th is present or not ?

SystemInfoAssistBTS-R98-ExpOTD ::= CHOICE {
   notPresent [0] NULL,
   present [1] AssistBTSData-R98-ExpOTD
}
*/
/* Choice tag constants */

#define T_rrlp_dec_SystemInfoAssistBTS_R98_ExpOTD_notPresent 1
#define T_rrlp_dec_SystemInfoAssistBTS_R98_ExpOTD_present 2

typedef struct EXTERN rrlp_dec_SystemInfoAssistBTS_R98_ExpOTD {
   OSUINT32 t;
   union {
      /* t = 1 */
      /* t = 2 */
      rrlp_dec_AssistBTSData_R98_ExpOTD *present;
   } u;
} rrlp_dec_SystemInfoAssistBTS_R98_ExpOTD;

EXTERN int asn1PD_rrlp_dec_SystemInfoAssistBTS_R98_ExpOTD (OSCTXT* pctxt, rrlp_dec_SystemInfoAssistBTS_R98_ExpOTD* pvalue);

EXTERN void asn1Free_rrlp_dec_SystemInfoAssistBTS_R98_ExpOTD (OSCTXT *pctxt, 
   rrlp_dec_SystemInfoAssistBTS_R98_ExpOTD* pvalue);

/**************************************************************/
/*                                                            */
/*  SeqOfSystemInfoAssistBTS_R98_ExpOTD                       */
/*                                                            */
/**************************************************************/
/*
 SeqOfSystemInfoAssistBTS-R98-ExpOTD index refer to SeqOfSystemInfoAssistBTS
 If the index exceeds the SegOfSystemInfoAssistBTS range or if there is other
 inconsistencies between the BTS indices, the MS shall apply protocol
 error cause incorrectData

SeqOfSystemInfoAssistBTS-R98-ExpOTD ::= SEQUENCE (SIZE (1..32)) OF SystemInfoAssistBTS-R98-ExpOTD
*/
typedef struct EXTERN rrlp_dec_SeqOfSystemInfoAssistBTS_R98_ExpOTD {
   OSUINT32 n;
   rrlp_dec_SystemInfoAssistBTS_R98_ExpOTD *elem;
} rrlp_dec_SeqOfSystemInfoAssistBTS_R98_ExpOTD;

EXTERN int asn1PD_rrlp_dec_SeqOfSystemInfoAssistBTS_R98_ExpOTD (OSCTXT* pctxt, rrlp_dec_SeqOfSystemInfoAssistBTS_R98_ExpOTD* pvalue);

EXTERN void asn1Free_rrlp_dec_SeqOfSystemInfoAssistBTS_R98_ExpOTD (OSCTXT *pctxt, 
   rrlp_dec_SeqOfSystemInfoAssistBTS_R98_ExpOTD* pvalue);

/**************************************************************/
/*                                                            */
/*  SystemInfoAssistData_R98_ExpOTD                           */
/*                                                            */
/**************************************************************/
/*
 SystemInfoAssistData R98 extension

SystemInfoAssistData-R98-ExpOTD ::= SEQUENCE {
   systemInfoAssistListR98-ExpOTD [0] SeqOfSystemInfoAssistBTS-R98-ExpOTD
}
*/
typedef struct EXTERN rrlp_dec_SystemInfoAssistData_R98_ExpOTD {
   rrlp_dec_SeqOfSystemInfoAssistBTS_R98_ExpOTD systemInfoAssistListR98_ExpOTD;
} rrlp_dec_SystemInfoAssistData_R98_ExpOTD;

EXTERN int asn1PD_rrlp_dec_SystemInfoAssistData_R98_ExpOTD (OSCTXT* pctxt, rrlp_dec_SystemInfoAssistData_R98_ExpOTD* pvalue);

EXTERN void asn1Free_rrlp_dec_SystemInfoAssistData_R98_ExpOTD (OSCTXT *pctxt, 
   rrlp_dec_SystemInfoAssistData_R98_ExpOTD* pvalue);

/**************************************************************/
/*                                                            */
/*  Rel98_Ext_ExpOTD                                          */
/*                                                            */
/**************************************************************/
/*
 Release 98 ExpOTD extension

Rel98-Ext-ExpOTD ::= SEQUENCE {
   msrAssistData-R98-ExpOTD [0] MsrAssistData-R98-ExpOTD OPTIONAL,
   systemInfoAssistData-R98-ExpOTD [1] SystemInfoAssistData-R98-ExpOTD OPTIONAL
}
*/
typedef struct EXTERN rrlp_dec_Rel98_Ext_ExpOTD {
   struct {
      unsigned msrAssistData_R98_ExpOTDPresent : 1;
      unsigned systemInfoAssistData_R98_ExpOTDPresent : 1;
   } m;
   rrlp_dec_MsrAssistData_R98_ExpOTD msrAssistData_R98_ExpOTD;
   rrlp_dec_SystemInfoAssistData_R98_ExpOTD systemInfoAssistData_R98_ExpOTD;
} rrlp_dec_Rel98_Ext_ExpOTD;

EXTERN int asn1PD_rrlp_dec_Rel98_Ext_ExpOTD (OSCTXT* pctxt, rrlp_dec_Rel98_Ext_ExpOTD* pvalue);

EXTERN void asn1Free_rrlp_dec_Rel98_Ext_ExpOTD (OSCTXT *pctxt, 
   rrlp_dec_Rel98_Ext_ExpOTD* pvalue);

/**************************************************************/
/*                                                            */
/*  GPSReferenceTimeUncertainty                               */
/*                                                            */
/**************************************************************/
/*
 Release 98 extensions

GPSReferenceTimeUncertainty ::= INTEGER (0..127)
*/
typedef OSUINT8 rrlp_dec_GPSReferenceTimeUncertainty;

EXTERN int asn1PD_rrlp_dec_GPSReferenceTimeUncertainty (OSCTXT* pctxt, rrlp_dec_GPSReferenceTimeUncertainty* pvalue);

/**************************************************************/
/*                                                            */
/*  Rel98_MsrPosition_Req_Extension                           */
/*                                                            */
/**************************************************************/
/*
 Extension Elements
 Release 98 Extensions here

Rel98-MsrPosition-Req-Extension ::= SEQUENCE {
   rel98-Ext-ExpOTD [0] Rel98-Ext-ExpOTD OPTIONAL,
   ...,
   gpsTimeAssistanceMeasurementRequest [1] NULL OPTIONAL,
   gpsReferenceTimeUncertainty [2] GPSReferenceTimeUncertainty OPTIONAL
}
*/
typedef struct EXTERN rrlp_dec_Rel98_MsrPosition_Req_Extension {
   struct {
      unsigned rel98_Ext_ExpOTDPresent : 1;
      unsigned gpsTimeAssistanceMeasurementRequestPresent : 1;
      unsigned gpsReferenceTimeUncertaintyPresent : 1;
   } m;
   rrlp_dec_Rel98_Ext_ExpOTD rel98_Ext_ExpOTD;
   rrlp_dec_GPSReferenceTimeUncertainty gpsReferenceTimeUncertainty;
   OSRTDList extElem1;
} rrlp_dec_Rel98_MsrPosition_Req_Extension;

EXTERN int asn1PD_rrlp_dec_Rel98_MsrPosition_Req_Extension (OSCTXT* pctxt, rrlp_dec_Rel98_MsrPosition_Req_Extension* pvalue);

EXTERN void asn1Free_rrlp_dec_Rel98_MsrPosition_Req_Extension (OSCTXT *pctxt, 
   rrlp_dec_Rel98_MsrPosition_Req_Extension* pvalue);

/**************************************************************/
/*                                                            */
/*  Extended_reference                                        */
/*                                                            */
/**************************************************************/
/*
Extended-reference ::= SEQUENCE {
   smlc-code [0] INTEGER (0..63),
   transaction-ID [1] INTEGER (0..262143)
}
*/
typedef struct EXTERN rrlp_dec_Extended_reference {
   OSUINT8 smlc_code;
   OSUINT32 transaction_ID;
} rrlp_dec_Extended_reference;

EXTERN int asn1PD_rrlp_dec_Extended_reference (OSCTXT* pctxt, rrlp_dec_Extended_reference* pvalue);

/**************************************************************/
/*                                                            */
/*  Rel5_MsrPosition_Req_Extension                            */
/*                                                            */
/**************************************************************/
/*
Rel5-MsrPosition-Req-Extension ::= SEQUENCE {
   extended-reference [0] Extended-reference,
   ...
}
*/
typedef struct EXTERN rrlp_dec_Rel5_MsrPosition_Req_Extension {
   rrlp_dec_Extended_reference extended_reference;
   OSRTDList extElem1;
} rrlp_dec_Rel5_MsrPosition_Req_Extension;

EXTERN int asn1PD_rrlp_dec_Rel5_MsrPosition_Req_Extension (OSCTXT* pctxt, rrlp_dec_Rel5_MsrPosition_Req_Extension* pvalue);

EXTERN void asn1Free_rrlp_dec_Rel5_MsrPosition_Req_Extension (OSCTXT *pctxt, 
   rrlp_dec_Rel5_MsrPosition_Req_Extension* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSPositioningMethod                                    */
/*                                                            */
/**************************************************************/
/*
 additional satellite systems may be added in future versions of the protocol
 Bit 0 of GANSSPositioningMethod bit map shall not be the only one set to TRUE ('1')

GANSSPositioningMethod ::= BIT STRING  { gps(0), galileo(1), sbas(2), modernizedGPS(3), qzss(4), glonass(5), bds(6) } (SIZE (2..16))
*/
/* Named bit constants */

#define rrlp_dec_GANSSPositioningMethod_rrlp_dec_gps                    0
#define rrlp_dec_GANSSPositioningMethod_rrlp_dec_galileo                1
#define rrlp_dec_GANSSPositioningMethod_rrlp_dec_sbas                   2
#define rrlp_dec_GANSSPositioningMethod_rrlp_dec_modernizedGPS          3
#define rrlp_dec_GANSSPositioningMethod_rrlp_dec_qzss                   4
#define rrlp_dec_GANSSPositioningMethod_rrlp_dec_glonass                5
#define rrlp_dec_GANSSPositioningMethod_rrlp_dec_bds                    6

typedef struct rrlp_dec_GANSSPositioningMethod {
   OSUINT32 numbits;
   OSOCTET data[2];
} rrlp_dec_GANSSPositioningMethod;

EXTERN int asn1PD_rrlp_dec_GANSSPositioningMethod (OSCTXT* pctxt, rrlp_dec_GANSSPositioningMethod* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSTOD                                                  */
/*                                                            */
/**************************************************************/
/*
 GANSS TOD integer seconds

GANSSTOD ::= INTEGER (0..86399)
*/
typedef OSUINT32 rrlp_dec_GANSSTOD;

EXTERN int asn1PD_rrlp_dec_GANSSTOD (OSCTXT* pctxt, rrlp_dec_GANSSTOD* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSTODUncertainty                                       */
/*                                                            */
/**************************************************************/
/*
 GANSS TOD uncertainty

GANSSTODUncertainty ::= INTEGER (0..127)
*/
typedef OSUINT8 rrlp_dec_GANSSTODUncertainty;

EXTERN int asn1PD_rrlp_dec_GANSSTODUncertainty (OSCTXT* pctxt, rrlp_dec_GANSSTODUncertainty* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSRefTimeInfo                                          */
/*                                                            */
/**************************************************************/
/*
 GANSS Reference Time includes GANSS TOD, GANSS Day, uncertainty

GANSSRefTimeInfo ::= SEQUENCE {
   ganssDay [0] INTEGER (0..8191) OPTIONAL,
   ganssTOD [1] GANSSTOD,
   ganssTODUncertainty [2] GANSSTODUncertainty OPTIONAL,
   ganssTimeID [3] INTEGER (0..7) OPTIONAL
}
*/
typedef struct EXTERN rrlp_dec_GANSSRefTimeInfo {
   struct {
      unsigned ganssDayPresent : 1;
      unsigned ganssTODUncertaintyPresent : 1;
      unsigned ganssTimeIDPresent : 1;
   } m;
   OSUINT16 ganssDay;
   rrlp_dec_GANSSTOD ganssTOD;
   rrlp_dec_GANSSTODUncertainty ganssTODUncertainty;
   OSUINT8 ganssTimeID;
} rrlp_dec_GANSSRefTimeInfo;

EXTERN int asn1PD_rrlp_dec_GANSSRefTimeInfo (OSCTXT* pctxt, rrlp_dec_GANSSRefTimeInfo* pvalue);

/**************************************************************/
/*                                                            */
/*  FrameDrift                                                */
/*                                                            */
/**************************************************************/
/*
 Frame drift

FrameDrift ::= INTEGER (-64..63)
*/
typedef OSINT8 rrlp_dec_FrameDrift;

EXTERN int asn1PD_rrlp_dec_FrameDrift (OSCTXT* pctxt, rrlp_dec_FrameDrift* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSTOD_GSMTimeAssociation                               */
/*                                                            */
/**************************************************************/
/*
 GANSS TOD-GSM Time association 

GANSSTOD-GSMTimeAssociation ::= SEQUENCE {
   bcchCarrier [0] BCCHCarrier,
   bsic [1] BSIC,
   frameNumber [2] FrameNumber,
   timeSlot [3] TimeSlot,
   bitNumber [4] BitNumber,
   frameDrift [5] FrameDrift OPTIONAL
}
*/
typedef struct EXTERN rrlp_dec_GANSSTOD_GSMTimeAssociation {
   struct {
      unsigned frameDriftPresent : 1;
   } m;
   rrlp_dec_BCCHCarrier bcchCarrier;
   rrlp_dec_BSIC bsic;
   rrlp_dec_FrameNumber frameNumber;
   rrlp_dec_TimeSlot timeSlot;
   rrlp_dec_BitNumber bitNumber;
   rrlp_dec_FrameDrift frameDrift;
} rrlp_dec_GANSSTOD_GSMTimeAssociation;

EXTERN int asn1PD_rrlp_dec_GANSSTOD_GSMTimeAssociation (OSCTXT* pctxt, rrlp_dec_GANSSTOD_GSMTimeAssociation* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSReferenceTime                                        */
/*                                                            */
/**************************************************************/
/*
 GANSS COMMON ASSISTANCE DATA ELEMENTS
 GANSS Reference Time IE

GANSSReferenceTime ::= SEQUENCE {
   ganssRefTimeInfo [0] GANSSRefTimeInfo,
   ganssTOD-GSMTimeAssociation [1] GANSSTOD-GSMTimeAssociation OPTIONAL
}
*/
typedef struct EXTERN rrlp_dec_GANSSReferenceTime {
   struct {
      unsigned ganssTOD_GSMTimeAssociationPresent : 1;
   } m;
   rrlp_dec_GANSSRefTimeInfo ganssRefTimeInfo;
   rrlp_dec_GANSSTOD_GSMTimeAssociation ganssTOD_GSMTimeAssociation;
} rrlp_dec_GANSSReferenceTime;

EXTERN int asn1PD_rrlp_dec_GANSSReferenceTime (OSCTXT* pctxt, rrlp_dec_GANSSReferenceTime* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSRefLocation                                          */
/*                                                            */
/**************************************************************/
/*
 GANSS Reference Location IE

GANSSRefLocation ::= SEQUENCE {
   threeDLocation [0] Ext-GeographicalInformation
}
*/
typedef struct EXTERN rrlp_dec_GANSSRefLocation {
   rrlp_dec_Ext_GeographicalInformation threeDLocation;
} rrlp_dec_GANSSRefLocation;

EXTERN int asn1PD_rrlp_dec_GANSSRefLocation (OSCTXT* pctxt, rrlp_dec_GANSSRefLocation* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSIonosphereModel                                      */
/*                                                            */
/**************************************************************/
/*
 GANSS ionosphere model. Coding according to Annex 

GANSSIonosphereModel ::= SEQUENCE {
   ai0 [0] INTEGER (0..2047),
   ai1 [1] INTEGER (-1024..1023),
   ai2 [2] INTEGER (-8192..8191)
}
*/
typedef struct EXTERN rrlp_dec_GANSSIonosphereModel {
   OSUINT16 ai0;
   OSINT16 ai1;
   OSINT16 ai2;
} rrlp_dec_GANSSIonosphereModel;

EXTERN int asn1PD_rrlp_dec_GANSSIonosphereModel (OSCTXT* pctxt, rrlp_dec_GANSSIonosphereModel* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSIonoStormFlags                                       */
/*                                                            */
/**************************************************************/
/*
 GANSS ionosphere storm flags

GANSSIonoStormFlags ::= SEQUENCE {
   ionoStormFlag1 [0] INTEGER (0..1),
   ionoStormFlag2 [1] INTEGER (0..1),
   ionoStormFlag3 [2] INTEGER (0..1),
   ionoStormFlag4 [3] INTEGER (0..1),
   ionoStormFlag5 [4] INTEGER (0..1)
}
*/
typedef struct EXTERN rrlp_dec_GANSSIonoStormFlags {
   OSUINT8 ionoStormFlag1;
   OSUINT8 ionoStormFlag2;
   OSUINT8 ionoStormFlag3;
   OSUINT8 ionoStormFlag4;
   OSUINT8 ionoStormFlag5;
} rrlp_dec_GANSSIonoStormFlags;

EXTERN int asn1PD_rrlp_dec_GANSSIonoStormFlags (OSCTXT* pctxt, rrlp_dec_GANSSIonoStormFlags* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSIonosphericModel                                     */
/*                                                            */
/**************************************************************/
/*
 GANSS Ionospheric Model IE
 GANSS Ionospheric Model consists of NeQuick model parameters and storm flags

GANSSIonosphericModel ::= SEQUENCE {
   ganssIonoModel [0] GANSSIonosphereModel,
   ganssIonoStormFlags [1] GANSSIonoStormFlags OPTIONAL,
   ...
}
*/
typedef struct EXTERN rrlp_dec_GANSSIonosphericModel {
   struct {
      unsigned ganssIonoStormFlagsPresent : 1;
   } m;
   rrlp_dec_GANSSIonosphereModel ganssIonoModel;
   rrlp_dec_GANSSIonoStormFlags ganssIonoStormFlags;
   OSRTDList extElem1;
} rrlp_dec_GANSSIonosphericModel;

EXTERN int asn1PD_rrlp_dec_GANSSIonosphericModel (OSCTXT* pctxt, rrlp_dec_GANSSIonosphericModel* pvalue);

EXTERN void asn1Free_rrlp_dec_GANSSIonosphericModel (OSCTXT *pctxt, 
   rrlp_dec_GANSSIonosphericModel* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSAddIonosphericModel                                  */
/*                                                            */
/**************************************************************/
/*
 GANSS Additional Ionospheric Model IE
 GANSS Additional Ionospheric Model consists of Klobuchar model parameters

GANSSAddIonosphericModel ::= SEQUENCE {
   dataID [0] BIT STRING  (SIZE (2)),
   ionoModel [1] IonosphericModel
}
*/
typedef struct EXTERN rrlp_dec_GANSSAddIonosphericModel {
   ASN1BitStr32 dataID;
   rrlp_dec_IonosphericModel ionoModel;
} rrlp_dec_GANSSAddIonosphericModel;

EXTERN int asn1PD_rrlp_dec_GANSSAddIonosphericModel (OSCTXT* pctxt, rrlp_dec_GANSSAddIonosphericModel* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSEarthOrientParam                                     */
/*                                                            */
/**************************************************************/
/*
 GANSS Earth Orientation Paramaters IE

GANSSEarthOrientParam ::= SEQUENCE {
   teop [0] INTEGER (0..65535),
   pmX [1] INTEGER (-1048576..1048575),
   pmXdot [2] INTEGER (-16384..16383),
   pmY [3] INTEGER (-1048576..1048575),
   pmYdot [4] INTEGER (-16384..16383),
   deltaUT1 [5] INTEGER (-1073741824..1073741823),
   deltaUT1dot [6] INTEGER (-262144..262143)
}
*/
typedef struct EXTERN rrlp_dec_GANSSEarthOrientParam {
   OSUINT16 teop;
   OSINT32 pmX;
   OSINT16 pmXdot;
   OSINT32 pmY;
   OSINT16 pmYdot;
   OSINT32 deltaUT1;
   OSINT32 deltaUT1dot;
} rrlp_dec_GANSSEarthOrientParam;

EXTERN int asn1PD_rrlp_dec_GANSSEarthOrientParam (OSCTXT* pctxt, rrlp_dec_GANSSEarthOrientParam* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSReferenceTime_R10_Ext                                */
/*                                                            */
/**************************************************************/
/*
 Coding according to Annex
 GANSS Reference Time Rel-10 Extension:

GANSSReferenceTime-R10-Ext ::= SEQUENCE {
   ganssDayCycleNumber [0] INTEGER (0..7)
}
*/
typedef struct EXTERN rrlp_dec_GANSSReferenceTime_R10_Ext {
   OSUINT8 ganssDayCycleNumber;
} rrlp_dec_GANSSReferenceTime_R10_Ext;

EXTERN int asn1PD_rrlp_dec_GANSSReferenceTime_R10_Ext (OSCTXT* pctxt, rrlp_dec_GANSSReferenceTime_R10_Ext* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSCommonAssistData                                     */
/*                                                            */
/**************************************************************/
/*
 GANSS Common Assistance Data Elements

GANSSCommonAssistData ::= SEQUENCE {
   ganssReferenceTime [0] GANSSReferenceTime OPTIONAL,
   ganssRefLocation [1] GANSSRefLocation OPTIONAL,
   ganssIonosphericModel [2] GANSSIonosphericModel OPTIONAL,
   ...,
   ganssAddIonosphericModel [3] GANSSAddIonosphericModel OPTIONAL,
   ganssEarthOrientParam [4] GANSSEarthOrientParam OPTIONAL,
   ganssReferenceTime-R10-Ext [5] GANSSReferenceTime-R10-Ext OPTIONAL
}
*/
typedef struct EXTERN rrlp_dec_GANSSCommonAssistData {
   struct {
      unsigned ganssReferenceTimePresent : 1;
      unsigned ganssRefLocationPresent : 1;
      unsigned ganssIonosphericModelPresent : 1;
      unsigned ganssAddIonosphericModelPresent : 1;
      unsigned ganssEarthOrientParamPresent : 1;
      unsigned ganssReferenceTime_R10_ExtPresent : 1;
   } m;
   rrlp_dec_GANSSReferenceTime ganssReferenceTime;
   rrlp_dec_GANSSRefLocation ganssRefLocation;
   rrlp_dec_GANSSIonosphericModel ganssIonosphericModel;
   rrlp_dec_GANSSAddIonosphericModel ganssAddIonosphericModel;
   rrlp_dec_GANSSEarthOrientParam ganssEarthOrientParam;
   rrlp_dec_GANSSReferenceTime_R10_Ext ganssReferenceTime_R10_Ext;
   OSRTDList extElem1;
} rrlp_dec_GANSSCommonAssistData;

EXTERN int asn1PD_rrlp_dec_GANSSCommonAssistData (OSCTXT* pctxt, rrlp_dec_GANSSCommonAssistData* pvalue);

EXTERN void asn1Free_rrlp_dec_GANSSCommonAssistData (OSCTXT *pctxt, 
   rrlp_dec_GANSSCommonAssistData* pvalue);

/**************************************************************/
/*                                                            */
/*  TA0                                                       */
/*                                                            */
/**************************************************************/
/*
 GANSS time model parameter A0

TA0 ::= INTEGER (-2147483648..2147483647)
*/
typedef OSINT32 rrlp_dec_TA0;

EXTERN int asn1PD_rrlp_dec_TA0 (OSCTXT* pctxt, rrlp_dec_TA0* pvalue);

/**************************************************************/
/*                                                            */
/*  TA1                                                       */
/*                                                            */
/**************************************************************/
/*
 GANSS time model parameter A1

TA1 ::= INTEGER (-8388608..8388607)
*/
typedef OSINT32 rrlp_dec_TA1;

EXTERN int asn1PD_rrlp_dec_TA1 (OSCTXT* pctxt, rrlp_dec_TA1* pvalue);

/**************************************************************/
/*                                                            */
/*  TA2                                                       */
/*                                                            */
/**************************************************************/
/*
 GANSS time model parameter A2

TA2 ::= INTEGER (-64..63)
*/
typedef OSINT8 rrlp_dec_TA2;

EXTERN int asn1PD_rrlp_dec_TA2 (OSCTXT* pctxt, rrlp_dec_TA2* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSTimeModelElement                                     */
/*                                                            */
/**************************************************************/
/*
GANSSTimeModelElement ::= SEQUENCE {
   ganssTimeModelRefTime [0] INTEGER (0..65535),
   tA0 [1] TA0,
   tA1 [2] TA1 OPTIONAL,
   tA2 [3] TA2 OPTIONAL,
   gnssTOID [4] INTEGER (0..7),
   weekNumber [5] INTEGER (0..8191) OPTIONAL
}
*/
typedef struct EXTERN rrlp_dec_GANSSTimeModelElement {
   struct {
      unsigned tA1Present : 1;
      unsigned tA2Present : 1;
      unsigned weekNumberPresent : 1;
   } m;
   OSUINT16 ganssTimeModelRefTime;
   rrlp_dec_TA0 tA0;
   rrlp_dec_TA1 tA1;
   rrlp_dec_TA2 tA2;
   OSUINT8 gnssTOID;
   OSUINT16 weekNumber;
} rrlp_dec_GANSSTimeModelElement;

EXTERN int asn1PD_rrlp_dec_GANSSTimeModelElement (OSCTXT* pctxt, rrlp_dec_GANSSTimeModelElement* pvalue);

/**************************************************************/
/*                                                            */
/*  SeqOfGANSSTimeModel                                       */
/*                                                            */
/**************************************************************/
/*
 GANSS GENERIC ASSISTANCE DATA ELEMENTS
 GANSS Time Model IE consists of time offset and first and second order parameters to relate GNSS
 specific system time to selected time reference

SeqOfGANSSTimeModel ::= SEQUENCE (SIZE (1..7)) OF GANSSTimeModelElement
*/
typedef struct EXTERN rrlp_dec_SeqOfGANSSTimeModel {
   OSUINT32 n;
   rrlp_dec_GANSSTimeModelElement *elem;
} rrlp_dec_SeqOfGANSSTimeModel;

EXTERN int asn1PD_rrlp_dec_SeqOfGANSSTimeModel (OSCTXT* pctxt, rrlp_dec_SeqOfGANSSTimeModel* pvalue);

EXTERN void asn1Free_rrlp_dec_SeqOfGANSSTimeModel (OSCTXT *pctxt, 
   rrlp_dec_SeqOfGANSSTimeModel* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSSignalID                                             */
/*                                                            */
/**************************************************************/
/*
GANSSSignalID ::= INTEGER (0..7)
*/
typedef OSUINT8 rrlp_dec_GANSSSignalID;

EXTERN int asn1PD_rrlp_dec_GANSSSignalID (OSCTXT* pctxt, rrlp_dec_GANSSSignalID* pvalue);

/**************************************************************/
/*                                                            */
/*  SVID                                                      */
/*                                                            */
/**************************************************************/
/*
SVID ::= INTEGER (0..63)
*/
typedef OSUINT8 rrlp_dec_SVID;

EXTERN int asn1PD_rrlp_dec_SVID (OSCTXT* pctxt, rrlp_dec_SVID* pvalue);

/**************************************************************/
/*                                                            */
/*  DGANSSSgnElement                                          */
/*                                                            */
/**************************************************************/
/*
 number of correction for signals

DGANSSSgnElement ::= SEQUENCE {
   svID [0] SVID,
   iod [1] INTEGER (0..1023),
   udre [2] INTEGER (0..3),
   pseudoRangeCor [3] INTEGER (-2047..2047),
   rangeRateCor [4] INTEGER (-127..127)
}
*/
typedef struct EXTERN rrlp_dec_DGANSSSgnElement {
   rrlp_dec_SVID svID;
   OSUINT16 iod;
   OSUINT8 udre;
   OSINT16 pseudoRangeCor;
   OSINT8 rangeRateCor;
} rrlp_dec_DGANSSSgnElement;

EXTERN int asn1PD_rrlp_dec_DGANSSSgnElement (OSCTXT* pctxt, rrlp_dec_DGANSSSgnElement* pvalue);

/**************************************************************/
/*                                                            */
/*  SeqOfDGANSSSgnElement                                     */
/*                                                            */
/**************************************************************/
/*
 Coding according to Annex

SeqOfDGANSSSgnElement ::= SEQUENCE (SIZE (1..16)) OF DGANSSSgnElement
*/
typedef struct EXTERN rrlp_dec_SeqOfDGANSSSgnElement {
   OSUINT32 n;
   rrlp_dec_DGANSSSgnElement *elem;
} rrlp_dec_SeqOfDGANSSSgnElement;

EXTERN int asn1PD_rrlp_dec_SeqOfDGANSSSgnElement (OSCTXT* pctxt, rrlp_dec_SeqOfDGANSSSgnElement* pvalue);

EXTERN void asn1Free_rrlp_dec_SeqOfDGANSSSgnElement (OSCTXT *pctxt, 
   rrlp_dec_SeqOfDGANSSSgnElement* pvalue);

/**************************************************************/
/*                                                            */
/*  SgnTypeElement                                            */
/*                                                            */
/**************************************************************/
/*
 max three signals per GNSS
 DGANSS signal type element, once per GNSS signal type included in DGANSS

SgnTypeElement ::= SEQUENCE {
   ganssSignalID [0] GANSSSignalID,
   ganssStatusHealth [1] INTEGER (0..7),
   dganssSgnList [2] SeqOfDGANSSSgnElement
}
*/
typedef struct EXTERN rrlp_dec_SgnTypeElement {
   rrlp_dec_GANSSSignalID ganssSignalID;
   OSUINT8 ganssStatusHealth;
   rrlp_dec_SeqOfDGANSSSgnElement dganssSgnList;
} rrlp_dec_SgnTypeElement;

EXTERN int asn1PD_rrlp_dec_SgnTypeElement (OSCTXT* pctxt, rrlp_dec_SgnTypeElement* pvalue);

EXTERN void asn1Free_rrlp_dec_SgnTypeElement (OSCTXT *pctxt, 
   rrlp_dec_SgnTypeElement* pvalue);

/**************************************************************/
/*                                                            */
/*  SeqOfSgnTypeElement                                       */
/*                                                            */
/**************************************************************/
/*
SeqOfSgnTypeElement ::= SEQUENCE (SIZE (1..3)) OF SgnTypeElement
*/
typedef struct EXTERN rrlp_dec_SeqOfSgnTypeElement {
   OSUINT32 n;
   rrlp_dec_SgnTypeElement *elem;
} rrlp_dec_SeqOfSgnTypeElement;

EXTERN int asn1PD_rrlp_dec_SeqOfSgnTypeElement (OSCTXT* pctxt, rrlp_dec_SeqOfSgnTypeElement* pvalue);

EXTERN void asn1Free_rrlp_dec_SeqOfSgnTypeElement (OSCTXT *pctxt, 
   rrlp_dec_SeqOfSgnTypeElement* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSDiffCorrections                                      */
/*                                                            */
/**************************************************************/
/*
 DGANSS Corrections IE

GANSSDiffCorrections ::= SEQUENCE {
   dganssRefTime [0] INTEGER (0..119),
   sgnTypeList [1] SeqOfSgnTypeElement
}
*/
typedef struct EXTERN rrlp_dec_GANSSDiffCorrections {
   OSUINT8 dganssRefTime;
   rrlp_dec_SeqOfSgnTypeElement sgnTypeList;
} rrlp_dec_GANSSDiffCorrections;

EXTERN int asn1PD_rrlp_dec_GANSSDiffCorrections (OSCTXT* pctxt, rrlp_dec_GANSSDiffCorrections* pvalue);

EXTERN void asn1Free_rrlp_dec_GANSSDiffCorrections (OSCTXT *pctxt, 
   rrlp_dec_GANSSDiffCorrections* pvalue);

/**************************************************************/
/*                                                            */
/*  StandardClockModelElement                                 */
/*                                                            */
/**************************************************************/
/*
StandardClockModelElement ::= SEQUENCE {
   stanClockToc [0] INTEGER (0..16383),
   stanClockAF2 [1] INTEGER (-32..31),
   stanClockAF1 [2] INTEGER (-1048576..1048575),
   stanClockAF0 [3] INTEGER (-1073741824..1073741823),
   stanClockTgd [4] INTEGER (-512..511) OPTIONAL,
   stanModelID [5] INTEGER (0..1) OPTIONAL,
   ...
}
*/
typedef struct EXTERN rrlp_dec_StandardClockModelElement {
   struct {
      unsigned stanClockTgdPresent : 1;
      unsigned stanModelIDPresent : 1;
   } m;
   OSUINT16 stanClockToc;
   OSINT8 stanClockAF2;
   OSINT32 stanClockAF1;
   OSINT32 stanClockAF0;
   OSINT16 stanClockTgd;
   OSUINT8 stanModelID;
   OSRTDList extElem1;
} rrlp_dec_StandardClockModelElement;

EXTERN int asn1PD_rrlp_dec_StandardClockModelElement (OSCTXT* pctxt, rrlp_dec_StandardClockModelElement* pvalue);

EXTERN void asn1Free_rrlp_dec_StandardClockModelElement (OSCTXT *pctxt, 
   rrlp_dec_StandardClockModelElement* pvalue);

/**************************************************************/
/*                                                            */
/*  SeqOfStandardClockModelElement                            */
/*                                                            */
/**************************************************************/
/*
SeqOfStandardClockModelElement ::= SEQUENCE (SIZE (1..2)) OF StandardClockModelElement
*/
typedef struct EXTERN rrlp_dec_SeqOfStandardClockModelElement {
   OSUINT32 n;
   rrlp_dec_StandardClockModelElement *elem;
} rrlp_dec_SeqOfStandardClockModelElement;

EXTERN int asn1PD_rrlp_dec_SeqOfStandardClockModelElement (OSCTXT* pctxt, rrlp_dec_SeqOfStandardClockModelElement* pvalue);

EXTERN void asn1Free_rrlp_dec_SeqOfStandardClockModelElement (OSCTXT *pctxt, 
   rrlp_dec_SeqOfStandardClockModelElement* pvalue);

/**************************************************************/
/*                                                            */
/*  NAVclockModel                                             */
/*                                                            */
/**************************************************************/
/*
NAVclockModel ::= SEQUENCE {
   navToc [0] INTEGER (0..37799),
   navaf2 [1] INTEGER (-128..127),
   navaf1 [2] INTEGER (-32768..32767),
   navaf0 [3] INTEGER (-2097152..2097151),
   navTgd [4] INTEGER (-128..127)
}
*/
typedef struct EXTERN rrlp_dec_NAVclockModel {
   OSUINT16 navToc;
   OSINT8 navaf2;
   OSINT16 navaf1;
   OSINT32 navaf0;
   OSINT8 navTgd;
} rrlp_dec_NAVclockModel;

EXTERN int asn1PD_rrlp_dec_NAVclockModel (OSCTXT* pctxt, rrlp_dec_NAVclockModel* pvalue);

/**************************************************************/
/*                                                            */
/*  CNAVclockModel                                            */
/*                                                            */
/**************************************************************/
/*
CNAVclockModel ::= SEQUENCE {
   cnavToc [0] INTEGER (0..2015),
   cnavTop [1] INTEGER (0..2015),
   cnavURA0 [2] INTEGER (-16..15),
   cnavURA1 [3] INTEGER (0..7),
   cnavURA2 [4] INTEGER (0..7),
   cnavAf2 [5] INTEGER (-512..511),
   cnavAf1 [6] INTEGER (-524288..524287),
   cnavAf0 [7] INTEGER (-33554432..33554431),
   cnavTgd [8] INTEGER (-4096..4095),
   cnavISCl1cp [9] INTEGER (-4096..4095) OPTIONAL,
   cnavISCl1cd [10] INTEGER (-4096..4095) OPTIONAL,
   cnavISCl1ca [11] INTEGER (-4096..4095) OPTIONAL,
   cnavISCl2c [12] INTEGER (-4096..4095) OPTIONAL,
   cnavISCl5i5 [13] INTEGER (-4096..4095) OPTIONAL,
   cnavISCl5q5 [14] INTEGER (-4096..4095) OPTIONAL
}
*/
typedef struct EXTERN rrlp_dec_CNAVclockModel {
   struct {
      unsigned cnavISCl1cpPresent : 1;
      unsigned cnavISCl1cdPresent : 1;
      unsigned cnavISCl1caPresent : 1;
      unsigned cnavISCl2cPresent : 1;
      unsigned cnavISCl5i5Present : 1;
      unsigned cnavISCl5q5Present : 1;
   } m;
   OSUINT16 cnavToc;
   OSUINT16 cnavTop;
   OSINT8 cnavURA0;
   OSUINT8 cnavURA1;
   OSUINT8 cnavURA2;
   OSINT16 cnavAf2;
   OSINT32 cnavAf1;
   OSINT32 cnavAf0;
   OSINT16 cnavTgd;
   OSINT16 cnavISCl1cp;
   OSINT16 cnavISCl1cd;
   OSINT16 cnavISCl1ca;
   OSINT16 cnavISCl2c;
   OSINT16 cnavISCl5i5;
   OSINT16 cnavISCl5q5;
} rrlp_dec_CNAVclockModel;

EXTERN int asn1PD_rrlp_dec_CNAVclockModel (OSCTXT* pctxt, rrlp_dec_CNAVclockModel* pvalue);

/**************************************************************/
/*                                                            */
/*  GLONASSclockModel                                         */
/*                                                            */
/**************************************************************/
/*
GLONASSclockModel ::= SEQUENCE {
   gloTau [0] INTEGER (-2097152..2097151),
   gloGamma [1] INTEGER (-1024..1023),
   gloDeltaTau [2] INTEGER (-16..15) OPTIONAL
}
*/
typedef struct EXTERN rrlp_dec_GLONASSclockModel {
   struct {
      unsigned gloDeltaTauPresent : 1;
   } m;
   OSINT32 gloTau;
   OSINT16 gloGamma;
   OSINT8 gloDeltaTau;
} rrlp_dec_GLONASSclockModel;

EXTERN int asn1PD_rrlp_dec_GLONASSclockModel (OSCTXT* pctxt, rrlp_dec_GLONASSclockModel* pvalue);

/**************************************************************/
/*                                                            */
/*  SBASclockModel                                            */
/*                                                            */
/**************************************************************/
/*
SBASclockModel ::= SEQUENCE {
   sbasTo [0] INTEGER (0..5399),
   sbasAgfo [1] INTEGER (-2048..2047),
   sbasAgf1 [2] INTEGER (-128..127)
}
*/
typedef struct EXTERN rrlp_dec_SBASclockModel {
   OSUINT16 sbasTo;
   OSINT16 sbasAgfo;
   OSINT8 sbasAgf1;
} rrlp_dec_SBASclockModel;

EXTERN int asn1PD_rrlp_dec_SBASclockModel (OSCTXT* pctxt, rrlp_dec_SBASclockModel* pvalue);

/**************************************************************/
/*                                                            */
/*  BDSClockModel_r12                                         */
/*                                                            */
/**************************************************************/
/*
BDSClockModel-r12 ::= SEQUENCE {
   bdsAODC-r12 [0] INTEGER (0..31),
   bdsToc-r12 [1] INTEGER (0..131071),
   bdsA0-r12 [2] INTEGER (-8388608..8388607),
   bdsA1-r12 [3] INTEGER (-2097152..2097151),
   bdsA2-r12 [4] INTEGER (-1024..1023),
   bdsTgd1-r12 [5] INTEGER (-512..511)
}
*/
typedef struct EXTERN rrlp_dec_BDSClockModel_r12 {
   OSUINT8 bdsAODC_r12;
   OSUINT32 bdsToc_r12;
   OSINT32 bdsA0_r12;
   OSINT32 bdsA1_r12;
   OSINT16 bdsA2_r12;
   OSINT16 bdsTgd1_r12;
} rrlp_dec_BDSClockModel_r12;

EXTERN int asn1PD_rrlp_dec_BDSClockModel_r12 (OSCTXT* pctxt, rrlp_dec_BDSClockModel_r12* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSClockModel                                           */
/*                                                            */
/**************************************************************/
/*
 GANSS clock model for the GNSS satellite according to the choice

GANSSClockModel ::= CHOICE {
   standardClockModelList [0] SeqOfStandardClockModelElement,
   ...,
   navClockModel [1] NAVclockModel,
   cnavClockModel [2] CNAVclockModel,
   glonassClockModel [3] GLONASSclockModel,
   sbasClockModel [4] SBASclockModel,
   bdsClockModel-r12 [5] BDSClockModel-r12
}
*/
/* Choice tag constants */

#define T_rrlp_dec_GANSSClockModel_standardClockModelList 1
#define T_rrlp_dec_GANSSClockModel_navClockModel 2
#define T_rrlp_dec_GANSSClockModel_cnavClockModel 3
#define T_rrlp_dec_GANSSClockModel_glonassClockModel 4
#define T_rrlp_dec_GANSSClockModel_sbasClockModel 5
#define T_rrlp_dec_GANSSClockModel_bdsClockModel_r12 6
#define T_rrlp_dec_GANSSClockModel_extElem1 7

typedef struct EXTERN rrlp_dec_GANSSClockModel {
   OSUINT32 t;
   union {
      /* t = 1 */
      rrlp_dec_SeqOfStandardClockModelElement *standardClockModelList;
      /* t = 2 */
      rrlp_dec_NAVclockModel *navClockModel;
      /* t = 3 */
      rrlp_dec_CNAVclockModel *cnavClockModel;
      /* t = 4 */
      rrlp_dec_GLONASSclockModel *glonassClockModel;
      /* t = 5 */
      rrlp_dec_SBASclockModel *sbasClockModel;
      /* t = 6 */
      rrlp_dec_BDSClockModel_r12 *bdsClockModel_r12;
      /* t = 7 */
      ASN1OpenType *extElem1;
   } u;
} rrlp_dec_GANSSClockModel;

EXTERN int asn1PD_rrlp_dec_GANSSClockModel (OSCTXT* pctxt, rrlp_dec_GANSSClockModel* pvalue);

EXTERN void asn1Free_rrlp_dec_GANSSClockModel (OSCTXT *pctxt, 
   rrlp_dec_GANSSClockModel* pvalue);

/**************************************************************/
/*                                                            */
/*  NavModel_KeplerianSet                                     */
/*                                                            */
/**************************************************************/
/*
 Navigation model in Keplerian parameters

NavModel-KeplerianSet ::= SEQUENCE {
   keplerToe [0] INTEGER (0..16383),
   keplerW [1] INTEGER (-2147483648..2147483647),
   keplerDeltaN [2] INTEGER (-32768..32767),
   keplerM0 [3] INTEGER (-2147483648..2147483647),
   keplerOmegaDot [4] INTEGER (-8388608..8388607),
   keplerE [5] INTEGER (0..4294967295),
   keplerIDot [6] INTEGER (-8192..8191),
   keplerAPowerHalf [7] INTEGER (0..4294967295),
   keplerI0 [8] INTEGER (-2147483648..2147483647),
   keplerOmega0 [9] INTEGER (-2147483648..2147483647),
   keplerCrs [10] INTEGER (-32768..32767),
   keplerCis [11] INTEGER (-32768..32767),
   keplerCus [12] INTEGER (-32768..32767),
   keplerCrc [13] INTEGER (-32768..32767),
   keplerCic [14] INTEGER (-32768..32767),
   keplerCuc [15] INTEGER (-32768..32767)
}
*/
typedef struct EXTERN rrlp_dec_NavModel_KeplerianSet {
   OSUINT16 keplerToe;
   OSINT32 keplerW;
   OSINT16 keplerDeltaN;
   OSINT32 keplerM0;
   OSINT32 keplerOmegaDot;
   OSUINT32 keplerE;
   OSINT16 keplerIDot;
   OSUINT32 keplerAPowerHalf;
   OSINT32 keplerI0;
   OSINT32 keplerOmega0;
   OSINT16 keplerCrs;
   OSINT16 keplerCis;
   OSINT16 keplerCus;
   OSINT16 keplerCrc;
   OSINT16 keplerCic;
   OSINT16 keplerCuc;
} rrlp_dec_NavModel_KeplerianSet;

EXTERN int asn1PD_rrlp_dec_NavModel_KeplerianSet (OSCTXT* pctxt, rrlp_dec_NavModel_KeplerianSet* pvalue);

/**************************************************************/
/*                                                            */
/*  NavModel_NAVKeplerianSet                                  */
/*                                                            */
/**************************************************************/
/*
NavModel-NAVKeplerianSet ::= SEQUENCE {
   navURA [0] INTEGER (0..15),
   navFitFlag [1] INTEGER (0..1),
   navToe [2] INTEGER (0..37799),
   navOmega [3] INTEGER (-2147483648..2147483647),
   navDeltaN [4] INTEGER (-32768..32767),
   navM0 [5] INTEGER (-2147483648..2147483647),
   navOmegaADot [6] INTEGER (-8388608..8388607),
   navE [7] INTEGER (0..4294967295),
   navIDot [8] INTEGER (-8192..8191),
   navAPowerHalf [9] INTEGER (0..4294967295),
   navI0 [10] INTEGER (-2147483648..2147483647),
   navOmegaA0 [11] INTEGER (-2147483648..2147483647),
   navCrs [12] INTEGER (-32768..32767),
   navCis [13] INTEGER (-32768..32767),
   navCus [14] INTEGER (-32768..32767),
   navCrc [15] INTEGER (-32768..32767),
   navCic [16] INTEGER (-32768..32767),
   navCuc [17] INTEGER (-32768..32767)
}
*/
typedef struct EXTERN rrlp_dec_NavModel_NAVKeplerianSet {
   OSUINT8 navURA;
   OSUINT8 navFitFlag;
   OSUINT16 navToe;
   OSINT32 navOmega;
   OSINT16 navDeltaN;
   OSINT32 navM0;
   OSINT32 navOmegaADot;
   OSUINT32 navE;
   OSINT16 navIDot;
   OSUINT32 navAPowerHalf;
   OSINT32 navI0;
   OSINT32 navOmegaA0;
   OSINT16 navCrs;
   OSINT16 navCis;
   OSINT16 navCus;
   OSINT16 navCrc;
   OSINT16 navCic;
   OSINT16 navCuc;
} rrlp_dec_NavModel_NAVKeplerianSet;

EXTERN int asn1PD_rrlp_dec_NavModel_NAVKeplerianSet (OSCTXT* pctxt, rrlp_dec_NavModel_NAVKeplerianSet* pvalue);

/**************************************************************/
/*                                                            */
/*  NavModel_CNAVKeplerianSet                                 */
/*                                                            */
/**************************************************************/
/*
NavModel-CNAVKeplerianSet ::= SEQUENCE {
   cnavTop [0] INTEGER (0..2015),
   cnavURAindex [1] INTEGER (-16..15),
   cnavDeltaA [2] INTEGER (-33554432..33554431),
   cnavAdot [3] INTEGER (-16777216..16777215),
   cnavDeltaNo [4] INTEGER (-65536..65535),
   cnavDeltaNoDot [5] INTEGER (-4194304..4194303),
   cnavMo [6] INTEGER (-4294967296..4294967295),
   cnavE [7] INTEGER (0..8589934591),
   cnavOmega [8] INTEGER (-4294967296..4294967295),
   cnavOMEGA0 [9] INTEGER (-4294967296..4294967295),
   cnavDeltaOmegaDot [10] INTEGER (-65536..65535),
   cnavIo [11] INTEGER (-4294967296..4294967295),
   cnavIoDot [12] INTEGER (-16384..16383),
   cnavCis [13] INTEGER (-32768..32767),
   cnavCic [14] INTEGER (-32768..32767),
   cnavCrs [15] INTEGER (-8388608..8388607),
   cnavCrc [16] INTEGER (-8388608..8388607),
   cnavCus [17] INTEGER (-1048576..1048575),
   cnavCuc [18] INTEGER (-1048576..1048575)
}
*/
typedef struct EXTERN rrlp_dec_NavModel_CNAVKeplerianSet {
   OSUINT16 cnavTop;
   OSINT8 cnavURAindex;
   OSINT32 cnavDeltaA;
   OSINT32 cnavAdot;
   OSINT32 cnavDeltaNo;
   OSINT32 cnavDeltaNoDot;
   OSINT64 cnavMo;
   OSUINT64 cnavE;
   OSINT64 cnavOmega;
   OSINT64 cnavOMEGA0;
   OSINT32 cnavDeltaOmegaDot;
   OSINT64 cnavIo;
   OSINT16 cnavIoDot;
   OSINT16 cnavCis;
   OSINT16 cnavCic;
   OSINT32 cnavCrs;
   OSINT32 cnavCrc;
   OSINT32 cnavCus;
   OSINT32 cnavCuc;
} rrlp_dec_NavModel_CNAVKeplerianSet;

EXTERN int asn1PD_rrlp_dec_NavModel_CNAVKeplerianSet (OSCTXT* pctxt, rrlp_dec_NavModel_CNAVKeplerianSet* pvalue);

/**************************************************************/
/*                                                            */
/*  NavModel_GLONASSecef                                      */
/*                                                            */
/**************************************************************/
/*
NavModel-GLONASSecef ::= SEQUENCE {
   gloEn [0] INTEGER (0..31),
   gloP1 [1] BIT STRING  (SIZE (2)),
   gloP2 [2] BOOLEAN,
   gloM [3] INTEGER (0..3),
   gloX [4] INTEGER (-67108864..67108863),
   gloXdot [5] INTEGER (-8388608..8388607),
   gloXdotdot [6] INTEGER (-16..15),
   gloY [7] INTEGER (-67108864..67108863),
   gloYdot [8] INTEGER (-8388608..8388607),
   gloYdotdot [9] INTEGER (-16..15),
   gloZ [10] INTEGER (-67108864..67108863),
   gloZdot [11] INTEGER (-8388608..8388607),
   gloZdotdot [12] INTEGER (-16..15)
}
*/
typedef struct EXTERN rrlp_dec_NavModel_GLONASSecef {
   OSUINT8 gloEn;
   ASN1BitStr32 gloP1;
   OSBOOL gloP2;
   OSUINT8 gloM;
   OSINT32 gloX;
   OSINT32 gloXdot;
   OSINT8 gloXdotdot;
   OSINT32 gloY;
   OSINT32 gloYdot;
   OSINT8 gloYdotdot;
   OSINT32 gloZ;
   OSINT32 gloZdot;
   OSINT8 gloZdotdot;
} rrlp_dec_NavModel_GLONASSecef;

EXTERN int asn1PD_rrlp_dec_NavModel_GLONASSecef (OSCTXT* pctxt, rrlp_dec_NavModel_GLONASSecef* pvalue);

/**************************************************************/
/*                                                            */
/*  NavModel_SBASecef                                         */
/*                                                            */
/**************************************************************/
/*
NavModel-SBASecef ::= SEQUENCE {
   sbasTo [0] INTEGER (0..5399) OPTIONAL,
   sbasAccuracy [1] BIT STRING  (SIZE (4)),
   sbasXg [2] INTEGER (-536870912..536870911),
   sbasYg [3] INTEGER (-536870912..536870911),
   sbasZg [4] INTEGER (-16777216..16777215),
   sbasXgDot [5] INTEGER (-65536..65535),
   sbasYgDot [6] INTEGER (-65536..65535),
   sbasZgDot [7] INTEGER (-131072..131071),
   sbasXgDotDot [8] INTEGER (-512..511),
   sbagYgDotDot [9] INTEGER (-512..511),
   sbasZgDotDot [10] INTEGER (-512..511)
}
*/
typedef struct EXTERN rrlp_dec_NavModel_SBASecef {
   struct {
      unsigned sbasToPresent : 1;
   } m;
   OSUINT16 sbasTo;
   ASN1BitStr32 sbasAccuracy;
   OSINT32 sbasXg;
   OSINT32 sbasYg;
   OSINT32 sbasZg;
   OSINT32 sbasXgDot;
   OSINT32 sbasYgDot;
   OSINT32 sbasZgDot;
   OSINT16 sbasXgDotDot;
   OSINT16 sbagYgDotDot;
   OSINT16 sbasZgDotDot;
} rrlp_dec_NavModel_SBASecef;

EXTERN int asn1PD_rrlp_dec_NavModel_SBASecef (OSCTXT* pctxt, rrlp_dec_NavModel_SBASecef* pvalue);

/**************************************************************/
/*                                                            */
/*  NavModel_BDSKeplerianSet_r12                              */
/*                                                            */
/**************************************************************/
/*
NavModel-BDSKeplerianSet-r12 ::= SEQUENCE {
   bdsAODE-r12 [0] INTEGER (0..31),
   bdsURAI-r12 [1] INTEGER (0..15),
   bdsToe-r12 [2] INTEGER (0..131071),
   bdsAPowerHalf-r12 [3] INTEGER (0..4294967295),
   bdsE-r12 [4] INTEGER (0..4294967295),
   bdsW-r12 [5] INTEGER (-2147483648..2147483647),
   bdsDeltaN-r12 [6] INTEGER (-32768..32767),
   bdsM0-r12 [7] INTEGER (-2147483648..2147483647),
   bdsOmega0-r12 [8] INTEGER (-2147483648..2147483647),
   bdsOmegaDot-r12 [9] INTEGER (-8388608..8388607),
   bdsI0-r12 [10] INTEGER (-2147483648..2147483647),
   bdsIDot-r12 [11] INTEGER (-8192..8191),
   bdsCuc-r12 [12] INTEGER (-131072..131071),
   bdsCus-r12 [13] INTEGER (-131072..131071),
   bdsCrc-r12 [14] INTEGER (-131072..131071),
   bdsCrs-r12 [15] INTEGER (-131072..131071),
   bdsCic-r12 [16] INTEGER (-131072..131071),
   bdsCis-r12 [17] INTEGER (-131072..131071)
}
*/
typedef struct EXTERN rrlp_dec_NavModel_BDSKeplerianSet_r12 {
   OSUINT8 bdsAODE_r12;
   OSUINT8 bdsURAI_r12;
   OSUINT32 bdsToe_r12;
   OSUINT32 bdsAPowerHalf_r12;
   OSUINT32 bdsE_r12;
   OSINT32 bdsW_r12;
   OSINT16 bdsDeltaN_r12;
   OSINT32 bdsM0_r12;
   OSINT32 bdsOmega0_r12;
   OSINT32 bdsOmegaDot_r12;
   OSINT32 bdsI0_r12;
   OSINT16 bdsIDot_r12;
   OSINT32 bdsCuc_r12;
   OSINT32 bdsCus_r12;
   OSINT32 bdsCrc_r12;
   OSINT32 bdsCrs_r12;
   OSINT32 bdsCic_r12;
   OSINT32 bdsCis_r12;
} rrlp_dec_NavModel_BDSKeplerianSet_r12;

EXTERN int asn1PD_rrlp_dec_NavModel_BDSKeplerianSet_r12 (OSCTXT* pctxt, rrlp_dec_NavModel_BDSKeplerianSet_r12* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSOrbitModel                                           */
/*                                                            */
/**************************************************************/
/*
 GANSS orbit model for the GNSS satellite according to the choice

GANSSOrbitModel ::= CHOICE {
   keplerianSet [0] NavModel-KeplerianSet,
   ...,
   navKeplerianSet [1] NavModel-NAVKeplerianSet,
   cnavKeplerianSet [2] NavModel-CNAVKeplerianSet,
   glonassECEF [3] NavModel-GLONASSecef,
   sbasECEF [4] NavModel-SBASecef,
   bdsKeplerianSet-r12 [5] NavModel-BDSKeplerianSet-r12
}
*/
/* Choice tag constants */

#define T_rrlp_dec_GANSSOrbitModel_keplerianSet 1
#define T_rrlp_dec_GANSSOrbitModel_navKeplerianSet 2
#define T_rrlp_dec_GANSSOrbitModel_cnavKeplerianSet 3
#define T_rrlp_dec_GANSSOrbitModel_glonassECEF 4
#define T_rrlp_dec_GANSSOrbitModel_sbasECEF 5
#define T_rrlp_dec_GANSSOrbitModel_bdsKeplerianSet_r12 6
#define T_rrlp_dec_GANSSOrbitModel_extElem1 7

typedef struct EXTERN rrlp_dec_GANSSOrbitModel {
   OSUINT32 t;
   union {
      /* t = 1 */
      rrlp_dec_NavModel_KeplerianSet *keplerianSet;
      /* t = 2 */
      rrlp_dec_NavModel_NAVKeplerianSet *navKeplerianSet;
      /* t = 3 */
      rrlp_dec_NavModel_CNAVKeplerianSet *cnavKeplerianSet;
      /* t = 4 */
      rrlp_dec_NavModel_GLONASSecef *glonassECEF;
      /* t = 5 */
      rrlp_dec_NavModel_SBASecef *sbasECEF;
      /* t = 6 */
      rrlp_dec_NavModel_BDSKeplerianSet_r12 *bdsKeplerianSet_r12;
      /* t = 7 */
      ASN1OpenType *extElem1;
   } u;
} rrlp_dec_GANSSOrbitModel;

EXTERN int asn1PD_rrlp_dec_GANSSOrbitModel (OSCTXT* pctxt, rrlp_dec_GANSSOrbitModel* pvalue);

EXTERN void asn1Free_rrlp_dec_GANSSOrbitModel (OSCTXT *pctxt, 
   rrlp_dec_GANSSOrbitModel* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSSatelliteElement                                     */
/*                                                            */
/**************************************************************/
/*
GANSSSatelliteElement ::= SEQUENCE {
   svID [0] SVID,
   svHealth [1] BIT STRING  (SIZE (5)),
   iod [2] INTEGER (0..1023),
   ganssClockModel [3] GANSSClockModel,
   ganssOrbitModel [4] GANSSOrbitModel,
   ...,
   svHealthMSB [5] BIT STRING  (SIZE (1)) OPTIONAL,
   iodMSB [6] INTEGER (0..1) OPTIONAL,
   svHealthExt [7] BIT STRING  (SIZE (4)) OPTIONAL
}
*/
typedef struct EXTERN rrlp_dec_GANSSSatelliteElement {
   struct {
      unsigned svHealthMSBPresent : 1;
      unsigned iodMSBPresent : 1;
      unsigned svHealthExtPresent : 1;
   } m;
   rrlp_dec_SVID svID;
   ASN1BitStr32 svHealth;
   OSUINT16 iod;
   rrlp_dec_GANSSClockModel ganssClockModel;
   rrlp_dec_GANSSOrbitModel ganssOrbitModel;
   ASN1BitStr32 svHealthMSB;
   OSUINT8 iodMSB;
   ASN1BitStr32 svHealthExt;
   OSRTDList extElem1;
} rrlp_dec_GANSSSatelliteElement;

EXTERN int asn1PD_rrlp_dec_GANSSSatelliteElement (OSCTXT* pctxt, rrlp_dec_GANSSSatelliteElement* pvalue);

EXTERN void asn1Free_rrlp_dec_GANSSSatelliteElement (OSCTXT *pctxt, 
   rrlp_dec_GANSSSatelliteElement* pvalue);

/**************************************************************/
/*                                                            */
/*  SeqOfGANSSSatelliteElement                                */
/*                                                            */
/**************************************************************/
/*
SeqOfGANSSSatelliteElement ::= SEQUENCE (SIZE (1..32)) OF GANSSSatelliteElement
*/
typedef struct EXTERN rrlp_dec_SeqOfGANSSSatelliteElement {
   OSUINT32 n;
   rrlp_dec_GANSSSatelliteElement *elem;
} rrlp_dec_SeqOfGANSSSatelliteElement;

EXTERN int asn1PD_rrlp_dec_SeqOfGANSSSatelliteElement (OSCTXT* pctxt, rrlp_dec_SeqOfGANSSSatelliteElement* pvalue);

EXTERN void asn1Free_rrlp_dec_SeqOfGANSSSatelliteElement (OSCTXT *pctxt, 
   rrlp_dec_SeqOfGANSSSatelliteElement* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSNavModel                                             */
/*                                                            */
/**************************************************************/
/*
 Coding according to Annex
 GANSS Navigation Model IE

GANSSNavModel ::= SEQUENCE {
   nonBroadcastIndFlag [0] INTEGER (0..1),
   ganssSatelliteList [1] SeqOfGANSSSatelliteElement
}
*/
typedef struct EXTERN rrlp_dec_GANSSNavModel {
   OSUINT8 nonBroadcastIndFlag;
   rrlp_dec_SeqOfGANSSSatelliteElement ganssSatelliteList;
} rrlp_dec_GANSSNavModel;

EXTERN int asn1PD_rrlp_dec_GANSSNavModel (OSCTXT* pctxt, rrlp_dec_GANSSNavModel* pvalue);

EXTERN void asn1Free_rrlp_dec_GANSSNavModel (OSCTXT *pctxt, 
   rrlp_dec_GANSSNavModel* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSSignals                                              */
/*                                                            */
/**************************************************************/
/*
 indicates MS support for particular GANSS signals and frequencies

GANSSSignals ::= BIT STRING  { signal1(0), signal2(1), signal3(2), signal4(3), signal5(4), signal6(5), signal7(6), signal8(7) } (SIZE (1..8))
*/
/* Named bit constants */

#define rrlp_dec_GANSSSignals_rrlp_dec_signal1                0
#define rrlp_dec_GANSSSignals_rrlp_dec_signal2                1
#define rrlp_dec_GANSSSignals_rrlp_dec_signal3                2
#define rrlp_dec_GANSSSignals_rrlp_dec_signal4                3
#define rrlp_dec_GANSSSignals_rrlp_dec_signal5                4
#define rrlp_dec_GANSSSignals_rrlp_dec_signal6                5
#define rrlp_dec_GANSSSignals_rrlp_dec_signal7                6
#define rrlp_dec_GANSSSignals_rrlp_dec_signal8                7

typedef struct rrlp_dec_GANSSSignals {
   OSUINT32 numbits;
   OSOCTET data[1];
} rrlp_dec_GANSSSignals;

EXTERN int asn1PD_rrlp_dec_GANSSSignals (OSCTXT* pctxt, rrlp_dec_GANSSSignals* pvalue);

/**************************************************************/
/*                                                            */
/*  BadSignalElement                                          */
/*                                                            */
/**************************************************************/
/*
BadSignalElement ::= SEQUENCE {
   badSVID [0] SVID,
   badSignalID [1] GANSSSignals OPTIONAL
}
*/
typedef struct EXTERN rrlp_dec_BadSignalElement {
   struct {
      unsigned badSignalIDPresent : 1;
   } m;
   rrlp_dec_SVID badSVID;
   rrlp_dec_GANSSSignals badSignalID;
} rrlp_dec_BadSignalElement;

EXTERN int asn1PD_rrlp_dec_BadSignalElement (OSCTXT* pctxt, rrlp_dec_BadSignalElement* pvalue);

/**************************************************************/
/*                                                            */
/*  SeqOfBadSignalElement                                     */
/*                                                            */
/**************************************************************/
/*
SeqOfBadSignalElement ::= SEQUENCE (SIZE (1..16)) OF BadSignalElement
*/
typedef struct EXTERN rrlp_dec_SeqOfBadSignalElement {
   OSUINT32 n;
   rrlp_dec_BadSignalElement *elem;
} rrlp_dec_SeqOfBadSignalElement;

EXTERN int asn1PD_rrlp_dec_SeqOfBadSignalElement (OSCTXT* pctxt, rrlp_dec_SeqOfBadSignalElement* pvalue);

EXTERN void asn1Free_rrlp_dec_SeqOfBadSignalElement (OSCTXT *pctxt, 
   rrlp_dec_SeqOfBadSignalElement* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSRealTimeIntegrity                                    */
/*                                                            */
/**************************************************************/
/*
 GANSS Real-Time Integrity IE

GANSSRealTimeIntegrity ::= SEQUENCE {
   ganssBadSignalList [0] SeqOfBadSignalElement
}
*/
typedef struct EXTERN rrlp_dec_GANSSRealTimeIntegrity {
   rrlp_dec_SeqOfBadSignalElement ganssBadSignalList;
} rrlp_dec_GANSSRealTimeIntegrity;

EXTERN int asn1PD_rrlp_dec_GANSSRealTimeIntegrity (OSCTXT* pctxt, rrlp_dec_GANSSRealTimeIntegrity* pvalue);

EXTERN void asn1Free_rrlp_dec_GANSSRealTimeIntegrity (OSCTXT *pctxt, 
   rrlp_dec_GANSSRealTimeIntegrity* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSDataBit                                              */
/*                                                            */
/**************************************************************/
/*
GANSSDataBit ::= INTEGER (0..1)
*/
typedef OSUINT8 rrlp_dec_GANSSDataBit;

EXTERN int asn1PD_rrlp_dec_GANSSDataBit (OSCTXT* pctxt, rrlp_dec_GANSSDataBit* pvalue);

/**************************************************************/
/*                                                            */
/*  SeqOf_GANSSDataBits                                       */
/*                                                            */
/**************************************************************/
/*
SeqOf-GANSSDataBits ::= SEQUENCE (SIZE (1..1024)) OF GANSSDataBit
*/
typedef struct EXTERN rrlp_dec_SeqOf_GANSSDataBits {
   OSUINT32 n;
   rrlp_dec_GANSSDataBit *elem;
} rrlp_dec_SeqOf_GANSSDataBits;

EXTERN int asn1PD_rrlp_dec_SeqOf_GANSSDataBits (OSCTXT* pctxt, rrlp_dec_SeqOf_GANSSDataBits* pvalue);

EXTERN void asn1Free_rrlp_dec_SeqOf_GANSSDataBits (OSCTXT *pctxt, 
   rrlp_dec_SeqOf_GANSSDataBits* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSDataBitsSgnElement                                   */
/*                                                            */
/**************************************************************/
/*
GANSSDataBitsSgnElement ::= SEQUENCE {
   ganssSignalType [0] GANSSSignalID,
   ganssDataBits [1] SeqOf-GANSSDataBits,
   ...
}
*/
typedef struct EXTERN rrlp_dec_GANSSDataBitsSgnElement {
   rrlp_dec_GANSSSignalID ganssSignalType;
   rrlp_dec_SeqOf_GANSSDataBits ganssDataBits;
   OSRTDList extElem1;
} rrlp_dec_GANSSDataBitsSgnElement;

EXTERN int asn1PD_rrlp_dec_GANSSDataBitsSgnElement (OSCTXT* pctxt, rrlp_dec_GANSSDataBitsSgnElement* pvalue);

EXTERN void asn1Free_rrlp_dec_GANSSDataBitsSgnElement (OSCTXT *pctxt, 
   rrlp_dec_GANSSDataBitsSgnElement* pvalue);

/**************************************************************/
/*                                                            */
/*  Seq_OfGANSSDataBitsSgn                                    */
/*                                                            */
/**************************************************************/
/*
Seq-OfGANSSDataBitsSgn ::= SEQUENCE (SIZE (1..8)) OF GANSSDataBitsSgnElement
*/
typedef struct EXTERN rrlp_dec_Seq_OfGANSSDataBitsSgn {
   OSUINT32 n;
   rrlp_dec_GANSSDataBitsSgnElement *elem;
} rrlp_dec_Seq_OfGANSSDataBitsSgn;

EXTERN int asn1PD_rrlp_dec_Seq_OfGANSSDataBitsSgn (OSCTXT* pctxt, rrlp_dec_Seq_OfGANSSDataBitsSgn* pvalue);

EXTERN void asn1Free_rrlp_dec_Seq_OfGANSSDataBitsSgn (OSCTXT *pctxt, 
   rrlp_dec_Seq_OfGANSSDataBitsSgn* pvalue);

/**************************************************************/
/*                                                            */
/*  GanssDataBitsElement                                      */
/*                                                            */
/**************************************************************/
/*
GanssDataBitsElement ::= SEQUENCE {
   svID [0] SVID,
   ganssDataBitsSgnList [1] Seq-OfGANSSDataBitsSgn,
   ...
}
*/
typedef struct EXTERN rrlp_dec_GanssDataBitsElement {
   rrlp_dec_SVID svID;
   rrlp_dec_Seq_OfGANSSDataBitsSgn ganssDataBitsSgnList;
   OSRTDList extElem1;
} rrlp_dec_GanssDataBitsElement;

EXTERN int asn1PD_rrlp_dec_GanssDataBitsElement (OSCTXT* pctxt, rrlp_dec_GanssDataBitsElement* pvalue);

EXTERN void asn1Free_rrlp_dec_GanssDataBitsElement (OSCTXT *pctxt, 
   rrlp_dec_GanssDataBitsElement* pvalue);

/**************************************************************/
/*                                                            */
/*  SeqOfGanssDataBitsElement                                 */
/*                                                            */
/**************************************************************/
/*
SeqOfGanssDataBitsElement ::= SEQUENCE (SIZE (1..32)) OF GanssDataBitsElement
*/
typedef struct EXTERN rrlp_dec_SeqOfGanssDataBitsElement {
   OSUINT32 n;
   rrlp_dec_GanssDataBitsElement *elem;
} rrlp_dec_SeqOfGanssDataBitsElement;

EXTERN int asn1PD_rrlp_dec_SeqOfGanssDataBitsElement (OSCTXT* pctxt, rrlp_dec_SeqOfGanssDataBitsElement* pvalue);

EXTERN void asn1Free_rrlp_dec_SeqOfGanssDataBitsElement (OSCTXT *pctxt, 
   rrlp_dec_SeqOfGanssDataBitsElement* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSDataBitAssist                                        */
/*                                                            */
/**************************************************************/
/*
 GANSS Data Bit Assistance IE

GANSSDataBitAssist ::= SEQUENCE {
   ganssTOD [0] INTEGER (0..59),
   ganssDataBitsSatList [1] SeqOfGanssDataBitsElement,
   ...
}
*/
typedef struct EXTERN rrlp_dec_GANSSDataBitAssist {
   OSUINT8 ganssTOD;
   rrlp_dec_SeqOfGanssDataBitsElement ganssDataBitsSatList;
   OSRTDList extElem1;
} rrlp_dec_GANSSDataBitAssist;

EXTERN int asn1PD_rrlp_dec_GANSSDataBitAssist (OSCTXT* pctxt, rrlp_dec_GANSSDataBitAssist* pvalue);

EXTERN void asn1Free_rrlp_dec_GANSSDataBitAssist (OSCTXT *pctxt, 
   rrlp_dec_GANSSDataBitAssist* pvalue);

/**************************************************************/
/*                                                            */
/*  AdditionalDopplerFields                                   */
/*                                                            */
/**************************************************************/
/*
AdditionalDopplerFields ::= SEQUENCE {
   doppler1 [0] INTEGER (0..63),
   dopplerUncertainty [1] INTEGER (0..4)
}
*/
typedef struct EXTERN rrlp_dec_AdditionalDopplerFields {
   OSUINT8 doppler1;
   OSUINT8 dopplerUncertainty;
} rrlp_dec_AdditionalDopplerFields;

EXTERN int asn1PD_rrlp_dec_AdditionalDopplerFields (OSCTXT* pctxt, rrlp_dec_AdditionalDopplerFields* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSRefMeasurementElement                                */
/*                                                            */
/**************************************************************/
/*
GANSSRefMeasurementElement ::= SEQUENCE {
   svID [0] SVID,
   doppler0 [1] INTEGER (-2048..2047),
   additionalDoppler [2] AdditionalDopplerFields OPTIONAL,
   codePhase [3] INTEGER (0..1022),
   intCodePhase [4] INTEGER (0..127),
   codePhaseSearchWindow [5] INTEGER (0..31),
   additionalAngle [6] AddionalAngleFields OPTIONAL,
   ...,
   codePhase1023 [7] BOOLEAN OPTIONAL
}
*/
typedef struct EXTERN rrlp_dec_GANSSRefMeasurementElement {
   struct {
      unsigned additionalDopplerPresent : 1;
      unsigned additionalAnglePresent : 1;
      unsigned codePhase1023Present : 1;
   } m;
   rrlp_dec_SVID svID;
   OSINT16 doppler0;
   rrlp_dec_AdditionalDopplerFields additionalDoppler;
   OSUINT16 codePhase;
   OSUINT8 intCodePhase;
   OSUINT8 codePhaseSearchWindow;
   rrlp_dec_AddionalAngleFields additionalAngle;
   OSBOOL codePhase1023;
   OSRTDList extElem1;
} rrlp_dec_GANSSRefMeasurementElement;

EXTERN int asn1PD_rrlp_dec_GANSSRefMeasurementElement (OSCTXT* pctxt, rrlp_dec_GANSSRefMeasurementElement* pvalue);

EXTERN void asn1Free_rrlp_dec_GANSSRefMeasurementElement (OSCTXT *pctxt, 
   rrlp_dec_GANSSRefMeasurementElement* pvalue);

/**************************************************************/
/*                                                            */
/*  SeqOfGANSSRefMeasurementElement                           */
/*                                                            */
/**************************************************************/
/*
SeqOfGANSSRefMeasurementElement ::= SEQUENCE (SIZE (1..16)) OF GANSSRefMeasurementElement
*/
typedef struct EXTERN rrlp_dec_SeqOfGANSSRefMeasurementElement {
   OSUINT32 n;
   rrlp_dec_GANSSRefMeasurementElement *elem;
} rrlp_dec_SeqOfGANSSRefMeasurementElement;

EXTERN int asn1PD_rrlp_dec_SeqOfGANSSRefMeasurementElement (OSCTXT* pctxt, rrlp_dec_SeqOfGANSSRefMeasurementElement* pvalue);

EXTERN void asn1Free_rrlp_dec_SeqOfGANSSRefMeasurementElement (OSCTXT *pctxt, 
   rrlp_dec_SeqOfGANSSRefMeasurementElement* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSRefMeasurementAssist                                 */
/*                                                            */
/**************************************************************/
/*
 GANSS Reference Measurement Assistance IE
 Code and Doppler assistance from the network. 

GANSSRefMeasurementAssist ::= SEQUENCE {
   ganssSignalID [0] GANSSSignalID,
   ganssRefMeasAssistList [1] SeqOfGANSSRefMeasurementElement
}
*/
typedef struct EXTERN rrlp_dec_GANSSRefMeasurementAssist {
   rrlp_dec_GANSSSignalID ganssSignalID;
   rrlp_dec_SeqOfGANSSRefMeasurementElement ganssRefMeasAssistList;
} rrlp_dec_GANSSRefMeasurementAssist;

EXTERN int asn1PD_rrlp_dec_GANSSRefMeasurementAssist (OSCTXT* pctxt, rrlp_dec_GANSSRefMeasurementAssist* pvalue);

EXTERN void asn1Free_rrlp_dec_GANSSRefMeasurementAssist (OSCTXT *pctxt, 
   rrlp_dec_GANSSRefMeasurementAssist* pvalue);

/**************************************************************/
/*                                                            */
/*  Almanac_KeplerianSet                                      */
/*                                                            */
/**************************************************************/
/*
 Almanac parameters according to Keplerian parameters

Almanac-KeplerianSet ::= SEQUENCE {
   svID [0] SVID,
   kepAlmanacE [1] INTEGER (0..2047),
   kepAlmanacDeltaI [2] INTEGER (-1024..1023),
   kepAlmanacOmegaDot [3] INTEGER (-1024..1023),
   kepSVStatusINAV [4] BIT STRING  (SIZE (4)),
   kepSVStatusFNAV [5] BIT STRING  (SIZE (2)) OPTIONAL,
   kepAlmanacAPowerHalf [6] INTEGER (-4096..4095),
   kepAlmanacOmega0 [7] INTEGER (-32768..32767),
   kepAlmanacW [8] INTEGER (-32768..32767),
   kepAlmanacM0 [9] INTEGER (-32768..32767),
   kepAlmanacAF0 [10] INTEGER (-32768..32767),
   kepAlmanacAF1 [11] INTEGER (-4096..4095)
}
*/
typedef struct EXTERN rrlp_dec_Almanac_KeplerianSet {
   struct {
      unsigned kepSVStatusFNAVPresent : 1;
   } m;
   rrlp_dec_SVID svID;
   OSUINT16 kepAlmanacE;
   OSINT16 kepAlmanacDeltaI;
   OSINT16 kepAlmanacOmegaDot;
   ASN1BitStr32 kepSVStatusINAV;
   ASN1BitStr32 kepSVStatusFNAV;
   OSINT16 kepAlmanacAPowerHalf;
   OSINT16 kepAlmanacOmega0;
   OSINT16 kepAlmanacW;
   OSINT16 kepAlmanacM0;
   OSINT16 kepAlmanacAF0;
   OSINT16 kepAlmanacAF1;
} rrlp_dec_Almanac_KeplerianSet;

EXTERN int asn1PD_rrlp_dec_Almanac_KeplerianSet (OSCTXT* pctxt, rrlp_dec_Almanac_KeplerianSet* pvalue);

/**************************************************************/
/*                                                            */
/*  Almanac_NAVKeplerianSet                                   */
/*                                                            */
/**************************************************************/
/*
Almanac-NAVKeplerianSet ::= SEQUENCE {
   svID [0] SVID,
   navAlmE [1] INTEGER (0..65535),
   navAlmDeltaI [2] INTEGER (-32768..32767),
   navAlmOMEGADOT [3] INTEGER (-32768..32767),
   navAlmSVHealth [4] INTEGER (0..255),
   navAlmSqrtA [5] INTEGER (0..16777215),
   navAlmOMEGAo [6] INTEGER (-8388608..8388607),
   navAlmOmega [7] INTEGER (-8388608..8388607),
   navAlmMo [8] INTEGER (-8388608..8388607),
   navAlmaf0 [9] INTEGER (-1024..1023),
   navAlmaf1 [10] INTEGER (-1024..1023)
}
*/
typedef struct EXTERN rrlp_dec_Almanac_NAVKeplerianSet {
   rrlp_dec_SVID svID;
   OSUINT16 navAlmE;
   OSINT16 navAlmDeltaI;
   OSINT16 navAlmOMEGADOT;
   OSUINT8 navAlmSVHealth;
   OSUINT32 navAlmSqrtA;
   OSINT32 navAlmOMEGAo;
   OSINT32 navAlmOmega;
   OSINT32 navAlmMo;
   OSINT16 navAlmaf0;
   OSINT16 navAlmaf1;
} rrlp_dec_Almanac_NAVKeplerianSet;

EXTERN int asn1PD_rrlp_dec_Almanac_NAVKeplerianSet (OSCTXT* pctxt, rrlp_dec_Almanac_NAVKeplerianSet* pvalue);

/**************************************************************/
/*                                                            */
/*  Almanac_ReducedKeplerianSet                               */
/*                                                            */
/**************************************************************/
/*
Almanac-ReducedKeplerianSet ::= SEQUENCE {
   svID [0] SVID,
   redAlmDeltaA [1] INTEGER (-128..127),
   redAlmOmega0 [2] INTEGER (-64..63),
   redAlmPhi0 [3] INTEGER (-64..63),
   redAlmL1Health [4] BOOLEAN,
   redAlmL2Health [5] BOOLEAN,
   redAlmL5Health [6] BOOLEAN
}
*/
typedef struct EXTERN rrlp_dec_Almanac_ReducedKeplerianSet {
   rrlp_dec_SVID svID;
   OSINT8 redAlmDeltaA;
   OSINT8 redAlmOmega0;
   OSINT8 redAlmPhi0;
   OSBOOL redAlmL1Health;
   OSBOOL redAlmL2Health;
   OSBOOL redAlmL5Health;
} rrlp_dec_Almanac_ReducedKeplerianSet;

EXTERN int asn1PD_rrlp_dec_Almanac_ReducedKeplerianSet (OSCTXT* pctxt, rrlp_dec_Almanac_ReducedKeplerianSet* pvalue);

/**************************************************************/
/*                                                            */
/*  Almanac_MidiAlmanacSet                                    */
/*                                                            */
/**************************************************************/
/*
Almanac-MidiAlmanacSet ::= SEQUENCE {
   svID [0] SVID,
   midiAlmE [1] INTEGER (0..2047),
   midiAlmDeltaI [2] INTEGER (-1024..1023),
   midiAlmOmegaDot [3] INTEGER (-1024..1023),
   midiAlmSqrtA [4] INTEGER (0..131071),
   midiAlmOmega0 [5] INTEGER (-32768..32767),
   midiAlmOmega [6] INTEGER (-32768..32767),
   midiAlmMo [7] INTEGER (-32768..32767),
   midiAlmaf0 [8] INTEGER (-1024..1023),
   midiAlmaf1 [9] INTEGER (-512..511),
   midiAlmL1Health [10] BOOLEAN,
   midiAlmL2Health [11] BOOLEAN,
   midiAlmL5Health [12] BOOLEAN
}
*/
typedef struct EXTERN rrlp_dec_Almanac_MidiAlmanacSet {
   rrlp_dec_SVID svID;
   OSUINT16 midiAlmE;
   OSINT16 midiAlmDeltaI;
   OSINT16 midiAlmOmegaDot;
   OSUINT32 midiAlmSqrtA;
   OSINT16 midiAlmOmega0;
   OSINT16 midiAlmOmega;
   OSINT16 midiAlmMo;
   OSINT16 midiAlmaf0;
   OSINT16 midiAlmaf1;
   OSBOOL midiAlmL1Health;
   OSBOOL midiAlmL2Health;
   OSBOOL midiAlmL5Health;
} rrlp_dec_Almanac_MidiAlmanacSet;

EXTERN int asn1PD_rrlp_dec_Almanac_MidiAlmanacSet (OSCTXT* pctxt, rrlp_dec_Almanac_MidiAlmanacSet* pvalue);

/**************************************************************/
/*                                                            */
/*  Almanac_GlonassAlmanacSet                                 */
/*                                                            */
/**************************************************************/
/*
Almanac-GlonassAlmanacSet ::= SEQUENCE {
   gloAlmNA [0] INTEGER (1..1461),
   gloAlmnA [1] INTEGER (1..24),
   gloAlmHA [2] INTEGER (0..31),
   gloAlmLambdaA [3] INTEGER (-1048576..1048575),
   gloAlmtlambdaA [4] INTEGER (0..2097151),
   gloAlmDeltaIa [5] INTEGER (-131072..131071),
   gloAlmDeltaTA [6] INTEGER (-2097152..2097151),
   gloAlmDeltaTdotA [7] INTEGER (-64..63),
   gloAlmEpsilonA [8] INTEGER (0..32767),
   gloAlmOmegaA [9] INTEGER (-32768..32767),
   gloAlmTauA [10] INTEGER (-512..511),
   gloAlmCA [11] INTEGER (0..1),
   gloAlmMA [12] BIT STRING  (SIZE (2)) OPTIONAL
}
*/
typedef struct EXTERN rrlp_dec_Almanac_GlonassAlmanacSet {
   struct {
      unsigned gloAlmMAPresent : 1;
   } m;
   OSUINT16 gloAlmNA;
   OSUINT8 gloAlmnA;
   OSUINT8 gloAlmHA;
   OSINT32 gloAlmLambdaA;
   OSUINT32 gloAlmtlambdaA;
   OSINT32 gloAlmDeltaIa;
   OSINT32 gloAlmDeltaTA;
   OSINT8 gloAlmDeltaTdotA;
   OSUINT16 gloAlmEpsilonA;
   OSINT16 gloAlmOmegaA;
   OSINT16 gloAlmTauA;
   OSUINT8 gloAlmCA;
   ASN1BitStr32 gloAlmMA;
} rrlp_dec_Almanac_GlonassAlmanacSet;

EXTERN int asn1PD_rrlp_dec_Almanac_GlonassAlmanacSet (OSCTXT* pctxt, rrlp_dec_Almanac_GlonassAlmanacSet* pvalue);

/**************************************************************/
/*                                                            */
/*  Almanac_ECEFsbasAlmanacSet                                */
/*                                                            */
/**************************************************************/
/*
Almanac-ECEFsbasAlmanacSet ::= SEQUENCE {
   sbasAlmDataID [0] INTEGER (0..3),
   svID [1] SVID,
   sbasAlmHealth [2] BIT STRING  (SIZE (8)),
   sbasAlmXg [3] INTEGER (-16384..16383),
   sbasAlmYg [4] INTEGER (-16384..16383),
   sbasAlmZg [5] INTEGER (-256..255),
   sbasAlmXgdot [6] INTEGER (-4..3),
   sbasAlmYgDot [7] INTEGER (-4..3),
   sbasAlmZgDot [8] INTEGER (-8..7),
   sbasAlmTo [9] INTEGER (0..2047)
}
*/
typedef struct EXTERN rrlp_dec_Almanac_ECEFsbasAlmanacSet {
   OSUINT8 sbasAlmDataID;
   rrlp_dec_SVID svID;
   ASN1BitStr32 sbasAlmHealth;
   OSINT16 sbasAlmXg;
   OSINT16 sbasAlmYg;
   OSINT16 sbasAlmZg;
   OSINT8 sbasAlmXgdot;
   OSINT8 sbasAlmYgDot;
   OSINT8 sbasAlmZgDot;
   OSUINT16 sbasAlmTo;
} rrlp_dec_Almanac_ECEFsbasAlmanacSet;

EXTERN int asn1PD_rrlp_dec_Almanac_ECEFsbasAlmanacSet (OSCTXT* pctxt, rrlp_dec_Almanac_ECEFsbasAlmanacSet* pvalue);

/**************************************************************/
/*                                                            */
/*  Almanac_BDSAlmanacSet_r12                                 */
/*                                                            */
/**************************************************************/
/*
Almanac-BDSAlmanacSet-r12 ::= SEQUENCE {
   svID [0] SVID,
   bdsAlmToa-r12 [1] INTEGER (0..255) OPTIONAL,
   bdsAlmSqrtA-r12 [2] INTEGER (0..16777215),
   bdsAlmE-r12 [3] INTEGER (0..131071),
   bdsAlmW-r12 [4] INTEGER (-8388608..8388607),
   bdsAlmM0-r12 [5] INTEGER (-8388608..8388607),
   bdsAlmOmega0-r12 [6] INTEGER (-8388608..8388607),
   bdsAlmOmegaDot-r12 [7] INTEGER (-65536..65535),
   bdsAlmDeltaI-r12 [8] INTEGER (-32768..32767),
   bdsAlmA0-r12 [9] INTEGER (-1024..1023),
   bdsAlmA1-r12 [10] INTEGER (-1024..1023),
   bdsSvHealth-r12 [11] BIT STRING  (SIZE (9)) OPTIONAL
}
*/
typedef struct EXTERN rrlp_dec_Almanac_BDSAlmanacSet_r12 {
   struct {
      unsigned bdsAlmToa_r12Present : 1;
      unsigned bdsSvHealth_r12Present : 1;
   } m;
   rrlp_dec_SVID svID;
   OSUINT8 bdsAlmToa_r12;
   OSUINT32 bdsAlmSqrtA_r12;
   OSUINT32 bdsAlmE_r12;
   OSINT32 bdsAlmW_r12;
   OSINT32 bdsAlmM0_r12;
   OSINT32 bdsAlmOmega0_r12;
   OSINT32 bdsAlmOmegaDot_r12;
   OSINT16 bdsAlmDeltaI_r12;
   OSINT16 bdsAlmA0_r12;
   OSINT16 bdsAlmA1_r12;
   ASN1BitStr32 bdsSvHealth_r12;
} rrlp_dec_Almanac_BDSAlmanacSet_r12;

EXTERN int asn1PD_rrlp_dec_Almanac_BDSAlmanacSet_r12 (OSCTXT* pctxt, rrlp_dec_Almanac_BDSAlmanacSet_r12* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSAlmanacElement                                       */
/*                                                            */
/**************************************************************/
/*
 GANSS Almanac Model 

GANSSAlmanacElement ::= CHOICE {
   keplerianAlmanacSet [0] Almanac-KeplerianSet,
   ...,
   keplerianNAVAlmanac [1] Almanac-NAVKeplerianSet,
   keplerianReducedAlmanac [2] Almanac-ReducedKeplerianSet,
   keplerianMidiAlmanac [3] Almanac-MidiAlmanacSet,
   keplerianGLONASS [4] Almanac-GlonassAlmanacSet,
   ecefSBASAlmanac [5] Almanac-ECEFsbasAlmanacSet,
   keplerianBDSAlmanac-r12 [6] Almanac-BDSAlmanacSet-r12
}
*/
/* Choice tag constants */

#define T_rrlp_dec_GANSSAlmanacElement_keplerianAlmanacSet 1
#define T_rrlp_dec_GANSSAlmanacElement_keplerianNAVAlmanac 2
#define T_rrlp_dec_GANSSAlmanacElement_keplerianReducedAlmanac 3
#define T_rrlp_dec_GANSSAlmanacElement_keplerianMidiAlmanac 4
#define T_rrlp_dec_GANSSAlmanacElement_keplerianGLONASS 5
#define T_rrlp_dec_GANSSAlmanacElement_ecefSBASAlmanac 6
#define T_rrlp_dec_GANSSAlmanacElement_keplerianBDSAlmanac_r12 7
#define T_rrlp_dec_GANSSAlmanacElement_extElem1 8

typedef struct EXTERN rrlp_dec_GANSSAlmanacElement {
   OSUINT32 t;
   union {
      /* t = 1 */
      rrlp_dec_Almanac_KeplerianSet *keplerianAlmanacSet;
      /* t = 2 */
      rrlp_dec_Almanac_NAVKeplerianSet *keplerianNAVAlmanac;
      /* t = 3 */
      rrlp_dec_Almanac_ReducedKeplerianSet *keplerianReducedAlmanac;
      /* t = 4 */
      rrlp_dec_Almanac_MidiAlmanacSet *keplerianMidiAlmanac;
      /* t = 5 */
      rrlp_dec_Almanac_GlonassAlmanacSet *keplerianGLONASS;
      /* t = 6 */
      rrlp_dec_Almanac_ECEFsbasAlmanacSet *ecefSBASAlmanac;
      /* t = 7 */
      rrlp_dec_Almanac_BDSAlmanacSet_r12 *keplerianBDSAlmanac_r12;
      /* t = 8 */
      ASN1OpenType *extElem1;
   } u;
} rrlp_dec_GANSSAlmanacElement;

EXTERN int asn1PD_rrlp_dec_GANSSAlmanacElement (OSCTXT* pctxt, rrlp_dec_GANSSAlmanacElement* pvalue);

EXTERN void asn1Free_rrlp_dec_GANSSAlmanacElement (OSCTXT *pctxt, 
   rrlp_dec_GANSSAlmanacElement* pvalue);

/**************************************************************/
/*                                                            */
/*  SeqOfGANSSAlmanacElement                                  */
/*                                                            */
/**************************************************************/
/*
SeqOfGANSSAlmanacElement ::= SEQUENCE (SIZE (1..36)) OF GANSSAlmanacElement
*/
typedef struct EXTERN rrlp_dec_SeqOfGANSSAlmanacElement {
   OSUINT32 n;
   rrlp_dec_GANSSAlmanacElement *elem;
} rrlp_dec_SeqOfGANSSAlmanacElement;

EXTERN int asn1PD_rrlp_dec_SeqOfGANSSAlmanacElement (OSCTXT* pctxt, rrlp_dec_SeqOfGANSSAlmanacElement* pvalue);

EXTERN void asn1Free_rrlp_dec_SeqOfGANSSAlmanacElement (OSCTXT *pctxt, 
   rrlp_dec_SeqOfGANSSAlmanacElement* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSAlmanacModel                                         */
/*                                                            */
/**************************************************************/
/*
 GANSS Almanac Model IE

GANSSAlmanacModel ::= SEQUENCE {
   weekNumber [0] INTEGER (0..255),
   toa [1] INTEGER (0..255) OPTIONAL,
   ioda [2] INTEGER (0..3) OPTIONAL,
   ganssAlmanacList [3] SeqOfGANSSAlmanacElement
}
*/
typedef struct EXTERN rrlp_dec_GANSSAlmanacModel {
   struct {
      unsigned toaPresent : 1;
      unsigned iodaPresent : 1;
   } m;
   OSUINT8 weekNumber;
   OSUINT8 toa;
   OSUINT8 ioda;
   rrlp_dec_SeqOfGANSSAlmanacElement ganssAlmanacList;
} rrlp_dec_GANSSAlmanacModel;

EXTERN int asn1PD_rrlp_dec_GANSSAlmanacModel (OSCTXT* pctxt, rrlp_dec_GANSSAlmanacModel* pvalue);

EXTERN void asn1Free_rrlp_dec_GANSSAlmanacModel (OSCTXT *pctxt, 
   rrlp_dec_GANSSAlmanacModel* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSUTCModel                                             */
/*                                                            */
/**************************************************************/
/*
 GANSS Universal Time Coordinate Model (Model-1)

GANSSUTCModel ::= SEQUENCE {
   ganssUtcA1 [0] INTEGER (-8388608..8388607),
   ganssUtcA0 [1] INTEGER (-2147483648..2147483647),
   ganssUtcTot [2] INTEGER (0..255),
   ganssUtcWNt [3] INTEGER (0..255),
   ganssUtcDeltaTls [4] INTEGER (-128..127),
   ganssUtcWNlsf [5] INTEGER (0..255),
   ganssUtcDN [6] INTEGER (-128..127),
   ganssUtcDeltaTlsf [7] INTEGER (-128..127)
}
*/
typedef struct EXTERN rrlp_dec_GANSSUTCModel {
   OSINT32 ganssUtcA1;
   OSINT32 ganssUtcA0;
   OSUINT8 ganssUtcTot;
   OSUINT8 ganssUtcWNt;
   OSINT8 ganssUtcDeltaTls;
   OSUINT8 ganssUtcWNlsf;
   OSINT8 ganssUtcDN;
   OSINT8 ganssUtcDeltaTlsf;
} rrlp_dec_GANSSUTCModel;

EXTERN int asn1PD_rrlp_dec_GANSSUTCModel (OSCTXT* pctxt, rrlp_dec_GANSSUTCModel* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSEphemerisExtensionTime                               */
/*                                                            */
/**************************************************************/
/*
GANSSEphemerisExtensionTime ::= SEQUENCE {
   ganssEphExtDay [0] INTEGER (0..8191),
   ganssEphExtTOD [1] GANSSTOD,
   ...
}
*/
typedef struct EXTERN rrlp_dec_GANSSEphemerisExtensionTime {
   OSUINT16 ganssEphExtDay;
   rrlp_dec_GANSSTOD ganssEphExtTOD;
   OSRTDList extElem1;
} rrlp_dec_GANSSEphemerisExtensionTime;

EXTERN int asn1PD_rrlp_dec_GANSSEphemerisExtensionTime (OSCTXT* pctxt, rrlp_dec_GANSSEphemerisExtensionTime* pvalue);

EXTERN void asn1Free_rrlp_dec_GANSSEphemerisExtensionTime (OSCTXT *pctxt, 
   rrlp_dec_GANSSEphemerisExtensionTime* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSEphemerisExtensionHeader                             */
/*                                                            */
/**************************************************************/
/*
 The ganssEphemerisHeader and the ganssReferenceSet are mandatory only once in the delivery of the
 GANSS Ephemeris Extension.  The ganssReferenceSet shall include all healthy satellite vehicles 
 at the time of message construction.

GANSSEphemerisExtensionHeader ::= SEQUENCE {
   timeAtEstimation [0] GANSSEphemerisExtensionTime,
   validityPeriod [1] INTEGER (1..8),
   ephemerisExtensionDuration [2] INTEGER (1..512),
   ...
}
*/
typedef struct EXTERN rrlp_dec_GANSSEphemerisExtensionHeader {
   rrlp_dec_GANSSEphemerisExtensionTime timeAtEstimation;
   OSUINT8 validityPeriod;
   OSUINT16 ephemerisExtensionDuration;
   OSRTDList extElem1;
} rrlp_dec_GANSSEphemerisExtensionHeader;

EXTERN int asn1PD_rrlp_dec_GANSSEphemerisExtensionHeader (OSCTXT* pctxt, rrlp_dec_GANSSEphemerisExtensionHeader* pvalue);

EXTERN void asn1Free_rrlp_dec_GANSSEphemerisExtensionHeader (OSCTXT *pctxt, 
   rrlp_dec_GANSSEphemerisExtensionHeader* pvalue);

/**************************************************************/
/*                                                            */
/*  ReferenceNavModel                                         */
/*                                                            */
/**************************************************************/
/*
 Reference Nav Model for Ephepmeris Extension

ReferenceNavModel ::= SEQUENCE {
   keplerToe [0] INTEGER (0..37799),
   keplerW [1] INTEGER (-2147483648..2147483647),
   keplerDeltaN [2] INTEGER (-32768..32767),
   keplerM0 [3] INTEGER (-2147483648..2147483647),
   keplerOmegaDot [4] INTEGER (-8388608..8388607),
   keplerE [5] INTEGER (0..4294967295),
   keplerIDot [6] INTEGER (-8192..8191),
   keplerAPowerHalf [7] INTEGER (0..4294967295),
   keplerI0 [8] INTEGER (-2147483648..2147483647),
   keplerOmega0 [9] INTEGER (-2147483648..2147483647),
   keplerCrs [10] INTEGER (-32768..32767),
   keplerCis [11] INTEGER (-32768..32767),
   keplerCus [12] INTEGER (-32768..32767),
   keplerCrc [13] INTEGER (-32768..32767),
   keplerCic [14] INTEGER (-32768..32767),
   keplerCuc [15] INTEGER (-32768..32767)
}
*/
typedef struct EXTERN rrlp_dec_ReferenceNavModel {
   OSUINT16 keplerToe;
   OSINT32 keplerW;
   OSINT16 keplerDeltaN;
   OSINT32 keplerM0;
   OSINT32 keplerOmegaDot;
   OSUINT32 keplerE;
   OSINT16 keplerIDot;
   OSUINT32 keplerAPowerHalf;
   OSINT32 keplerI0;
   OSINT32 keplerOmega0;
   OSINT16 keplerCrs;
   OSINT16 keplerCis;
   OSINT16 keplerCus;
   OSINT16 keplerCrc;
   OSINT16 keplerCic;
   OSINT16 keplerCuc;
} rrlp_dec_ReferenceNavModel;

EXTERN int asn1PD_rrlp_dec_ReferenceNavModel (OSCTXT* pctxt, rrlp_dec_ReferenceNavModel* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSReferenceOrbit                                       */
/*                                                            */
/**************************************************************/
/*
The number of reference orbits can be read from number of elements in this sequence

GANSSReferenceOrbit ::= SEQUENCE {
   svID [0] SVID,
   ganssOrbitModel [1] ReferenceNavModel,
   ganssClockModel [2] GANSSClockModel,
   ...
}
*/
typedef struct EXTERN rrlp_dec_GANSSReferenceOrbit {
   rrlp_dec_SVID svID;
   rrlp_dec_ReferenceNavModel ganssOrbitModel;
   rrlp_dec_GANSSClockModel ganssClockModel;
   OSRTDList extElem1;
} rrlp_dec_GANSSReferenceOrbit;

EXTERN int asn1PD_rrlp_dec_GANSSReferenceOrbit (OSCTXT* pctxt, rrlp_dec_GANSSReferenceOrbit* pvalue);

EXTERN void asn1Free_rrlp_dec_GANSSReferenceOrbit (OSCTXT *pctxt, 
   rrlp_dec_GANSSReferenceOrbit* pvalue);

/**************************************************************/
/*                                                            */
/*  SeqOfGANSSRefOrbit                                        */
/*                                                            */
/**************************************************************/
/*
SeqOfGANSSRefOrbit ::= SEQUENCE (SIZE (1..32)) OF GANSSReferenceOrbit
*/
typedef struct EXTERN rrlp_dec_SeqOfGANSSRefOrbit {
   OSUINT32 n;
   rrlp_dec_GANSSReferenceOrbit *elem;
} rrlp_dec_SeqOfGANSSRefOrbit;

EXTERN int asn1PD_rrlp_dec_SeqOfGANSSRefOrbit (OSCTXT* pctxt, rrlp_dec_SeqOfGANSSRefOrbit* pvalue);

EXTERN void asn1Free_rrlp_dec_SeqOfGANSSRefOrbit (OSCTXT *pctxt, 
   rrlp_dec_SeqOfGANSSRefOrbit* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSEphemerisDeltaBitSizes                               */
/*                                                            */
/**************************************************************/
/*
 Each octet string element in GANSSDeltaElementList corresponds to one PRN within one epoch
 Table 55.11 of the annex shows the organization of the delta ephemeris octet string.
 Decoding of each of the octet strings is accomplished by consulting the ephemerisDeltaSizes
 table to learn the length and order of each of the parameters in the ephemerisDelta payload.
 Post decode scaling is accomplished by consulting the ephemerisDeltaScales table to learn the
 scale factors to apply to the terms in the delta ephemeris.
 Ephemeris Delta Bit Sizes.

GANSSEphemerisDeltaBitSizes ::= SEQUENCE {
   bitsize-delta-omega [0] INTEGER (1..32),
   bitsize-delta-deltaN [1] INTEGER (1..16),
   bitsize-delta-m0 [2] INTEGER (1..32),
   bitsize-delta-omegadot [3] INTEGER (1..24),
   bitsize-delta-e [4] INTEGER (1..32),
   bitsize-delta-idot [5] INTEGER (1..14),
   bitsize-delta-sqrtA [6] INTEGER (1..32),
   bitsize-delta-i0 [7] INTEGER (1..32),
   bitsize-delta-omega0 [8] INTEGER (1..32),
   bitsize-delta-crs [9] INTEGER (1..16),
   bitsize-delta-cis [10] INTEGER (1..16),
   bitsize-delta-cus [11] INTEGER (1..16),
   bitsize-delta-crc [12] INTEGER (1..16),
   bitsize-delta-cic [13] INTEGER (1..16),
   bitsize-delta-cuc [14] INTEGER (1..16),
   bitsize-delta-tgd1 [15] INTEGER (1..10),
   bitsize-delta-tgd2 [16] INTEGER (1..10),
   ...
}
*/
typedef struct EXTERN rrlp_dec_GANSSEphemerisDeltaBitSizes {
   OSUINT8 bitsize_delta_omega;
   OSUINT8 bitsize_delta_deltaN;
   OSUINT8 bitsize_delta_m0;
   OSUINT8 bitsize_delta_omegadot;
   OSUINT8 bitsize_delta_e;
   OSUINT8 bitsize_delta_idot;
   OSUINT8 bitsize_delta_sqrtA;
   OSUINT8 bitsize_delta_i0;
   OSUINT8 bitsize_delta_omega0;
   OSUINT8 bitsize_delta_crs;
   OSUINT8 bitsize_delta_cis;
   OSUINT8 bitsize_delta_cus;
   OSUINT8 bitsize_delta_crc;
   OSUINT8 bitsize_delta_cic;
   OSUINT8 bitsize_delta_cuc;
   OSUINT8 bitsize_delta_tgd1;
   OSUINT8 bitsize_delta_tgd2;
   OSRTDList extElem1;
} rrlp_dec_GANSSEphemerisDeltaBitSizes;

EXTERN int asn1PD_rrlp_dec_GANSSEphemerisDeltaBitSizes (OSCTXT* pctxt, rrlp_dec_GANSSEphemerisDeltaBitSizes* pvalue);

EXTERN void asn1Free_rrlp_dec_GANSSEphemerisDeltaBitSizes (OSCTXT *pctxt, 
   rrlp_dec_GANSSEphemerisDeltaBitSizes* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSEphemerisDeltaScales                                 */
/*                                                            */
/**************************************************************/
/*
GANSSEphemerisDeltaScales ::= SEQUENCE {
   scale-delta-omega [0] INTEGER (-16..15),
   scale-delta-deltaN [1] INTEGER (-16..15),
   scale-delta-m0 [2] INTEGER (-16..15),
   scale-delta-omegadot [3] INTEGER (-16..15),
   scale-delta-e [4] INTEGER (-16..15),
   scale-delta-idot [5] INTEGER (-16..15),
   scale-delta-sqrtA [6] INTEGER (-16..15),
   scale-delta-i0 [7] INTEGER (-16..15),
   scale-delta-omega0 [8] INTEGER (-16..15),
   scale-delta-crs [9] INTEGER (-16..15),
   scale-delta-cis [10] INTEGER (-16..15),
   scale-delta-cus [11] INTEGER (-16..15),
   scale-delta-crc [12] INTEGER (-16..15),
   scale-delta-cic [13] INTEGER (-16..15),
   scale-delta-cuc [14] INTEGER (-16..15),
   scale-delta-tgd1 [15] INTEGER (-16..15),
   scale-delta-tgd2 [16] INTEGER (-16..15),
   ...
}
*/
typedef struct EXTERN rrlp_dec_GANSSEphemerisDeltaScales {
   OSINT8 scale_delta_omega;
   OSINT8 scale_delta_deltaN;
   OSINT8 scale_delta_m0;
   OSINT8 scale_delta_omegadot;
   OSINT8 scale_delta_e;
   OSINT8 scale_delta_idot;
   OSINT8 scale_delta_sqrtA;
   OSINT8 scale_delta_i0;
   OSINT8 scale_delta_omega0;
   OSINT8 scale_delta_crs;
   OSINT8 scale_delta_cis;
   OSINT8 scale_delta_cus;
   OSINT8 scale_delta_crc;
   OSINT8 scale_delta_cic;
   OSINT8 scale_delta_cuc;
   OSINT8 scale_delta_tgd1;
   OSINT8 scale_delta_tgd2;
   OSRTDList extElem1;
} rrlp_dec_GANSSEphemerisDeltaScales;

EXTERN int asn1PD_rrlp_dec_GANSSEphemerisDeltaScales (OSCTXT* pctxt, rrlp_dec_GANSSEphemerisDeltaScales* pvalue);

EXTERN void asn1Free_rrlp_dec_GANSSEphemerisDeltaScales (OSCTXT *pctxt, 
   rrlp_dec_GANSSEphemerisDeltaScales* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSDeltaEpochHeader                                     */
/*                                                            */
/**************************************************************/
/*
 Each GANSSDeltaEpoch element contains a header and the delta values for a particular time window
 for all PRN's.

GANSSDeltaEpochHeader ::= SEQUENCE {
   validityPeriod [0] INTEGER (1..8) OPTIONAL,
   ephemerisDeltaSizes [1] GANSSEphemerisDeltaBitSizes OPTIONAL,
   ephemerisDeltaScales [2] GANSSEphemerisDeltaScales OPTIONAL,
   ...
}
*/
typedef struct EXTERN rrlp_dec_GANSSDeltaEpochHeader {
   struct {
      unsigned validityPeriodPresent : 1;
      unsigned ephemerisDeltaSizesPresent : 1;
      unsigned ephemerisDeltaScalesPresent : 1;
   } m;
   OSUINT8 validityPeriod;
   rrlp_dec_GANSSEphemerisDeltaBitSizes ephemerisDeltaSizes;
   rrlp_dec_GANSSEphemerisDeltaScales ephemerisDeltaScales;
   OSRTDList extElem1;
} rrlp_dec_GANSSDeltaEpochHeader;

EXTERN int asn1PD_rrlp_dec_GANSSDeltaEpochHeader (OSCTXT* pctxt, rrlp_dec_GANSSDeltaEpochHeader* pvalue);

EXTERN void asn1Free_rrlp_dec_GANSSDeltaEpochHeader (OSCTXT *pctxt, 
   rrlp_dec_GANSSDeltaEpochHeader* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSDeltaElementList_element                             */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'GANSSDeltaElementList'
*/
typedef struct EXTERN rrlp_dec_GANSSDeltaElementList_element {
   OSUINT32 numocts;
   OSOCTET data[49];
} rrlp_dec_GANSSDeltaElementList_element;

EXTERN int asn1PD_rrlp_dec_GANSSDeltaElementList_element (OSCTXT* pctxt, rrlp_dec_GANSSDeltaElementList_element* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSDeltaElementList                                     */
/*                                                            */
/**************************************************************/
/*
 In each of the GANSSDeltaEpochs, if the optional element, validityPeriod is not included, the
 value in GANSSEphemerisExtensionHeader shall be used.  If the optional elements 
 ephemerisDeltaSizes or ephemerisDeltaScales are not included, then the default ephemeris delta
 sizes and scales shall be used.  The default sizes and scales are found in the annex in the 
 table 55.11.

GANSSDeltaElementList ::= SEQUENCE (SIZE (1..32)) OF OCTET STRING (SIZE (1..49))
*/
typedef struct EXTERN rrlp_dec_GANSSDeltaElementList {
   OSUINT32 n;
   rrlp_dec_GANSSDeltaElementList_element *elem;
} rrlp_dec_GANSSDeltaElementList;

EXTERN int asn1PD_rrlp_dec_GANSSDeltaElementList (OSCTXT* pctxt, rrlp_dec_GANSSDeltaElementList* pvalue);

EXTERN void asn1Free_rrlp_dec_GANSSDeltaElementList (OSCTXT *pctxt, 
   rrlp_dec_GANSSDeltaElementList* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSEphemerisDeltaEpoch                                  */
/*                                                            */
/**************************************************************/
/*
GANSSEphemerisDeltaEpoch ::= SEQUENCE {
   ganssDeltaEpochHeader [0] GANSSDeltaEpochHeader OPTIONAL,
   ganssDeltaElementList [1] GANSSDeltaElementList,
   ...
}
*/
typedef struct EXTERN rrlp_dec_GANSSEphemerisDeltaEpoch {
   struct {
      unsigned ganssDeltaEpochHeaderPresent : 1;
   } m;
   rrlp_dec_GANSSDeltaEpochHeader ganssDeltaEpochHeader;
   rrlp_dec_GANSSDeltaElementList ganssDeltaElementList;
   OSRTDList extElem1;
} rrlp_dec_GANSSEphemerisDeltaEpoch;

EXTERN int asn1PD_rrlp_dec_GANSSEphemerisDeltaEpoch (OSCTXT* pctxt, rrlp_dec_GANSSEphemerisDeltaEpoch* pvalue);

EXTERN void asn1Free_rrlp_dec_GANSSEphemerisDeltaEpoch (OSCTXT *pctxt, 
   rrlp_dec_GANSSEphemerisDeltaEpoch* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSEphemerisDeltaMatrix                                 */
/*                                                            */
/**************************************************************/
/*
GANSSEphemerisDeltaMatrix ::= SEQUENCE (SIZE (1..128)) OF GANSSEphemerisDeltaEpoch
*/
typedef struct EXTERN rrlp_dec_GANSSEphemerisDeltaMatrix {
   OSUINT32 n;
   rrlp_dec_GANSSEphemerisDeltaEpoch *elem;
} rrlp_dec_GANSSEphemerisDeltaMatrix;

EXTERN int asn1PD_rrlp_dec_GANSSEphemerisDeltaMatrix (OSCTXT* pctxt, rrlp_dec_GANSSEphemerisDeltaMatrix* pvalue);

EXTERN void asn1Free_rrlp_dec_GANSSEphemerisDeltaMatrix (OSCTXT *pctxt, 
   rrlp_dec_GANSSEphemerisDeltaMatrix* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSEphemerisExtension                                   */
/*                                                            */
/**************************************************************/
/*
GANSS Ephemeris Extension

GANSSEphemerisExtension ::= SEQUENCE {
   ganssEphemerisHeader [0] GANSSEphemerisExtensionHeader OPTIONAL,
   ganssReferenceSet [1] SeqOfGANSSRefOrbit OPTIONAL,
   ganssephemerisDeltasMatrix [2] GANSSEphemerisDeltaMatrix OPTIONAL,
   ...
}
*/
typedef struct EXTERN rrlp_dec_GANSSEphemerisExtension {
   struct {
      unsigned ganssEphemerisHeaderPresent : 1;
      unsigned ganssReferenceSetPresent : 1;
      unsigned ganssephemerisDeltasMatrixPresent : 1;
   } m;
   rrlp_dec_GANSSEphemerisExtensionHeader ganssEphemerisHeader;
   rrlp_dec_SeqOfGANSSRefOrbit ganssReferenceSet;
   rrlp_dec_GANSSEphemerisDeltaMatrix ganssephemerisDeltasMatrix;
   OSRTDList extElem1;
} rrlp_dec_GANSSEphemerisExtension;

EXTERN int asn1PD_rrlp_dec_GANSSEphemerisExtension (OSCTXT* pctxt, rrlp_dec_GANSSEphemerisExtension* pvalue);

EXTERN void asn1Free_rrlp_dec_GANSSEphemerisExtension (OSCTXT *pctxt, 
   rrlp_dec_GANSSEphemerisExtension* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSSatEventsInfo_eventOccured                           */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'GANSSSatEventsInfo'
*/
typedef struct rrlp_dec_GANSSSatEventsInfo_eventOccured {
   OSUINT32 numbits;
   OSOCTET data[8];
} rrlp_dec_GANSSSatEventsInfo_eventOccured;

EXTERN int asn1PD_rrlp_dec_GANSSSatEventsInfo_eventOccured (OSCTXT* pctxt, rrlp_dec_GANSSSatEventsInfo_eventOccured* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSSatEventsInfo_futureEventNoted                       */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'GANSSSatEventsInfo'
*/
typedef struct rrlp_dec_GANSSSatEventsInfo_futureEventNoted {
   OSUINT32 numbits;
   OSOCTET data[8];
} rrlp_dec_GANSSSatEventsInfo_futureEventNoted;

EXTERN int asn1PD_rrlp_dec_GANSSSatEventsInfo_futureEventNoted (OSCTXT* pctxt, rrlp_dec_GANSSSatEventsInfo_futureEventNoted* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSSatEventsInfo                                        */
/*                                                            */
/**************************************************************/
/*
GANSSSatEventsInfo ::= SEQUENCE {
   eventOccured [0] BIT STRING  (SIZE (64)),
   futureEventNoted [1] BIT STRING  (SIZE (64)),
   ...
}
*/
typedef struct EXTERN rrlp_dec_GANSSSatEventsInfo {
   rrlp_dec_GANSSSatEventsInfo_eventOccured eventOccured;
   rrlp_dec_GANSSSatEventsInfo_futureEventNoted futureEventNoted;
   OSRTDList extElem1;
} rrlp_dec_GANSSSatEventsInfo;

EXTERN int asn1PD_rrlp_dec_GANSSSatEventsInfo (OSCTXT* pctxt, rrlp_dec_GANSSSatEventsInfo* pvalue);

EXTERN void asn1Free_rrlp_dec_GANSSSatEventsInfo (OSCTXT *pctxt, 
   rrlp_dec_GANSSSatEventsInfo* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSEphemerisExtensionCheck                              */
/*                                                            */
/**************************************************************/
/*
 GANSS Ephemeris Extension Check

GANSSEphemerisExtensionCheck ::= SEQUENCE {
   ganssBeginTime [0] GANSSEphemerisExtensionTime,
   ganssEndTime [1] GANSSEphemerisExtensionTime,
   ganssSatEventsInfo [2] GANSSSatEventsInfo,
   ...
}
*/
typedef struct EXTERN rrlp_dec_GANSSEphemerisExtensionCheck {
   rrlp_dec_GANSSEphemerisExtensionTime ganssBeginTime;
   rrlp_dec_GANSSEphemerisExtensionTime ganssEndTime;
   rrlp_dec_GANSSSatEventsInfo ganssSatEventsInfo;
   OSRTDList extElem1;
} rrlp_dec_GANSSEphemerisExtensionCheck;

EXTERN int asn1PD_rrlp_dec_GANSSEphemerisExtensionCheck (OSCTXT* pctxt, rrlp_dec_GANSSEphemerisExtensionCheck* pvalue);

EXTERN void asn1Free_rrlp_dec_GANSSEphemerisExtensionCheck (OSCTXT *pctxt, 
   rrlp_dec_GANSSEphemerisExtensionCheck* pvalue);

/**************************************************************/
/*                                                            */
/*  UTCmodelSet2                                              */
/*                                                            */
/**************************************************************/
/*
UTCmodelSet2 ::= SEQUENCE {
   utcA0 [0] INTEGER (-32768..32767),
   utcA1 [1] INTEGER (-4096..4095),
   utcA2 [2] INTEGER (-64..63),
   utcDeltaTls [3] INTEGER (-128..127),
   utcTot [4] INTEGER (0..65535),
   utcWNot [5] INTEGER (0..8191),
   utcWNlsf [6] INTEGER (0..255),
   utcDN [7] BIT STRING  (SIZE (4)),
   utcDeltaTlsf [8] INTEGER (-128..127)
}
*/
typedef struct EXTERN rrlp_dec_UTCmodelSet2 {
   OSINT16 utcA0;
   OSINT16 utcA1;
   OSINT8 utcA2;
   OSINT8 utcDeltaTls;
   OSUINT16 utcTot;
   OSUINT16 utcWNot;
   OSUINT8 utcWNlsf;
   ASN1BitStr32 utcDN;
   OSINT8 utcDeltaTlsf;
} rrlp_dec_UTCmodelSet2;

EXTERN int asn1PD_rrlp_dec_UTCmodelSet2 (OSCTXT* pctxt, rrlp_dec_UTCmodelSet2* pvalue);

/**************************************************************/
/*                                                            */
/*  UTCmodelSet3                                              */
/*                                                            */
/**************************************************************/
/*
UTCmodelSet3 ::= SEQUENCE {
   nA [0] INTEGER (1..1461),
   tauC [1] INTEGER (-2147483648..2147483647),
   b1 [2] INTEGER (-1024..1023) OPTIONAL,
   b2 [3] INTEGER (-512..511) OPTIONAL,
   kp [4] BIT STRING  (SIZE (2)) OPTIONAL
}
*/
typedef struct EXTERN rrlp_dec_UTCmodelSet3 {
   struct {
      unsigned b1Present : 1;
      unsigned b2Present : 1;
      unsigned kpPresent : 1;
   } m;
   OSUINT16 nA;
   OSINT32 tauC;
   OSINT16 b1;
   OSINT16 b2;
   ASN1BitStr32 kp;
} rrlp_dec_UTCmodelSet3;

EXTERN int asn1PD_rrlp_dec_UTCmodelSet3 (OSCTXT* pctxt, rrlp_dec_UTCmodelSet3* pvalue);

/**************************************************************/
/*                                                            */
/*  UTCmodelSet4                                              */
/*                                                            */
/**************************************************************/
/*
UTCmodelSet4 ::= SEQUENCE {
   utcA1wnt [0] INTEGER (-8388608..8388607),
   utcA0wnt [1] INTEGER (-2147483648..2147483647),
   utcTot [2] INTEGER (0..255),
   utcWNt [3] INTEGER (0..255),
   utcDeltaTls [4] INTEGER (-128..127),
   utcWNlsf [5] INTEGER (0..255),
   utcDN [6] INTEGER (-128..127),
   utcDeltaTlsf [7] INTEGER (-128..127),
   utcStandardID [8] INTEGER (0..7)
}
*/
typedef struct EXTERN rrlp_dec_UTCmodelSet4 {
   OSINT32 utcA1wnt;
   OSINT32 utcA0wnt;
   OSUINT8 utcTot;
   OSUINT8 utcWNt;
   OSINT8 utcDeltaTls;
   OSUINT8 utcWNlsf;
   OSINT8 utcDN;
   OSINT8 utcDeltaTlsf;
   OSUINT8 utcStandardID;
} rrlp_dec_UTCmodelSet4;

EXTERN int asn1PD_rrlp_dec_UTCmodelSet4 (OSCTXT* pctxt, rrlp_dec_UTCmodelSet4* pvalue);

/**************************************************************/
/*                                                            */
/*  UTCmodelSet5_r12                                          */
/*                                                            */
/**************************************************************/
/*
UTCmodelSet5-r12 ::= SEQUENCE {
   utcA0-r12 [0] INTEGER (-2147483648..2147483647),
   utcA1-r12 [1] INTEGER (-8388608..8388607),
   utcDeltaTls-r12 [2] INTEGER (-128..127),
   utcWNlsf-r12 [3] INTEGER (0..255),
   utcDN-r12 [4] INTEGER (0..255),
   utcDeltaTlsf-r12 [5] INTEGER (-128..127)
}
*/
typedef struct EXTERN rrlp_dec_UTCmodelSet5_r12 {
   OSINT32 utcA0_r12;
   OSINT32 utcA1_r12;
   OSINT8 utcDeltaTls_r12;
   OSUINT8 utcWNlsf_r12;
   OSUINT8 utcDN_r12;
   OSINT8 utcDeltaTlsf_r12;
} rrlp_dec_UTCmodelSet5_r12;

EXTERN int asn1PD_rrlp_dec_UTCmodelSet5_r12 (OSCTXT* pctxt, rrlp_dec_UTCmodelSet5_r12* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSAddUTCModel                                          */
/*                                                            */
/**************************************************************/
/*
 If a bit is clear in the eventOccured field it indicates that no known errors have occured
 between the current time and the ganssBeginTime nor is a maneuver planned for the next sixty
 minutes.
 If a bit is set in the futureEventNoted field it indicates that a maneuver is planned during the
 time period between current time plus sixty minutes and the ganssEndTime
 GANSS Additional Universal Time Coordinate Model

GANSSAddUTCModel ::= CHOICE {
   utcModel2 [0] UTCmodelSet2,
   utcModel3 [1] UTCmodelSet3,
   utcModel4 [2] UTCmodelSet4,
   ...,
   utcModel5-r12 [3] UTCmodelSet5-r12
}
*/
/* Choice tag constants */

#define T_rrlp_dec_GANSSAddUTCModel_utcModel2 1
#define T_rrlp_dec_GANSSAddUTCModel_utcModel3 2
#define T_rrlp_dec_GANSSAddUTCModel_utcModel4 3
#define T_rrlp_dec_GANSSAddUTCModel_utcModel5_r12 4
#define T_rrlp_dec_GANSSAddUTCModel_extElem1 5

typedef struct EXTERN rrlp_dec_GANSSAddUTCModel {
   OSUINT32 t;
   union {
      /* t = 1 */
      rrlp_dec_UTCmodelSet2 *utcModel2;
      /* t = 2 */
      rrlp_dec_UTCmodelSet3 *utcModel3;
      /* t = 3 */
      rrlp_dec_UTCmodelSet4 *utcModel4;
      /* t = 4 */
      rrlp_dec_UTCmodelSet5_r12 *utcModel5_r12;
      /* t = 5 */
      ASN1OpenType *extElem1;
   } u;
} rrlp_dec_GANSSAddUTCModel;

EXTERN int asn1PD_rrlp_dec_GANSSAddUTCModel (OSCTXT* pctxt, rrlp_dec_GANSSAddUTCModel* pvalue);

EXTERN void asn1Free_rrlp_dec_GANSSAddUTCModel (OSCTXT *pctxt, 
   rrlp_dec_GANSSAddUTCModel* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSS_ID1_element                                         */
/*                                                            */
/**************************************************************/
/*
GANSS-ID1-element ::= SEQUENCE {
   svID [0] SVID,
   signalsAvailable [1] GANSSSignals,
   ...
}
*/
typedef struct EXTERN rrlp_dec_GANSS_ID1_element {
   rrlp_dec_SVID svID;
   rrlp_dec_GANSSSignals signalsAvailable;
   OSRTDList extElem1;
} rrlp_dec_GANSS_ID1_element;

EXTERN int asn1PD_rrlp_dec_GANSS_ID1_element (OSCTXT* pctxt, rrlp_dec_GANSS_ID1_element* pvalue);

EXTERN void asn1Free_rrlp_dec_GANSS_ID1_element (OSCTXT *pctxt, 
   rrlp_dec_GANSS_ID1_element* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSS_ID1                                                 */
/*                                                            */
/**************************************************************/
/*
GANSS-ID1 ::= SEQUENCE (SIZE (1..64)) OF GANSS-ID1-element
*/
typedef struct EXTERN rrlp_dec_GANSS_ID1 {
   OSUINT32 n;
   rrlp_dec_GANSS_ID1_element *elem;
} rrlp_dec_GANSS_ID1;

EXTERN int asn1PD_rrlp_dec_GANSS_ID1 (OSCTXT* pctxt, rrlp_dec_GANSS_ID1* pvalue);

EXTERN void asn1Free_rrlp_dec_GANSS_ID1 (OSCTXT *pctxt, rrlp_dec_GANSS_ID1* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSS_ID3_element                                         */
/*                                                            */
/**************************************************************/
/*
GANSS-ID3-element ::= SEQUENCE {
   svID [0] SVID,
   signalsAvailable [1] GANSSSignals,
   channelNumber [2] INTEGER (-7..13),
   ...
}
*/
typedef struct EXTERN rrlp_dec_GANSS_ID3_element {
   rrlp_dec_SVID svID;
   rrlp_dec_GANSSSignals signalsAvailable;
   OSINT8 channelNumber;
   OSRTDList extElem1;
} rrlp_dec_GANSS_ID3_element;

EXTERN int asn1PD_rrlp_dec_GANSS_ID3_element (OSCTXT* pctxt, rrlp_dec_GANSS_ID3_element* pvalue);

EXTERN void asn1Free_rrlp_dec_GANSS_ID3_element (OSCTXT *pctxt, 
   rrlp_dec_GANSS_ID3_element* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSS_ID3                                                 */
/*                                                            */
/**************************************************************/
/*
GANSS-ID3 ::= SEQUENCE (SIZE (1..64)) OF GANSS-ID3-element
*/
typedef struct EXTERN rrlp_dec_GANSS_ID3 {
   OSUINT32 n;
   rrlp_dec_GANSS_ID3_element *elem;
} rrlp_dec_GANSS_ID3;

EXTERN int asn1PD_rrlp_dec_GANSS_ID3 (OSCTXT* pctxt, rrlp_dec_GANSS_ID3* pvalue);

EXTERN void asn1Free_rrlp_dec_GANSS_ID3 (OSCTXT *pctxt, rrlp_dec_GANSS_ID3* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSAuxiliaryInformation                                 */
/*                                                            */
/**************************************************************/
/*
 GANSS Auxiliary Information

GANSSAuxiliaryInformation ::= CHOICE {
   ganssID1 [0] GANSS-ID1,
   ganssID3 [1] GANSS-ID3,
   ...
}
*/
/* Choice tag constants */

#define T_rrlp_dec_GANSSAuxiliaryInformation_ganssID1 1
#define T_rrlp_dec_GANSSAuxiliaryInformation_ganssID3 2
#define T_rrlp_dec_GANSSAuxiliaryInformation_extElem1 3

typedef struct EXTERN rrlp_dec_GANSSAuxiliaryInformation {
   OSUINT32 t;
   union {
      /* t = 1 */
      rrlp_dec_GANSS_ID1 *ganssID1;
      /* t = 2 */
      rrlp_dec_GANSS_ID3 *ganssID3;
      /* t = 3 */
      ASN1OpenType *extElem1;
   } u;
} rrlp_dec_GANSSAuxiliaryInformation;

EXTERN int asn1PD_rrlp_dec_GANSSAuxiliaryInformation (OSCTXT* pctxt, rrlp_dec_GANSSAuxiliaryInformation* pvalue);

EXTERN void asn1Free_rrlp_dec_GANSSAuxiliaryInformation (OSCTXT *pctxt, 
   rrlp_dec_GANSSAuxiliaryInformation* pvalue);

/**************************************************************/
/*                                                            */
/*  DGANSSExtensionSgnElement                                 */
/*                                                            */
/**************************************************************/
/*
DGANSSExtensionSgnElement ::= SEQUENCE {
   svID [0] SVID,
   udreGrowthRate [1] INTEGER (0..7),
   udreValidityTime [2] INTEGER (0..7),
   ...
}
*/
typedef struct EXTERN rrlp_dec_DGANSSExtensionSgnElement {
   rrlp_dec_SVID svID;
   OSUINT8 udreGrowthRate;
   OSUINT8 udreValidityTime;
   OSRTDList extElem1;
} rrlp_dec_DGANSSExtensionSgnElement;

EXTERN int asn1PD_rrlp_dec_DGANSSExtensionSgnElement (OSCTXT* pctxt, rrlp_dec_DGANSSExtensionSgnElement* pvalue);

EXTERN void asn1Free_rrlp_dec_DGANSSExtensionSgnElement (OSCTXT *pctxt, 
   rrlp_dec_DGANSSExtensionSgnElement* pvalue);

/**************************************************************/
/*                                                            */
/*  SeqOfDGANSSExtensionSgnElement                            */
/*                                                            */
/**************************************************************/
/*
 SeqOfDGANSSExtensionSgnElement shall contain the same number of elements as the 
 SeqOfDGANSSSgnElement included in GANSSDiffCorrections IE

SeqOfDGANSSExtensionSgnElement ::= SEQUENCE (SIZE (1..16)) OF DGANSSExtensionSgnElement
*/
typedef struct EXTERN rrlp_dec_SeqOfDGANSSExtensionSgnElement {
   OSUINT32 n;
   rrlp_dec_DGANSSExtensionSgnElement *elem;
} rrlp_dec_SeqOfDGANSSExtensionSgnElement;

EXTERN int asn1PD_rrlp_dec_SeqOfDGANSSExtensionSgnElement (OSCTXT* pctxt, rrlp_dec_SeqOfDGANSSExtensionSgnElement* pvalue);

EXTERN void asn1Free_rrlp_dec_SeqOfDGANSSExtensionSgnElement (OSCTXT *pctxt, 
   rrlp_dec_SeqOfDGANSSExtensionSgnElement* pvalue);

/**************************************************************/
/*                                                            */
/*  DGANSSExtensionSgnTypeElement                             */
/*                                                            */
/**************************************************************/
/*
DGANSSExtensionSgnTypeElement ::= SEQUENCE {
   ganssSignalID [0] GANSSSignalID,
   dganssExtensionSgnList [1] SeqOfDGANSSExtensionSgnElement
}
*/
typedef struct EXTERN rrlp_dec_DGANSSExtensionSgnTypeElement {
   rrlp_dec_GANSSSignalID ganssSignalID;
   rrlp_dec_SeqOfDGANSSExtensionSgnElement dganssExtensionSgnList;
} rrlp_dec_DGANSSExtensionSgnTypeElement;

EXTERN int asn1PD_rrlp_dec_DGANSSExtensionSgnTypeElement (OSCTXT* pctxt, rrlp_dec_DGANSSExtensionSgnTypeElement* pvalue);

EXTERN void asn1Free_rrlp_dec_DGANSSExtensionSgnTypeElement (OSCTXT *pctxt, 
   rrlp_dec_DGANSSExtensionSgnTypeElement* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSDiffCorrectionsValidityPeriod                        */
/*                                                            */
/**************************************************************/
/*
 DGANSS Corrections Validity Period:
 This element may only be included if GANSSDiffCorrections IE is included in 
 GANSSGenericAssistDataElement element.
 GANSSDiffCorrectionsValidityPeriod shall contain the same number of elements as the 
 SeqOfSgnTypeElement included in GANSSDiffCorrections IE

GANSSDiffCorrectionsValidityPeriod ::= SEQUENCE (SIZE (1..3)) OF DGANSSExtensionSgnTypeElement
*/
typedef struct EXTERN rrlp_dec_GANSSDiffCorrectionsValidityPeriod {
   OSUINT32 n;
   rrlp_dec_DGANSSExtensionSgnTypeElement *elem;
} rrlp_dec_GANSSDiffCorrectionsValidityPeriod;

EXTERN int asn1PD_rrlp_dec_GANSSDiffCorrectionsValidityPeriod (OSCTXT* pctxt, rrlp_dec_GANSSDiffCorrectionsValidityPeriod* pvalue);

EXTERN void asn1Free_rrlp_dec_GANSSDiffCorrectionsValidityPeriod (OSCTXT *pctxt, 
   rrlp_dec_GANSSDiffCorrectionsValidityPeriod* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSTimeModelElement_R10_Ext                             */
/*                                                            */
/**************************************************************/
/*
GANSSTimeModelElement-R10-Ext ::= SEQUENCE {
   gnssTOID [0] INTEGER (0..7),
   deltaT [1] INTEGER (-128..127)
}
*/
typedef struct EXTERN rrlp_dec_GANSSTimeModelElement_R10_Ext {
   OSUINT8 gnssTOID;
   OSINT8 deltaT;
} rrlp_dec_GANSSTimeModelElement_R10_Ext;

EXTERN int asn1PD_rrlp_dec_GANSSTimeModelElement_R10_Ext (OSCTXT* pctxt, rrlp_dec_GANSSTimeModelElement_R10_Ext* pvalue);

/**************************************************************/
/*                                                            */
/*  SeqOfGANSSTimeModel_R10_Ext                               */
/*                                                            */
/**************************************************************/
/*
 GANSS Time Model Rel-10 Extension:

SeqOfGANSSTimeModel-R10-Ext ::= SEQUENCE (SIZE (1..7)) OF GANSSTimeModelElement-R10-Ext
*/
typedef struct EXTERN rrlp_dec_SeqOfGANSSTimeModel_R10_Ext {
   OSUINT32 n;
   rrlp_dec_GANSSTimeModelElement_R10_Ext *elem;
} rrlp_dec_SeqOfGANSSTimeModel_R10_Ext;

EXTERN int asn1PD_rrlp_dec_SeqOfGANSSTimeModel_R10_Ext (OSCTXT* pctxt, rrlp_dec_SeqOfGANSSTimeModel_R10_Ext* pvalue);

EXTERN void asn1Free_rrlp_dec_SeqOfGANSSTimeModel_R10_Ext (OSCTXT *pctxt, 
   rrlp_dec_SeqOfGANSSTimeModel_R10_Ext* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSRefMeasurement_R10_Ext_Element                       */
/*                                                            */
/**************************************************************/
/*
GANSSRefMeasurement-R10-Ext-Element ::= SEQUENCE {
   svID [0] SVID,
   azimuthLSB [1] INTEGER (0..15),
   elevationLSB [2] INTEGER (0..15)
}
*/
typedef struct EXTERN rrlp_dec_GANSSRefMeasurement_R10_Ext_Element {
   rrlp_dec_SVID svID;
   OSUINT8 azimuthLSB;
   OSUINT8 elevationLSB;
} rrlp_dec_GANSSRefMeasurement_R10_Ext_Element;

EXTERN int asn1PD_rrlp_dec_GANSSRefMeasurement_R10_Ext_Element (OSCTXT* pctxt, rrlp_dec_GANSSRefMeasurement_R10_Ext_Element* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSRefMeasurementAssist_R10_Ext                         */
/*                                                            */
/**************************************************************/
/*
 GANSS Reference Measurement Rel-10 Extension:
 GANSSRefMeasurementAssist-R10-Ext shall contain the same number of elements as the 
 SeqOfGANSSRefMeasurementElement included in GANSSRefMeasurementAssist IE

GANSSRefMeasurementAssist-R10-Ext ::= SEQUENCE (SIZE (1..16)) OF GANSSRefMeasurement-R10-Ext-Element
*/
typedef struct EXTERN rrlp_dec_GANSSRefMeasurementAssist_R10_Ext {
   OSUINT32 n;
   rrlp_dec_GANSSRefMeasurement_R10_Ext_Element *elem;
} rrlp_dec_GANSSRefMeasurementAssist_R10_Ext;

EXTERN int asn1PD_rrlp_dec_GANSSRefMeasurementAssist_R10_Ext (OSCTXT* pctxt, rrlp_dec_GANSSRefMeasurementAssist_R10_Ext* pvalue);

EXTERN void asn1Free_rrlp_dec_GANSSRefMeasurementAssist_R10_Ext (OSCTXT *pctxt, 
   rrlp_dec_GANSSRefMeasurementAssist_R10_Ext* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSAlmanacModel_R10_Ext                                 */
/*                                                            */
/**************************************************************/
/*
 GANSS Almanac Model Rel-10 Extension

GANSSAlmanacModel-R10-Ext ::= SEQUENCE {
   completeAlmanacProvided [0] BOOLEAN
}
*/
typedef struct EXTERN rrlp_dec_GANSSAlmanacModel_R10_Ext {
   OSBOOL completeAlmanacProvided;
} rrlp_dec_GANSSAlmanacModel_R10_Ext;

EXTERN int asn1PD_rrlp_dec_GANSSAlmanacModel_R10_Ext (OSCTXT* pctxt, rrlp_dec_GANSSAlmanacModel_R10_Ext* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSAlmanacModel_R12_Ext                                 */
/*                                                            */
/**************************************************************/
/*
 GANSS Almanac Model Rel-12 Extension

GANSSAlmanacModel-R12-Ext ::= SEQUENCE {
   toa-ext [0] INTEGER (256..1023) OPTIONAL,
   ioda-ext [1] INTEGER (4..15) OPTIONAL
}
*/
typedef struct EXTERN rrlp_dec_GANSSAlmanacModel_R12_Ext {
   struct {
      unsigned toa_extPresent : 1;
      unsigned ioda_extPresent : 1;
   } m;
   OSUINT16 toa_ext;
   OSUINT8 ioda_ext;
} rrlp_dec_GANSSAlmanacModel_R12_Ext;

EXTERN int asn1PD_rrlp_dec_GANSSAlmanacModel_R12_Ext (OSCTXT* pctxt, rrlp_dec_GANSSAlmanacModel_R12_Ext* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSRefMeasurement_R12_Ext_Element_dopplerUncertaintyEx  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'GANSSRefMeasurement-R12-Ext-Element'
*/
typedef enum {
   rrlp_dec_GANSSRefMeasurement_R12_Ext_Element_dopplerUncertaintyExt_d60 = 0,
   rrlp_dec_GANSSRefMeasurement_R12_Ext_Element_dopplerUncertaintyExt_d80 = 1,
   rrlp_dec_GANSSRefMeasurement_R12_Ext_Element_dopplerUncertaintyExt_d100 = 2,
   rrlp_dec_GANSSRefMeasurement_R12_Ext_Element_dopplerUncertaintyExt_d120 = 3,
   rrlp_dec_GANSSRefMeasurement_R12_Ext_Element_dopplerUncertaintyExt_noInformation = 4
} rrlp_dec_GANSSRefMeasurement_R12_Ext_Element_dopplerUncertaintyExt_Root;

typedef OSUINT32 rrlp_dec_GANSSRefMeasurement_R12_Ext_Element_dopplerUncertaintyExt;

EXTERN int asn1PD_rrlp_dec_GANSSRefMeasurement_R12_Ext_Element_dopplerUncertaintyExt (OSCTXT* pctxt, rrlp_dec_GANSSRefMeasurement_R12_Ext_Element_dopplerUncertaintyExt* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSRefMeasurement_R12_Ext_Element                       */
/*                                                            */
/**************************************************************/
/*
GANSSRefMeasurement-R12-Ext-Element ::= SEQUENCE {
   svID [0] SVID,
   dopplerUncertaintyExt [1] ENUMERATED { d60(0), d80(1), d100(2), d120(3), noInformation(4), ... }
}
*/
typedef struct EXTERN rrlp_dec_GANSSRefMeasurement_R12_Ext_Element {
   rrlp_dec_SVID svID;
   rrlp_dec_GANSSRefMeasurement_R12_Ext_Element_dopplerUncertaintyExt dopplerUncertaintyExt;
} rrlp_dec_GANSSRefMeasurement_R12_Ext_Element;

EXTERN int asn1PD_rrlp_dec_GANSSRefMeasurement_R12_Ext_Element (OSCTXT* pctxt, rrlp_dec_GANSSRefMeasurement_R12_Ext_Element* pvalue);

/**************************************************************/
/*                                                            */
/*  SeqOfGANSSRefMeasurementElement_R12                       */
/*                                                            */
/**************************************************************/
/*
SeqOfGANSSRefMeasurementElement-R12 ::= SEQUENCE (SIZE (1..16)) OF GANSSRefMeasurement-R12-Ext-Element
*/
typedef struct EXTERN rrlp_dec_SeqOfGANSSRefMeasurementElement_R12 {
   OSUINT32 n;
   rrlp_dec_GANSSRefMeasurement_R12_Ext_Element *elem;
} rrlp_dec_SeqOfGANSSRefMeasurementElement_R12;

EXTERN int asn1PD_rrlp_dec_SeqOfGANSSRefMeasurementElement_R12 (OSCTXT* pctxt, rrlp_dec_SeqOfGANSSRefMeasurementElement_R12* pvalue);

EXTERN void asn1Free_rrlp_dec_SeqOfGANSSRefMeasurementElement_R12 (OSCTXT *pctxt, 
   rrlp_dec_SeqOfGANSSRefMeasurementElement_R12* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSRefMeasurementAssist_R12_Ext                         */
/*                                                            */
/**************************************************************/
/*
 GANSS Reference Measurement Rel-12 Extension:

GANSSRefMeasurementAssist-R12-Ext ::= SEQUENCE {
   ganssSignalID [0] GANSSSignalID,
   confidence [1] INTEGER (0..100) OPTIONAL,
   ganssRefMeasAssistList [2] SeqOfGANSSRefMeasurementElement-R12 OPTIONAL
}
*/
typedef struct EXTERN rrlp_dec_GANSSRefMeasurementAssist_R12_Ext {
   struct {
      unsigned confidencePresent : 1;
      unsigned ganssRefMeasAssistListPresent : 1;
   } m;
   rrlp_dec_GANSSSignalID ganssSignalID;
   OSUINT8 confidence;
   rrlp_dec_SeqOfGANSSRefMeasurementElement_R12 ganssRefMeasAssistList;
} rrlp_dec_GANSSRefMeasurementAssist_R12_Ext;

EXTERN int asn1PD_rrlp_dec_GANSSRefMeasurementAssist_R12_Ext (OSCTXT* pctxt, rrlp_dec_GANSSRefMeasurementAssist_R12_Ext* pvalue);

EXTERN void asn1Free_rrlp_dec_GANSSRefMeasurementAssist_R12_Ext (OSCTXT *pctxt, 
   rrlp_dec_GANSSRefMeasurementAssist_R12_Ext* pvalue);

/**************************************************************/
/*                                                            */
/*  DBDS_CorrectionElement_r12                                */
/*                                                            */
/**************************************************************/
/*
DBDS-CorrectionElement-r12 ::= SEQUENCE {
   svID [0] SVID,
   bds-UDREI-r12 [1] INTEGER (0..15),
   bds-RURAI-r12 [2] INTEGER (0..15),
   bds-ECC-DeltaT-r12 [3] INTEGER (-4096..4095),
   ...
}
*/
typedef struct EXTERN rrlp_dec_DBDS_CorrectionElement_r12 {
   rrlp_dec_SVID svID;
   OSUINT8 bds_UDREI_r12;
   OSUINT8 bds_RURAI_r12;
   OSINT16 bds_ECC_DeltaT_r12;
   OSRTDList extElem1;
} rrlp_dec_DBDS_CorrectionElement_r12;

EXTERN int asn1PD_rrlp_dec_DBDS_CorrectionElement_r12 (OSCTXT* pctxt, rrlp_dec_DBDS_CorrectionElement_r12* pvalue);

EXTERN void asn1Free_rrlp_dec_DBDS_CorrectionElement_r12 (OSCTXT *pctxt, 
   rrlp_dec_DBDS_CorrectionElement_r12* pvalue);

/**************************************************************/
/*                                                            */
/*  DBDS_CorrectionList_r12                                   */
/*                                                            */
/**************************************************************/
/*
DBDS-CorrectionList-r12 ::= SEQUENCE (SIZE (1..64)) OF DBDS-CorrectionElement-r12
*/
typedef struct EXTERN rrlp_dec_DBDS_CorrectionList_r12 {
   OSUINT32 n;
   rrlp_dec_DBDS_CorrectionElement_r12 *elem;
} rrlp_dec_DBDS_CorrectionList_r12;

EXTERN int asn1PD_rrlp_dec_DBDS_CorrectionList_r12 (OSCTXT* pctxt, rrlp_dec_DBDS_CorrectionList_r12* pvalue);

EXTERN void asn1Free_rrlp_dec_DBDS_CorrectionList_r12 (OSCTXT *pctxt, 
   rrlp_dec_DBDS_CorrectionList_r12* pvalue);

/**************************************************************/
/*                                                            */
/*  BDS_SgnTypeElement_r12                                    */
/*                                                            */
/**************************************************************/
/*
BDS-SgnTypeElement-r12 ::= SEQUENCE {
   ganssSignalID [0] GANSSSignalID OPTIONAL,
   dbds-CorrectionList-r12 [1] DBDS-CorrectionList-r12,
   ...
}
*/
typedef struct EXTERN rrlp_dec_BDS_SgnTypeElement_r12 {
   struct {
      unsigned ganssSignalIDPresent : 1;
   } m;
   rrlp_dec_GANSSSignalID ganssSignalID;
   rrlp_dec_DBDS_CorrectionList_r12 dbds_CorrectionList_r12;
   OSRTDList extElem1;
} rrlp_dec_BDS_SgnTypeElement_r12;

EXTERN int asn1PD_rrlp_dec_BDS_SgnTypeElement_r12 (OSCTXT* pctxt, rrlp_dec_BDS_SgnTypeElement_r12* pvalue);

EXTERN void asn1Free_rrlp_dec_BDS_SgnTypeElement_r12 (OSCTXT *pctxt, 
   rrlp_dec_BDS_SgnTypeElement_r12* pvalue);

/**************************************************************/
/*                                                            */
/*  BDS_SgnTypeList_r12                                       */
/*                                                            */
/**************************************************************/
/*
BDS-SgnTypeList-r12 ::= SEQUENCE (SIZE (1..3)) OF BDS-SgnTypeElement-r12
*/
typedef struct EXTERN rrlp_dec_BDS_SgnTypeList_r12 {
   OSUINT32 n;
   rrlp_dec_BDS_SgnTypeElement_r12 *elem;
} rrlp_dec_BDS_SgnTypeList_r12;

EXTERN int asn1PD_rrlp_dec_BDS_SgnTypeList_r12 (OSCTXT* pctxt, rrlp_dec_BDS_SgnTypeList_r12* pvalue);

EXTERN void asn1Free_rrlp_dec_BDS_SgnTypeList_r12 (OSCTXT *pctxt, 
   rrlp_dec_BDS_SgnTypeList_r12* pvalue);

/**************************************************************/
/*                                                            */
/*  BDS_DiffCorrections_r12                                   */
/*                                                            */
/**************************************************************/
/*
BDS-DiffCorrections-r12 ::= SEQUENCE {
   dbds-RefTime-r12 [0] INTEGER (0..3599),
   bds-SgnTypeList-r12 [1] BDS-SgnTypeList-r12,
   ...
}
*/
typedef struct EXTERN rrlp_dec_BDS_DiffCorrections_r12 {
   OSUINT16 dbds_RefTime_r12;
   rrlp_dec_BDS_SgnTypeList_r12 bds_SgnTypeList_r12;
   OSRTDList extElem1;
} rrlp_dec_BDS_DiffCorrections_r12;

EXTERN int asn1PD_rrlp_dec_BDS_DiffCorrections_r12 (OSCTXT* pctxt, rrlp_dec_BDS_DiffCorrections_r12* pvalue);

EXTERN void asn1Free_rrlp_dec_BDS_DiffCorrections_r12 (OSCTXT *pctxt, 
   rrlp_dec_BDS_DiffCorrections_r12* pvalue);

/**************************************************************/
/*                                                            */
/*  GridIonElement_r12                                        */
/*                                                            */
/**************************************************************/
/*
GridIonElement-r12 ::= SEQUENCE {
   igp-ID-r12 [0] INTEGER (1..320),
   dt-r12 [1] INTEGER (0..511),
   givei-r12 [2] INTEGER (0..15),
   ...
}
*/
typedef struct EXTERN rrlp_dec_GridIonElement_r12 {
   OSUINT16 igp_ID_r12;
   OSUINT16 dt_r12;
   OSUINT8 givei_r12;
   OSRTDList extElem1;
} rrlp_dec_GridIonElement_r12;

EXTERN int asn1PD_rrlp_dec_GridIonElement_r12 (OSCTXT* pctxt, rrlp_dec_GridIonElement_r12* pvalue);

EXTERN void asn1Free_rrlp_dec_GridIonElement_r12 (OSCTXT *pctxt, 
   rrlp_dec_GridIonElement_r12* pvalue);

/**************************************************************/
/*                                                            */
/*  GridIonList_r12                                           */
/*                                                            */
/**************************************************************/
/*
Up to 16 instances are used in this version of the specification. The values 17 to 320 are reserved for future use.

GridIonList-r12 ::= SEQUENCE (SIZE (1..320)) OF GridIonElement-r12
*/
typedef struct EXTERN rrlp_dec_GridIonList_r12 {
   OSUINT32 n;
   rrlp_dec_GridIonElement_r12 *elem;
} rrlp_dec_GridIonList_r12;

EXTERN int asn1PD_rrlp_dec_GridIonList_r12 (OSCTXT* pctxt, rrlp_dec_GridIonList_r12* pvalue);

EXTERN void asn1Free_rrlp_dec_GridIonList_r12 (OSCTXT *pctxt, 
   rrlp_dec_GridIonList_r12* pvalue);

/**************************************************************/
/*                                                            */
/*  BDS_GridModelParameter_r12                                */
/*                                                            */
/**************************************************************/
/*
BDS-GridModelParameter-r12 ::= SEQUENCE {
   bds-RefTime-r12 [0] INTEGER (0..3599),
   gridIonList-r12 [1] GridIonList-r12,
   ...
}
*/
typedef struct EXTERN rrlp_dec_BDS_GridModelParameter_r12 {
   OSUINT16 bds_RefTime_r12;
   rrlp_dec_GridIonList_r12 gridIonList_r12;
   OSRTDList extElem1;
} rrlp_dec_BDS_GridModelParameter_r12;

EXTERN int asn1PD_rrlp_dec_BDS_GridModelParameter_r12 (OSCTXT* pctxt, rrlp_dec_BDS_GridModelParameter_r12* pvalue);

EXTERN void asn1Free_rrlp_dec_BDS_GridModelParameter_r12 (OSCTXT *pctxt, 
   rrlp_dec_BDS_GridModelParameter_r12* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSGenericAssistDataElement                             */
/*                                                            */
/**************************************************************/
/*
 GANSS Generic Assistance Data Elements

GANSSGenericAssistDataElement ::= SEQUENCE {
   ganssID [0] INTEGER (0..7) OPTIONAL,
   ganssTimeModel [1] SeqOfGANSSTimeModel OPTIONAL,
   ganssDiffCorrections [2] GANSSDiffCorrections OPTIONAL,
   ganssNavigationModel [3] GANSSNavModel OPTIONAL,
   ganssRealTimeIntegrity [4] GANSSRealTimeIntegrity OPTIONAL,
   ganssDataBitAssist [5] GANSSDataBitAssist OPTIONAL,
   ganssRefMeasurementAssist [6] GANSSRefMeasurementAssist OPTIONAL,
   ganssAlmanacModel [7] GANSSAlmanacModel OPTIONAL,
   ganssUTCModel [8] GANSSUTCModel OPTIONAL,
   ganssEphemerisExtension [9] GANSSEphemerisExtension OPTIONAL,
   ganssEphemerisExtCheck [10] GANSSEphemerisExtensionCheck OPTIONAL,
   ...,
   sbasID [11] INTEGER (0..7) OPTIONAL,
   ganssAddUTCModel [12] GANSSAddUTCModel OPTIONAL,
   ganssAuxiliaryInfo [13] GANSSAuxiliaryInformation OPTIONAL,
   ganssDiffCorrectionsValidityPeriod [14] GANSSDiffCorrectionsValidityPeriod OPTIONAL,
   ganssTimeModel-R10-Ext [15] SeqOfGANSSTimeModel-R10-Ext OPTIONAL,
   ganssRefMeasurementAssist-R10-Ext [16] GANSSRefMeasurementAssist-R10-Ext OPTIONAL,
   ganssAlmanacModel-R10-Ext [17] GANSSAlmanacModel-R10-Ext OPTIONAL,
   ganssAlmanacModel-R12-Ext [18] GANSSAlmanacModel-R12-Ext OPTIONAL,
   ganssRefMeasurementAssist-R12-Ext [19] GANSSRefMeasurementAssist-R12-Ext OPTIONAL,
   bdsDifferentialCorrections-r12 [20] BDS-DiffCorrections-r12 OPTIONAL,
   bdsGridModel-r12 [21] BDS-GridModelParameter-r12 OPTIONAL
}
*/
typedef struct EXTERN rrlp_dec_GANSSGenericAssistDataElement {
   struct {
      unsigned ganssIDPresent : 1;
      unsigned ganssTimeModelPresent : 1;
      unsigned ganssDiffCorrectionsPresent : 1;
      unsigned ganssNavigationModelPresent : 1;
      unsigned ganssRealTimeIntegrityPresent : 1;
      unsigned ganssDataBitAssistPresent : 1;
      unsigned ganssRefMeasurementAssistPresent : 1;
      unsigned ganssAlmanacModelPresent : 1;
      unsigned ganssUTCModelPresent : 1;
      unsigned ganssEphemerisExtensionPresent : 1;
      unsigned ganssEphemerisExtCheckPresent : 1;
      unsigned sbasIDPresent : 1;
      unsigned ganssAddUTCModelPresent : 1;
      unsigned ganssAuxiliaryInfoPresent : 1;
      unsigned ganssDiffCorrectionsValidityPeriodPresent : 1;
      unsigned ganssTimeModel_R10_ExtPresent : 1;
      unsigned ganssRefMeasurementAssist_R10_ExtPresent : 1;
      unsigned ganssAlmanacModel_R10_ExtPresent : 1;
      unsigned ganssAlmanacModel_R12_ExtPresent : 1;
      unsigned ganssRefMeasurementAssist_R12_ExtPresent : 1;
      unsigned bdsDifferentialCorrections_r12Present : 1;
      unsigned bdsGridModel_r12Present : 1;
   } m;
   OSUINT8 ganssID;
   rrlp_dec_SeqOfGANSSTimeModel ganssTimeModel;
   rrlp_dec_GANSSDiffCorrections ganssDiffCorrections;
   rrlp_dec_GANSSNavModel ganssNavigationModel;
   rrlp_dec_GANSSRealTimeIntegrity ganssRealTimeIntegrity;
   rrlp_dec_GANSSDataBitAssist ganssDataBitAssist;
   rrlp_dec_GANSSRefMeasurementAssist ganssRefMeasurementAssist;
   rrlp_dec_GANSSAlmanacModel ganssAlmanacModel;
   rrlp_dec_GANSSUTCModel ganssUTCModel;
   rrlp_dec_GANSSEphemerisExtension ganssEphemerisExtension;
   rrlp_dec_GANSSEphemerisExtensionCheck ganssEphemerisExtCheck;
   OSUINT8 sbasID;
   rrlp_dec_GANSSAddUTCModel ganssAddUTCModel;
   rrlp_dec_GANSSAuxiliaryInformation ganssAuxiliaryInfo;
   rrlp_dec_GANSSDiffCorrectionsValidityPeriod ganssDiffCorrectionsValidityPeriod;
   rrlp_dec_SeqOfGANSSTimeModel_R10_Ext ganssTimeModel_R10_Ext;
   rrlp_dec_GANSSRefMeasurementAssist_R10_Ext ganssRefMeasurementAssist_R10_Ext;
   rrlp_dec_GANSSAlmanacModel_R10_Ext ganssAlmanacModel_R10_Ext;
   rrlp_dec_GANSSAlmanacModel_R12_Ext ganssAlmanacModel_R12_Ext;
   rrlp_dec_GANSSRefMeasurementAssist_R12_Ext ganssRefMeasurementAssist_R12_Ext;
   rrlp_dec_BDS_DiffCorrections_r12 bdsDifferentialCorrections_r12;
   rrlp_dec_BDS_GridModelParameter_r12 bdsGridModel_r12;
   OSRTDList extElem1;
} rrlp_dec_GANSSGenericAssistDataElement;

EXTERN int asn1PD_rrlp_dec_GANSSGenericAssistDataElement (OSCTXT* pctxt, rrlp_dec_GANSSGenericAssistDataElement* pvalue);

EXTERN void asn1Free_rrlp_dec_GANSSGenericAssistDataElement (OSCTXT *pctxt, 
   rrlp_dec_GANSSGenericAssistDataElement* pvalue);

/**************************************************************/
/*                                                            */
/*  SeqOfGANSSGenericAssistDataElement                        */
/*                                                            */
/**************************************************************/
/*
 List of GANSS Generic Assistance Data Elements, up to 8 GANSS

SeqOfGANSSGenericAssistDataElement ::= SEQUENCE (SIZE (1..8)) OF GANSSGenericAssistDataElement
*/
typedef struct EXTERN rrlp_dec_SeqOfGANSSGenericAssistDataElement {
   OSUINT32 n;
   rrlp_dec_GANSSGenericAssistDataElement *elem;
} rrlp_dec_SeqOfGANSSGenericAssistDataElement;

EXTERN int asn1PD_rrlp_dec_SeqOfGANSSGenericAssistDataElement (OSCTXT* pctxt, rrlp_dec_SeqOfGANSSGenericAssistDataElement* pvalue);

EXTERN void asn1Free_rrlp_dec_SeqOfGANSSGenericAssistDataElement (OSCTXT *pctxt, 
   rrlp_dec_SeqOfGANSSGenericAssistDataElement* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSS_ControlHeader                                       */
/*                                                            */
/**************************************************************/
/*
GANSS-ControlHeader ::= SEQUENCE {
   ganssCommonAssistData [0] GANSSCommonAssistData OPTIONAL,
   ganssGenericAssistDataList [1] SeqOfGANSSGenericAssistDataElement OPTIONAL
}
*/
typedef struct EXTERN rrlp_dec_GANSS_ControlHeader {
   struct {
      unsigned ganssCommonAssistDataPresent : 1;
      unsigned ganssGenericAssistDataListPresent : 1;
   } m;
   rrlp_dec_GANSSCommonAssistData ganssCommonAssistData;
   rrlp_dec_SeqOfGANSSGenericAssistDataElement ganssGenericAssistDataList;
} rrlp_dec_GANSS_ControlHeader;

EXTERN int asn1PD_rrlp_dec_GANSS_ControlHeader (OSCTXT* pctxt, rrlp_dec_GANSS_ControlHeader* pvalue);

EXTERN void asn1Free_rrlp_dec_GANSS_ControlHeader (OSCTXT *pctxt, 
   rrlp_dec_GANSS_ControlHeader* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSS_AssistData                                          */
/*                                                            */
/**************************************************************/
/*
GANSS-AssistData ::= SEQUENCE {
   ganss-controlHeader [0] GANSS-ControlHeader
}
*/
typedef struct EXTERN rrlp_dec_GANSS_AssistData {
   rrlp_dec_GANSS_ControlHeader ganss_controlHeader;
} rrlp_dec_GANSS_AssistData;

EXTERN int asn1PD_rrlp_dec_GANSS_AssistData (OSCTXT* pctxt, rrlp_dec_GANSS_AssistData* pvalue);

EXTERN void asn1Free_rrlp_dec_GANSS_AssistData (OSCTXT *pctxt, 
   rrlp_dec_GANSS_AssistData* pvalue);

/**************************************************************/
/*                                                            */
/*  RequiredResponseTime                                      */
/*                                                            */
/**************************************************************/
/*
Required Measurement Request Response Time, range is 1 to 128 seconds. 

RequiredResponseTime ::= INTEGER (1..128)
*/
typedef OSUINT8 rrlp_dec_RequiredResponseTime;

EXTERN int asn1PD_rrlp_dec_RequiredResponseTime (OSCTXT* pctxt, rrlp_dec_RequiredResponseTime* pvalue);

/**************************************************************/
/*                                                            */
/*  GPSEphemerisExtensionTime                                 */
/*                                                            */
/**************************************************************/
/*
GPSEphemerisExtensionTime ::= SEQUENCE {
   gpsWeek [0] GPSWeek,
   gpsTOW [1] INTEGER (0..604799),
   ...
}
*/
typedef struct EXTERN rrlp_dec_GPSEphemerisExtensionTime {
   rrlp_dec_GPSWeek gpsWeek;
   OSUINT32 gpsTOW;
   OSRTDList extElem1;
} rrlp_dec_GPSEphemerisExtensionTime;

EXTERN int asn1PD_rrlp_dec_GPSEphemerisExtensionTime (OSCTXT* pctxt, rrlp_dec_GPSEphemerisExtensionTime* pvalue);

EXTERN void asn1Free_rrlp_dec_GPSEphemerisExtensionTime (OSCTXT *pctxt, 
   rrlp_dec_GPSEphemerisExtensionTime* pvalue);

/**************************************************************/
/*                                                            */
/*  GPSEphemerisExtensionHeader                               */
/*                                                            */
/**************************************************************/
/*
 The gpsEphemerisHeader and the gpsReferenceSet are mandatory only once in the delivery of the
 GPS Ephemeris Extension.  The gpsReferenceSet shall include all healthy satellite vehicles at the
 time of message construction
 The SMLC is required to deliver the gpsReferenceSet for all healthy satellite vehicles
 at the time of message construction.

GPSEphemerisExtensionHeader ::= SEQUENCE {
   timeofEstimation [0] GPSEphemerisExtensionTime,
   validityPeriod [1] INTEGER (1..8),
   ephemerisExtensionDuration [2] INTEGER (1..512),
   ...
}
*/
typedef struct EXTERN rrlp_dec_GPSEphemerisExtensionHeader {
   rrlp_dec_GPSEphemerisExtensionTime timeofEstimation;
   OSUINT8 validityPeriod;
   OSUINT16 ephemerisExtensionDuration;
   OSRTDList extElem1;
} rrlp_dec_GPSEphemerisExtensionHeader;

EXTERN int asn1PD_rrlp_dec_GPSEphemerisExtensionHeader (OSCTXT* pctxt, rrlp_dec_GPSEphemerisExtensionHeader* pvalue);

EXTERN void asn1Free_rrlp_dec_GPSEphemerisExtensionHeader (OSCTXT *pctxt, 
   rrlp_dec_GPSEphemerisExtensionHeader* pvalue);

/**************************************************************/
/*                                                            */
/*  GPSClockModel                                             */
/*                                                            */
/**************************************************************/
/*
GPSClockModel ::= SEQUENCE {
   af2 [0] INTEGER (-128..127),
   af1 [1] INTEGER (-32768..32767),
   af0 [2] INTEGER (-2097152..2097151),
   tgd [3] INTEGER (-128..127)
}
*/
typedef struct EXTERN rrlp_dec_GPSClockModel {
   OSINT8 af2;
   OSINT16 af1;
   OSINT32 af0;
   OSINT8 tgd;
} rrlp_dec_GPSClockModel;

EXTERN int asn1PD_rrlp_dec_GPSClockModel (OSCTXT* pctxt, rrlp_dec_GPSClockModel* pvalue);

/**************************************************************/
/*                                                            */
/*  GPSReferenceOrbit                                         */
/*                                                            */
/**************************************************************/
/*
The number of reference orbits can be read from number of elements in this sequence

GPSReferenceOrbit ::= SEQUENCE {
   svID [0] SVID,
   gpsOrbitModel [1] ReferenceNavModel,
   gpsClockModel [2] GPSClockModel,
   ...
}
*/
typedef struct EXTERN rrlp_dec_GPSReferenceOrbit {
   rrlp_dec_SVID svID;
   rrlp_dec_ReferenceNavModel gpsOrbitModel;
   rrlp_dec_GPSClockModel gpsClockModel;
   OSRTDList extElem1;
} rrlp_dec_GPSReferenceOrbit;

EXTERN int asn1PD_rrlp_dec_GPSReferenceOrbit (OSCTXT* pctxt, rrlp_dec_GPSReferenceOrbit* pvalue);

EXTERN void asn1Free_rrlp_dec_GPSReferenceOrbit (OSCTXT *pctxt, 
   rrlp_dec_GPSReferenceOrbit* pvalue);

/**************************************************************/
/*                                                            */
/*  SeqOfGPSRefOrbit                                          */
/*                                                            */
/**************************************************************/
/*
SeqOfGPSRefOrbit ::= SEQUENCE (SIZE (1..32)) OF GPSReferenceOrbit
*/
typedef struct EXTERN rrlp_dec_SeqOfGPSRefOrbit {
   OSUINT32 n;
   rrlp_dec_GPSReferenceOrbit *elem;
} rrlp_dec_SeqOfGPSRefOrbit;

EXTERN int asn1PD_rrlp_dec_SeqOfGPSRefOrbit (OSCTXT* pctxt, rrlp_dec_SeqOfGPSRefOrbit* pvalue);

EXTERN void asn1Free_rrlp_dec_SeqOfGPSRefOrbit (OSCTXT *pctxt, 
   rrlp_dec_SeqOfGPSRefOrbit* pvalue);

/**************************************************************/
/*                                                            */
/*  GPSEphemerisDeltaBitSizes                                 */
/*                                                            */
/**************************************************************/
/*
 Each octet string element in GPSDeltaElementList corresponds to one PRN within one epoch
 Table A.29.m of the annex shows the organization of the delta ephemeris octet string.
 Decoding of each of the octet strings is accomplished by consulting the ephemerisDeltaSizes
 table to learn the length and order of each of the parameters in the ephemerisDelta payload
 Post decode scaling is accomplished by consulting the ephemerisDeltaScales table to learn the.
 scale factors to apply to the terms in the delta ephemeris
 Ephemeris Delta Bit Sizes. 

GPSEphemerisDeltaBitSizes ::= SEQUENCE {
   bitsize-delta-omega [0] INTEGER (1..32),
   bitsize-delta-deltaN [1] INTEGER (1..16),
   bitsize-delta-m0 [2] INTEGER (1..32),
   bitsize-delta-omegadot [3] INTEGER (1..24),
   bitsize-delta-e [4] INTEGER (1..32),
   bitsize-delta-idot [5] INTEGER (1..14),
   bitsize-delta-sqrtA [6] INTEGER (1..32),
   bitsize-delta-i0 [7] INTEGER (1..32),
   bitsize-delta-omega0 [8] INTEGER (1..32),
   bitsize-delta-crs [9] INTEGER (1..16),
   bitsize-delta-cis [10] INTEGER (1..16),
   bitsize-delta-cus [11] INTEGER (1..16),
   bitsize-delta-crc [12] INTEGER (1..16),
   bitsize-delta-cic [13] INTEGER (1..16),
   bitsize-delta-cuc [14] INTEGER (1..16),
   bitsize-delta-tgd [15] INTEGER (1..10),
   ...
}
*/
typedef struct EXTERN rrlp_dec_GPSEphemerisDeltaBitSizes {
   OSUINT8 bitsize_delta_omega;
   OSUINT8 bitsize_delta_deltaN;
   OSUINT8 bitsize_delta_m0;
   OSUINT8 bitsize_delta_omegadot;
   OSUINT8 bitsize_delta_e;
   OSUINT8 bitsize_delta_idot;
   OSUINT8 bitsize_delta_sqrtA;
   OSUINT8 bitsize_delta_i0;
   OSUINT8 bitsize_delta_omega0;
   OSUINT8 bitsize_delta_crs;
   OSUINT8 bitsize_delta_cis;
   OSUINT8 bitsize_delta_cus;
   OSUINT8 bitsize_delta_crc;
   OSUINT8 bitsize_delta_cic;
   OSUINT8 bitsize_delta_cuc;
   OSUINT8 bitsize_delta_tgd;
   OSRTDList extElem1;
} rrlp_dec_GPSEphemerisDeltaBitSizes;

EXTERN int asn1PD_rrlp_dec_GPSEphemerisDeltaBitSizes (OSCTXT* pctxt, rrlp_dec_GPSEphemerisDeltaBitSizes* pvalue);

EXTERN void asn1Free_rrlp_dec_GPSEphemerisDeltaBitSizes (OSCTXT *pctxt, 
   rrlp_dec_GPSEphemerisDeltaBitSizes* pvalue);

/**************************************************************/
/*                                                            */
/*  GPSEphemerisDeltaScales                                   */
/*                                                            */
/**************************************************************/
/*
GPSEphemerisDeltaScales ::= SEQUENCE {
   scale-delta-omega [0] INTEGER (-16..15),
   scale-delta-deltaN [1] INTEGER (-16..15),
   scale-delta-m0 [2] INTEGER (-16..15),
   scale-delta-omegadot [3] INTEGER (-16..15),
   scale-delta-e [4] INTEGER (-16..15),
   scale-delta-idot [5] INTEGER (-16..15),
   scale-delta-sqrtA [6] INTEGER (-16..15),
   scale-delta-i0 [7] INTEGER (-16..15),
   scale-delta-omega0 [8] INTEGER (-16..15),
   scale-delta-crs [9] INTEGER (-16..15),
   scale-delta-cis [10] INTEGER (-16..15),
   scale-delta-cus [11] INTEGER (-16..15),
   scale-delta-crc [12] INTEGER (-16..15),
   scale-delta-cic [13] INTEGER (-16..15),
   scale-delta-cuc [14] INTEGER (-16..15),
   scale-delta-tgd [15] INTEGER (-16..15),
   ...
}
*/
typedef struct EXTERN rrlp_dec_GPSEphemerisDeltaScales {
   OSINT8 scale_delta_omega;
   OSINT8 scale_delta_deltaN;
   OSINT8 scale_delta_m0;
   OSINT8 scale_delta_omegadot;
   OSINT8 scale_delta_e;
   OSINT8 scale_delta_idot;
   OSINT8 scale_delta_sqrtA;
   OSINT8 scale_delta_i0;
   OSINT8 scale_delta_omega0;
   OSINT8 scale_delta_crs;
   OSINT8 scale_delta_cis;
   OSINT8 scale_delta_cus;
   OSINT8 scale_delta_crc;
   OSINT8 scale_delta_cic;
   OSINT8 scale_delta_cuc;
   OSINT8 scale_delta_tgd;
   OSRTDList extElem1;
} rrlp_dec_GPSEphemerisDeltaScales;

EXTERN int asn1PD_rrlp_dec_GPSEphemerisDeltaScales (OSCTXT* pctxt, rrlp_dec_GPSEphemerisDeltaScales* pvalue);

EXTERN void asn1Free_rrlp_dec_GPSEphemerisDeltaScales (OSCTXT *pctxt, 
   rrlp_dec_GPSEphemerisDeltaScales* pvalue);

/**************************************************************/
/*                                                            */
/*  GPSDeltaEpochHeader                                       */
/*                                                            */
/**************************************************************/
/*
 Each GPSDeltaEpoch element contains a header and the delta values for a particular time window 
 for all PRN's.

GPSDeltaEpochHeader ::= SEQUENCE {
   validityPeriod [0] INTEGER (1..8) OPTIONAL,
   ephemerisDeltaSizes [1] GPSEphemerisDeltaBitSizes OPTIONAL,
   ephemerisDeltaScales [2] GPSEphemerisDeltaScales OPTIONAL,
   ...
}
*/
typedef struct EXTERN rrlp_dec_GPSDeltaEpochHeader {
   struct {
      unsigned validityPeriodPresent : 1;
      unsigned ephemerisDeltaSizesPresent : 1;
      unsigned ephemerisDeltaScalesPresent : 1;
   } m;
   OSUINT8 validityPeriod;
   rrlp_dec_GPSEphemerisDeltaBitSizes ephemerisDeltaSizes;
   rrlp_dec_GPSEphemerisDeltaScales ephemerisDeltaScales;
   OSRTDList extElem1;
} rrlp_dec_GPSDeltaEpochHeader;

EXTERN int asn1PD_rrlp_dec_GPSDeltaEpochHeader (OSCTXT* pctxt, rrlp_dec_GPSDeltaEpochHeader* pvalue);

EXTERN void asn1Free_rrlp_dec_GPSDeltaEpochHeader (OSCTXT *pctxt, 
   rrlp_dec_GPSDeltaEpochHeader* pvalue);

/**************************************************************/
/*                                                            */
/*  GPSDeltaElementList_element                               */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'GPSDeltaElementList'
*/
typedef struct EXTERN rrlp_dec_GPSDeltaElementList_element {
   OSUINT32 numocts;
   OSOCTET data[47];
} rrlp_dec_GPSDeltaElementList_element;

EXTERN int asn1PD_rrlp_dec_GPSDeltaElementList_element (OSCTXT* pctxt, rrlp_dec_GPSDeltaElementList_element* pvalue);

/**************************************************************/
/*                                                            */
/*  GPSDeltaElementList                                       */
/*                                                            */
/**************************************************************/
/*
 In each of the GPSDeltaEpochs, if the optional element validityPeriod is not included,
 the value in GPSEphemerisExtensionHeader shall be used.  if the optional elements 
 ephemerisDeltaSizes or ephemerisDeltaScales are not included, then the default ephemeris delta
 sizes and scales shall be used.  The default sizes and scales are found in the annex in section
 A.29.m

GPSDeltaElementList ::= SEQUENCE (SIZE (1..32)) OF OCTET STRING (SIZE (1..47))
*/
typedef struct EXTERN rrlp_dec_GPSDeltaElementList {
   OSUINT32 n;
   rrlp_dec_GPSDeltaElementList_element *elem;
} rrlp_dec_GPSDeltaElementList;

EXTERN int asn1PD_rrlp_dec_GPSDeltaElementList (OSCTXT* pctxt, rrlp_dec_GPSDeltaElementList* pvalue);

EXTERN void asn1Free_rrlp_dec_GPSDeltaElementList (OSCTXT *pctxt, 
   rrlp_dec_GPSDeltaElementList* pvalue);

/**************************************************************/
/*                                                            */
/*  GPSEphemerisDeltaEpoch                                    */
/*                                                            */
/**************************************************************/
/*
GPSEphemerisDeltaEpoch ::= SEQUENCE {
   gpsDeltaEpochHeader [0] GPSDeltaEpochHeader OPTIONAL,
   gpsDeltaElementList [1] GPSDeltaElementList,
   ...
}
*/
typedef struct EXTERN rrlp_dec_GPSEphemerisDeltaEpoch {
   struct {
      unsigned gpsDeltaEpochHeaderPresent : 1;
   } m;
   rrlp_dec_GPSDeltaEpochHeader gpsDeltaEpochHeader;
   rrlp_dec_GPSDeltaElementList gpsDeltaElementList;
   OSRTDList extElem1;
} rrlp_dec_GPSEphemerisDeltaEpoch;

EXTERN int asn1PD_rrlp_dec_GPSEphemerisDeltaEpoch (OSCTXT* pctxt, rrlp_dec_GPSEphemerisDeltaEpoch* pvalue);

EXTERN void asn1Free_rrlp_dec_GPSEphemerisDeltaEpoch (OSCTXT *pctxt, 
   rrlp_dec_GPSEphemerisDeltaEpoch* pvalue);

/**************************************************************/
/*                                                            */
/*  GPSEphemerisDeltaMatrix                                   */
/*                                                            */
/**************************************************************/
/*
GPSEphemerisDeltaMatrix ::= SEQUENCE (SIZE (1..128)) OF GPSEphemerisDeltaEpoch
*/
typedef struct EXTERN rrlp_dec_GPSEphemerisDeltaMatrix {
   OSUINT32 n;
   rrlp_dec_GPSEphemerisDeltaEpoch *elem;
} rrlp_dec_GPSEphemerisDeltaMatrix;

EXTERN int asn1PD_rrlp_dec_GPSEphemerisDeltaMatrix (OSCTXT* pctxt, rrlp_dec_GPSEphemerisDeltaMatrix* pvalue);

EXTERN void asn1Free_rrlp_dec_GPSEphemerisDeltaMatrix (OSCTXT *pctxt, 
   rrlp_dec_GPSEphemerisDeltaMatrix* pvalue);

/**************************************************************/
/*                                                            */
/*  GPSEphemerisExtension                                     */
/*                                                            */
/**************************************************************/
/*
GPS Ephemeris Extension

GPSEphemerisExtension ::= SEQUENCE {
   gpsEphemerisHeader [0] GPSEphemerisExtensionHeader OPTIONAL,
   gpsReferenceSet [1] SeqOfGPSRefOrbit OPTIONAL,
   gpsephemerisDeltaMatrix [2] GPSEphemerisDeltaMatrix OPTIONAL,
   ...
}
*/
typedef struct EXTERN rrlp_dec_GPSEphemerisExtension {
   struct {
      unsigned gpsEphemerisHeaderPresent : 1;
      unsigned gpsReferenceSetPresent : 1;
      unsigned gpsephemerisDeltaMatrixPresent : 1;
   } m;
   rrlp_dec_GPSEphemerisExtensionHeader gpsEphemerisHeader;
   rrlp_dec_SeqOfGPSRefOrbit gpsReferenceSet;
   rrlp_dec_GPSEphemerisDeltaMatrix gpsephemerisDeltaMatrix;
   OSRTDList extElem1;
} rrlp_dec_GPSEphemerisExtension;

EXTERN int asn1PD_rrlp_dec_GPSEphemerisExtension (OSCTXT* pctxt, rrlp_dec_GPSEphemerisExtension* pvalue);

EXTERN void asn1Free_rrlp_dec_GPSEphemerisExtension (OSCTXT *pctxt, 
   rrlp_dec_GPSEphemerisExtension* pvalue);

/**************************************************************/
/*                                                            */
/*  GPSSatEventsInfo                                          */
/*                                                            */
/**************************************************************/
/*
GPSSatEventsInfo ::= SEQUENCE {
   eventOccured [0] BIT STRING  (SIZE (32)),
   futureEventNoted [1] BIT STRING  (SIZE (32)),
   ...
}
*/
typedef struct EXTERN rrlp_dec_GPSSatEventsInfo {
   ASN1BitStr32 eventOccured;
   ASN1BitStr32 futureEventNoted;
   OSRTDList extElem1;
} rrlp_dec_GPSSatEventsInfo;

EXTERN int asn1PD_rrlp_dec_GPSSatEventsInfo (OSCTXT* pctxt, rrlp_dec_GPSSatEventsInfo* pvalue);

EXTERN void asn1Free_rrlp_dec_GPSSatEventsInfo (OSCTXT *pctxt, 
   rrlp_dec_GPSSatEventsInfo* pvalue);

/**************************************************************/
/*                                                            */
/*  GPSEphemerisExtensionCheck                                */
/*                                                            */
/**************************************************************/
/*
GPSEphemerisExtensionCheck ::= SEQUENCE {
   gpsBeginTime [0] GPSEphemerisExtensionTime,
   gpsEndTime [1] GPSEphemerisExtensionTime,
   gpsSatEventsInfo [2] GPSSatEventsInfo,
   ...
}
*/
typedef struct EXTERN rrlp_dec_GPSEphemerisExtensionCheck {
   rrlp_dec_GPSEphemerisExtensionTime gpsBeginTime;
   rrlp_dec_GPSEphemerisExtensionTime gpsEndTime;
   rrlp_dec_GPSSatEventsInfo gpsSatEventsInfo;
   OSRTDList extElem1;
} rrlp_dec_GPSEphemerisExtensionCheck;

EXTERN int asn1PD_rrlp_dec_GPSEphemerisExtensionCheck (OSCTXT* pctxt, rrlp_dec_GPSEphemerisExtensionCheck* pvalue);

EXTERN void asn1Free_rrlp_dec_GPSEphemerisExtensionCheck (OSCTXT *pctxt, 
   rrlp_dec_GPSEphemerisExtensionCheck* pvalue);

/**************************************************************/
/*                                                            */
/*  DGPSExtensionSatElement                                   */
/*                                                            */
/**************************************************************/
/*
DGPSExtensionSatElement ::= SEQUENCE {
   satelliteID [0] SatelliteID,
   udreGrowthRate [1] INTEGER (0..7),
   udreValidityTime [2] INTEGER (0..7),
   ...
}
*/
typedef struct EXTERN rrlp_dec_DGPSExtensionSatElement {
   rrlp_dec_SatelliteID satelliteID;
   OSUINT8 udreGrowthRate;
   OSUINT8 udreValidityTime;
   OSRTDList extElem1;
} rrlp_dec_DGPSExtensionSatElement;

EXTERN int asn1PD_rrlp_dec_DGPSExtensionSatElement (OSCTXT* pctxt, rrlp_dec_DGPSExtensionSatElement* pvalue);

EXTERN void asn1Free_rrlp_dec_DGPSExtensionSatElement (OSCTXT *pctxt, 
   rrlp_dec_DGPSExtensionSatElement* pvalue);

/**************************************************************/
/*                                                            */
/*  DGPSCorrectionsValidityPeriod                             */
/*                                                            */
/**************************************************************/
/*
 If a bit is clear in the eventOccured field it indicates that no known errors have occured since 
 the gpsBeginTime nor is a maneuver planned for the next sixty minutes.
 If a bit is set in the futureEventNoted field it indicates that a maneuver is planned during the
 time period between current time plus sixty minutes and gpsEndTime
 DGPS Corrections Validity Period:
 This element may only be included if DGPSCorrections IE is included in ControlHeader element.
 DGPSCorrectionsValidityPeriod shall contain the same number of elements as the SeqOfSatElement
 included in DGPSCorrections IE

DGPSCorrectionsValidityPeriod ::= SEQUENCE (SIZE (1..16)) OF DGPSExtensionSatElement
*/
typedef struct EXTERN rrlp_dec_DGPSCorrectionsValidityPeriod {
   OSUINT32 n;
   rrlp_dec_DGPSExtensionSatElement *elem;
} rrlp_dec_DGPSCorrectionsValidityPeriod;

EXTERN int asn1PD_rrlp_dec_DGPSCorrectionsValidityPeriod (OSCTXT* pctxt, rrlp_dec_DGPSCorrectionsValidityPeriod* pvalue);

EXTERN void asn1Free_rrlp_dec_DGPSCorrectionsValidityPeriod (OSCTXT *pctxt, 
   rrlp_dec_DGPSCorrectionsValidityPeriod* pvalue);

/**************************************************************/
/*                                                            */
/*  GPSReferenceTime_R10_Ext                                  */
/*                                                            */
/**************************************************************/
/*
 GPS Reference Time Rel-10 Extension:

GPSReferenceTime-R10-Ext ::= SEQUENCE {
   gpsWeekCycleNumber [0] INTEGER (0..7)
}
*/
typedef struct EXTERN rrlp_dec_GPSReferenceTime_R10_Ext {
   OSUINT8 gpsWeekCycleNumber;
} rrlp_dec_GPSReferenceTime_R10_Ext;

EXTERN int asn1PD_rrlp_dec_GPSReferenceTime_R10_Ext (OSCTXT* pctxt, rrlp_dec_GPSReferenceTime_R10_Ext* pvalue);

/**************************************************************/
/*                                                            */
/*  GPSAcquisAssist_R10_Ext_Element                           */
/*                                                            */
/**************************************************************/
/*
GPSAcquisAssist-R10-Ext-Element ::= SEQUENCE {
   satelliteID [0] SatelliteID,
   azimuthLSB [1] INTEGER (0..15),
   elevationLSB [2] INTEGER (0..15)
}
*/
typedef struct EXTERN rrlp_dec_GPSAcquisAssist_R10_Ext_Element {
   rrlp_dec_SatelliteID satelliteID;
   OSUINT8 azimuthLSB;
   OSUINT8 elevationLSB;
} rrlp_dec_GPSAcquisAssist_R10_Ext_Element;

EXTERN int asn1PD_rrlp_dec_GPSAcquisAssist_R10_Ext_Element (OSCTXT* pctxt, rrlp_dec_GPSAcquisAssist_R10_Ext_Element* pvalue);

/**************************************************************/
/*                                                            */
/*  GPSAcquisAssist_R10_Ext                                   */
/*                                                            */
/**************************************************************/
/*
 GPS Acquisition Assistance Rel-10 Extension:
 GPSAcquisAssist-R10-Ext shall contain the same number of elements as the SeqOfAcquisElement
 included in AcquisAssist IE

GPSAcquisAssist-R10-Ext ::= SEQUENCE (SIZE (1..16)) OF GPSAcquisAssist-R10-Ext-Element
*/
typedef struct EXTERN rrlp_dec_GPSAcquisAssist_R10_Ext {
   OSUINT32 n;
   rrlp_dec_GPSAcquisAssist_R10_Ext_Element *elem;
} rrlp_dec_GPSAcquisAssist_R10_Ext;

EXTERN int asn1PD_rrlp_dec_GPSAcquisAssist_R10_Ext (OSCTXT* pctxt, rrlp_dec_GPSAcquisAssist_R10_Ext* pvalue);

EXTERN void asn1Free_rrlp_dec_GPSAcquisAssist_R10_Ext (OSCTXT *pctxt, 
   rrlp_dec_GPSAcquisAssist_R10_Ext* pvalue);

/**************************************************************/
/*                                                            */
/*  GPSAlmanac_R10_Ext                                        */
/*                                                            */
/**************************************************************/
/*
 GPS Almanac Rel-10 Extension:

GPSAlmanac-R10-Ext ::= SEQUENCE {
   completeAlmanacProvided [0] BOOLEAN
}
*/
typedef struct EXTERN rrlp_dec_GPSAlmanac_R10_Ext {
   OSBOOL completeAlmanacProvided;
} rrlp_dec_GPSAlmanac_R10_Ext;

EXTERN int asn1PD_rrlp_dec_GPSAlmanac_R10_Ext (OSCTXT* pctxt, rrlp_dec_GPSAlmanac_R10_Ext* pvalue);

/**************************************************************/
/*                                                            */
/*  GPSAcquisAssist_R12_Ext_Element_dopplerUncertaintyExt     */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'GPSAcquisAssist-R12-Ext-Element'
*/
typedef enum {
   rrlp_dec_GPSAcquisAssist_R12_Ext_Element_dopplerUncertaintyExt_d300 = 0,
   rrlp_dec_GPSAcquisAssist_R12_Ext_Element_dopplerUncertaintyExt_d400 = 1,
   rrlp_dec_GPSAcquisAssist_R12_Ext_Element_dopplerUncertaintyExt_d500 = 2,
   rrlp_dec_GPSAcquisAssist_R12_Ext_Element_dopplerUncertaintyExt_d600 = 3,
   rrlp_dec_GPSAcquisAssist_R12_Ext_Element_dopplerUncertaintyExt_noInformation = 4
} rrlp_dec_GPSAcquisAssist_R12_Ext_Element_dopplerUncertaintyExt_Root;

typedef OSUINT32 rrlp_dec_GPSAcquisAssist_R12_Ext_Element_dopplerUncertaintyExt;

EXTERN int asn1PD_rrlp_dec_GPSAcquisAssist_R12_Ext_Element_dopplerUncertaintyExt (OSCTXT* pctxt, rrlp_dec_GPSAcquisAssist_R12_Ext_Element_dopplerUncertaintyExt* pvalue);

/**************************************************************/
/*                                                            */
/*  GPSAcquisAssist_R12_Ext_Element                           */
/*                                                            */
/**************************************************************/
/*
GPSAcquisAssist-R12-Ext-Element ::= SEQUENCE {
   satelliteID [0] SatelliteID,
   dopplerUncertaintyExt [1] ENUMERATED { d300(0), d400(1), d500(2), d600(3), noInformation(4), ... }
}
*/
typedef struct EXTERN rrlp_dec_GPSAcquisAssist_R12_Ext_Element {
   rrlp_dec_SatelliteID satelliteID;
   rrlp_dec_GPSAcquisAssist_R12_Ext_Element_dopplerUncertaintyExt dopplerUncertaintyExt;
} rrlp_dec_GPSAcquisAssist_R12_Ext_Element;

EXTERN int asn1PD_rrlp_dec_GPSAcquisAssist_R12_Ext_Element (OSCTXT* pctxt, rrlp_dec_GPSAcquisAssist_R12_Ext_Element* pvalue);

/**************************************************************/
/*                                                            */
/*  SeqOfGPSAcquisAssist_R12_Ext                              */
/*                                                            */
/**************************************************************/
/*
SeqOfGPSAcquisAssist-R12-Ext ::= SEQUENCE (SIZE (1..16)) OF GPSAcquisAssist-R12-Ext-Element
*/
typedef struct EXTERN rrlp_dec_SeqOfGPSAcquisAssist_R12_Ext {
   OSUINT32 n;
   rrlp_dec_GPSAcquisAssist_R12_Ext_Element *elem;
} rrlp_dec_SeqOfGPSAcquisAssist_R12_Ext;

EXTERN int asn1PD_rrlp_dec_SeqOfGPSAcquisAssist_R12_Ext (OSCTXT* pctxt, rrlp_dec_SeqOfGPSAcquisAssist_R12_Ext* pvalue);

EXTERN void asn1Free_rrlp_dec_SeqOfGPSAcquisAssist_R12_Ext (OSCTXT *pctxt, 
   rrlp_dec_SeqOfGPSAcquisAssist_R12_Ext* pvalue);

/**************************************************************/
/*                                                            */
/*  GPSAcquisAssist_R12_Ext                                   */
/*                                                            */
/**************************************************************/
/*
 GPS Acquisition Assistance Rel-12 Extension:

GPSAcquisAssist-R12-Ext ::= SEQUENCE {
   confidence [0] INTEGER (0..100) OPTIONAL,
   acquisList [1] SeqOfGPSAcquisAssist-R12-Ext OPTIONAL
}
*/
typedef struct EXTERN rrlp_dec_GPSAcquisAssist_R12_Ext {
   struct {
      unsigned confidencePresent : 1;
      unsigned acquisListPresent : 1;
   } m;
   OSUINT8 confidence;
   rrlp_dec_SeqOfGPSAcquisAssist_R12_Ext acquisList;
} rrlp_dec_GPSAcquisAssist_R12_Ext;

EXTERN int asn1PD_rrlp_dec_GPSAcquisAssist_R12_Ext (OSCTXT* pctxt, rrlp_dec_GPSAcquisAssist_R12_Ext* pvalue);

EXTERN void asn1Free_rrlp_dec_GPSAcquisAssist_R12_Ext (OSCTXT *pctxt, 
   rrlp_dec_GPSAcquisAssist_R12_Ext* pvalue);

/**************************************************************/
/*                                                            */
/*  Add_GPS_ControlHeader                                     */
/*                                                            */
/**************************************************************/
/*
Add-GPS-ControlHeader ::= SEQUENCE {
   gpsEphemerisExtension [0] GPSEphemerisExtension OPTIONAL,
   gpsEphemerisExtensionCheck [1] GPSEphemerisExtensionCheck OPTIONAL,
   ...,
   dgpsCorrectionsValidityPeriod [2] DGPSCorrectionsValidityPeriod OPTIONAL,
   gpsReferenceTime-R10-Ext [3] GPSReferenceTime-R10-Ext OPTIONAL,
   gpsAcquisAssist-R10-Ext [4] GPSAcquisAssist-R10-Ext OPTIONAL,
   gpsAlmanac-R10-Ext [5] GPSAlmanac-R10-Ext OPTIONAL,
   gpsAcquisAssist-R12-Ext [6] GPSAcquisAssist-R12-Ext OPTIONAL
}
*/
typedef struct EXTERN rrlp_dec_Add_GPS_ControlHeader {
   struct {
      unsigned gpsEphemerisExtensionPresent : 1;
      unsigned gpsEphemerisExtensionCheckPresent : 1;
      unsigned dgpsCorrectionsValidityPeriodPresent : 1;
      unsigned gpsReferenceTime_R10_ExtPresent : 1;
      unsigned gpsAcquisAssist_R10_ExtPresent : 1;
      unsigned gpsAlmanac_R10_ExtPresent : 1;
      unsigned gpsAcquisAssist_R12_ExtPresent : 1;
   } m;
   rrlp_dec_GPSEphemerisExtension gpsEphemerisExtension;
   rrlp_dec_GPSEphemerisExtensionCheck gpsEphemerisExtensionCheck;
   rrlp_dec_DGPSCorrectionsValidityPeriod dgpsCorrectionsValidityPeriod;
   rrlp_dec_GPSReferenceTime_R10_Ext gpsReferenceTime_R10_Ext;
   rrlp_dec_GPSAcquisAssist_R10_Ext gpsAcquisAssist_R10_Ext;
   rrlp_dec_GPSAlmanac_R10_Ext gpsAlmanac_R10_Ext;
   rrlp_dec_GPSAcquisAssist_R12_Ext gpsAcquisAssist_R12_Ext;
   OSRTDList extElem1;
} rrlp_dec_Add_GPS_ControlHeader;

EXTERN int asn1PD_rrlp_dec_Add_GPS_ControlHeader (OSCTXT* pctxt, rrlp_dec_Add_GPS_ControlHeader* pvalue);

EXTERN void asn1Free_rrlp_dec_Add_GPS_ControlHeader (OSCTXT *pctxt, 
   rrlp_dec_Add_GPS_ControlHeader* pvalue);

/**************************************************************/
/*                                                            */
/*  Add_GPS_AssistData                                        */
/*                                                            */
/**************************************************************/
/*
 Control header for additional GPS assistance data

Add-GPS-AssistData ::= SEQUENCE {
   add-GPS-controlHeader [0] Add-GPS-ControlHeader
}
*/
typedef struct EXTERN rrlp_dec_Add_GPS_AssistData {
   rrlp_dec_Add_GPS_ControlHeader add_GPS_controlHeader;
} rrlp_dec_Add_GPS_AssistData;

EXTERN int asn1PD_rrlp_dec_Add_GPS_AssistData (OSCTXT* pctxt, rrlp_dec_Add_GPS_AssistData* pvalue);

EXTERN void asn1Free_rrlp_dec_Add_GPS_AssistData (OSCTXT *pctxt, 
   rrlp_dec_Add_GPS_AssistData* pvalue);

/**************************************************************/
/*                                                            */
/*  Rel7_MsrPosition_Req_Extension                            */
/*                                                            */
/**************************************************************/
/*
 Release 7 Extensions here

Rel7-MsrPosition-Req-Extension ::= SEQUENCE {
   velocityRequested [0] NULL OPTIONAL,
   ganssPositionMethod [1] GANSSPositioningMethod OPTIONAL,
   ganss-AssistData [2] GANSS-AssistData OPTIONAL,
   ganssCarrierPhaseMeasurementRequest [3] NULL OPTIONAL,
   ganssTODGSMTimeAssociationMeasurementRequest [4] NULL OPTIONAL,
   requiredResponseTime [5] RequiredResponseTime OPTIONAL,
   add-GPS-AssistData [6] Add-GPS-AssistData OPTIONAL,
   ganssMultiFreqMeasurementRequest [7] NULL OPTIONAL,
   ...
}
*/
typedef struct EXTERN rrlp_dec_Rel7_MsrPosition_Req_Extension {
   struct {
      unsigned velocityRequestedPresent : 1;
      unsigned ganssPositionMethodPresent : 1;
      unsigned ganss_AssistDataPresent : 1;
      unsigned ganssCarrierPhaseMeasurementRequestPresent : 1;
      unsigned ganssTODGSMTimeAssociationMeasurementRequestPresent : 1;
      unsigned requiredResponseTimePresent : 1;
      unsigned add_GPS_AssistDataPresent : 1;
      unsigned ganssMultiFreqMeasurementRequestPresent : 1;
   } m;
   rrlp_dec_GANSSPositioningMethod ganssPositionMethod;
   rrlp_dec_GANSS_AssistData ganss_AssistData;
   rrlp_dec_RequiredResponseTime requiredResponseTime;
   rrlp_dec_Add_GPS_AssistData add_GPS_AssistData;
   OSRTDList extElem1;
} rrlp_dec_Rel7_MsrPosition_Req_Extension;

EXTERN int asn1PD_rrlp_dec_Rel7_MsrPosition_Req_Extension (OSCTXT* pctxt, rrlp_dec_Rel7_MsrPosition_Req_Extension* pvalue);

EXTERN void asn1Free_rrlp_dec_Rel7_MsrPosition_Req_Extension (OSCTXT *pctxt, 
   rrlp_dec_Rel7_MsrPosition_Req_Extension* pvalue);

/**************************************************************/
/*                                                            */
/*  MsrPosition_Req                                           */
/*                                                            */
/**************************************************************/
/*
 Measurement Position request component

MsrPosition-Req ::= SEQUENCE {
   positionInstruct [0] PositionInstruct,
   referenceAssistData [1] ReferenceAssistData OPTIONAL,
   msrAssistData [2] MsrAssistData OPTIONAL,
   systemInfoAssistData [3] SystemInfoAssistData OPTIONAL,
   gps-AssistData [4] GPS-AssistData OPTIONAL,
   extensionContainer [5] ExtensionContainer OPTIONAL,
   ...,
   rel98-MsrPosition-Req-extension [6] Rel98-MsrPosition-Req-Extension OPTIONAL,
   rel5-MsrPosition-Req-extension [7] Rel5-MsrPosition-Req-Extension OPTIONAL,
   rel7-MsrPosition-Req-extension [8] Rel7-MsrPosition-Req-Extension OPTIONAL
}
*/
typedef struct EXTERN rrlp_dec_MsrPosition_Req {
   struct {
      unsigned referenceAssistDataPresent : 1;
      unsigned msrAssistDataPresent : 1;
      unsigned systemInfoAssistDataPresent : 1;
      unsigned gps_AssistDataPresent : 1;
      unsigned extensionContainerPresent : 1;
      unsigned rel98_MsrPosition_Req_extensionPresent : 1;
      unsigned rel5_MsrPosition_Req_extensionPresent : 1;
      unsigned rel7_MsrPosition_Req_extensionPresent : 1;
   } m;
   rrlp_dec_PositionInstruct positionInstruct;
   rrlp_dec_ReferenceAssistData referenceAssistData;
   rrlp_dec_MsrAssistData msrAssistData;
   rrlp_dec_SystemInfoAssistData systemInfoAssistData;
   rrlp_dec_GPS_AssistData gps_AssistData;
   rrlp_dec_ExtensionContainer extensionContainer;
   rrlp_dec_Rel98_MsrPosition_Req_Extension rel98_MsrPosition_Req_extension;
   rrlp_dec_Rel5_MsrPosition_Req_Extension rel5_MsrPosition_Req_extension;
   rrlp_dec_Rel7_MsrPosition_Req_Extension rel7_MsrPosition_Req_extension;
   OSRTDList extElem1;
} rrlp_dec_MsrPosition_Req;

EXTERN int asn1PD_rrlp_dec_MsrPosition_Req (OSCTXT* pctxt, rrlp_dec_MsrPosition_Req* pvalue);

EXTERN void asn1Free_rrlp_dec_MsrPosition_Req (OSCTXT *pctxt, 
   rrlp_dec_MsrPosition_Req* pvalue);

/**************************************************************/
/*                                                            */
/*  MoreAssDataToBeSent                                       */
/*                                                            */
/**************************************************************/
/*
 More Assistance Data To Be Sent IE
 More Assistance Data Components On the Way indication for delivery of an entire set of assistance
 data in multiple Assistance Data components.

MoreAssDataToBeSent ::= ENUMERATED { noMoreMessages(0), moreMessagesOnTheWay(1) }
*/
typedef enum {
   rrlp_dec_MoreAssDataToBeSent_noMoreMessages = 0,
   rrlp_dec_MoreAssDataToBeSent_moreMessagesOnTheWay = 1
} rrlp_dec_MoreAssDataToBeSent_Root;

typedef OSUINT32 rrlp_dec_MoreAssDataToBeSent;

EXTERN int asn1PD_rrlp_dec_MoreAssDataToBeSent (OSCTXT* pctxt, rrlp_dec_MoreAssDataToBeSent* pvalue);

/**************************************************************/
/*                                                            */
/*  Rel98_AssistanceData_Extension                            */
/*                                                            */
/**************************************************************/
/*
Rel98-AssistanceData-Extension ::= SEQUENCE {
   rel98-Ext-ExpOTD [0] Rel98-Ext-ExpOTD OPTIONAL,
   ...,
   gpsTimeAssistanceMeasurementRequest [1] NULL OPTIONAL,
   gpsReferenceTimeUncertainty [2] GPSReferenceTimeUncertainty OPTIONAL
}
*/
typedef struct EXTERN rrlp_dec_Rel98_AssistanceData_Extension {
   struct {
      unsigned rel98_Ext_ExpOTDPresent : 1;
      unsigned gpsTimeAssistanceMeasurementRequestPresent : 1;
      unsigned gpsReferenceTimeUncertaintyPresent : 1;
   } m;
   rrlp_dec_Rel98_Ext_ExpOTD rel98_Ext_ExpOTD;
   rrlp_dec_GPSReferenceTimeUncertainty gpsReferenceTimeUncertainty;
   OSRTDList extElem1;
} rrlp_dec_Rel98_AssistanceData_Extension;

EXTERN int asn1PD_rrlp_dec_Rel98_AssistanceData_Extension (OSCTXT* pctxt, rrlp_dec_Rel98_AssistanceData_Extension* pvalue);

EXTERN void asn1Free_rrlp_dec_Rel98_AssistanceData_Extension (OSCTXT *pctxt, 
   rrlp_dec_Rel98_AssistanceData_Extension* pvalue);

/**************************************************************/
/*                                                            */
/*  Rel5_AssistanceData_Extension                             */
/*                                                            */
/**************************************************************/
/*
Rel5-AssistanceData-Extension ::= SEQUENCE {
   extended-reference [0] Extended-reference,
   ...
}
*/
typedef struct EXTERN rrlp_dec_Rel5_AssistanceData_Extension {
   rrlp_dec_Extended_reference extended_reference;
   OSRTDList extElem1;
} rrlp_dec_Rel5_AssistanceData_Extension;

EXTERN int asn1PD_rrlp_dec_Rel5_AssistanceData_Extension (OSCTXT* pctxt, rrlp_dec_Rel5_AssistanceData_Extension* pvalue);

EXTERN void asn1Free_rrlp_dec_Rel5_AssistanceData_Extension (OSCTXT *pctxt, 
   rrlp_dec_Rel5_AssistanceData_Extension* pvalue);

/**************************************************************/
/*                                                            */
/*  Rel7_AssistanceData_Extension                             */
/*                                                            */
/**************************************************************/
/*
Rel7-AssistanceData-Extension ::= SEQUENCE {
   ganss-AssistData [0] GANSS-AssistData OPTIONAL,
   ganssCarrierPhaseMeasurementRequest [1] NULL OPTIONAL,
   ganssTODGSMTimeAssociationMeasurementRequest [2] NULL OPTIONAL,
   add-GPS-AssistData [3] Add-GPS-AssistData OPTIONAL,
   ...
}
*/
typedef struct EXTERN rrlp_dec_Rel7_AssistanceData_Extension {
   struct {
      unsigned ganss_AssistDataPresent : 1;
      unsigned ganssCarrierPhaseMeasurementRequestPresent : 1;
      unsigned ganssTODGSMTimeAssociationMeasurementRequestPresent : 1;
      unsigned add_GPS_AssistDataPresent : 1;
   } m;
   rrlp_dec_GANSS_AssistData ganss_AssistData;
   rrlp_dec_Add_GPS_AssistData add_GPS_AssistData;
   OSRTDList extElem1;
} rrlp_dec_Rel7_AssistanceData_Extension;

EXTERN int asn1PD_rrlp_dec_Rel7_AssistanceData_Extension (OSCTXT* pctxt, rrlp_dec_Rel7_AssistanceData_Extension* pvalue);

EXTERN void asn1Free_rrlp_dec_Rel7_AssistanceData_Extension (OSCTXT *pctxt, 
   rrlp_dec_Rel7_AssistanceData_Extension* pvalue);

/**************************************************************/
/*                                                            */
/*  AssistanceData                                            */
/*                                                            */
/**************************************************************/
/*
 Assistance Data component

AssistanceData ::= SEQUENCE {
   referenceAssistData [0] ReferenceAssistData OPTIONAL,
   msrAssistData [1] MsrAssistData OPTIONAL,
   systemInfoAssistData [2] SystemInfoAssistData OPTIONAL,
   gps-AssistData [3] GPS-AssistData OPTIONAL,
   moreAssDataToBeSent [4] MoreAssDataToBeSent OPTIONAL,
   extensionContainer [5] ExtensionContainer OPTIONAL,
   ...,
   rel98-AssistanceData-Extension [6] Rel98-AssistanceData-Extension OPTIONAL,
   rel5-AssistanceData-Extension [7] Rel5-AssistanceData-Extension OPTIONAL,
   rel7-AssistanceData-Extension [8] Rel7-AssistanceData-Extension OPTIONAL
}
*/
typedef struct EXTERN rrlp_dec_AssistanceData {
   struct {
      unsigned referenceAssistDataPresent : 1;
      unsigned msrAssistDataPresent : 1;
      unsigned systemInfoAssistDataPresent : 1;
      unsigned gps_AssistDataPresent : 1;
      unsigned moreAssDataToBeSentPresent : 1;
      unsigned extensionContainerPresent : 1;
      unsigned rel98_AssistanceData_ExtensionPresent : 1;
      unsigned rel5_AssistanceData_ExtensionPresent : 1;
      unsigned rel7_AssistanceData_ExtensionPresent : 1;
   } m;
   rrlp_dec_ReferenceAssistData referenceAssistData;
   rrlp_dec_MsrAssistData msrAssistData;
   rrlp_dec_SystemInfoAssistData systemInfoAssistData;
   rrlp_dec_GPS_AssistData gps_AssistData;
   rrlp_dec_MoreAssDataToBeSent moreAssDataToBeSent;
   rrlp_dec_ExtensionContainer extensionContainer;
   rrlp_dec_Rel98_AssistanceData_Extension rel98_AssistanceData_Extension;
   rrlp_dec_Rel5_AssistanceData_Extension rel5_AssistanceData_Extension;
   rrlp_dec_Rel7_AssistanceData_Extension rel7_AssistanceData_Extension;
   OSRTDList extElem1;
} rrlp_dec_AssistanceData;

EXTERN int asn1PD_rrlp_dec_AssistanceData (OSCTXT* pctxt, rrlp_dec_AssistanceData* pvalue);

EXTERN void asn1Free_rrlp_dec_AssistanceData (OSCTXT *pctxt, 
   rrlp_dec_AssistanceData* pvalue);

/**************************************************************/
/*                                                            */
/*  ErrorCodes                                                */
/*                                                            */
/**************************************************************/
/*
 Protocol Error Causes

ErrorCodes ::= ENUMERATED { unDefined(0), missingComponet(1), incorrectData(2), missingIEorComponentElement(3), messageTooShort(4), unknowReferenceNumber(5), ... }
*/
typedef enum {
   rrlp_dec_ErrorCodes_unDefined = 0,
   rrlp_dec_ErrorCodes_missingComponet = 1,
   rrlp_dec_ErrorCodes_incorrectData = 2,
   rrlp_dec_ErrorCodes_missingIEorComponentElement = 3,
   rrlp_dec_ErrorCodes_messageTooShort = 4,
   rrlp_dec_ErrorCodes_unknowReferenceNumber = 5
} rrlp_dec_ErrorCodes_Root;

typedef OSUINT32 rrlp_dec_ErrorCodes;

EXTERN int asn1PD_rrlp_dec_ErrorCodes (OSCTXT* pctxt, rrlp_dec_ErrorCodes* pvalue);

/**************************************************************/
/*                                                            */
/*  Rel_5_ProtocolError_Extension                             */
/*                                                            */
/**************************************************************/
/*
Rel-5-ProtocolError-Extension ::= SEQUENCE {
   extended-reference [0] Extended-reference OPTIONAL,
   ...
}
*/
typedef struct EXTERN rrlp_dec_Rel_5_ProtocolError_Extension {
   struct {
      unsigned extended_referencePresent : 1;
   } m;
   rrlp_dec_Extended_reference extended_reference;
   OSRTDList extElem1;
} rrlp_dec_Rel_5_ProtocolError_Extension;

EXTERN int asn1PD_rrlp_dec_Rel_5_ProtocolError_Extension (OSCTXT* pctxt, rrlp_dec_Rel_5_ProtocolError_Extension* pvalue);

EXTERN void asn1Free_rrlp_dec_Rel_5_ProtocolError_Extension (OSCTXT *pctxt, 
   rrlp_dec_Rel_5_ProtocolError_Extension* pvalue);

/**************************************************************/
/*                                                            */
/*  ProtocolError                                             */
/*                                                            */
/**************************************************************/
/*
 Protocol Error component

ProtocolError ::= SEQUENCE {
   errorCause [0] ErrorCodes,
   extensionContainer [1] ExtensionContainer OPTIONAL,
   ...,
   rel-5-ProtocolError-Extension [2] Rel-5-ProtocolError-Extension OPTIONAL
}
*/
typedef struct EXTERN rrlp_dec_ProtocolError {
   struct {
      unsigned extensionContainerPresent : 1;
      unsigned rel_5_ProtocolError_ExtensionPresent : 1;
   } m;
   rrlp_dec_ErrorCodes errorCause;
   rrlp_dec_ExtensionContainer extensionContainer;
   rrlp_dec_Rel_5_ProtocolError_Extension rel_5_ProtocolError_Extension;
   OSRTDList extElem1;
} rrlp_dec_ProtocolError;

EXTERN int asn1PD_rrlp_dec_ProtocolError (OSCTXT* pctxt, rrlp_dec_ProtocolError* pvalue);

EXTERN void asn1Free_rrlp_dec_ProtocolError (OSCTXT *pctxt, 
   rrlp_dec_ProtocolError* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSPositioningMethodTypes                               */
/*                                                            */
/**************************************************************/
/*
GANSSPositioningMethodTypes ::= BIT STRING  { msAssisted(0), msBased(1), standalone(2) } (SIZE (1..8))
*/
/* Named bit constants */

#define rrlp_dec_GANSSPositioningMethodTypes_rrlp_dec_msAssisted             0
#define rrlp_dec_GANSSPositioningMethodTypes_rrlp_dec_msBased                1
#define rrlp_dec_GANSSPositioningMethodTypes_rrlp_dec_standalone             2

typedef struct rrlp_dec_GANSSPositioningMethodTypes {
   OSUINT32 numbits;
   OSOCTET data[1];
} rrlp_dec_GANSSPositioningMethodTypes;

EXTERN int asn1PD_rrlp_dec_GANSSPositioningMethodTypes (OSCTXT* pctxt, rrlp_dec_GANSSPositioningMethodTypes* pvalue);

/**************************************************************/
/*                                                            */
/*  SBASID                                                    */
/*                                                            */
/**************************************************************/
/*
SBASID ::= BIT STRING  { waas(0), egnos(1), masas(2), gagan(3) } (SIZE (1..8))
*/
/* Named bit constants */

#define rrlp_dec_SBASID_rrlp_dec_waas                   0
#define rrlp_dec_SBASID_rrlp_dec_egnos                  1
#define rrlp_dec_SBASID_rrlp_dec_masas                  2
#define rrlp_dec_SBASID_rrlp_dec_gagan                  3

typedef struct rrlp_dec_SBASID {
   OSUINT32 numbits;
   OSOCTET data[1];
} rrlp_dec_SBASID;

EXTERN int asn1PD_rrlp_dec_SBASID (OSCTXT* pctxt, rrlp_dec_SBASID* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSPositionMethod                                       */
/*                                                            */
/**************************************************************/
/*
GANSSPositionMethod ::= SEQUENCE {
   ganssID [0] INTEGER (0..7) OPTIONAL,
   gANSSPositioningMethodTypes [1] GANSSPositioningMethodTypes OPTIONAL,
   gANSSSignals [2] GANSSSignals,
   ...,
   sbasID [3] SBASID OPTIONAL
}
*/
typedef struct EXTERN rrlp_dec_GANSSPositionMethod {
   struct {
      unsigned ganssIDPresent : 1;
      unsigned gANSSPositioningMethodTypesPresent : 1;
      unsigned sbasIDPresent : 1;
   } m;
   OSUINT8 ganssID;
   rrlp_dec_GANSSPositioningMethodTypes gANSSPositioningMethodTypes;
   rrlp_dec_GANSSSignals gANSSSignals;
   rrlp_dec_SBASID sbasID;
   OSRTDList extElem1;
} rrlp_dec_GANSSPositionMethod;

EXTERN int asn1PD_rrlp_dec_GANSSPositionMethod (OSCTXT* pctxt, rrlp_dec_GANSSPositionMethod* pvalue);

EXTERN void asn1Free_rrlp_dec_GANSSPositionMethod (OSCTXT *pctxt, 
   rrlp_dec_GANSSPositionMethod* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSPositionMethods                                      */
/*                                                            */
/**************************************************************/
/*
GANSSPositionMethods ::= SEQUENCE (SIZE (1..16)) OF GANSSPositionMethod
*/
typedef struct EXTERN rrlp_dec_GANSSPositionMethods {
   OSUINT32 n;
   rrlp_dec_GANSSPositionMethod *elem;
} rrlp_dec_GANSSPositionMethods;

EXTERN int asn1PD_rrlp_dec_GANSSPositionMethods (OSCTXT* pctxt, rrlp_dec_GANSSPositionMethods* pvalue);

EXTERN void asn1Free_rrlp_dec_GANSSPositionMethods (OSCTXT *pctxt, 
   rrlp_dec_GANSSPositionMethods* pvalue);

/**************************************************************/
/*                                                            */
/*  PosCapability_Req                                         */
/*                                                            */
/**************************************************************/
/*
 Positioning Capability request component

PosCapability-Req ::= SEQUENCE {
   extended-reference [0] Extended-reference,
   gANSSPositionMethods [1] GANSSPositionMethods OPTIONAL,
   extensionContainer [2] ExtensionContainer OPTIONAL,
   ...
}
*/
typedef struct EXTERN rrlp_dec_PosCapability_Req {
   struct {
      unsigned gANSSPositionMethodsPresent : 1;
      unsigned extensionContainerPresent : 1;
   } m;
   rrlp_dec_Extended_reference extended_reference;
   rrlp_dec_GANSSPositionMethods gANSSPositionMethods;
   rrlp_dec_ExtensionContainer extensionContainer;
   OSRTDList extElem1;
} rrlp_dec_PosCapability_Req;

EXTERN int asn1PD_rrlp_dec_PosCapability_Req (OSCTXT* pctxt, rrlp_dec_PosCapability_Req* pvalue);

EXTERN void asn1Free_rrlp_dec_PosCapability_Req (OSCTXT *pctxt, 
   rrlp_dec_PosCapability_Req* pvalue);

/**************************************************************/
/*                                                            */
/*  ModuloTimeSlot                                            */
/*                                                            */
/**************************************************************/
/*
 Time slot (modulo)

ModuloTimeSlot ::= INTEGER (0..3)
*/
typedef OSUINT8 rrlp_dec_ModuloTimeSlot;

EXTERN int asn1PD_rrlp_dec_ModuloTimeSlot (OSCTXT* pctxt, rrlp_dec_ModuloTimeSlot* pvalue);

/**************************************************************/
/*                                                            */
/*  ReferenceRelation                                         */
/*                                                            */
/**************************************************************/
/*
 Relation between refence BTSs and sets

ReferenceRelation ::= ENUMERATED { secondBTSThirdSet(0), secondBTSSecondSet(1), firstBTSFirstSet(2) }
*/
typedef enum {
   rrlp_dec_ReferenceRelation_secondBTSThirdSet = 0,
   rrlp_dec_ReferenceRelation_secondBTSSecondSet = 1,
   rrlp_dec_ReferenceRelation_firstBTSFirstSet = 2
} rrlp_dec_ReferenceRelation_Root;

typedef OSUINT32 rrlp_dec_ReferenceRelation;

EXTERN int asn1PD_rrlp_dec_ReferenceRelation (OSCTXT* pctxt, rrlp_dec_ReferenceRelation* pvalue);

/**************************************************************/
/*                                                            */
/*  RequestIndex                                              */
/*                                                            */
/**************************************************************/
/*
RequestIndex ::= INTEGER (1..16)
*/
typedef OSUINT8 rrlp_dec_RequestIndex;

EXTERN int asn1PD_rrlp_dec_RequestIndex (OSCTXT* pctxt, rrlp_dec_RequestIndex* pvalue);

/**************************************************************/
/*                                                            */
/*  SystemInfoIndex                                           */
/*                                                            */
/**************************************************************/
/*
SystemInfoIndex ::= INTEGER (1..32)
*/
typedef OSUINT8 rrlp_dec_SystemInfoIndex;

EXTERN int asn1PD_rrlp_dec_SystemInfoIndex (OSCTXT* pctxt, rrlp_dec_SystemInfoIndex* pvalue);

/**************************************************************/
/*                                                            */
/*  CellID                                                    */
/*                                                            */
/**************************************************************/
/*
CellID ::= INTEGER (0..65535)
*/
typedef OSUINT16 rrlp_dec_CellID;

EXTERN int asn1PD_rrlp_dec_CellID (OSCTXT* pctxt, rrlp_dec_CellID* pvalue);

/**************************************************************/
/*                                                            */
/*  LAC                                                       */
/*                                                            */
/**************************************************************/
/*
LAC ::= INTEGER (0..65535)
*/
typedef OSUINT16 rrlp_dec_LAC;

EXTERN int asn1PD_rrlp_dec_LAC (OSCTXT* pctxt, rrlp_dec_LAC* pvalue);

/**************************************************************/
/*                                                            */
/*  RefQuality                                                */
/*                                                            */
/**************************************************************/
/*
RefQuality ::= INTEGER (0..31)
*/
typedef OSUINT8 rrlp_dec_RefQuality;

EXTERN int asn1PD_rrlp_dec_RefQuality (OSCTXT* pctxt, rrlp_dec_RefQuality* pvalue);

/**************************************************************/
/*                                                            */
/*  NumOfMeasurements                                         */
/*                                                            */
/**************************************************************/
/*
 St Dev of TOA of reference as defined in annex

NumOfMeasurements ::= INTEGER (0..7)
*/
typedef OSUINT8 rrlp_dec_NumOfMeasurements;

EXTERN int asn1PD_rrlp_dec_NumOfMeasurements (OSCTXT* pctxt, rrlp_dec_NumOfMeasurements* pvalue);

/**************************************************************/
/*                                                            */
/*  StdResolution                                             */
/*                                                            */
/**************************************************************/
/*
 No. of measurements for RefQuality as defined in annex

StdResolution ::= INTEGER (0..3)
*/
typedef OSUINT8 rrlp_dec_StdResolution;

EXTERN int asn1PD_rrlp_dec_StdResolution (OSCTXT* pctxt, rrlp_dec_StdResolution* pvalue);

/**************************************************************/
/*                                                            */
/*  BSICAndCarrier                                            */
/*                                                            */
/**************************************************************/
/*
BSICAndCarrier ::= SEQUENCE {
   carrier [0] BCCHCarrier,
   bsic [1] BSIC
}
*/
typedef struct EXTERN rrlp_dec_BSICAndCarrier {
   rrlp_dec_BCCHCarrier carrier;
   rrlp_dec_BSIC bsic;
} rrlp_dec_BSICAndCarrier;

EXTERN int asn1PD_rrlp_dec_BSICAndCarrier (OSCTXT* pctxt, rrlp_dec_BSICAndCarrier* pvalue);

/**************************************************************/
/*                                                            */
/*  MultiFrameCarrier                                         */
/*                                                            */
/**************************************************************/
/*
 Multiframe and carrier

MultiFrameCarrier ::= SEQUENCE {
   bcchCarrier [0] BCCHCarrier,
   multiFrameOffset [1] MultiFrameOffset
}
*/
typedef struct EXTERN rrlp_dec_MultiFrameCarrier {
   rrlp_dec_BCCHCarrier bcchCarrier;
   rrlp_dec_MultiFrameOffset multiFrameOffset;
} rrlp_dec_MultiFrameCarrier;

EXTERN int asn1PD_rrlp_dec_MultiFrameCarrier (OSCTXT* pctxt, rrlp_dec_MultiFrameCarrier* pvalue);

/**************************************************************/
/*                                                            */
/*  CellIDAndLAC                                              */
/*                                                            */
/**************************************************************/
/*
CellIDAndLAC ::= SEQUENCE {
   referenceLAC [0] LAC,
   referenceCI [1] CellID
}
*/
typedef struct EXTERN rrlp_dec_CellIDAndLAC {
   rrlp_dec_LAC referenceLAC;
   rrlp_dec_CellID referenceCI;
} rrlp_dec_CellIDAndLAC;

EXTERN int asn1PD_rrlp_dec_CellIDAndLAC (OSCTXT* pctxt, rrlp_dec_CellIDAndLAC* pvalue);

/**************************************************************/
/*                                                            */
/*  NeighborIdentity                                          */
/*                                                            */
/**************************************************************/
/*
NeighborIdentity ::= CHOICE {
   bsicAndCarrier [0] BSICAndCarrier,
   ci [1] CellID,
   multiFrameCarrier [2] MultiFrameCarrier,
   requestIndex [3] RequestIndex,
   systemInfoIndex [4] SystemInfoIndex,
   ciAndLAC [5] CellIDAndLAC
}
*/
/* Choice tag constants */

#define T_rrlp_dec_NeighborIdentity_bsicAndCarrier 1
#define T_rrlp_dec_NeighborIdentity_ci  2
#define T_rrlp_dec_NeighborIdentity_multiFrameCarrier 3
#define T_rrlp_dec_NeighborIdentity_requestIndex 4
#define T_rrlp_dec_NeighborIdentity_systemInfoIndex 5
#define T_rrlp_dec_NeighborIdentity_ciAndLAC 6

typedef struct EXTERN rrlp_dec_NeighborIdentity {
   OSUINT32 t;
   union {
      /* t = 1 */
      rrlp_dec_BSICAndCarrier *bsicAndCarrier;
      /* t = 2 */
      rrlp_dec_CellID ci;
      /* t = 3 */
      rrlp_dec_MultiFrameCarrier *multiFrameCarrier;
      /* t = 4 */
      rrlp_dec_RequestIndex requestIndex;
      /* t = 5 */
      rrlp_dec_SystemInfoIndex systemInfoIndex;
      /* t = 6 */
      rrlp_dec_CellIDAndLAC *ciAndLAC;
   } u;
} rrlp_dec_NeighborIdentity;

EXTERN int asn1PD_rrlp_dec_NeighborIdentity (OSCTXT* pctxt, rrlp_dec_NeighborIdentity* pvalue);

EXTERN void asn1Free_rrlp_dec_NeighborIdentity (OSCTXT *pctxt, 
   rrlp_dec_NeighborIdentity* pvalue);

/**************************************************************/
/*                                                            */
/*  EOTDQuality                                               */
/*                                                            */
/**************************************************************/
/*
EOTDQuality ::= SEQUENCE {
   nbrOfMeasurements [0] INTEGER (0..7),
   stdOfEOTD [1] INTEGER (0..31)
}
*/
typedef struct EXTERN rrlp_dec_EOTDQuality {
   OSUINT8 nbrOfMeasurements;
   OSUINT8 stdOfEOTD;
} rrlp_dec_EOTDQuality;

EXTERN int asn1PD_rrlp_dec_EOTDQuality (OSCTXT* pctxt, rrlp_dec_EOTDQuality* pvalue);

/**************************************************************/
/*                                                            */
/*  OTDValue                                                  */
/*                                                            */
/**************************************************************/
/*
 OTD measurement value for neighbour

OTDValue ::= INTEGER (0..39999)
*/
typedef OSUINT16 rrlp_dec_OTDValue;

EXTERN int asn1PD_rrlp_dec_OTDValue (OSCTXT* pctxt, rrlp_dec_OTDValue* pvalue);

/**************************************************************/
/*                                                            */
/*  OTD_MeasurementWithID                                     */
/*                                                            */
/**************************************************************/
/*
 This measurement contains the BTS identity and measurement

OTD-MeasurementWithID ::= SEQUENCE {
   neighborIdentity [0] NeighborIdentity,
   nborTimeSlot [1] ModuloTimeSlot,
   eotdQuality [2] EOTDQuality,
   otdValue [3] OTDValue
}
*/
typedef struct EXTERN rrlp_dec_OTD_MeasurementWithID {
   rrlp_dec_NeighborIdentity neighborIdentity;
   rrlp_dec_ModuloTimeSlot nborTimeSlot;
   rrlp_dec_EOTDQuality eotdQuality;
   rrlp_dec_OTDValue otdValue;
} rrlp_dec_OTD_MeasurementWithID;

EXTERN int asn1PD_rrlp_dec_OTD_MeasurementWithID (OSCTXT* pctxt, rrlp_dec_OTD_MeasurementWithID* pvalue);

EXTERN void asn1Free_rrlp_dec_OTD_MeasurementWithID (OSCTXT *pctxt, 
   rrlp_dec_OTD_MeasurementWithID* pvalue);

/**************************************************************/
/*                                                            */
/*  OTD_FirstSetMsrs                                          */
/*                                                            */
/**************************************************************/
/*
 Values of resolution are defined in annex

OTD-FirstSetMsrs ::= OTD-MeasurementWithID
*/
typedef rrlp_dec_OTD_MeasurementWithID rrlp_dec_OTD_FirstSetMsrs;

EXTERN int asn1PD_rrlp_dec_OTD_FirstSetMsrs (OSCTXT* pctxt, rrlp_dec_OTD_FirstSetMsrs* pvalue);

EXTERN void asn1Free_rrlp_dec_OTD_FirstSetMsrs (OSCTXT *pctxt, 
   rrlp_dec_OTD_FirstSetMsrs* pvalue);

/**************************************************************/
/*                                                            */
/*  FixType                                                   */
/*                                                            */
/**************************************************************/
/*
FixType ::= INTEGER { twoDFix(0), threeDFix(1) } (0..1)
*/
typedef enum {
   rrlp_dec_FixType_twoDFix = 0,
   rrlp_dec_FixType_threeDFix = 1
} rrlp_dec_FixType_Root;

typedef OSUINT8 rrlp_dec_FixType;

EXTERN int asn1PD_rrlp_dec_FixType (OSCTXT* pctxt, rrlp_dec_FixType* pvalue);

/**************************************************************/
/*                                                            */
/*  GPSTOW24b                                                 */
/*                                                            */
/**************************************************************/
/*
 24 bit presentation for GPSTOW

GPSTOW24b ::= INTEGER (0..14399999)
*/
typedef OSUINT32 rrlp_dec_GPSTOW24b;

EXTERN int asn1PD_rrlp_dec_GPSTOW24b (OSCTXT* pctxt, rrlp_dec_GPSTOW24b* pvalue);

/**************************************************************/
/*                                                            */
/*  MpathIndic                                                */
/*                                                            */
/**************************************************************/
/*
 Multipath indicator

MpathIndic ::= ENUMERATED { notMeasured(0), low(1), medium(2), high(3) }
*/
typedef enum {
   rrlp_dec_MpathIndic_notMeasured = 0,
   rrlp_dec_MpathIndic_low = 1,
   rrlp_dec_MpathIndic_medium = 2,
   rrlp_dec_MpathIndic_high = 3
} rrlp_dec_MpathIndic_Root;

typedef OSUINT32 rrlp_dec_MpathIndic;

EXTERN int asn1PD_rrlp_dec_MpathIndic (OSCTXT* pctxt, rrlp_dec_MpathIndic* pvalue);

/**************************************************************/
/*                                                            */
/*  LocErrorReason                                            */
/*                                                            */
/**************************************************************/
/*
LocErrorReason ::= ENUMERATED { unDefined(0), notEnoughBTSs(1), notEnoughSats(2), eotdLocCalAssDataMissing(3), eotdAssDataMissing(4), gpsLocCalAssDataMissing(5), gpsAssDataMissing(6), methodNotSupported(7), notProcessed(8), refBTSForGPSNotServingBTS(9), refBTSForEOTDNotServingBTS(10), ..., notEnoughGANSSSats(11), ganssAssDataMissing(12), refBTSForGANSSNotServingBTS(13) }
*/
typedef enum {
   rrlp_dec_LocErrorReason_unDefined = 0,
   rrlp_dec_LocErrorReason_notEnoughBTSs = 1,
   rrlp_dec_LocErrorReason_notEnoughSats = 2,
   rrlp_dec_LocErrorReason_eotdLocCalAssDataMissing = 3,
   rrlp_dec_LocErrorReason_eotdAssDataMissing = 4,
   rrlp_dec_LocErrorReason_gpsLocCalAssDataMissing = 5,
   rrlp_dec_LocErrorReason_gpsAssDataMissing = 6,
   rrlp_dec_LocErrorReason_methodNotSupported = 7,
   rrlp_dec_LocErrorReason_notProcessed = 8,
   rrlp_dec_LocErrorReason_refBTSForGPSNotServingBTS = 9,
   rrlp_dec_LocErrorReason_refBTSForEOTDNotServingBTS = 10
} rrlp_dec_LocErrorReason_Root;

typedef enum {
   rrlp_dec_LocErrorReason_notEnoughGANSSSats = 11,
   rrlp_dec_LocErrorReason_ganssAssDataMissing = 12,
   rrlp_dec_LocErrorReason_refBTSForGANSSNotServingBTS = 13
} rrlp_dec_LocErrorReason_Ext;

typedef OSUINT32 rrlp_dec_LocErrorReason;

EXTERN int asn1PD_rrlp_dec_LocErrorReason (OSCTXT* pctxt, rrlp_dec_LocErrorReason* pvalue);

/**************************************************************/
/*                                                            */
/*  GPSAssistanceData                                         */
/*                                                            */
/**************************************************************/
/*
GPSAssistanceData ::= OCTET STRING (SIZE (1..maxGPSAssistanceData))
*/
typedef struct EXTERN rrlp_dec_GPSAssistanceData {
   OSUINT32 numocts;
   OSOCTET data[40];
} rrlp_dec_GPSAssistanceData;

EXTERN int asn1PD_rrlp_dec_GPSAssistanceData (OSCTXT* pctxt, rrlp_dec_GPSAssistanceData* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSAssistanceData                                       */
/*                                                            */
/**************************************************************/
/*
GANSSAssistanceData ::= OCTET STRING (SIZE (1..maxGANSSAssistanceData))
*/
typedef struct EXTERN rrlp_dec_GANSSAssistanceData {
   OSUINT32 numocts;
   OSOCTET data[40];
} rrlp_dec_GANSSAssistanceData;

EXTERN int asn1PD_rrlp_dec_GANSSAssistanceData (OSCTXT* pctxt, rrlp_dec_GANSSAssistanceData* pvalue);

/**************************************************************/
/*                                                            */
/*  TOA_MeasurementsOfRef                                     */
/*                                                            */
/**************************************************************/
/*
 Standard deviation of the TOA measurements from the reference BTS

TOA-MeasurementsOfRef ::= SEQUENCE {
   refQuality [0] RefQuality,
   numOfMeasurements [1] NumOfMeasurements
}
*/
typedef struct EXTERN rrlp_dec_TOA_MeasurementsOfRef {
   rrlp_dec_RefQuality refQuality;
   rrlp_dec_NumOfMeasurements numOfMeasurements;
} rrlp_dec_TOA_MeasurementsOfRef;

EXTERN int asn1PD_rrlp_dec_TOA_MeasurementsOfRef (OSCTXT* pctxt, rrlp_dec_TOA_MeasurementsOfRef* pvalue);

/**************************************************************/
/*                                                            */
/*  OTD_Measurement                                           */
/*                                                            */
/**************************************************************/
/*
 For this OTD measurement identity is same as the identity of BTS
 in the first set with same sequence number

OTD-Measurement ::= SEQUENCE {
   nborTimeSlot [0] ModuloTimeSlot,
   eotdQuality [1] EOTDQuality,
   otdValue [2] OTDValue
}
*/
typedef struct EXTERN rrlp_dec_OTD_Measurement {
   rrlp_dec_ModuloTimeSlot nborTimeSlot;
   rrlp_dec_EOTDQuality eotdQuality;
   rrlp_dec_OTDValue otdValue;
} rrlp_dec_OTD_Measurement;

EXTERN int asn1PD_rrlp_dec_OTD_Measurement (OSCTXT* pctxt, rrlp_dec_OTD_Measurement* pvalue);

/**************************************************************/
/*                                                            */
/*  OTD_MsrsOfOtherSets                                       */
/*                                                            */
/**************************************************************/
/*
 Neighbour info in OTD measurements 0-10 times in TD measurement info

OTD-MsrsOfOtherSets ::= CHOICE {
   identityNotPresent [0] OTD-Measurement,
   identityPresent [1] OTD-MeasurementWithID
}
*/
/* Choice tag constants */

#define T_rrlp_dec_OTD_MsrsOfOtherSets_identityNotPresent 1
#define T_rrlp_dec_OTD_MsrsOfOtherSets_identityPresent 2

typedef struct EXTERN rrlp_dec_OTD_MsrsOfOtherSets {
   OSUINT32 t;
   union {
      /* t = 1 */
      rrlp_dec_OTD_Measurement *identityNotPresent;
      /* t = 2 */
      rrlp_dec_OTD_MeasurementWithID *identityPresent;
   } u;
} rrlp_dec_OTD_MsrsOfOtherSets;

EXTERN int asn1PD_rrlp_dec_OTD_MsrsOfOtherSets (OSCTXT* pctxt, rrlp_dec_OTD_MsrsOfOtherSets* pvalue);

EXTERN void asn1Free_rrlp_dec_OTD_MsrsOfOtherSets (OSCTXT *pctxt, 
   rrlp_dec_OTD_MsrsOfOtherSets* pvalue);

/**************************************************************/
/*                                                            */
/*  SeqOfOTD_MsrsOfOtherSets                                  */
/*                                                            */
/**************************************************************/
/*
SeqOfOTD-MsrsOfOtherSets ::= SEQUENCE (SIZE (1..10)) OF OTD-MsrsOfOtherSets
*/
typedef struct EXTERN rrlp_dec_SeqOfOTD_MsrsOfOtherSets {
   OSUINT32 n;
   rrlp_dec_OTD_MsrsOfOtherSets *elem;
} rrlp_dec_SeqOfOTD_MsrsOfOtherSets;

EXTERN int asn1PD_rrlp_dec_SeqOfOTD_MsrsOfOtherSets (OSCTXT* pctxt, rrlp_dec_SeqOfOTD_MsrsOfOtherSets* pvalue);

EXTERN void asn1Free_rrlp_dec_SeqOfOTD_MsrsOfOtherSets (OSCTXT *pctxt, 
   rrlp_dec_SeqOfOTD_MsrsOfOtherSets* pvalue);

/**************************************************************/
/*                                                            */
/*  OTD_MsrElementRest                                        */
/*                                                            */
/**************************************************************/
/*
 OTD measurent information 2 and 3 sets if exist

OTD-MsrElementRest ::= SEQUENCE {
   refFrameNumber [0] INTEGER (0..42431),
   referenceTimeSlot [1] ModuloTimeSlot,
   toaMeasurementsOfRef [2] TOA-MeasurementsOfRef OPTIONAL,
   stdResolution [3] StdResolution,
   taCorrection [4] INTEGER (0..960) OPTIONAL,
   otd-MsrsOfOtherSets [5] SeqOfOTD-MsrsOfOtherSets OPTIONAL
}
*/
typedef struct EXTERN rrlp_dec_OTD_MsrElementRest {
   struct {
      unsigned toaMeasurementsOfRefPresent : 1;
      unsigned taCorrectionPresent : 1;
      unsigned otd_MsrsOfOtherSetsPresent : 1;
   } m;
   OSUINT16 refFrameNumber;
   rrlp_dec_ModuloTimeSlot referenceTimeSlot;
   rrlp_dec_TOA_MeasurementsOfRef toaMeasurementsOfRef;
   rrlp_dec_StdResolution stdResolution;
   OSUINT16 taCorrection;
   rrlp_dec_SeqOfOTD_MsrsOfOtherSets otd_MsrsOfOtherSets;
} rrlp_dec_OTD_MsrElementRest;

EXTERN int asn1PD_rrlp_dec_OTD_MsrElementRest (OSCTXT* pctxt, rrlp_dec_OTD_MsrElementRest* pvalue);

EXTERN void asn1Free_rrlp_dec_OTD_MsrElementRest (OSCTXT *pctxt, 
   rrlp_dec_OTD_MsrElementRest* pvalue);

/**************************************************************/
/*                                                            */
/*  SeqOfOTD_MsrElementRest                                   */
/*                                                            */
/**************************************************************/
/*
SeqOfOTD-MsrElementRest ::= SEQUENCE (SIZE (1..2)) OF OTD-MsrElementRest
*/
typedef struct EXTERN rrlp_dec_SeqOfOTD_MsrElementRest {
   OSUINT32 n;
   rrlp_dec_OTD_MsrElementRest *elem;
} rrlp_dec_SeqOfOTD_MsrElementRest;

EXTERN int asn1PD_rrlp_dec_SeqOfOTD_MsrElementRest (OSCTXT* pctxt, rrlp_dec_SeqOfOTD_MsrElementRest* pvalue);

EXTERN void asn1Free_rrlp_dec_SeqOfOTD_MsrElementRest (OSCTXT *pctxt, 
   rrlp_dec_SeqOfOTD_MsrElementRest* pvalue);

/**************************************************************/
/*                                                            */
/*  OTD_MeasureInfo_5_Ext                                     */
/*                                                            */
/**************************************************************/
/*
OTD-MeasureInfo-5-Ext ::= SeqOfOTD-MsrElementRest
*/
/* Array of rrlp_dec_OTD_MsrElementRest */
typedef rrlp_dec_SeqOfOTD_MsrElementRest rrlp_dec_OTD_MeasureInfo_5_Ext;

EXTERN int asn1PD_rrlp_dec_OTD_MeasureInfo_5_Ext (OSCTXT* pctxt, rrlp_dec_OTD_MeasureInfo_5_Ext* pvalue);

EXTERN void asn1Free_rrlp_dec_OTD_MeasureInfo_5_Ext (OSCTXT *pctxt, 
   rrlp_dec_OTD_MeasureInfo_5_Ext* pvalue);

/**************************************************************/
/*                                                            */
/*  UlPseudoSegInd                                            */
/*                                                            */
/**************************************************************/
/*
 if more than one measurement sets are present this element is repeated
 NumberOfSets - 1 (-1 = first set) combined in OTD-MeasureInfo-5-Ext and
 OTD-MeasureInfo (e.g. if NumberOfSets is 3, then one otdMsrRestSets may
 be sent in OTD-MeasureInfo-5-Ext and one in OTD-MeasureInfo)
 First part of Uplink RRLP Pseudo-segmentation indication, possibly more may be defined
 in the future for segmentation with more than two segments.

UlPseudoSegInd ::= ENUMERATED { firstOfMany(0), secondOfMany(1) }
*/
typedef enum {
   rrlp_dec_UlPseudoSegInd_firstOfMany = 0,
   rrlp_dec_UlPseudoSegInd_secondOfMany = 1
} rrlp_dec_UlPseudoSegInd_Root;

typedef OSUINT32 rrlp_dec_UlPseudoSegInd;

EXTERN int asn1PD_rrlp_dec_UlPseudoSegInd (OSCTXT* pctxt, rrlp_dec_UlPseudoSegInd* pvalue);

/**************************************************************/
/*                                                            */
/*  PositionData                                              */
/*                                                            */
/**************************************************************/
/*
PositionData ::= BIT STRING  { e-otd(0), gps(1), galileo(2), sbas(3), modernizedGPS(4), qzss(5), glonass(6), bds(7) } (SIZE (3..16))
*/
/* Named bit constants */

#define rrlp_dec_PositionData_rrlp_dec_e_otd                  0
#define rrlp_dec_PositionData_rrlp_dec_gps_1                  1
#define rrlp_dec_PositionData_rrlp_dec_galileo_1              2
#define rrlp_dec_PositionData_rrlp_dec_sbas_1                 3
#define rrlp_dec_PositionData_rrlp_dec_modernizedGPS_1        4
#define rrlp_dec_PositionData_rrlp_dec_qzss_1                 5
#define rrlp_dec_PositionData_rrlp_dec_glonass_1              6
#define rrlp_dec_PositionData_rrlp_dec_bds_1                  7

typedef struct rrlp_dec_PositionData {
   OSUINT32 numbits;
   OSOCTET data[2];
} rrlp_dec_PositionData;

EXTERN int asn1PD_rrlp_dec_PositionData (OSCTXT* pctxt, rrlp_dec_PositionData* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSTODm                                                 */
/*                                                            */
/**************************************************************/
/*
 GANSS TOD modulo 1 hour

GANSSTODm ::= INTEGER (0..3599999)
*/
typedef OSUINT32 rrlp_dec_GANSSTODm;

EXTERN int asn1PD_rrlp_dec_GANSSTODm (OSCTXT* pctxt, rrlp_dec_GANSSTODm* pvalue);

/**************************************************************/
/*                                                            */
/*  NonGANSSPositionMethods                                   */
/*                                                            */
/**************************************************************/
/*
NonGANSSPositionMethods ::= BIT STRING  { msAssistedEOTD(0), msBasedEOTD(1), msAssistedGPS(2), msBasedGPS(3), standaloneGPS(4) } (SIZE (1..16))
*/
/* Named bit constants */

#define rrlp_dec_NonGANSSPositionMethods_rrlp_dec_msAssistedEOTD         0
#define rrlp_dec_NonGANSSPositionMethods_rrlp_dec_msBasedEOTD            1
#define rrlp_dec_NonGANSSPositionMethods_rrlp_dec_msAssistedGPS          2
#define rrlp_dec_NonGANSSPositionMethods_rrlp_dec_msBasedGPS             3
#define rrlp_dec_NonGANSSPositionMethods_rrlp_dec_standaloneGPS          4

typedef struct rrlp_dec_NonGANSSPositionMethods {
   OSUINT32 numbits;
   OSOCTET data[2];
} rrlp_dec_NonGANSSPositionMethods;

EXTERN int asn1PD_rrlp_dec_NonGANSSPositionMethods (OSCTXT* pctxt, rrlp_dec_NonGANSSPositionMethods* pvalue);

/**************************************************************/
/*                                                            */
/*  MultipleMeasurementSets                                   */
/*                                                            */
/**************************************************************/
/*
 indicates MS support of multiple measurement sets for MS assisted position methods

MultipleMeasurementSets ::= BIT STRING  { eotd(0), gps(1), ganss(2) } (SIZE (1..8))
*/
/* Named bit constants */

#define rrlp_dec_MultipleMeasurementSets_rrlp_dec_eotd                   0
#define rrlp_dec_MultipleMeasurementSets_rrlp_dec_gps_2                  1
#define rrlp_dec_MultipleMeasurementSets_rrlp_dec_ganss                  2

typedef struct rrlp_dec_MultipleMeasurementSets {
   OSUINT32 numbits;
   OSOCTET data[1];
} rrlp_dec_MultipleMeasurementSets;

EXTERN int asn1PD_rrlp_dec_MultipleMeasurementSets (OSCTXT* pctxt, rrlp_dec_MultipleMeasurementSets* pvalue);

/**************************************************************/
/*                                                            */
/*  GPSAssistance                                             */
/*                                                            */
/**************************************************************/
/*
 GPS assistance data supported

GPSAssistance ::= BIT STRING  { almanac(0), uTCmodel(1), ionosphericModel(2), navigationmodel(3), dGPScorrections(4), referenceLocation(5), referenceTime(6), acquisitionAssistance(7), realTimeIntegrity(8), ephemerisExtension(9), ephemerisExtensionCheck(10), gPSAcquisAssist-R12-Ext(11) } (SIZE (1..16))
*/
/* Named bit constants */

#define rrlp_dec_GPSAssistance_rrlp_dec_almanac                0
#define rrlp_dec_GPSAssistance_rrlp_dec_uTCmodel               1
#define rrlp_dec_GPSAssistance_rrlp_dec_ionosphericModel       2
#define rrlp_dec_GPSAssistance_rrlp_dec_navigationmodel        3
#define rrlp_dec_GPSAssistance_rrlp_dec_dGPScorrections        4
#define rrlp_dec_GPSAssistance_rrlp_dec_referenceLocation      5
#define rrlp_dec_GPSAssistance_rrlp_dec_referenceTime          6
#define rrlp_dec_GPSAssistance_rrlp_dec_acquisitionAssistance  7
#define rrlp_dec_GPSAssistance_rrlp_dec_realTimeIntegrity      8
#define rrlp_dec_GPSAssistance_rrlp_dec_ephemerisExtension     9
#define rrlp_dec_GPSAssistance_rrlp_dec_ephemerisExtensionCheck 10
#define rrlp_dec_GPSAssistance_rrlp_dec_gPSAcquisAssist_R12_Ext 11

typedef struct rrlp_dec_GPSAssistance {
   OSUINT32 numbits;
   OSOCTET data[2];
} rrlp_dec_GPSAssistance;

EXTERN int asn1PD_rrlp_dec_GPSAssistance (OSCTXT* pctxt, rrlp_dec_GPSAssistance* pvalue);

/**************************************************************/
/*                                                            */
/*  CommonGANSSAssistance                                     */
/*                                                            */
/**************************************************************/
/*
 Common GANSS assistance data supported

CommonGANSSAssistance ::= BIT STRING  { referenceTime(0), referenceLocation(1), ionosphericModel(3), addIonosphericModel(4), earthOrientationParam(5) } (SIZE (1..8))
*/
/* Named bit constants */

#define rrlp_dec_CommonGANSSAssistance_rrlp_dec_referenceTime_1        0
#define rrlp_dec_CommonGANSSAssistance_rrlp_dec_referenceLocation_1    1
#define rrlp_dec_CommonGANSSAssistance_rrlp_dec_ionosphericModel_1     3
#define rrlp_dec_CommonGANSSAssistance_rrlp_dec_addIonosphericModel    4
#define rrlp_dec_CommonGANSSAssistance_rrlp_dec_earthOrientationParam  5

typedef struct rrlp_dec_CommonGANSSAssistance {
   OSUINT32 numbits;
   OSOCTET data[1];
} rrlp_dec_CommonGANSSAssistance;

EXTERN int asn1PD_rrlp_dec_CommonGANSSAssistance (OSCTXT* pctxt, rrlp_dec_CommonGANSSAssistance* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSAssistance                                           */
/*                                                            */
/**************************************************************/
/*
 specific GANSS assistance data supported

GANSSAssistance ::= BIT STRING  { realTimeIntegrity(0), differentialCorrections(1), almanac(2), referenceMeasurementInformation(3), navigationModel(4), timeModelGNSS-UTC(5), timeModelGNSS-GNSS(6), databitassistance(7), ephemerisExtension(8), ephemerisExtensionCheck(9), addUTCmodel(10), auxiliaryInformation(11), gANSSRefMeasurementAssist-R12-Ext(12), bdsDifferentialCorrections-r12(13), bdsGridModel-r12(14) } (SIZE (1..16))
*/
/* Named bit constants */

#define rrlp_dec_GANSSAssistance_rrlp_dec_realTimeIntegrity_1    0
#define rrlp_dec_GANSSAssistance_rrlp_dec_differentialCorrections 1
#define rrlp_dec_GANSSAssistance_rrlp_dec_almanac_1              2
#define rrlp_dec_GANSSAssistance_rrlp_dec_referenceMeasurementInformation 3
#define rrlp_dec_GANSSAssistance_rrlp_dec_navigationModel        4
#define rrlp_dec_GANSSAssistance_rrlp_dec_timeModelGNSS_UTC      5
#define rrlp_dec_GANSSAssistance_rrlp_dec_timeModelGNSS_GNSS     6
#define rrlp_dec_GANSSAssistance_rrlp_dec_databitassistance      7
#define rrlp_dec_GANSSAssistance_rrlp_dec_ephemerisExtension_1   8
#define rrlp_dec_GANSSAssistance_rrlp_dec_ephemerisExtensionCheck_1 9
#define rrlp_dec_GANSSAssistance_rrlp_dec_addUTCmodel            10
#define rrlp_dec_GANSSAssistance_rrlp_dec_auxiliaryInformation   11
#define rrlp_dec_GANSSAssistance_rrlp_dec_gANSSRefMeasurementAssist_R12_Ext 12
#define rrlp_dec_GANSSAssistance_rrlp_dec_bdsDifferentialCorrections_r12 13
#define rrlp_dec_GANSSAssistance_rrlp_dec_bdsGridModel_r12       14

typedef struct rrlp_dec_GANSSAssistance {
   OSUINT32 numbits;
   OSOCTET data[2];
} rrlp_dec_GANSSAssistance;

EXTERN int asn1PD_rrlp_dec_GANSSAssistance (OSCTXT* pctxt, rrlp_dec_GANSSAssistance* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSModelID                                              */
/*                                                            */
/**************************************************************/
/*
GANSSModelID ::= BIT STRING  { model1(0), model2(1), model3(2), model4(3), model5(4), model6(5), model7(6), model8(7) } (SIZE (1..8))
*/
/* Named bit constants */

#define rrlp_dec_GANSSModelID_rrlp_dec_model1                 0
#define rrlp_dec_GANSSModelID_rrlp_dec_model2                 1
#define rrlp_dec_GANSSModelID_rrlp_dec_model3                 2
#define rrlp_dec_GANSSModelID_rrlp_dec_model4                 3
#define rrlp_dec_GANSSModelID_rrlp_dec_model5                 4
#define rrlp_dec_GANSSModelID_rrlp_dec_model6                 5
#define rrlp_dec_GANSSModelID_rrlp_dec_model7                 6
#define rrlp_dec_GANSSModelID_rrlp_dec_model8                 7

typedef struct rrlp_dec_GANSSModelID {
   OSUINT32 numbits;
   OSOCTET data[1];
} rrlp_dec_GANSSModelID;

EXTERN int asn1PD_rrlp_dec_GANSSModelID (OSCTXT* pctxt, rrlp_dec_GANSSModelID* pvalue);

/**************************************************************/
/*                                                            */
/*  MultipleSets                                              */
/*                                                            */
/**************************************************************/
/*
 Measure position response IEs
 Reference Identity
 Multiple sets

MultipleSets ::= SEQUENCE {
   nbrOfSets [0] INTEGER (2..3),
   nbrOfReferenceBTSs [1] INTEGER (1..3),
   referenceRelation [2] ReferenceRelation OPTIONAL
}
*/
typedef struct EXTERN rrlp_dec_MultipleSets {
   struct {
      unsigned referenceRelationPresent : 1;
   } m;
   OSUINT8 nbrOfSets;
   OSUINT8 nbrOfReferenceBTSs;
   rrlp_dec_ReferenceRelation referenceRelation;
} rrlp_dec_MultipleSets;

EXTERN int asn1PD_rrlp_dec_MultipleSets (OSCTXT* pctxt, rrlp_dec_MultipleSets* pvalue);

/**************************************************************/
/*                                                            */
/*  ReferenceIdentityType                                     */
/*                                                            */
/**************************************************************/
/*
 Cell identity

ReferenceIdentityType ::= CHOICE {
   bsicAndCarrier [0] BSICAndCarrier,
   ci [1] CellID,
   requestIndex [2] RequestIndex,
   systemInfoIndex [3] SystemInfoIndex,
   ciAndLAC [4] CellIDAndLAC
}
*/
/* Choice tag constants */

#define T_rrlp_dec_ReferenceIdentityType_bsicAndCarrier 1
#define T_rrlp_dec_ReferenceIdentityType_ci 2
#define T_rrlp_dec_ReferenceIdentityType_requestIndex 3
#define T_rrlp_dec_ReferenceIdentityType_systemInfoIndex 4
#define T_rrlp_dec_ReferenceIdentityType_ciAndLAC 5

typedef struct EXTERN rrlp_dec_ReferenceIdentityType {
   OSUINT32 t;
   union {
      /* t = 1 */
      rrlp_dec_BSICAndCarrier *bsicAndCarrier;
      /* t = 2 */
      rrlp_dec_CellID ci;
      /* t = 3 */
      rrlp_dec_RequestIndex requestIndex;
      /* t = 4 */
      rrlp_dec_SystemInfoIndex systemInfoIndex;
      /* t = 5 */
      rrlp_dec_CellIDAndLAC *ciAndLAC;
   } u;
} rrlp_dec_ReferenceIdentityType;

EXTERN int asn1PD_rrlp_dec_ReferenceIdentityType (OSCTXT* pctxt, rrlp_dec_ReferenceIdentityType* pvalue);

EXTERN void asn1Free_rrlp_dec_ReferenceIdentityType (OSCTXT *pctxt, 
   rrlp_dec_ReferenceIdentityType* pvalue);

/**************************************************************/
/*                                                            */
/*  SeqOfReferenceIdentityType                                */
/*                                                            */
/**************************************************************/
/*
SeqOfReferenceIdentityType ::= SEQUENCE (SIZE (1..3)) OF ReferenceIdentityType
*/
typedef struct EXTERN rrlp_dec_SeqOfReferenceIdentityType {
   OSUINT32 n;
   rrlp_dec_ReferenceIdentityType *elem;
} rrlp_dec_SeqOfReferenceIdentityType;

EXTERN int asn1PD_rrlp_dec_SeqOfReferenceIdentityType (OSCTXT* pctxt, rrlp_dec_SeqOfReferenceIdentityType* pvalue);

EXTERN void asn1Free_rrlp_dec_SeqOfReferenceIdentityType (OSCTXT *pctxt, 
   rrlp_dec_SeqOfReferenceIdentityType* pvalue);

/**************************************************************/
/*                                                            */
/*  ReferenceIdentity                                         */
/*                                                            */
/**************************************************************/
/*
 Reference BTS Identity, this element contains number of
 BTSs told nbrOfReferenceBTSs field in Multiple sets element)

ReferenceIdentity ::= SEQUENCE {
   refBTSList [0] SeqOfReferenceIdentityType
}
*/
typedef struct EXTERN rrlp_dec_ReferenceIdentity {
   rrlp_dec_SeqOfReferenceIdentityType refBTSList;
} rrlp_dec_ReferenceIdentity;

EXTERN int asn1PD_rrlp_dec_ReferenceIdentity (OSCTXT* pctxt, rrlp_dec_ReferenceIdentity* pvalue);

EXTERN void asn1Free_rrlp_dec_ReferenceIdentity (OSCTXT *pctxt, 
   rrlp_dec_ReferenceIdentity* pvalue);

/**************************************************************/
/*                                                            */
/*  SeqOfOTD_FirstSetMsrs                                     */
/*                                                            */
/**************************************************************/
/*
SeqOfOTD-FirstSetMsrs ::= SEQUENCE (SIZE (1..10)) OF OTD-FirstSetMsrs
*/
typedef struct EXTERN rrlp_dec_SeqOfOTD_FirstSetMsrs {
   OSUINT32 n;
   rrlp_dec_OTD_FirstSetMsrs *elem;
} rrlp_dec_SeqOfOTD_FirstSetMsrs;

EXTERN int asn1PD_rrlp_dec_SeqOfOTD_FirstSetMsrs (OSCTXT* pctxt, rrlp_dec_SeqOfOTD_FirstSetMsrs* pvalue);

EXTERN void asn1Free_rrlp_dec_SeqOfOTD_FirstSetMsrs (OSCTXT *pctxt, 
   rrlp_dec_SeqOfOTD_FirstSetMsrs* pvalue);

/**************************************************************/
/*                                                            */
/*  OTD_MsrElementFirst                                       */
/*                                                            */
/**************************************************************/
/*
 OTD measurent information for 1 set

OTD-MsrElementFirst ::= SEQUENCE {
   refFrameNumber [0] INTEGER (0..42431),
   referenceTimeSlot [1] ModuloTimeSlot,
   toaMeasurementsOfRef [2] TOA-MeasurementsOfRef OPTIONAL,
   stdResolution [3] StdResolution,
   taCorrection [4] INTEGER (0..960) OPTIONAL,
   otd-FirstSetMsrs [5] SeqOfOTD-FirstSetMsrs OPTIONAL
}
*/
typedef struct EXTERN rrlp_dec_OTD_MsrElementFirst {
   struct {
      unsigned toaMeasurementsOfRefPresent : 1;
      unsigned taCorrectionPresent : 1;
      unsigned otd_FirstSetMsrsPresent : 1;
   } m;
   OSUINT16 refFrameNumber;
   rrlp_dec_ModuloTimeSlot referenceTimeSlot;
   rrlp_dec_TOA_MeasurementsOfRef toaMeasurementsOfRef;
   rrlp_dec_StdResolution stdResolution;
   OSUINT16 taCorrection;
   rrlp_dec_SeqOfOTD_FirstSetMsrs otd_FirstSetMsrs;
} rrlp_dec_OTD_MsrElementFirst;

EXTERN int asn1PD_rrlp_dec_OTD_MsrElementFirst (OSCTXT* pctxt, rrlp_dec_OTD_MsrElementFirst* pvalue);

EXTERN void asn1Free_rrlp_dec_OTD_MsrElementFirst (OSCTXT *pctxt, 
   rrlp_dec_OTD_MsrElementFirst* pvalue);

/**************************************************************/
/*                                                            */
/*  OTD_MeasureInfo                                           */
/*                                                            */
/**************************************************************/
/*
 OTD-MeasureInfo

OTD-MeasureInfo ::= SEQUENCE {
   otdMsrFirstSets [0] OTD-MsrElementFirst,
   otdMsrRestSets [1] SeqOfOTD-MsrElementRest OPTIONAL
}
*/
typedef struct EXTERN rrlp_dec_OTD_MeasureInfo {
   struct {
      unsigned otdMsrRestSetsPresent : 1;
   } m;
   rrlp_dec_OTD_MsrElementFirst otdMsrFirstSets;
   rrlp_dec_SeqOfOTD_MsrElementRest otdMsrRestSets;
} rrlp_dec_OTD_MeasureInfo;

EXTERN int asn1PD_rrlp_dec_OTD_MeasureInfo (OSCTXT* pctxt, rrlp_dec_OTD_MeasureInfo* pvalue);

EXTERN void asn1Free_rrlp_dec_OTD_MeasureInfo (OSCTXT *pctxt, 
   rrlp_dec_OTD_MeasureInfo* pvalue);

/**************************************************************/
/*                                                            */
/*  LocationInfo                                              */
/*                                                            */
/**************************************************************/
/*
 Location information IE

LocationInfo ::= SEQUENCE {
   refFrame [0] INTEGER (0..65535),
   gpsTOW [1] INTEGER (0..14399999) OPTIONAL,
   fixType [2] FixType,
   posEstimate [3] Ext-GeographicalInformation
}
*/
typedef struct EXTERN rrlp_dec_LocationInfo {
   struct {
      unsigned gpsTOWPresent : 1;
   } m;
   OSUINT16 refFrame;
   OSUINT32 gpsTOW;
   rrlp_dec_FixType fixType;
   rrlp_dec_Ext_GeographicalInformation posEstimate;
} rrlp_dec_LocationInfo;

EXTERN int asn1PD_rrlp_dec_LocationInfo (OSCTXT* pctxt, rrlp_dec_LocationInfo* pvalue);

/**************************************************************/
/*                                                            */
/*  GPS_MsrElement                                            */
/*                                                            */
/**************************************************************/
/*
GPS-MsrElement ::= SEQUENCE {
   satelliteID [0] SatelliteID,
   cNo [1] INTEGER (0..63),
   doppler [2] INTEGER (-32768..32767),
   wholeChips [3] INTEGER (0..1022),
   fracChips [4] INTEGER (0..1024),
   mpathIndic [5] MpathIndic,
   pseuRangeRMSErr [6] INTEGER (0..63)
}
*/
typedef struct EXTERN rrlp_dec_GPS_MsrElement {
   rrlp_dec_SatelliteID satelliteID;
   OSUINT8 cNo;
   OSINT16 doppler;
   OSUINT16 wholeChips;
   OSUINT16 fracChips;
   rrlp_dec_MpathIndic mpathIndic;
   OSUINT8 pseuRangeRMSErr;
} rrlp_dec_GPS_MsrElement;

EXTERN int asn1PD_rrlp_dec_GPS_MsrElement (OSCTXT* pctxt, rrlp_dec_GPS_MsrElement* pvalue);

/**************************************************************/
/*                                                            */
/*  SeqOfGPS_MsrElement                                       */
/*                                                            */
/**************************************************************/
/*
 measured elements in measurement parameters field

SeqOfGPS-MsrElement ::= SEQUENCE (SIZE (1..16)) OF GPS-MsrElement
*/
typedef struct EXTERN rrlp_dec_SeqOfGPS_MsrElement {
   OSUINT32 n;
   rrlp_dec_GPS_MsrElement *elem;
} rrlp_dec_SeqOfGPS_MsrElement;

EXTERN int asn1PD_rrlp_dec_SeqOfGPS_MsrElement (OSCTXT* pctxt, rrlp_dec_SeqOfGPS_MsrElement* pvalue);

EXTERN void asn1Free_rrlp_dec_SeqOfGPS_MsrElement (OSCTXT *pctxt, 
   rrlp_dec_SeqOfGPS_MsrElement* pvalue);

/**************************************************************/
/*                                                            */
/*  GPS_MsrSetElement                                         */
/*                                                            */
/**************************************************************/
/*
 OTD measurent information 1-3 times in message

GPS-MsrSetElement ::= SEQUENCE {
   refFrame [0] INTEGER (0..65535) OPTIONAL,
   gpsTOW [1] GPSTOW24b,
   gps-msrList [2] SeqOfGPS-MsrElement
}
*/
typedef struct EXTERN rrlp_dec_GPS_MsrSetElement {
   struct {
      unsigned refFramePresent : 1;
   } m;
   OSUINT16 refFrame;
   rrlp_dec_GPSTOW24b gpsTOW;
   rrlp_dec_SeqOfGPS_MsrElement gps_msrList;
} rrlp_dec_GPS_MsrSetElement;

EXTERN int asn1PD_rrlp_dec_GPS_MsrSetElement (OSCTXT* pctxt, rrlp_dec_GPS_MsrSetElement* pvalue);

EXTERN void asn1Free_rrlp_dec_GPS_MsrSetElement (OSCTXT *pctxt, 
   rrlp_dec_GPS_MsrSetElement* pvalue);

/**************************************************************/
/*                                                            */
/*  SeqOfGPS_MsrSetElement                                    */
/*                                                            */
/**************************************************************/
/*
SeqOfGPS-MsrSetElement ::= SEQUENCE (SIZE (1..3)) OF GPS-MsrSetElement
*/
typedef struct EXTERN rrlp_dec_SeqOfGPS_MsrSetElement {
   OSUINT32 n;
   rrlp_dec_GPS_MsrSetElement *elem;
} rrlp_dec_SeqOfGPS_MsrSetElement;

EXTERN int asn1PD_rrlp_dec_SeqOfGPS_MsrSetElement (OSCTXT* pctxt, rrlp_dec_SeqOfGPS_MsrSetElement* pvalue);

EXTERN void asn1Free_rrlp_dec_SeqOfGPS_MsrSetElement (OSCTXT *pctxt, 
   rrlp_dec_SeqOfGPS_MsrSetElement* pvalue);

/**************************************************************/
/*                                                            */
/*  GPS_MeasureInfo                                           */
/*                                                            */
/**************************************************************/
/*
 GPS-Measurement information

GPS-MeasureInfo ::= SEQUENCE {
   gpsMsrSetList [0] SeqOfGPS-MsrSetElement
}
*/
typedef struct EXTERN rrlp_dec_GPS_MeasureInfo {
   rrlp_dec_SeqOfGPS_MsrSetElement gpsMsrSetList;
} rrlp_dec_GPS_MeasureInfo;

EXTERN int asn1PD_rrlp_dec_GPS_MeasureInfo (OSCTXT* pctxt, rrlp_dec_GPS_MeasureInfo* pvalue);

EXTERN void asn1Free_rrlp_dec_GPS_MeasureInfo (OSCTXT *pctxt, 
   rrlp_dec_GPS_MeasureInfo* pvalue);

/**************************************************************/
/*                                                            */
/*  AdditionalAssistanceData                                  */
/*                                                            */
/**************************************************************/
/*
 exception handling:
 an unrecognized value shall be treated the same as value 0
 defines additional assistance data needed for any new location attempt
 MS shall retain any assistance data already received

AdditionalAssistanceData ::= SEQUENCE {
   gpsAssistanceData [0] GPSAssistanceData OPTIONAL,
   extensionContainer [1] ExtensionContainer OPTIONAL,
   ...,
   ganssAssistanceData [2] GANSSAssistanceData OPTIONAL
}
*/
typedef struct EXTERN rrlp_dec_AdditionalAssistanceData {
   struct {
      unsigned gpsAssistanceDataPresent : 1;
      unsigned extensionContainerPresent : 1;
      unsigned ganssAssistanceDataPresent : 1;
   } m;
   rrlp_dec_GPSAssistanceData gpsAssistanceData;
   rrlp_dec_ExtensionContainer extensionContainer;
   rrlp_dec_GANSSAssistanceData ganssAssistanceData;
   OSRTDList extElem1;
} rrlp_dec_AdditionalAssistanceData;

EXTERN int asn1PD_rrlp_dec_AdditionalAssistanceData (OSCTXT* pctxt, rrlp_dec_AdditionalAssistanceData* pvalue);

EXTERN void asn1Free_rrlp_dec_AdditionalAssistanceData (OSCTXT *pctxt, 
   rrlp_dec_AdditionalAssistanceData* pvalue);

/**************************************************************/
/*                                                            */
/*  LocationError                                             */
/*                                                            */
/**************************************************************/
/*
 Location error IE

LocationError ::= SEQUENCE {
   locErrorReason [0] LocErrorReason,
   additionalAssistanceData [1] AdditionalAssistanceData OPTIONAL,
   ...
}
*/
typedef struct EXTERN rrlp_dec_LocationError {
   struct {
      unsigned additionalAssistanceDataPresent : 1;
   } m;
   rrlp_dec_LocErrorReason locErrorReason;
   rrlp_dec_AdditionalAssistanceData additionalAssistanceData;
   OSRTDList extElem1;
} rrlp_dec_LocationError;

EXTERN int asn1PD_rrlp_dec_LocationError (OSCTXT* pctxt, rrlp_dec_LocationError* pvalue);

EXTERN void asn1Free_rrlp_dec_LocationError (OSCTXT *pctxt, 
   rrlp_dec_LocationError* pvalue);

/**************************************************************/
/*                                                            */
/*  SeqOfOTD_FirstSetMsrs_R98_Ext                             */
/*                                                            */
/**************************************************************/
/*
SeqOfOTD-FirstSetMsrs-R98-Ext ::= SEQUENCE (SIZE (1..5)) OF OTD-FirstSetMsrs
*/
typedef struct EXTERN rrlp_dec_SeqOfOTD_FirstSetMsrs_R98_Ext {
   OSUINT32 n;
   rrlp_dec_OTD_FirstSetMsrs *elem;
} rrlp_dec_SeqOfOTD_FirstSetMsrs_R98_Ext;

EXTERN int asn1PD_rrlp_dec_SeqOfOTD_FirstSetMsrs_R98_Ext (OSCTXT* pctxt, rrlp_dec_SeqOfOTD_FirstSetMsrs_R98_Ext* pvalue);

EXTERN void asn1Free_rrlp_dec_SeqOfOTD_FirstSetMsrs_R98_Ext (OSCTXT *pctxt, 
   rrlp_dec_SeqOfOTD_FirstSetMsrs_R98_Ext* pvalue);

/**************************************************************/
/*                                                            */
/*  OTD_MsrElementFirst_R98_Ext                               */
/*                                                            */
/**************************************************************/
/*
 OTD measurement information Ext for the first set only

OTD-MsrElementFirst-R98-Ext ::= SEQUENCE {
   otd-FirstSetMsrs-R98-Ext [0] SeqOfOTD-FirstSetMsrs-R98-Ext OPTIONAL
}
*/
typedef struct EXTERN rrlp_dec_OTD_MsrElementFirst_R98_Ext {
   struct {
      unsigned otd_FirstSetMsrs_R98_ExtPresent : 1;
   } m;
   rrlp_dec_SeqOfOTD_FirstSetMsrs_R98_Ext otd_FirstSetMsrs_R98_Ext;
} rrlp_dec_OTD_MsrElementFirst_R98_Ext;

EXTERN int asn1PD_rrlp_dec_OTD_MsrElementFirst_R98_Ext (OSCTXT* pctxt, rrlp_dec_OTD_MsrElementFirst_R98_Ext* pvalue);

EXTERN void asn1Free_rrlp_dec_OTD_MsrElementFirst_R98_Ext (OSCTXT *pctxt, 
   rrlp_dec_OTD_MsrElementFirst_R98_Ext* pvalue);

/**************************************************************/
/*                                                            */
/*  OTD_MeasureInfo_R98_Ext                                   */
/*                                                            */
/**************************************************************/
/*
 This is an addition to OTD-MeasureInfo element defined in original message,
 If OTD-MeasureInfo is absent, or if one or more OTD-MsrElementRest are present
 OTD-MeasureInfo-R98-Ext shall be absent.
 OTD-MeasureInfo-R98-Ext

OTD-MeasureInfo-R98-Ext ::= SEQUENCE {
   otdMsrFirstSets-R98-Ext [0] OTD-MsrElementFirst-R98-Ext
}
*/
typedef struct EXTERN rrlp_dec_OTD_MeasureInfo_R98_Ext {
   rrlp_dec_OTD_MsrElementFirst_R98_Ext otdMsrFirstSets_R98_Ext;
} rrlp_dec_OTD_MeasureInfo_R98_Ext;

EXTERN int asn1PD_rrlp_dec_OTD_MeasureInfo_R98_Ext (OSCTXT* pctxt, rrlp_dec_OTD_MeasureInfo_R98_Ext* pvalue);

EXTERN void asn1Free_rrlp_dec_OTD_MeasureInfo_R98_Ext (OSCTXT *pctxt, 
   rrlp_dec_OTD_MeasureInfo_R98_Ext* pvalue);

/**************************************************************/
/*                                                            */
/*  Rel_98_MsrPosition_Rsp_Extension_rel_98_Ext_MeasureInfo   */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'Rel-98-MsrPosition-Rsp-Extension'
*/
typedef struct EXTERN rrlp_dec_Rel_98_MsrPosition_Rsp_Extension_rel_98_Ext_MeasureInfo {
   struct {
      unsigned otd_MeasureInfo_R98_ExtPresent : 1;
   } m;
   rrlp_dec_OTD_MeasureInfo_R98_Ext otd_MeasureInfo_R98_Ext;
} rrlp_dec_Rel_98_MsrPosition_Rsp_Extension_rel_98_Ext_MeasureInfo;

EXTERN int asn1PD_rrlp_dec_Rel_98_MsrPosition_Rsp_Extension_rel_98_Ext_MeasureInfo (OSCTXT* pctxt, rrlp_dec_Rel_98_MsrPosition_Rsp_Extension_rel_98_Ext_MeasureInfo* pvalue);

EXTERN void asn1Free_rrlp_dec_Rel_98_MsrPosition_Rsp_Extension_rel_98_Ext_MeasureInfo (OSCTXT *pctxt, 
   rrlp_dec_Rel_98_MsrPosition_Rsp_Extension_rel_98_Ext_MeasureInfo* pvalue);

/**************************************************************/
/*                                                            */
/*  GPSTimeAssistanceMeasurements                             */
/*                                                            */
/**************************************************************/
/*
 Coding according to Annex

GPSTimeAssistanceMeasurements ::= SEQUENCE {
   referenceFrameMSB [0] INTEGER (0..63) OPTIONAL,
   gpsTowSubms [1] INTEGER (0..9999) OPTIONAL,
   deltaTow [2] INTEGER (0..127) OPTIONAL,
   gpsReferenceTimeUncertainty [3] GPSReferenceTimeUncertainty OPTIONAL
}
*/
typedef struct EXTERN rrlp_dec_GPSTimeAssistanceMeasurements {
   struct {
      unsigned referenceFrameMSBPresent : 1;
      unsigned gpsTowSubmsPresent : 1;
      unsigned deltaTowPresent : 1;
      unsigned gpsReferenceTimeUncertaintyPresent : 1;
   } m;
   OSUINT8 referenceFrameMSB;
   OSUINT16 gpsTowSubms;
   OSUINT8 deltaTow;
   rrlp_dec_GPSReferenceTimeUncertainty gpsReferenceTimeUncertainty;
} rrlp_dec_GPSTimeAssistanceMeasurements;

EXTERN int asn1PD_rrlp_dec_GPSTimeAssistanceMeasurements (OSCTXT* pctxt, rrlp_dec_GPSTimeAssistanceMeasurements* pvalue);

/**************************************************************/
/*                                                            */
/*  Rel_98_MsrPosition_Rsp_Extension                          */
/*                                                            */
/**************************************************************/
/*
Rel-98-MsrPosition-Rsp-Extension ::= SEQUENCE {
   rel-98-Ext-MeasureInfo [0] SEQUENCE {
      otd-MeasureInfo-R98-Ext [0] OTD-MeasureInfo-R98-Ext OPTIONAL
   },
   ...,
   timeAssistanceMeasurements [1] GPSTimeAssistanceMeasurements OPTIONAL
}
*/
typedef struct EXTERN rrlp_dec_Rel_98_MsrPosition_Rsp_Extension {
   struct {
      unsigned timeAssistanceMeasurementsPresent : 1;
   } m;
   rrlp_dec_Rel_98_MsrPosition_Rsp_Extension_rel_98_Ext_MeasureInfo rel_98_Ext_MeasureInfo;
   rrlp_dec_GPSTimeAssistanceMeasurements timeAssistanceMeasurements;
   OSRTDList extElem1;
} rrlp_dec_Rel_98_MsrPosition_Rsp_Extension;

EXTERN int asn1PD_rrlp_dec_Rel_98_MsrPosition_Rsp_Extension (OSCTXT* pctxt, rrlp_dec_Rel_98_MsrPosition_Rsp_Extension* pvalue);

EXTERN void asn1Free_rrlp_dec_Rel_98_MsrPosition_Rsp_Extension (OSCTXT *pctxt, 
   rrlp_dec_Rel_98_MsrPosition_Rsp_Extension* pvalue);

/**************************************************************/
/*                                                            */
/*  Rel_5_MsrPosition_Rsp_Extension                           */
/*                                                            */
/**************************************************************/
/*
Rel-5-MsrPosition-Rsp-Extension ::= SEQUENCE {
   extended-reference [0] Extended-reference OPTIONAL,
   otd-MeasureInfo-5-Ext [1] OTD-MeasureInfo-5-Ext OPTIONAL,
   ulPseudoSegInd [2] UlPseudoSegInd OPTIONAL,
   ...
}
*/
typedef struct EXTERN rrlp_dec_Rel_5_MsrPosition_Rsp_Extension {
   struct {
      unsigned extended_referencePresent : 1;
      unsigned otd_MeasureInfo_5_ExtPresent : 1;
      unsigned ulPseudoSegIndPresent : 1;
   } m;
   rrlp_dec_Extended_reference extended_reference;
   rrlp_dec_OTD_MeasureInfo_5_Ext otd_MeasureInfo_5_Ext;
   rrlp_dec_UlPseudoSegInd ulPseudoSegInd;
   OSRTDList extElem1;
} rrlp_dec_Rel_5_MsrPosition_Rsp_Extension;

EXTERN int asn1PD_rrlp_dec_Rel_5_MsrPosition_Rsp_Extension (OSCTXT* pctxt, rrlp_dec_Rel_5_MsrPosition_Rsp_Extension* pvalue);

EXTERN void asn1Free_rrlp_dec_Rel_5_MsrPosition_Rsp_Extension (OSCTXT *pctxt, 
   rrlp_dec_Rel_5_MsrPosition_Rsp_Extension* pvalue);

/**************************************************************/
/*                                                            */
/*  ReferenceFrame                                            */
/*                                                            */
/**************************************************************/
/*
ReferenceFrame ::= SEQUENCE {
   referenceFN [0] INTEGER (0..65535),
   referenceFNMSB [1] INTEGER (0..63) OPTIONAL
}
*/
typedef struct EXTERN rrlp_dec_ReferenceFrame {
   struct {
      unsigned referenceFNMSBPresent : 1;
   } m;
   OSUINT16 referenceFN;
   OSUINT8 referenceFNMSB;
} rrlp_dec_ReferenceFrame;

EXTERN int asn1PD_rrlp_dec_ReferenceFrame (OSCTXT* pctxt, rrlp_dec_ReferenceFrame* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSLocationInfo                                         */
/*                                                            */
/**************************************************************/
/*
 GANSS Location Information contains location estimate, time stamp with uncertainty 
 and optionally Reference Frame field

GANSSLocationInfo ::= SEQUENCE {
   referenceFrame [0] ReferenceFrame OPTIONAL,
   ganssTODm [1] GANSSTODm OPTIONAL,
   ganssTODFrac [2] INTEGER (0..16384) OPTIONAL,
   ganssTODUncertainty [3] GANSSTODUncertainty OPTIONAL,
   ganssTimeID [4] INTEGER (0..7) OPTIONAL,
   fixType [5] FixType,
   posData [6] PositionData,
   stationaryIndication [7] INTEGER (0..1) OPTIONAL,
   posEstimate [8] Ext-GeographicalInformation,
   ...
}
*/
typedef struct EXTERN rrlp_dec_GANSSLocationInfo {
   struct {
      unsigned referenceFramePresent : 1;
      unsigned ganssTODmPresent : 1;
      unsigned ganssTODFracPresent : 1;
      unsigned ganssTODUncertaintyPresent : 1;
      unsigned ganssTimeIDPresent : 1;
      unsigned stationaryIndicationPresent : 1;
   } m;
   rrlp_dec_ReferenceFrame referenceFrame;
   rrlp_dec_GANSSTODm ganssTODm;
   OSUINT16 ganssTODFrac;
   rrlp_dec_GANSSTODUncertainty ganssTODUncertainty;
   OSUINT8 ganssTimeID;
   rrlp_dec_FixType fixType;
   rrlp_dec_PositionData posData;
   OSUINT8 stationaryIndication;
   rrlp_dec_Ext_GeographicalInformation posEstimate;
   OSRTDList extElem1;
} rrlp_dec_GANSSLocationInfo;

EXTERN int asn1PD_rrlp_dec_GANSSLocationInfo (OSCTXT* pctxt, rrlp_dec_GANSSLocationInfo* pvalue);

EXTERN void asn1Free_rrlp_dec_GANSSLocationInfo (OSCTXT *pctxt, 
   rrlp_dec_GANSSLocationInfo* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSS_SgnElement                                          */
/*                                                            */
/**************************************************************/
/*
GANSS-SgnElement ::= SEQUENCE {
   svID [0] SVID,
   cNo [1] INTEGER (0..63),
   mpathDet [2] MpathIndic,
   carrierQualityInd [3] INTEGER (0..3) OPTIONAL,
   codePhase [4] INTEGER (0..2097151),
   integerCodePhase [5] INTEGER (0..127) OPTIONAL,
   codePhaseRMSError [6] INTEGER (0..63),
   doppler [7] INTEGER (-32768..32767) OPTIONAL,
   adr [8] INTEGER (0..33554431) OPTIONAL
}
*/
typedef struct EXTERN rrlp_dec_GANSS_SgnElement {
   struct {
      unsigned carrierQualityIndPresent : 1;
      unsigned integerCodePhasePresent : 1;
      unsigned dopplerPresent : 1;
      unsigned adrPresent : 1;
   } m;
   rrlp_dec_SVID svID;
   OSUINT8 cNo;
   rrlp_dec_MpathIndic mpathDet;
   OSUINT8 carrierQualityInd;
   OSUINT32 codePhase;
   OSUINT8 integerCodePhase;
   OSUINT8 codePhaseRMSError;
   OSINT16 doppler;
   OSUINT32 adr;
} rrlp_dec_GANSS_SgnElement;

EXTERN int asn1PD_rrlp_dec_GANSS_SgnElement (OSCTXT* pctxt, rrlp_dec_GANSS_SgnElement* pvalue);

/**************************************************************/
/*                                                            */
/*  SeqOfGANSS_SgnElement                                     */
/*                                                            */
/**************************************************************/
/*
 Up to 16 Measurements can be returned per signal type 

SeqOfGANSS-SgnElement ::= SEQUENCE (SIZE (1..16)) OF GANSS-SgnElement
*/
typedef struct EXTERN rrlp_dec_SeqOfGANSS_SgnElement {
   OSUINT32 n;
   rrlp_dec_GANSS_SgnElement *elem;
} rrlp_dec_SeqOfGANSS_SgnElement;

EXTERN int asn1PD_rrlp_dec_SeqOfGANSS_SgnElement (OSCTXT* pctxt, rrlp_dec_SeqOfGANSS_SgnElement* pvalue);

EXTERN void asn1Free_rrlp_dec_SeqOfGANSS_SgnElement (OSCTXT *pctxt, 
   rrlp_dec_SeqOfGANSS_SgnElement* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSS_SgnTypeElement                                      */
/*                                                            */
/**************************************************************/
/*
GANSS-SgnTypeElement ::= SEQUENCE {
   ganssSignalID [0] GANSSSignalID,
   ganssCodePhaseAmbiguity [1] INTEGER (0..127) OPTIONAL,
   ganss-SgnList [2] SeqOfGANSS-SgnElement,
   ...
}
*/
typedef struct EXTERN rrlp_dec_GANSS_SgnTypeElement {
   struct {
      unsigned ganssCodePhaseAmbiguityPresent : 1;
   } m;
   rrlp_dec_GANSSSignalID ganssSignalID;
   OSUINT8 ganssCodePhaseAmbiguity;
   rrlp_dec_SeqOfGANSS_SgnElement ganss_SgnList;
   OSRTDList extElem1;
} rrlp_dec_GANSS_SgnTypeElement;

EXTERN int asn1PD_rrlp_dec_GANSS_SgnTypeElement (OSCTXT* pctxt, rrlp_dec_GANSS_SgnTypeElement* pvalue);

EXTERN void asn1Free_rrlp_dec_GANSS_SgnTypeElement (OSCTXT *pctxt, 
   rrlp_dec_GANSS_SgnTypeElement* pvalue);

/**************************************************************/
/*                                                            */
/*  SeqOfGANSS_SgnTypeElement                                 */
/*                                                            */
/**************************************************************/
/*
 Measurements can be returned up to 8 different signal types
 N_SGN_TYPE can be read from number of elements of SeqOfGANSS-SgnTypeElement 
 Reporting of multiple signal types as defined in A.2.2.4g  

SeqOfGANSS-SgnTypeElement ::= SEQUENCE (SIZE (1..8)) OF GANSS-SgnTypeElement
*/
typedef struct EXTERN rrlp_dec_SeqOfGANSS_SgnTypeElement {
   OSUINT32 n;
   rrlp_dec_GANSS_SgnTypeElement *elem;
} rrlp_dec_SeqOfGANSS_SgnTypeElement;

EXTERN int asn1PD_rrlp_dec_SeqOfGANSS_SgnTypeElement (OSCTXT* pctxt, rrlp_dec_SeqOfGANSS_SgnTypeElement* pvalue);

EXTERN void asn1Free_rrlp_dec_SeqOfGANSS_SgnTypeElement (OSCTXT *pctxt, 
   rrlp_dec_SeqOfGANSS_SgnTypeElement* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSS_MsrElement                                          */
/*                                                            */
/**************************************************************/
/*
GANSS-MsrElement ::= SEQUENCE {
   ganssID [0] INTEGER (0..7) OPTIONAL,
   ganss-SgnTypeList [1] SeqOfGANSS-SgnTypeElement
}
*/
typedef struct EXTERN rrlp_dec_GANSS_MsrElement {
   struct {
      unsigned ganssIDPresent : 1;
   } m;
   OSUINT8 ganssID;
   rrlp_dec_SeqOfGANSS_SgnTypeElement ganss_SgnTypeList;
} rrlp_dec_GANSS_MsrElement;

EXTERN int asn1PD_rrlp_dec_GANSS_MsrElement (OSCTXT* pctxt, rrlp_dec_GANSS_MsrElement* pvalue);

EXTERN void asn1Free_rrlp_dec_GANSS_MsrElement (OSCTXT *pctxt, 
   rrlp_dec_GANSS_MsrElement* pvalue);

/**************************************************************/
/*                                                            */
/*  SeqOfGANSS_MsrElement                                     */
/*                                                            */
/**************************************************************/
/*
SeqOfGANSS-MsrElement ::= SEQUENCE (SIZE (1..8)) OF GANSS-MsrElement
*/
typedef struct EXTERN rrlp_dec_SeqOfGANSS_MsrElement {
   OSUINT32 n;
   rrlp_dec_GANSS_MsrElement *elem;
} rrlp_dec_SeqOfGANSS_MsrElement;

EXTERN int asn1PD_rrlp_dec_SeqOfGANSS_MsrElement (OSCTXT* pctxt, rrlp_dec_SeqOfGANSS_MsrElement* pvalue);

EXTERN void asn1Free_rrlp_dec_SeqOfGANSS_MsrElement (OSCTXT *pctxt, 
   rrlp_dec_SeqOfGANSS_MsrElement* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSS_MsrSetElement                                       */
/*                                                            */
/**************************************************************/
/*
 GANSS measurement information 1-3 times in a message

GANSS-MsrSetElement ::= SEQUENCE {
   referenceFrame [0] ReferenceFrame OPTIONAL,
   ganssTODm [1] GANSSTODm OPTIONAL,
   deltaGANSSTOD [2] INTEGER (0..127) OPTIONAL,
   ganssTODUncertainty [3] GANSSTODUncertainty OPTIONAL,
   ganss-MsrElementList [4] SeqOfGANSS-MsrElement
}
*/
typedef struct EXTERN rrlp_dec_GANSS_MsrSetElement {
   struct {
      unsigned referenceFramePresent : 1;
      unsigned ganssTODmPresent : 1;
      unsigned deltaGANSSTODPresent : 1;
      unsigned ganssTODUncertaintyPresent : 1;
   } m;
   rrlp_dec_ReferenceFrame referenceFrame;
   rrlp_dec_GANSSTODm ganssTODm;
   OSUINT8 deltaGANSSTOD;
   rrlp_dec_GANSSTODUncertainty ganssTODUncertainty;
   rrlp_dec_SeqOfGANSS_MsrElement ganss_MsrElementList;
} rrlp_dec_GANSS_MsrSetElement;

EXTERN int asn1PD_rrlp_dec_GANSS_MsrSetElement (OSCTXT* pctxt, rrlp_dec_GANSS_MsrSetElement* pvalue);

EXTERN void asn1Free_rrlp_dec_GANSS_MsrSetElement (OSCTXT *pctxt, 
   rrlp_dec_GANSS_MsrSetElement* pvalue);

/**************************************************************/
/*                                                            */
/*  SeqOfGANSS_MsrSetElement                                  */
/*                                                            */
/**************************************************************/
/*
SeqOfGANSS-MsrSetElement ::= SEQUENCE (SIZE (1..3)) OF GANSS-MsrSetElement
*/
typedef struct EXTERN rrlp_dec_SeqOfGANSS_MsrSetElement {
   OSUINT32 n;
   rrlp_dec_GANSS_MsrSetElement *elem;
} rrlp_dec_SeqOfGANSS_MsrSetElement;

EXTERN int asn1PD_rrlp_dec_SeqOfGANSS_MsrSetElement (OSCTXT* pctxt, rrlp_dec_SeqOfGANSS_MsrSetElement* pvalue);

EXTERN void asn1Free_rrlp_dec_SeqOfGANSS_MsrSetElement (OSCTXT *pctxt, 
   rrlp_dec_SeqOfGANSS_MsrSetElement* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSMeasureInfo                                          */
/*                                                            */
/**************************************************************/
/*
 GANSS Measurement Information 

GANSSMeasureInfo ::= SEQUENCE {
   ganssMsrSetList [0] SeqOfGANSS-MsrSetElement
}
*/
typedef struct EXTERN rrlp_dec_GANSSMeasureInfo {
   rrlp_dec_SeqOfGANSS_MsrSetElement ganssMsrSetList;
} rrlp_dec_GANSSMeasureInfo;

EXTERN int asn1PD_rrlp_dec_GANSSMeasureInfo (OSCTXT* pctxt, rrlp_dec_GANSSMeasureInfo* pvalue);

EXTERN void asn1Free_rrlp_dec_GANSSMeasureInfo (OSCTXT *pctxt, 
   rrlp_dec_GANSSMeasureInfo* pvalue);

/**************************************************************/
/*                                                            */
/*  Rel_7_MsrPosition_Rsp_Extension                           */
/*                                                            */
/**************************************************************/
/*
Rel-7-MsrPosition-Rsp-Extension ::= SEQUENCE {
   velEstimate [0] VelocityEstimate OPTIONAL,
   ganssLocationInfo [1] GANSSLocationInfo OPTIONAL,
   ganssMeasureInfo [2] GANSSMeasureInfo OPTIONAL,
   ...
}
*/
typedef struct EXTERN rrlp_dec_Rel_7_MsrPosition_Rsp_Extension {
   struct {
      unsigned velEstimatePresent : 1;
      unsigned ganssLocationInfoPresent : 1;
      unsigned ganssMeasureInfoPresent : 1;
   } m;
   rrlp_dec_VelocityEstimate velEstimate;
   rrlp_dec_GANSSLocationInfo ganssLocationInfo;
   rrlp_dec_GANSSMeasureInfo ganssMeasureInfo;
   OSRTDList extElem1;
} rrlp_dec_Rel_7_MsrPosition_Rsp_Extension;

EXTERN int asn1PD_rrlp_dec_Rel_7_MsrPosition_Rsp_Extension (OSCTXT* pctxt, rrlp_dec_Rel_7_MsrPosition_Rsp_Extension* pvalue);

EXTERN void asn1Free_rrlp_dec_Rel_7_MsrPosition_Rsp_Extension (OSCTXT *pctxt, 
   rrlp_dec_Rel_7_MsrPosition_Rsp_Extension* pvalue);

/**************************************************************/
/*                                                            */
/*  MsrPosition_Rsp                                           */
/*                                                            */
/**************************************************************/
/*
 Measurement Position response component

MsrPosition-Rsp ::= SEQUENCE {
   multipleSets [0] MultipleSets OPTIONAL,
   referenceIdentity [1] ReferenceIdentity OPTIONAL,
   otd-MeasureInfo [2] OTD-MeasureInfo OPTIONAL,
   locationInfo [3] LocationInfo OPTIONAL,
   gps-MeasureInfo [4] GPS-MeasureInfo OPTIONAL,
   locationError [5] LocationError OPTIONAL,
   extensionContainer [6] ExtensionContainer OPTIONAL,
   ...,
   rel-98-MsrPosition-Rsp-Extension [7] Rel-98-MsrPosition-Rsp-Extension OPTIONAL,
   rel-5-MsrPosition-Rsp-Extension [8] Rel-5-MsrPosition-Rsp-Extension OPTIONAL,
   rel-7-MsrPosition-Rsp-Extension [9] Rel-7-MsrPosition-Rsp-Extension OPTIONAL
}
*/
typedef struct EXTERN rrlp_dec_MsrPosition_Rsp {
   struct {
      unsigned multipleSetsPresent : 1;
      unsigned referenceIdentityPresent : 1;
      unsigned otd_MeasureInfoPresent : 1;
      unsigned locationInfoPresent : 1;
      unsigned gps_MeasureInfoPresent : 1;
      unsigned locationErrorPresent : 1;
      unsigned extensionContainerPresent : 1;
      unsigned rel_98_MsrPosition_Rsp_ExtensionPresent : 1;
      unsigned rel_5_MsrPosition_Rsp_ExtensionPresent : 1;
      unsigned rel_7_MsrPosition_Rsp_ExtensionPresent : 1;
   } m;
   rrlp_dec_MultipleSets multipleSets;
   rrlp_dec_ReferenceIdentity referenceIdentity;
   rrlp_dec_OTD_MeasureInfo otd_MeasureInfo;
   rrlp_dec_LocationInfo locationInfo;
   rrlp_dec_GPS_MeasureInfo gps_MeasureInfo;
   rrlp_dec_LocationError locationError;
   rrlp_dec_ExtensionContainer extensionContainer;
   rrlp_dec_Rel_98_MsrPosition_Rsp_Extension rel_98_MsrPosition_Rsp_Extension;
   rrlp_dec_Rel_5_MsrPosition_Rsp_Extension rel_5_MsrPosition_Rsp_Extension;
   rrlp_dec_Rel_7_MsrPosition_Rsp_Extension rel_7_MsrPosition_Rsp_Extension;
   OSRTDList extElem1;
} rrlp_dec_MsrPosition_Rsp;

EXTERN int asn1PD_rrlp_dec_MsrPosition_Rsp (OSCTXT* pctxt, rrlp_dec_MsrPosition_Rsp* pvalue);

EXTERN void asn1Free_rrlp_dec_MsrPosition_Rsp (OSCTXT *pctxt, 
   rrlp_dec_MsrPosition_Rsp* pvalue);

/**************************************************************/
/*                                                            */
/*  PosCapabilities                                           */
/*                                                            */
/**************************************************************/
/*
 Rel-7 Positioning Capability parameters here

PosCapabilities ::= SEQUENCE {
   nonGANSSpositionMethods [0] NonGANSSPositionMethods OPTIONAL,
   gANSSPositionMethods [1] GANSSPositionMethods OPTIONAL,
   multipleMeasurementSets [2] MultipleMeasurementSets OPTIONAL,
   ...
}
*/
typedef struct EXTERN rrlp_dec_PosCapabilities {
   struct {
      unsigned nonGANSSpositionMethodsPresent : 1;
      unsigned gANSSPositionMethodsPresent : 1;
      unsigned multipleMeasurementSetsPresent : 1;
   } m;
   rrlp_dec_NonGANSSPositionMethods nonGANSSpositionMethods;
   rrlp_dec_GANSSPositionMethods gANSSPositionMethods;
   rrlp_dec_MultipleMeasurementSets multipleMeasurementSets;
   OSRTDList extElem1;
} rrlp_dec_PosCapabilities;

EXTERN int asn1PD_rrlp_dec_PosCapabilities (OSCTXT* pctxt, rrlp_dec_PosCapabilities* pvalue);

EXTERN void asn1Free_rrlp_dec_PosCapabilities (OSCTXT *pctxt, 
   rrlp_dec_PosCapabilities* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSAssistanceForOneGANSS                                */
/*                                                            */
/**************************************************************/
/*
 assistance data supported for a particular GANSS system

GANSSAssistanceForOneGANSS ::= SEQUENCE {
   ganssID [0] INTEGER (0..7) OPTIONAL,
   gANSSAssistance [1] GANSSAssistance,
   ...
}
*/
typedef struct EXTERN rrlp_dec_GANSSAssistanceForOneGANSS {
   struct {
      unsigned ganssIDPresent : 1;
   } m;
   OSUINT8 ganssID;
   rrlp_dec_GANSSAssistance gANSSAssistance;
   OSRTDList extElem1;
} rrlp_dec_GANSSAssistanceForOneGANSS;

EXTERN int asn1PD_rrlp_dec_GANSSAssistanceForOneGANSS (OSCTXT* pctxt, rrlp_dec_GANSSAssistanceForOneGANSS* pvalue);

EXTERN void asn1Free_rrlp_dec_GANSSAssistanceForOneGANSS (OSCTXT *pctxt, 
   rrlp_dec_GANSSAssistanceForOneGANSS* pvalue);

/**************************************************************/
/*                                                            */
/*  SpecificGANSSAssistance                                   */
/*                                                            */
/**************************************************************/
/*
SpecificGANSSAssistance ::= SEQUENCE (SIZE (1..16)) OF GANSSAssistanceForOneGANSS
*/
typedef struct EXTERN rrlp_dec_SpecificGANSSAssistance {
   OSUINT32 n;
   rrlp_dec_GANSSAssistanceForOneGANSS *elem;
} rrlp_dec_SpecificGANSSAssistance;

EXTERN int asn1PD_rrlp_dec_SpecificGANSSAssistance (OSCTXT* pctxt, rrlp_dec_SpecificGANSSAssistance* pvalue);

EXTERN void asn1Free_rrlp_dec_SpecificGANSSAssistance (OSCTXT *pctxt, 
   rrlp_dec_SpecificGANSSAssistance* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSAssistanceSet                                        */
/*                                                            */
/**************************************************************/
/*
 GANSS assistance data supported

GANSSAssistanceSet ::= SEQUENCE {
   commonGANSSAssistance [0] CommonGANSSAssistance,
   specificGANSSAssistance [1] SpecificGANSSAssistance,
   ...
}
*/
typedef struct EXTERN rrlp_dec_GANSSAssistanceSet {
   rrlp_dec_CommonGANSSAssistance commonGANSSAssistance;
   rrlp_dec_SpecificGANSSAssistance specificGANSSAssistance;
   OSRTDList extElem1;
} rrlp_dec_GANSSAssistanceSet;

EXTERN int asn1PD_rrlp_dec_GANSSAssistanceSet (OSCTXT* pctxt, rrlp_dec_GANSSAssistanceSet* pvalue);

EXTERN void asn1Free_rrlp_dec_GANSSAssistanceSet (OSCTXT *pctxt, 
   rrlp_dec_GANSSAssistanceSet* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSAdditionalAssistanceChoicesForOneGANSS               */
/*                                                            */
/**************************************************************/
/*
GANSSAdditionalAssistanceChoicesForOneGANSS ::= SEQUENCE {
   ganssID [0] INTEGER (0..7) OPTIONAL,
   ganssClockModelChoice [1] GANSSModelID OPTIONAL,
   gannsOrbitModelChoice [2] GANSSModelID OPTIONAL,
   ganssAlmanacModelChoice [3] GANSSModelID OPTIONAL,
   ganssAdditionalUTCModelChoice [4] GANSSModelID OPTIONAL,
   ...
}
*/
typedef struct EXTERN rrlp_dec_GANSSAdditionalAssistanceChoicesForOneGANSS {
   struct {
      unsigned ganssIDPresent : 1;
      unsigned ganssClockModelChoicePresent : 1;
      unsigned gannsOrbitModelChoicePresent : 1;
      unsigned ganssAlmanacModelChoicePresent : 1;
      unsigned ganssAdditionalUTCModelChoicePresent : 1;
   } m;
   OSUINT8 ganssID;
   rrlp_dec_GANSSModelID ganssClockModelChoice;
   rrlp_dec_GANSSModelID gannsOrbitModelChoice;
   rrlp_dec_GANSSModelID ganssAlmanacModelChoice;
   rrlp_dec_GANSSModelID ganssAdditionalUTCModelChoice;
   OSRTDList extElem1;
} rrlp_dec_GANSSAdditionalAssistanceChoicesForOneGANSS;

EXTERN int asn1PD_rrlp_dec_GANSSAdditionalAssistanceChoicesForOneGANSS (OSCTXT* pctxt, rrlp_dec_GANSSAdditionalAssistanceChoicesForOneGANSS* pvalue);

EXTERN void asn1Free_rrlp_dec_GANSSAdditionalAssistanceChoicesForOneGANSS (OSCTXT *pctxt, 
   rrlp_dec_GANSSAdditionalAssistanceChoicesForOneGANSS* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSAdditionalAssistanceChoices                          */
/*                                                            */
/**************************************************************/
/*
GANSSAdditionalAssistanceChoices ::= SEQUENCE (SIZE (1..16)) OF GANSSAdditionalAssistanceChoicesForOneGANSS
*/
typedef struct EXTERN rrlp_dec_GANSSAdditionalAssistanceChoices {
   OSUINT32 n;
   rrlp_dec_GANSSAdditionalAssistanceChoicesForOneGANSS *elem;
} rrlp_dec_GANSSAdditionalAssistanceChoices;

EXTERN int asn1PD_rrlp_dec_GANSSAdditionalAssistanceChoices (OSCTXT* pctxt, rrlp_dec_GANSSAdditionalAssistanceChoices* pvalue);

EXTERN void asn1Free_rrlp_dec_GANSSAdditionalAssistanceChoices (OSCTXT *pctxt, 
   rrlp_dec_GANSSAdditionalAssistanceChoices* pvalue);

/**************************************************************/
/*                                                            */
/*  AssistanceSupported                                       */
/*                                                            */
/**************************************************************/
/*
 indicates MS support of different types of assistance data

AssistanceSupported ::= SEQUENCE {
   gpsAssistance [0] GPSAssistance OPTIONAL,
   gANSSAssistanceSet [1] GANSSAssistanceSet OPTIONAL,
   ...,
   gANSSAdditionalAssistanceChoices [2] GANSSAdditionalAssistanceChoices OPTIONAL
}
*/
typedef struct EXTERN rrlp_dec_AssistanceSupported {
   struct {
      unsigned gpsAssistancePresent : 1;
      unsigned gANSSAssistanceSetPresent : 1;
      unsigned gANSSAdditionalAssistanceChoicesPresent : 1;
   } m;
   rrlp_dec_GPSAssistance gpsAssistance;
   rrlp_dec_GANSSAssistanceSet gANSSAssistanceSet;
   rrlp_dec_GANSSAdditionalAssistanceChoices gANSSAdditionalAssistanceChoices;
   OSRTDList extElem1;
} rrlp_dec_AssistanceSupported;

EXTERN int asn1PD_rrlp_dec_AssistanceSupported (OSCTXT* pctxt, rrlp_dec_AssistanceSupported* pvalue);

EXTERN void asn1Free_rrlp_dec_AssistanceSupported (OSCTXT *pctxt, 
   rrlp_dec_AssistanceSupported* pvalue);

/**************************************************************/
/*                                                            */
/*  AssistanceNeeded                                          */
/*                                                            */
/**************************************************************/
/*
 indicates assistance data that may be needed by the MS
 These elements are coded as defined in TS 49.031 with the exceptions defined in section A.8.2.3

AssistanceNeeded ::= SEQUENCE {
   gpsAssistanceData [0] GPSAssistanceData OPTIONAL,
   ganssAssistanceData [1] GANSSAssistanceData OPTIONAL,
   ...
}
*/
typedef struct EXTERN rrlp_dec_AssistanceNeeded {
   struct {
      unsigned gpsAssistanceDataPresent : 1;
      unsigned ganssAssistanceDataPresent : 1;
   } m;
   rrlp_dec_GPSAssistanceData gpsAssistanceData;
   rrlp_dec_GANSSAssistanceData ganssAssistanceData;
   OSRTDList extElem1;
} rrlp_dec_AssistanceNeeded;

EXTERN int asn1PD_rrlp_dec_AssistanceNeeded (OSCTXT* pctxt, rrlp_dec_AssistanceNeeded* pvalue);

EXTERN void asn1Free_rrlp_dec_AssistanceNeeded (OSCTXT *pctxt, 
   rrlp_dec_AssistanceNeeded* pvalue);

/**************************************************************/
/*                                                            */
/*  PosCapability_Rsp                                         */
/*                                                            */
/**************************************************************/
/*
 Positioning Capability response component

PosCapability-Rsp ::= SEQUENCE {
   extended-reference [0] Extended-reference,
   posCapabilities [1] PosCapabilities,
   assistanceSupported [2] AssistanceSupported OPTIONAL,
   assistanceNeeded [3] AssistanceNeeded OPTIONAL,
   extensionContainer [4] ExtensionContainer OPTIONAL,
   ...
}
*/
typedef struct EXTERN rrlp_dec_PosCapability_Rsp {
   struct {
      unsigned assistanceSupportedPresent : 1;
      unsigned assistanceNeededPresent : 1;
      unsigned extensionContainerPresent : 1;
   } m;
   rrlp_dec_Extended_reference extended_reference;
   rrlp_dec_PosCapabilities posCapabilities;
   rrlp_dec_AssistanceSupported assistanceSupported;
   rrlp_dec_AssistanceNeeded assistanceNeeded;
   rrlp_dec_ExtensionContainer extensionContainer;
   OSRTDList extElem1;
} rrlp_dec_PosCapability_Rsp;

EXTERN int asn1PD_rrlp_dec_PosCapability_Rsp (OSCTXT* pctxt, rrlp_dec_PosCapability_Rsp* pvalue);

EXTERN void asn1Free_rrlp_dec_PosCapability_Rsp (OSCTXT *pctxt, 
   rrlp_dec_PosCapability_Rsp* pvalue);

/* Value definitions */

#define ASN1V_maxGPSAssistanceData 40
#define ASN1V_maxGANSSAssistanceData 40

/**
 * Header file for ASN.1 module RRLP-Messages
 */
/**************************************************************/
/*                                                            */
/*  RRLP_Component                                            */
/*                                                            */
/**************************************************************/
/*
RRLP-Component ::= CHOICE {
   msrPositionReq [0] MsrPosition-Req,
   msrPositionRsp [1] NULL,
   assistanceData [2] AssistanceData,
   assistanceDataAck [3] NULL,
   protocolError [4] ProtocolError,
   ...,
   posCapabilityReq [5] PosCapability-Req,
   posCapabilityRsp [6] NULL
}
*/
/* Choice tag constants */

#define T_rrlp_dec_RRLP_Component_msrPositionReq 1
#define T_rrlp_dec_RRLP_Component_msrPositionRsp 2
#define T_rrlp_dec_RRLP_Component_assistanceData 3
#define T_rrlp_dec_RRLP_Component_assistanceDataAck 4
#define T_rrlp_dec_RRLP_Component_protocolError 5
#define T_rrlp_dec_RRLP_Component_posCapabilityReq 6
#define T_rrlp_dec_RRLP_Component_posCapabilityRsp 7
#define T_rrlp_dec_RRLP_Component_extElem1 8

typedef struct EXTERN rrlp_dec_RRLP_Component {
   OSUINT32 t;
   union {
      /* t = 1 */
      rrlp_dec_MsrPosition_Req *msrPositionReq;
      /* t = 2 */
      /* t = 3 */
      rrlp_dec_AssistanceData *assistanceData;
      /* t = 4 */
      /* t = 5 */
      rrlp_dec_ProtocolError *protocolError;
      /* t = 6 */
      rrlp_dec_PosCapability_Req *posCapabilityReq;
      /* t = 7 */
      /* t = 8 */
      ASN1OpenType *extElem1;
   } u;
} rrlp_dec_RRLP_Component;

EXTERN int asn1PD_rrlp_dec_RRLP_Component (OSCTXT* pctxt, rrlp_dec_RRLP_Component* pvalue);

EXTERN void asn1Free_rrlp_dec_RRLP_Component (OSCTXT *pctxt, 
   rrlp_dec_RRLP_Component* pvalue);

/**************************************************************/
/*                                                            */
/*  PDU                                                       */
/*                                                            */
/**************************************************************/
/*
PDU ::= SEQUENCE {
   referenceNumber [0] INTEGER (0..7),
   component [1] RRLP-Component
}
*/
typedef struct EXTERN rrlp_dec_PDU {
   OSUINT8 referenceNumber;
   rrlp_dec_RRLP_Component component;
} rrlp_dec_PDU;

EXTERN int asn1PD_rrlp_dec_PDU (OSCTXT* pctxt, rrlp_dec_PDU* pvalue);

EXTERN void asn1Free_rrlp_dec_PDU (OSCTXT *pctxt, rrlp_dec_PDU* pvalue);

#ifdef __cplusplus
}
#endif

#endif
