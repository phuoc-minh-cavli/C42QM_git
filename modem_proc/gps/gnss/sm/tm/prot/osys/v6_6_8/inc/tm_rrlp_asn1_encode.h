/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 6.6.8, Date: 12-Jun-2017.
 */
#ifndef TM_RRLP_ASN1_ENCODE_H
#define TM_RRLP_ASN1_ENCODE_H

#ifdef __cplusplus
extern "C" {
#endif

#include <stdio.h>
#include <stdlib.h>
#include "rtpersrc/asn1per.h"

/**
 * Header file for ASN.1 module MAP-ExtensionDataTypes
 */
/**************************************************************/
/*                                                            */
/*  PrivateExtension                                          */
/*                                                            */
/**************************************************************/
/*
PrivateExtension ::= SEQUENCE {
   extId MAP-EXTENSION.&extensionId ({ExtensionSet}),
   extType MAP-EXTENSION.&ExtensionType ({ExtensionSet}{@extId}) OPTIONAL
}
*/
typedef struct EXTERN rrlp_enc_PrivateExtension {
   struct {
      unsigned extTypePresent : 1;
   } m;
   ASN1OBJID extId;
   ASN1OpenType extType;
} rrlp_enc_PrivateExtension;

EXTERN int asn1PE_rrlp_enc_PrivateExtension (OSCTXT* pctxt, rrlp_enc_PrivateExtension* pvalue);

EXTERN void asn1Free_rrlp_enc_PrivateExtension (OSCTXT *pctxt, 
   rrlp_enc_PrivateExtension* pvalue);

/**************************************************************/
/*                                                            */
/*  PrivateExtensionList                                      */
/*                                                            */
/**************************************************************/
/*
PrivateExtensionList ::= SEQUENCE (SIZE (1..maxNumOfPrivateExtensions)) OF PrivateExtension
*/
typedef struct EXTERN rrlp_enc_PrivateExtensionList {
   OSUINT32 n;
   rrlp_enc_PrivateExtension *elem;
} rrlp_enc_PrivateExtensionList;

EXTERN int asn1PE_rrlp_enc_PrivateExtensionList (OSCTXT* pctxt, rrlp_enc_PrivateExtensionList* pvalue);

EXTERN void asn1Free_rrlp_enc_PrivateExtensionList (OSCTXT *pctxt, 
   rrlp_enc_PrivateExtensionList* pvalue);

/**************************************************************/
/*                                                            */
/*  PCS_Extensions                                            */
/*                                                            */
/**************************************************************/
/*
 Unsupported private extensions shall be discarded if received.

PCS-Extensions ::= SEQUENCE {
   ...
}
*/
typedef struct EXTERN rrlp_enc_PCS_Extensions {
   OSOCTET __dummy__;
} rrlp_enc_PCS_Extensions;

EXTERN int asn1PE_rrlp_enc_PCS_Extensions (OSCTXT* pctxt, rrlp_enc_PCS_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  ExtensionContainer                                        */
/*                                                            */
/**************************************************************/
/*
 The length of the Object Identifier shall not exceed 16 octets and the
 number of components of the Object Identifier shall not exceed 16
 data types

ExtensionContainer ::= SEQUENCE {
   privateExtensionList [0] PrivateExtensionList OPTIONAL,
   pcs-Extensions [1] PCS-Extensions OPTIONAL,
   ...
}
*/
typedef struct EXTERN rrlp_enc_ExtensionContainer {
   struct {
      unsigned privateExtensionListPresent : 1;
      unsigned pcs_ExtensionsPresent : 1;
   } m;
   rrlp_enc_PrivateExtensionList privateExtensionList;
   rrlp_enc_PCS_Extensions pcs_Extensions;
} rrlp_enc_ExtensionContainer;

EXTERN int asn1PE_rrlp_enc_ExtensionContainer (OSCTXT* pctxt, rrlp_enc_ExtensionContainer* pvalue);

EXTERN void asn1Free_rrlp_enc_ExtensionContainer (OSCTXT *pctxt, 
   rrlp_enc_ExtensionContainer* pvalue);

/**************************************************************/
/*                                                            */
/*  SLR_Arg_PCS_Extensions                                    */
/*                                                            */
/**************************************************************/
/*
SLR-Arg-PCS-Extensions ::= SEQUENCE {
   ...na-ESRK-Request [0] NULL OPTIONAL
}
*/
typedef struct EXTERN rrlp_enc_SLR_Arg_PCS_Extensions {
   struct {
      unsigned na_ESRK_RequestPresent : 1;
   } m;
   OSOCTET __dummy__;
} rrlp_enc_SLR_Arg_PCS_Extensions;

EXTERN int asn1PE_rrlp_enc_SLR_Arg_PCS_Extensions (OSCTXT* pctxt, rrlp_enc_SLR_Arg_PCS_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  SLR_ArgExtensionContainer                                 */
/*                                                            */
/**************************************************************/
/*
SLR-ArgExtensionContainer ::= SEQUENCE {
   privateExtensionList [0] PrivateExtensionList OPTIONAL,
   slr-Arg-PCS-Extensions [1] SLR-Arg-PCS-Extensions OPTIONAL,
   ...
}
*/
typedef struct EXTERN rrlp_enc_SLR_ArgExtensionContainer {
   struct {
      unsigned privateExtensionListPresent : 1;
      unsigned slr_Arg_PCS_ExtensionsPresent : 1;
   } m;
   rrlp_enc_PrivateExtensionList privateExtensionList;
   rrlp_enc_SLR_Arg_PCS_Extensions slr_Arg_PCS_Extensions;
} rrlp_enc_SLR_ArgExtensionContainer;

EXTERN int asn1PE_rrlp_enc_SLR_ArgExtensionContainer (OSCTXT* pctxt, rrlp_enc_SLR_ArgExtensionContainer* pvalue);

EXTERN void asn1Free_rrlp_enc_SLR_ArgExtensionContainer (OSCTXT *pctxt, 
   rrlp_enc_SLR_ArgExtensionContainer* pvalue);

/* Value definitions */

#define ASN1V_maxNumOfPrivateExtensions 10

/**
 * Header file for ASN.1 module MAP-LCS-DataTypes
 */
/**************************************************************/
/*                                                            */
/*  Ext_GeographicalInformation                               */
/*                                                            */
/**************************************************************/
/*
Ext-GeographicalInformation ::= OCTET STRING (SIZE (1..maxExt-GeographicalInformation))
*/
typedef struct EXTERN rrlp_enc_Ext_GeographicalInformation {
   OSUINT32 numocts;
   OSOCTET data[20];
} rrlp_enc_Ext_GeographicalInformation;

EXTERN int asn1PE_rrlp_enc_Ext_GeographicalInformation (OSCTXT* pctxt, rrlp_enc_Ext_GeographicalInformation* pvalue);

/**************************************************************/
/*                                                            */
/*  VelocityEstimate                                          */
/*                                                            */
/**************************************************************/
/*
 the maximum length allows for further shapes in 3GPP TS 23.032 to be included in later 
 versions of 3GPP TS 29.002

VelocityEstimate ::= OCTET STRING (SIZE (4..7))
*/
typedef struct EXTERN rrlp_enc_VelocityEstimate {
   OSUINT32 numocts;
   OSOCTET data[7];
} rrlp_enc_VelocityEstimate;

EXTERN int asn1PE_rrlp_enc_VelocityEstimate (OSCTXT* pctxt, rrlp_enc_VelocityEstimate* pvalue);

/* Value definitions */

#define ASN1V_maxExt_GeographicalInformation 20

/**
 * Header file for ASN.1 module RRLP-Components
 */
/**************************************************************/
/*                                                            */
/*  ReferenceRelation                                         */
/*                                                            */
/**************************************************************/
/*
 Relation between refence BTSs and sets

ReferenceRelation ::= ENUMERATED { secondBTSThirdSet(0), secondBTSSecondSet(1), firstBTSFirstSet(2) }
*/
typedef enum {
   rrlp_enc_ReferenceRelation_secondBTSThirdSet = 0,
   rrlp_enc_ReferenceRelation_secondBTSSecondSet = 1,
   rrlp_enc_ReferenceRelation_firstBTSFirstSet = 2
} rrlp_enc_ReferenceRelation_Root;

typedef OSUINT32 rrlp_enc_ReferenceRelation;

EXTERN int asn1PE_rrlp_enc_ReferenceRelation (OSCTXT* pctxt, rrlp_enc_ReferenceRelation value);

/**************************************************************/
/*                                                            */
/*  MultipleSets                                              */
/*                                                            */
/**************************************************************/
/*
 Measure position response IEs
 Reference Identity
 Multiple sets

MultipleSets ::= SEQUENCE {
   nbrOfSets [0] INTEGER (2..3),
   nbrOfReferenceBTSs [1] INTEGER (1..3),
   referenceRelation [2] ReferenceRelation OPTIONAL
}
*/
typedef struct EXTERN rrlp_enc_MultipleSets {
   struct {
      unsigned referenceRelationPresent : 1;
   } m;
   OSUINT8 nbrOfSets;
   OSUINT8 nbrOfReferenceBTSs;
   rrlp_enc_ReferenceRelation referenceRelation;
} rrlp_enc_MultipleSets;

EXTERN int asn1PE_rrlp_enc_MultipleSets (OSCTXT* pctxt, rrlp_enc_MultipleSets* pvalue);

/**************************************************************/
/*                                                            */
/*  BCCHCarrier                                               */
/*                                                            */
/**************************************************************/
/*
 RF channel number of BCCH

BCCHCarrier ::= INTEGER (0..1023)
*/
typedef OSUINT16 rrlp_enc_BCCHCarrier;

EXTERN int asn1PE_rrlp_enc_BCCHCarrier (OSCTXT* pctxt, rrlp_enc_BCCHCarrier value);

/**************************************************************/
/*                                                            */
/*  BSIC                                                      */
/*                                                            */
/**************************************************************/
/*
 Base station Identity Code

BSIC ::= INTEGER (0..63)
*/
typedef OSUINT8 rrlp_enc_BSIC;

EXTERN int asn1PE_rrlp_enc_BSIC (OSCTXT* pctxt, rrlp_enc_BSIC value);

/**************************************************************/
/*                                                            */
/*  BSICAndCarrier                                            */
/*                                                            */
/**************************************************************/
/*
BSICAndCarrier ::= SEQUENCE {
   carrier [0] BCCHCarrier,
   bsic [1] BSIC
}
*/
typedef struct EXTERN rrlp_enc_BSICAndCarrier {
   rrlp_enc_BCCHCarrier carrier;
   rrlp_enc_BSIC bsic;
} rrlp_enc_BSICAndCarrier;

EXTERN int asn1PE_rrlp_enc_BSICAndCarrier (OSCTXT* pctxt, rrlp_enc_BSICAndCarrier* pvalue);

/**************************************************************/
/*                                                            */
/*  CellID                                                    */
/*                                                            */
/**************************************************************/
/*
CellID ::= INTEGER (0..65535)
*/
typedef OSUINT16 rrlp_enc_CellID;

EXTERN int asn1PE_rrlp_enc_CellID (OSCTXT* pctxt, rrlp_enc_CellID value);

/**************************************************************/
/*                                                            */
/*  RequestIndex                                              */
/*                                                            */
/**************************************************************/
/*
RequestIndex ::= INTEGER (1..16)
*/
typedef OSUINT8 rrlp_enc_RequestIndex;

EXTERN int asn1PE_rrlp_enc_RequestIndex (OSCTXT* pctxt, rrlp_enc_RequestIndex value);

/**************************************************************/
/*                                                            */
/*  SystemInfoIndex                                           */
/*                                                            */
/**************************************************************/
/*
SystemInfoIndex ::= INTEGER (1..32)
*/
typedef OSUINT8 rrlp_enc_SystemInfoIndex;

EXTERN int asn1PE_rrlp_enc_SystemInfoIndex (OSCTXT* pctxt, rrlp_enc_SystemInfoIndex value);

/**************************************************************/
/*                                                            */
/*  LAC                                                       */
/*                                                            */
/**************************************************************/
/*
LAC ::= INTEGER (0..65535)
*/
typedef OSUINT16 rrlp_enc_LAC;

EXTERN int asn1PE_rrlp_enc_LAC (OSCTXT* pctxt, rrlp_enc_LAC value);

/**************************************************************/
/*                                                            */
/*  CellIDAndLAC                                              */
/*                                                            */
/**************************************************************/
/*
CellIDAndLAC ::= SEQUENCE {
   referenceLAC [0] LAC,
   referenceCI [1] CellID
}
*/
typedef struct EXTERN rrlp_enc_CellIDAndLAC {
   rrlp_enc_LAC referenceLAC;
   rrlp_enc_CellID referenceCI;
} rrlp_enc_CellIDAndLAC;

EXTERN int asn1PE_rrlp_enc_CellIDAndLAC (OSCTXT* pctxt, rrlp_enc_CellIDAndLAC* pvalue);

/**************************************************************/
/*                                                            */
/*  ReferenceIdentityType                                     */
/*                                                            */
/**************************************************************/
/*
 Cell identity

ReferenceIdentityType ::= CHOICE {
   bsicAndCarrier [0] BSICAndCarrier,
   ci [1] CellID,
   requestIndex [2] RequestIndex,
   systemInfoIndex [3] SystemInfoIndex,
   ciAndLAC [4] CellIDAndLAC
}
*/
/* Choice tag constants */

#define T_rrlp_enc_ReferenceIdentityType_bsicAndCarrier 1
#define T_rrlp_enc_ReferenceIdentityType_ci 2
#define T_rrlp_enc_ReferenceIdentityType_requestIndex 3
#define T_rrlp_enc_ReferenceIdentityType_systemInfoIndex 4
#define T_rrlp_enc_ReferenceIdentityType_ciAndLAC 5

typedef struct EXTERN rrlp_enc_ReferenceIdentityType {
   OSUINT32 t;
   union {
      /* t = 1 */
      rrlp_enc_BSICAndCarrier *bsicAndCarrier;
      /* t = 2 */
      rrlp_enc_CellID ci;
      /* t = 3 */
      rrlp_enc_RequestIndex requestIndex;
      /* t = 4 */
      rrlp_enc_SystemInfoIndex systemInfoIndex;
      /* t = 5 */
      rrlp_enc_CellIDAndLAC *ciAndLAC;
   } u;
} rrlp_enc_ReferenceIdentityType;

EXTERN int asn1PE_rrlp_enc_ReferenceIdentityType (OSCTXT* pctxt, rrlp_enc_ReferenceIdentityType* pvalue);

EXTERN void asn1Free_rrlp_enc_ReferenceIdentityType (OSCTXT *pctxt, 
   rrlp_enc_ReferenceIdentityType* pvalue);

/**************************************************************/
/*                                                            */
/*  SeqOfReferenceIdentityType                                */
/*                                                            */
/**************************************************************/
/*
SeqOfReferenceIdentityType ::= SEQUENCE (SIZE (1..3)) OF ReferenceIdentityType
*/
typedef struct EXTERN rrlp_enc_SeqOfReferenceIdentityType {
   OSUINT32 n;
   rrlp_enc_ReferenceIdentityType *elem;
} rrlp_enc_SeqOfReferenceIdentityType;

EXTERN int asn1PE_rrlp_enc_SeqOfReferenceIdentityType (OSCTXT* pctxt, rrlp_enc_SeqOfReferenceIdentityType* pvalue);

EXTERN void asn1Free_rrlp_enc_SeqOfReferenceIdentityType (OSCTXT *pctxt, 
   rrlp_enc_SeqOfReferenceIdentityType* pvalue);

/**************************************************************/
/*                                                            */
/*  ReferenceIdentity                                         */
/*                                                            */
/**************************************************************/
/*
 Reference BTS Identity, this element contains number of
 BTSs told nbrOfReferenceBTSs field in Multiple sets element)

ReferenceIdentity ::= SEQUENCE {
   refBTSList [0] SeqOfReferenceIdentityType
}
*/
typedef struct EXTERN rrlp_enc_ReferenceIdentity {
   rrlp_enc_SeqOfReferenceIdentityType refBTSList;
} rrlp_enc_ReferenceIdentity;

EXTERN int asn1PE_rrlp_enc_ReferenceIdentity (OSCTXT* pctxt, rrlp_enc_ReferenceIdentity* pvalue);

EXTERN void asn1Free_rrlp_enc_ReferenceIdentity (OSCTXT *pctxt, 
   rrlp_enc_ReferenceIdentity* pvalue);

/**************************************************************/
/*                                                            */
/*  ModuloTimeSlot                                            */
/*                                                            */
/**************************************************************/
/*
 Time slot (modulo)

ModuloTimeSlot ::= INTEGER (0..3)
*/
typedef OSUINT8 rrlp_enc_ModuloTimeSlot;

EXTERN int asn1PE_rrlp_enc_ModuloTimeSlot (OSCTXT* pctxt, rrlp_enc_ModuloTimeSlot value);

/**************************************************************/
/*                                                            */
/*  RefQuality                                                */
/*                                                            */
/**************************************************************/
/*
RefQuality ::= INTEGER (0..31)
*/
typedef OSUINT8 rrlp_enc_RefQuality;

EXTERN int asn1PE_rrlp_enc_RefQuality (OSCTXT* pctxt, rrlp_enc_RefQuality value);

/**************************************************************/
/*                                                            */
/*  NumOfMeasurements                                         */
/*                                                            */
/**************************************************************/
/*
 St Dev of TOA of reference as defined in annex

NumOfMeasurements ::= INTEGER (0..7)
*/
typedef OSUINT8 rrlp_enc_NumOfMeasurements;

EXTERN int asn1PE_rrlp_enc_NumOfMeasurements (OSCTXT* pctxt, rrlp_enc_NumOfMeasurements value);

/**************************************************************/
/*                                                            */
/*  TOA_MeasurementsOfRef                                     */
/*                                                            */
/**************************************************************/
/*
 Standard deviation of the TOA measurements from the reference BTS

TOA-MeasurementsOfRef ::= SEQUENCE {
   refQuality [0] RefQuality,
   numOfMeasurements [1] NumOfMeasurements
}
*/
typedef struct EXTERN rrlp_enc_TOA_MeasurementsOfRef {
   rrlp_enc_RefQuality refQuality;
   rrlp_enc_NumOfMeasurements numOfMeasurements;
} rrlp_enc_TOA_MeasurementsOfRef;

EXTERN int asn1PE_rrlp_enc_TOA_MeasurementsOfRef (OSCTXT* pctxt, rrlp_enc_TOA_MeasurementsOfRef* pvalue);

/**************************************************************/
/*                                                            */
/*  StdResolution                                             */
/*                                                            */
/**************************************************************/
/*
 No. of measurements for RefQuality as defined in annex

StdResolution ::= INTEGER (0..3)
*/
typedef OSUINT8 rrlp_enc_StdResolution;

EXTERN int asn1PE_rrlp_enc_StdResolution (OSCTXT* pctxt, rrlp_enc_StdResolution value);

/**************************************************************/
/*                                                            */
/*  MultiFrameOffset                                          */
/*                                                            */
/**************************************************************/
/*
 Multiframe offset

MultiFrameOffset ::= INTEGER (0..51)
*/
typedef OSUINT8 rrlp_enc_MultiFrameOffset;

EXTERN int asn1PE_rrlp_enc_MultiFrameOffset (OSCTXT* pctxt, rrlp_enc_MultiFrameOffset value);

/**************************************************************/
/*                                                            */
/*  MultiFrameCarrier                                         */
/*                                                            */
/**************************************************************/
/*
 Multiframe and carrier

MultiFrameCarrier ::= SEQUENCE {
   bcchCarrier [0] BCCHCarrier,
   multiFrameOffset [1] MultiFrameOffset
}
*/
typedef struct EXTERN rrlp_enc_MultiFrameCarrier {
   rrlp_enc_BCCHCarrier bcchCarrier;
   rrlp_enc_MultiFrameOffset multiFrameOffset;
} rrlp_enc_MultiFrameCarrier;

EXTERN int asn1PE_rrlp_enc_MultiFrameCarrier (OSCTXT* pctxt, rrlp_enc_MultiFrameCarrier* pvalue);

/**************************************************************/
/*                                                            */
/*  NeighborIdentity                                          */
/*                                                            */
/**************************************************************/
/*
NeighborIdentity ::= CHOICE {
   bsicAndCarrier [0] BSICAndCarrier,
   ci [1] CellID,
   multiFrameCarrier [2] MultiFrameCarrier,
   requestIndex [3] RequestIndex,
   systemInfoIndex [4] SystemInfoIndex,
   ciAndLAC [5] CellIDAndLAC
}
*/
/* Choice tag constants */

#define T_rrlp_enc_NeighborIdentity_bsicAndCarrier 1
#define T_rrlp_enc_NeighborIdentity_ci  2
#define T_rrlp_enc_NeighborIdentity_multiFrameCarrier 3
#define T_rrlp_enc_NeighborIdentity_requestIndex 4
#define T_rrlp_enc_NeighborIdentity_systemInfoIndex 5
#define T_rrlp_enc_NeighborIdentity_ciAndLAC 6

typedef struct EXTERN rrlp_enc_NeighborIdentity {
   OSUINT32 t;
   union {
      /* t = 1 */
      rrlp_enc_BSICAndCarrier *bsicAndCarrier;
      /* t = 2 */
      rrlp_enc_CellID ci;
      /* t = 3 */
      rrlp_enc_MultiFrameCarrier *multiFrameCarrier;
      /* t = 4 */
      rrlp_enc_RequestIndex requestIndex;
      /* t = 5 */
      rrlp_enc_SystemInfoIndex systemInfoIndex;
      /* t = 6 */
      rrlp_enc_CellIDAndLAC *ciAndLAC;
   } u;
} rrlp_enc_NeighborIdentity;

EXTERN int asn1PE_rrlp_enc_NeighborIdentity (OSCTXT* pctxt, rrlp_enc_NeighborIdentity* pvalue);

EXTERN void asn1Free_rrlp_enc_NeighborIdentity (OSCTXT *pctxt, 
   rrlp_enc_NeighborIdentity* pvalue);

/**************************************************************/
/*                                                            */
/*  EOTDQuality                                               */
/*                                                            */
/**************************************************************/
/*
EOTDQuality ::= SEQUENCE {
   nbrOfMeasurements [0] INTEGER (0..7),
   stdOfEOTD [1] INTEGER (0..31)
}
*/
typedef struct EXTERN rrlp_enc_EOTDQuality {
   OSUINT8 nbrOfMeasurements;
   OSUINT8 stdOfEOTD;
} rrlp_enc_EOTDQuality;

EXTERN int asn1PE_rrlp_enc_EOTDQuality (OSCTXT* pctxt, rrlp_enc_EOTDQuality* pvalue);

/**************************************************************/
/*                                                            */
/*  OTDValue                                                  */
/*                                                            */
/**************************************************************/
/*
 OTD measurement value for neighbour

OTDValue ::= INTEGER (0..39999)
*/
typedef OSUINT16 rrlp_enc_OTDValue;

EXTERN int asn1PE_rrlp_enc_OTDValue (OSCTXT* pctxt, rrlp_enc_OTDValue value);

/**************************************************************/
/*                                                            */
/*  OTD_MeasurementWithID                                     */
/*                                                            */
/**************************************************************/
/*
 This measurement contains the BTS identity and measurement

OTD-MeasurementWithID ::= SEQUENCE {
   neighborIdentity [0] NeighborIdentity,
   nborTimeSlot [1] ModuloTimeSlot,
   eotdQuality [2] EOTDQuality,
   otdValue [3] OTDValue
}
*/
typedef struct EXTERN rrlp_enc_OTD_MeasurementWithID {
   rrlp_enc_NeighborIdentity neighborIdentity;
   rrlp_enc_ModuloTimeSlot nborTimeSlot;
   rrlp_enc_EOTDQuality eotdQuality;
   rrlp_enc_OTDValue otdValue;
} rrlp_enc_OTD_MeasurementWithID;

EXTERN int asn1PE_rrlp_enc_OTD_MeasurementWithID (OSCTXT* pctxt, rrlp_enc_OTD_MeasurementWithID* pvalue);

EXTERN void asn1Free_rrlp_enc_OTD_MeasurementWithID (OSCTXT *pctxt, 
   rrlp_enc_OTD_MeasurementWithID* pvalue);

/**************************************************************/
/*                                                            */
/*  OTD_FirstSetMsrs                                          */
/*                                                            */
/**************************************************************/
/*
 Values of resolution are defined in annex

OTD-FirstSetMsrs ::= OTD-MeasurementWithID
*/
typedef rrlp_enc_OTD_MeasurementWithID rrlp_enc_OTD_FirstSetMsrs;

EXTERN int asn1PE_rrlp_enc_OTD_FirstSetMsrs (OSCTXT* pctxt, rrlp_enc_OTD_FirstSetMsrs* pvalue);

EXTERN void asn1Free_rrlp_enc_OTD_FirstSetMsrs (OSCTXT *pctxt, 
   rrlp_enc_OTD_FirstSetMsrs* pvalue);

/**************************************************************/
/*                                                            */
/*  SeqOfOTD_FirstSetMsrs                                     */
/*                                                            */
/**************************************************************/
/*
SeqOfOTD-FirstSetMsrs ::= SEQUENCE (SIZE (1..10)) OF OTD-FirstSetMsrs
*/
typedef struct EXTERN rrlp_enc_SeqOfOTD_FirstSetMsrs {
   OSUINT32 n;
   rrlp_enc_OTD_FirstSetMsrs *elem;
} rrlp_enc_SeqOfOTD_FirstSetMsrs;

EXTERN int asn1PE_rrlp_enc_SeqOfOTD_FirstSetMsrs (OSCTXT* pctxt, rrlp_enc_SeqOfOTD_FirstSetMsrs* pvalue);

EXTERN void asn1Free_rrlp_enc_SeqOfOTD_FirstSetMsrs (OSCTXT *pctxt, 
   rrlp_enc_SeqOfOTD_FirstSetMsrs* pvalue);

/**************************************************************/
/*                                                            */
/*  OTD_MsrElementFirst                                       */
/*                                                            */
/**************************************************************/
/*
 OTD measurent information for 1 set

OTD-MsrElementFirst ::= SEQUENCE {
   refFrameNumber [0] INTEGER (0..42431),
   referenceTimeSlot [1] ModuloTimeSlot,
   toaMeasurementsOfRef [2] TOA-MeasurementsOfRef OPTIONAL,
   stdResolution [3] StdResolution,
   taCorrection [4] INTEGER (0..960) OPTIONAL,
   otd-FirstSetMsrs [5] SeqOfOTD-FirstSetMsrs OPTIONAL
}
*/
typedef struct EXTERN rrlp_enc_OTD_MsrElementFirst {
   struct {
      unsigned toaMeasurementsOfRefPresent : 1;
      unsigned taCorrectionPresent : 1;
      unsigned otd_FirstSetMsrsPresent : 1;
   } m;
   OSUINT16 refFrameNumber;
   rrlp_enc_ModuloTimeSlot referenceTimeSlot;
   rrlp_enc_TOA_MeasurementsOfRef toaMeasurementsOfRef;
   rrlp_enc_StdResolution stdResolution;
   OSUINT16 taCorrection;
   rrlp_enc_SeqOfOTD_FirstSetMsrs otd_FirstSetMsrs;
} rrlp_enc_OTD_MsrElementFirst;

EXTERN int asn1PE_rrlp_enc_OTD_MsrElementFirst (OSCTXT* pctxt, rrlp_enc_OTD_MsrElementFirst* pvalue);

EXTERN void asn1Free_rrlp_enc_OTD_MsrElementFirst (OSCTXT *pctxt, 
   rrlp_enc_OTD_MsrElementFirst* pvalue);

/**************************************************************/
/*                                                            */
/*  OTD_Measurement                                           */
/*                                                            */
/**************************************************************/
/*
 For this OTD measurement identity is same as the identity of BTS
 in the first set with same sequence number

OTD-Measurement ::= SEQUENCE {
   nborTimeSlot [0] ModuloTimeSlot,
   eotdQuality [1] EOTDQuality,
   otdValue [2] OTDValue
}
*/
typedef struct EXTERN rrlp_enc_OTD_Measurement {
   rrlp_enc_ModuloTimeSlot nborTimeSlot;
   rrlp_enc_EOTDQuality eotdQuality;
   rrlp_enc_OTDValue otdValue;
} rrlp_enc_OTD_Measurement;

EXTERN int asn1PE_rrlp_enc_OTD_Measurement (OSCTXT* pctxt, rrlp_enc_OTD_Measurement* pvalue);

/**************************************************************/
/*                                                            */
/*  OTD_MsrsOfOtherSets                                       */
/*                                                            */
/**************************************************************/
/*
 Neighbour info in OTD measurements 0-10 times in TD measurement info

OTD-MsrsOfOtherSets ::= CHOICE {
   identityNotPresent [0] OTD-Measurement,
   identityPresent [1] OTD-MeasurementWithID
}
*/
/* Choice tag constants */

#define T_rrlp_enc_OTD_MsrsOfOtherSets_identityNotPresent 1
#define T_rrlp_enc_OTD_MsrsOfOtherSets_identityPresent 2

typedef struct EXTERN rrlp_enc_OTD_MsrsOfOtherSets {
   OSUINT32 t;
   union {
      /* t = 1 */
      rrlp_enc_OTD_Measurement *identityNotPresent;
      /* t = 2 */
      rrlp_enc_OTD_MeasurementWithID *identityPresent;
   } u;
} rrlp_enc_OTD_MsrsOfOtherSets;

EXTERN int asn1PE_rrlp_enc_OTD_MsrsOfOtherSets (OSCTXT* pctxt, rrlp_enc_OTD_MsrsOfOtherSets* pvalue);

EXTERN void asn1Free_rrlp_enc_OTD_MsrsOfOtherSets (OSCTXT *pctxt, 
   rrlp_enc_OTD_MsrsOfOtherSets* pvalue);

/**************************************************************/
/*                                                            */
/*  SeqOfOTD_MsrsOfOtherSets                                  */
/*                                                            */
/**************************************************************/
/*
SeqOfOTD-MsrsOfOtherSets ::= SEQUENCE (SIZE (1..10)) OF OTD-MsrsOfOtherSets
*/
typedef struct EXTERN rrlp_enc_SeqOfOTD_MsrsOfOtherSets {
   OSUINT32 n;
   rrlp_enc_OTD_MsrsOfOtherSets *elem;
} rrlp_enc_SeqOfOTD_MsrsOfOtherSets;

EXTERN int asn1PE_rrlp_enc_SeqOfOTD_MsrsOfOtherSets (OSCTXT* pctxt, rrlp_enc_SeqOfOTD_MsrsOfOtherSets* pvalue);

EXTERN void asn1Free_rrlp_enc_SeqOfOTD_MsrsOfOtherSets (OSCTXT *pctxt, 
   rrlp_enc_SeqOfOTD_MsrsOfOtherSets* pvalue);

/**************************************************************/
/*                                                            */
/*  OTD_MsrElementRest                                        */
/*                                                            */
/**************************************************************/
/*
 OTD measurent information 2 and 3 sets if exist

OTD-MsrElementRest ::= SEQUENCE {
   refFrameNumber [0] INTEGER (0..42431),
   referenceTimeSlot [1] ModuloTimeSlot,
   toaMeasurementsOfRef [2] TOA-MeasurementsOfRef OPTIONAL,
   stdResolution [3] StdResolution,
   taCorrection [4] INTEGER (0..960) OPTIONAL,
   otd-MsrsOfOtherSets [5] SeqOfOTD-MsrsOfOtherSets OPTIONAL
}
*/
typedef struct EXTERN rrlp_enc_OTD_MsrElementRest {
   struct {
      unsigned toaMeasurementsOfRefPresent : 1;
      unsigned taCorrectionPresent : 1;
      unsigned otd_MsrsOfOtherSetsPresent : 1;
   } m;
   OSUINT16 refFrameNumber;
   rrlp_enc_ModuloTimeSlot referenceTimeSlot;
   rrlp_enc_TOA_MeasurementsOfRef toaMeasurementsOfRef;
   rrlp_enc_StdResolution stdResolution;
   OSUINT16 taCorrection;
   rrlp_enc_SeqOfOTD_MsrsOfOtherSets otd_MsrsOfOtherSets;
} rrlp_enc_OTD_MsrElementRest;

EXTERN int asn1PE_rrlp_enc_OTD_MsrElementRest (OSCTXT* pctxt, rrlp_enc_OTD_MsrElementRest* pvalue);

EXTERN void asn1Free_rrlp_enc_OTD_MsrElementRest (OSCTXT *pctxt, 
   rrlp_enc_OTD_MsrElementRest* pvalue);

/**************************************************************/
/*                                                            */
/*  SeqOfOTD_MsrElementRest                                   */
/*                                                            */
/**************************************************************/
/*
SeqOfOTD-MsrElementRest ::= SEQUENCE (SIZE (1..2)) OF OTD-MsrElementRest
*/
typedef struct EXTERN rrlp_enc_SeqOfOTD_MsrElementRest {
   OSUINT32 n;
   rrlp_enc_OTD_MsrElementRest *elem;
} rrlp_enc_SeqOfOTD_MsrElementRest;

EXTERN int asn1PE_rrlp_enc_SeqOfOTD_MsrElementRest (OSCTXT* pctxt, rrlp_enc_SeqOfOTD_MsrElementRest* pvalue);

EXTERN void asn1Free_rrlp_enc_SeqOfOTD_MsrElementRest (OSCTXT *pctxt, 
   rrlp_enc_SeqOfOTD_MsrElementRest* pvalue);

/**************************************************************/
/*                                                            */
/*  OTD_MeasureInfo                                           */
/*                                                            */
/**************************************************************/
/*
 OTD-MeasureInfo

OTD-MeasureInfo ::= SEQUENCE {
   otdMsrFirstSets [0] OTD-MsrElementFirst,
   otdMsrRestSets [1] SeqOfOTD-MsrElementRest OPTIONAL
}
*/
typedef struct EXTERN rrlp_enc_OTD_MeasureInfo {
   struct {
      unsigned otdMsrRestSetsPresent : 1;
   } m;
   rrlp_enc_OTD_MsrElementFirst otdMsrFirstSets;
   rrlp_enc_SeqOfOTD_MsrElementRest otdMsrRestSets;
} rrlp_enc_OTD_MeasureInfo;

EXTERN int asn1PE_rrlp_enc_OTD_MeasureInfo (OSCTXT* pctxt, rrlp_enc_OTD_MeasureInfo* pvalue);

EXTERN void asn1Free_rrlp_enc_OTD_MeasureInfo (OSCTXT *pctxt, 
   rrlp_enc_OTD_MeasureInfo* pvalue);

/**************************************************************/
/*                                                            */
/*  FixType                                                   */
/*                                                            */
/**************************************************************/
/*
FixType ::= INTEGER { twoDFix(0), threeDFix(1) } (0..1)
*/
typedef enum {
   rrlp_enc_FixType_twoDFix = 0,
   rrlp_enc_FixType_threeDFix = 1
} rrlp_enc_FixType_Root;

typedef OSUINT8 rrlp_enc_FixType;

EXTERN int asn1PE_rrlp_enc_FixType (OSCTXT* pctxt, rrlp_enc_FixType value);

/**************************************************************/
/*                                                            */
/*  LocationInfo                                              */
/*                                                            */
/**************************************************************/
/*
 Location information IE

LocationInfo ::= SEQUENCE {
   refFrame [0] INTEGER (0..65535),
   gpsTOW [1] INTEGER (0..14399999) OPTIONAL,
   fixType [2] FixType,
   posEstimate [3] Ext-GeographicalInformation
}
*/
typedef struct EXTERN rrlp_enc_LocationInfo {
   struct {
      unsigned gpsTOWPresent : 1;
   } m;
   OSUINT16 refFrame;
   OSUINT32 gpsTOW;
   rrlp_enc_FixType fixType;
   rrlp_enc_Ext_GeographicalInformation posEstimate;
} rrlp_enc_LocationInfo;

EXTERN int asn1PE_rrlp_enc_LocationInfo (OSCTXT* pctxt, rrlp_enc_LocationInfo* pvalue);

/**************************************************************/
/*                                                            */
/*  GPSTOW24b                                                 */
/*                                                            */
/**************************************************************/
/*
 24 bit presentation for GPSTOW

GPSTOW24b ::= INTEGER (0..14399999)
*/
typedef OSUINT32 rrlp_enc_GPSTOW24b;

EXTERN int asn1PE_rrlp_enc_GPSTOW24b (OSCTXT* pctxt, rrlp_enc_GPSTOW24b value);

/**************************************************************/
/*                                                            */
/*  SatelliteID                                               */
/*                                                            */
/**************************************************************/
/*
SatelliteID ::= INTEGER (0..63)
*/
typedef OSUINT8 rrlp_enc_SatelliteID;

EXTERN int asn1PE_rrlp_enc_SatelliteID (OSCTXT* pctxt, rrlp_enc_SatelliteID value);

/**************************************************************/
/*                                                            */
/*  MpathIndic                                                */
/*                                                            */
/**************************************************************/
/*
 Multipath indicator

MpathIndic ::= ENUMERATED { notMeasured(0), low(1), medium(2), high(3) }
*/
typedef enum {
   rrlp_enc_MpathIndic_notMeasured = 0,
   rrlp_enc_MpathIndic_low = 1,
   rrlp_enc_MpathIndic_medium = 2,
   rrlp_enc_MpathIndic_high = 3
} rrlp_enc_MpathIndic_Root;

typedef OSUINT32 rrlp_enc_MpathIndic;

EXTERN int asn1PE_rrlp_enc_MpathIndic (OSCTXT* pctxt, rrlp_enc_MpathIndic value);

/**************************************************************/
/*                                                            */
/*  GPS_MsrElement                                            */
/*                                                            */
/**************************************************************/
/*
GPS-MsrElement ::= SEQUENCE {
   satelliteID [0] SatelliteID,
   cNo [1] INTEGER (0..63),
   doppler [2] INTEGER (-32768..32767),
   wholeChips [3] INTEGER (0..1022),
   fracChips [4] INTEGER (0..1024),
   mpathIndic [5] MpathIndic,
   pseuRangeRMSErr [6] INTEGER (0..63)
}
*/
typedef struct EXTERN rrlp_enc_GPS_MsrElement {
   rrlp_enc_SatelliteID satelliteID;
   OSUINT8 cNo;
   OSINT16 doppler;
   OSUINT16 wholeChips;
   OSUINT16 fracChips;
   rrlp_enc_MpathIndic mpathIndic;
   OSUINT8 pseuRangeRMSErr;
} rrlp_enc_GPS_MsrElement;

EXTERN int asn1PE_rrlp_enc_GPS_MsrElement (OSCTXT* pctxt, rrlp_enc_GPS_MsrElement* pvalue);

/**************************************************************/
/*                                                            */
/*  SeqOfGPS_MsrElement                                       */
/*                                                            */
/**************************************************************/
/*
 measured elements in measurement parameters field

SeqOfGPS-MsrElement ::= SEQUENCE (SIZE (1..16)) OF GPS-MsrElement
*/
typedef struct EXTERN rrlp_enc_SeqOfGPS_MsrElement {
   OSUINT32 n;
   rrlp_enc_GPS_MsrElement *elem;
} rrlp_enc_SeqOfGPS_MsrElement;

EXTERN int asn1PE_rrlp_enc_SeqOfGPS_MsrElement (OSCTXT* pctxt, rrlp_enc_SeqOfGPS_MsrElement* pvalue);

EXTERN void asn1Free_rrlp_enc_SeqOfGPS_MsrElement (OSCTXT *pctxt, 
   rrlp_enc_SeqOfGPS_MsrElement* pvalue);

/**************************************************************/
/*                                                            */
/*  GPS_MsrSetElement                                         */
/*                                                            */
/**************************************************************/
/*
 OTD measurent information 1-3 times in message

GPS-MsrSetElement ::= SEQUENCE {
   refFrame [0] INTEGER (0..65535) OPTIONAL,
   gpsTOW [1] GPSTOW24b,
   gps-msrList [2] SeqOfGPS-MsrElement
}
*/
typedef struct EXTERN rrlp_enc_GPS_MsrSetElement {
   struct {
      unsigned refFramePresent : 1;
   } m;
   OSUINT16 refFrame;
   rrlp_enc_GPSTOW24b gpsTOW;
   rrlp_enc_SeqOfGPS_MsrElement gps_msrList;
} rrlp_enc_GPS_MsrSetElement;

EXTERN int asn1PE_rrlp_enc_GPS_MsrSetElement (OSCTXT* pctxt, rrlp_enc_GPS_MsrSetElement* pvalue);

EXTERN void asn1Free_rrlp_enc_GPS_MsrSetElement (OSCTXT *pctxt, 
   rrlp_enc_GPS_MsrSetElement* pvalue);

/**************************************************************/
/*                                                            */
/*  SeqOfGPS_MsrSetElement                                    */
/*                                                            */
/**************************************************************/
/*
SeqOfGPS-MsrSetElement ::= SEQUENCE (SIZE (1..3)) OF GPS-MsrSetElement
*/
typedef struct EXTERN rrlp_enc_SeqOfGPS_MsrSetElement {
   OSUINT32 n;
   rrlp_enc_GPS_MsrSetElement *elem;
} rrlp_enc_SeqOfGPS_MsrSetElement;

EXTERN int asn1PE_rrlp_enc_SeqOfGPS_MsrSetElement (OSCTXT* pctxt, rrlp_enc_SeqOfGPS_MsrSetElement* pvalue);

EXTERN void asn1Free_rrlp_enc_SeqOfGPS_MsrSetElement (OSCTXT *pctxt, 
   rrlp_enc_SeqOfGPS_MsrSetElement* pvalue);

/**************************************************************/
/*                                                            */
/*  GPS_MeasureInfo                                           */
/*                                                            */
/**************************************************************/
/*
 GPS-Measurement information

GPS-MeasureInfo ::= SEQUENCE {
   gpsMsrSetList [0] SeqOfGPS-MsrSetElement
}
*/
typedef struct EXTERN rrlp_enc_GPS_MeasureInfo {
   rrlp_enc_SeqOfGPS_MsrSetElement gpsMsrSetList;
} rrlp_enc_GPS_MeasureInfo;

EXTERN int asn1PE_rrlp_enc_GPS_MeasureInfo (OSCTXT* pctxt, rrlp_enc_GPS_MeasureInfo* pvalue);

EXTERN void asn1Free_rrlp_enc_GPS_MeasureInfo (OSCTXT *pctxt, 
   rrlp_enc_GPS_MeasureInfo* pvalue);

/**************************************************************/
/*                                                            */
/*  LocErrorReason                                            */
/*                                                            */
/**************************************************************/
/*
LocErrorReason ::= ENUMERATED { unDefined(0), notEnoughBTSs(1), notEnoughSats(2), eotdLocCalAssDataMissing(3), eotdAssDataMissing(4), gpsLocCalAssDataMissing(5), gpsAssDataMissing(6), methodNotSupported(7), notProcessed(8), refBTSForGPSNotServingBTS(9), refBTSForEOTDNotServingBTS(10), ..., notEnoughGANSSSats(11), ganssAssDataMissing(12), refBTSForGANSSNotServingBTS(13) }
*/
typedef enum {
   rrlp_enc_LocErrorReason_unDefined = 0,
   rrlp_enc_LocErrorReason_notEnoughBTSs = 1,
   rrlp_enc_LocErrorReason_notEnoughSats = 2,
   rrlp_enc_LocErrorReason_eotdLocCalAssDataMissing = 3,
   rrlp_enc_LocErrorReason_eotdAssDataMissing = 4,
   rrlp_enc_LocErrorReason_gpsLocCalAssDataMissing = 5,
   rrlp_enc_LocErrorReason_gpsAssDataMissing = 6,
   rrlp_enc_LocErrorReason_methodNotSupported = 7,
   rrlp_enc_LocErrorReason_notProcessed = 8,
   rrlp_enc_LocErrorReason_refBTSForGPSNotServingBTS = 9,
   rrlp_enc_LocErrorReason_refBTSForEOTDNotServingBTS = 10
} rrlp_enc_LocErrorReason_Root;

typedef enum {
   rrlp_enc_LocErrorReason_notEnoughGANSSSats = 11,
   rrlp_enc_LocErrorReason_ganssAssDataMissing = 12,
   rrlp_enc_LocErrorReason_refBTSForGANSSNotServingBTS = 13
} rrlp_enc_LocErrorReason_Ext;

typedef OSUINT32 rrlp_enc_LocErrorReason;

EXTERN int asn1PE_rrlp_enc_LocErrorReason (OSCTXT* pctxt, rrlp_enc_LocErrorReason value);

/**************************************************************/
/*                                                            */
/*  GPSAssistanceData                                         */
/*                                                            */
/**************************************************************/
/*
GPSAssistanceData ::= OCTET STRING (SIZE (1..maxGPSAssistanceData))
*/
typedef struct EXTERN rrlp_enc_GPSAssistanceData {
   OSUINT32 numocts;
   OSOCTET data[40];
} rrlp_enc_GPSAssistanceData;

EXTERN int asn1PE_rrlp_enc_GPSAssistanceData (OSCTXT* pctxt, rrlp_enc_GPSAssistanceData* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSAssistanceData                                       */
/*                                                            */
/**************************************************************/
/*
GANSSAssistanceData ::= OCTET STRING (SIZE (1..maxGANSSAssistanceData))
*/
typedef struct EXTERN rrlp_enc_GANSSAssistanceData {
   OSUINT32 numocts;
   OSOCTET data[40];
} rrlp_enc_GANSSAssistanceData;

EXTERN int asn1PE_rrlp_enc_GANSSAssistanceData (OSCTXT* pctxt, rrlp_enc_GANSSAssistanceData* pvalue);

/**************************************************************/
/*                                                            */
/*  AdditionalAssistanceData                                  */
/*                                                            */
/**************************************************************/
/*
 exception handling:
 an unrecognized value shall be treated the same as value 0
 defines additional assistance data needed for any new location attempt
 MS shall retain any assistance data already received

AdditionalAssistanceData ::= SEQUENCE {
   gpsAssistanceData [0] GPSAssistanceData OPTIONAL,
   extensionContainer [1] ExtensionContainer OPTIONAL,
   ...,
   ganssAssistanceData [2] GANSSAssistanceData OPTIONAL
}
*/
typedef struct EXTERN rrlp_enc_AdditionalAssistanceData {
   struct {
      unsigned gpsAssistanceDataPresent : 1;
      unsigned extensionContainerPresent : 1;
      unsigned ganssAssistanceDataPresent : 1;
   } m;
   rrlp_enc_GPSAssistanceData gpsAssistanceData;
   rrlp_enc_ExtensionContainer extensionContainer;
   rrlp_enc_GANSSAssistanceData ganssAssistanceData;
} rrlp_enc_AdditionalAssistanceData;

EXTERN int asn1PE_rrlp_enc_AdditionalAssistanceData (OSCTXT* pctxt, rrlp_enc_AdditionalAssistanceData* pvalue);

EXTERN void asn1Free_rrlp_enc_AdditionalAssistanceData (OSCTXT *pctxt, 
   rrlp_enc_AdditionalAssistanceData* pvalue);

/**************************************************************/
/*                                                            */
/*  LocationError                                             */
/*                                                            */
/**************************************************************/
/*
 Location error IE

LocationError ::= SEQUENCE {
   locErrorReason [0] LocErrorReason,
   additionalAssistanceData [1] AdditionalAssistanceData OPTIONAL,
   ...
}
*/
typedef struct EXTERN rrlp_enc_LocationError {
   struct {
      unsigned additionalAssistanceDataPresent : 1;
   } m;
   rrlp_enc_LocErrorReason locErrorReason;
   rrlp_enc_AdditionalAssistanceData additionalAssistanceData;
} rrlp_enc_LocationError;

EXTERN int asn1PE_rrlp_enc_LocationError (OSCTXT* pctxt, rrlp_enc_LocationError* pvalue);

EXTERN void asn1Free_rrlp_enc_LocationError (OSCTXT *pctxt, 
   rrlp_enc_LocationError* pvalue);

/**************************************************************/
/*                                                            */
/*  SeqOfOTD_FirstSetMsrs_R98_Ext                             */
/*                                                            */
/**************************************************************/
/*
SeqOfOTD-FirstSetMsrs-R98-Ext ::= SEQUENCE (SIZE (1..5)) OF OTD-FirstSetMsrs
*/
typedef struct EXTERN rrlp_enc_SeqOfOTD_FirstSetMsrs_R98_Ext {
   OSUINT32 n;
   rrlp_enc_OTD_FirstSetMsrs *elem;
} rrlp_enc_SeqOfOTD_FirstSetMsrs_R98_Ext;

EXTERN int asn1PE_rrlp_enc_SeqOfOTD_FirstSetMsrs_R98_Ext (OSCTXT* pctxt, rrlp_enc_SeqOfOTD_FirstSetMsrs_R98_Ext* pvalue);

EXTERN void asn1Free_rrlp_enc_SeqOfOTD_FirstSetMsrs_R98_Ext (OSCTXT *pctxt, 
   rrlp_enc_SeqOfOTD_FirstSetMsrs_R98_Ext* pvalue);

/**************************************************************/
/*                                                            */
/*  OTD_MsrElementFirst_R98_Ext                               */
/*                                                            */
/**************************************************************/
/*
 OTD measurement information Ext for the first set only

OTD-MsrElementFirst-R98-Ext ::= SEQUENCE {
   otd-FirstSetMsrs-R98-Ext [0] SeqOfOTD-FirstSetMsrs-R98-Ext OPTIONAL
}
*/
typedef struct EXTERN rrlp_enc_OTD_MsrElementFirst_R98_Ext {
   struct {
      unsigned otd_FirstSetMsrs_R98_ExtPresent : 1;
   } m;
   rrlp_enc_SeqOfOTD_FirstSetMsrs_R98_Ext otd_FirstSetMsrs_R98_Ext;
} rrlp_enc_OTD_MsrElementFirst_R98_Ext;

EXTERN int asn1PE_rrlp_enc_OTD_MsrElementFirst_R98_Ext (OSCTXT* pctxt, rrlp_enc_OTD_MsrElementFirst_R98_Ext* pvalue);

EXTERN void asn1Free_rrlp_enc_OTD_MsrElementFirst_R98_Ext (OSCTXT *pctxt, 
   rrlp_enc_OTD_MsrElementFirst_R98_Ext* pvalue);

/**************************************************************/
/*                                                            */
/*  OTD_MeasureInfo_R98_Ext                                   */
/*                                                            */
/**************************************************************/
/*
 This is an addition to OTD-MeasureInfo element defined in original message,
 If OTD-MeasureInfo is absent, or if one or more OTD-MsrElementRest are present
 OTD-MeasureInfo-R98-Ext shall be absent.
 OTD-MeasureInfo-R98-Ext

OTD-MeasureInfo-R98-Ext ::= SEQUENCE {
   otdMsrFirstSets-R98-Ext [0] OTD-MsrElementFirst-R98-Ext
}
*/
typedef struct EXTERN rrlp_enc_OTD_MeasureInfo_R98_Ext {
   rrlp_enc_OTD_MsrElementFirst_R98_Ext otdMsrFirstSets_R98_Ext;
} rrlp_enc_OTD_MeasureInfo_R98_Ext;

EXTERN int asn1PE_rrlp_enc_OTD_MeasureInfo_R98_Ext (OSCTXT* pctxt, rrlp_enc_OTD_MeasureInfo_R98_Ext* pvalue);

EXTERN void asn1Free_rrlp_enc_OTD_MeasureInfo_R98_Ext (OSCTXT *pctxt, 
   rrlp_enc_OTD_MeasureInfo_R98_Ext* pvalue);

/**************************************************************/
/*                                                            */
/*  Rel_98_MsrPosition_Rsp_Extension_rel_98_Ext_MeasureInfo   */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'Rel-98-MsrPosition-Rsp-Extension'
*/
typedef struct EXTERN rrlp_enc_Rel_98_MsrPosition_Rsp_Extension_rel_98_Ext_MeasureInfo {
   struct {
      unsigned otd_MeasureInfo_R98_ExtPresent : 1;
   } m;
   rrlp_enc_OTD_MeasureInfo_R98_Ext otd_MeasureInfo_R98_Ext;
} rrlp_enc_Rel_98_MsrPosition_Rsp_Extension_rel_98_Ext_MeasureInfo;

EXTERN int asn1PE_rrlp_enc_Rel_98_MsrPosition_Rsp_Extension_rel_98_Ext_MeasureInfo (OSCTXT* pctxt, rrlp_enc_Rel_98_MsrPosition_Rsp_Extension_rel_98_Ext_MeasureInfo* pvalue);

EXTERN void asn1Free_rrlp_enc_Rel_98_MsrPosition_Rsp_Extension_rel_98_Ext_MeasureInfo (OSCTXT *pctxt, 
   rrlp_enc_Rel_98_MsrPosition_Rsp_Extension_rel_98_Ext_MeasureInfo* pvalue);

/**************************************************************/
/*                                                            */
/*  GPSReferenceTimeUncertainty                               */
/*                                                            */
/**************************************************************/
/*
 Release 98 extensions

GPSReferenceTimeUncertainty ::= INTEGER (0..127)
*/
typedef OSUINT8 rrlp_enc_GPSReferenceTimeUncertainty;

EXTERN int asn1PE_rrlp_enc_GPSReferenceTimeUncertainty (OSCTXT* pctxt, rrlp_enc_GPSReferenceTimeUncertainty value);

/**************************************************************/
/*                                                            */
/*  GPSTimeAssistanceMeasurements                             */
/*                                                            */
/**************************************************************/
/*
 Coding according to Annex

GPSTimeAssistanceMeasurements ::= SEQUENCE {
   referenceFrameMSB [0] INTEGER (0..63) OPTIONAL,
   gpsTowSubms [1] INTEGER (0..9999) OPTIONAL,
   deltaTow [2] INTEGER (0..127) OPTIONAL,
   gpsReferenceTimeUncertainty [3] GPSReferenceTimeUncertainty OPTIONAL
}
*/
typedef struct EXTERN rrlp_enc_GPSTimeAssistanceMeasurements {
   struct {
      unsigned referenceFrameMSBPresent : 1;
      unsigned gpsTowSubmsPresent : 1;
      unsigned deltaTowPresent : 1;
      unsigned gpsReferenceTimeUncertaintyPresent : 1;
   } m;
   OSUINT8 referenceFrameMSB;
   OSUINT16 gpsTowSubms;
   OSUINT8 deltaTow;
   rrlp_enc_GPSReferenceTimeUncertainty gpsReferenceTimeUncertainty;
} rrlp_enc_GPSTimeAssistanceMeasurements;

EXTERN int asn1PE_rrlp_enc_GPSTimeAssistanceMeasurements (OSCTXT* pctxt, rrlp_enc_GPSTimeAssistanceMeasurements* pvalue);

/**************************************************************/
/*                                                            */
/*  Rel_98_MsrPosition_Rsp_Extension                          */
/*                                                            */
/**************************************************************/
/*
Rel-98-MsrPosition-Rsp-Extension ::= SEQUENCE {
   rel-98-Ext-MeasureInfo [0] SEQUENCE {
      otd-MeasureInfo-R98-Ext [0] OTD-MeasureInfo-R98-Ext OPTIONAL
   },
   ...,
   timeAssistanceMeasurements [1] GPSTimeAssistanceMeasurements OPTIONAL
}
*/
typedef struct EXTERN rrlp_enc_Rel_98_MsrPosition_Rsp_Extension {
   struct {
      unsigned timeAssistanceMeasurementsPresent : 1;
   } m;
   rrlp_enc_Rel_98_MsrPosition_Rsp_Extension_rel_98_Ext_MeasureInfo rel_98_Ext_MeasureInfo;
   rrlp_enc_GPSTimeAssistanceMeasurements timeAssistanceMeasurements;
} rrlp_enc_Rel_98_MsrPosition_Rsp_Extension;

EXTERN int asn1PE_rrlp_enc_Rel_98_MsrPosition_Rsp_Extension (OSCTXT* pctxt, rrlp_enc_Rel_98_MsrPosition_Rsp_Extension* pvalue);

EXTERN void asn1Free_rrlp_enc_Rel_98_MsrPosition_Rsp_Extension (OSCTXT *pctxt, 
   rrlp_enc_Rel_98_MsrPosition_Rsp_Extension* pvalue);

/**************************************************************/
/*                                                            */
/*  Extended_reference                                        */
/*                                                            */
/**************************************************************/
/*
Extended-reference ::= SEQUENCE {
   smlc-code [0] INTEGER (0..63),
   transaction-ID [1] INTEGER (0..262143)
}
*/
typedef struct EXTERN rrlp_enc_Extended_reference {
   OSUINT8 smlc_code;
   OSUINT32 transaction_ID;
} rrlp_enc_Extended_reference;

EXTERN int asn1PE_rrlp_enc_Extended_reference (OSCTXT* pctxt, rrlp_enc_Extended_reference* pvalue);

/**************************************************************/
/*                                                            */
/*  OTD_MeasureInfo_5_Ext                                     */
/*                                                            */
/**************************************************************/
/*
OTD-MeasureInfo-5-Ext ::= SeqOfOTD-MsrElementRest
*/
/* Array of rrlp_enc_OTD_MsrElementRest */
typedef rrlp_enc_SeqOfOTD_MsrElementRest rrlp_enc_OTD_MeasureInfo_5_Ext;

EXTERN int asn1PE_rrlp_enc_OTD_MeasureInfo_5_Ext (OSCTXT* pctxt, rrlp_enc_OTD_MeasureInfo_5_Ext* pvalue);

EXTERN void asn1Free_rrlp_enc_OTD_MeasureInfo_5_Ext (OSCTXT *pctxt, 
   rrlp_enc_OTD_MeasureInfo_5_Ext* pvalue);

/**************************************************************/
/*                                                            */
/*  UlPseudoSegInd                                            */
/*                                                            */
/**************************************************************/
/*
 if more than one measurement sets are present this element is repeated
 NumberOfSets - 1 (-1 = first set) combined in OTD-MeasureInfo-5-Ext and
 OTD-MeasureInfo (e.g. if NumberOfSets is 3, then one otdMsrRestSets may
 be sent in OTD-MeasureInfo-5-Ext and one in OTD-MeasureInfo)
 First part of Uplink RRLP Pseudo-segmentation indication, possibly more may be defined
 in the future for segmentation with more than two segments.

UlPseudoSegInd ::= ENUMERATED { firstOfMany(0), secondOfMany(1) }
*/
typedef enum {
   rrlp_enc_UlPseudoSegInd_firstOfMany = 0,
   rrlp_enc_UlPseudoSegInd_secondOfMany = 1
} rrlp_enc_UlPseudoSegInd_Root;

typedef OSUINT32 rrlp_enc_UlPseudoSegInd;

EXTERN int asn1PE_rrlp_enc_UlPseudoSegInd (OSCTXT* pctxt, rrlp_enc_UlPseudoSegInd value);

/**************************************************************/
/*                                                            */
/*  Rel_5_MsrPosition_Rsp_Extension                           */
/*                                                            */
/**************************************************************/
/*
Rel-5-MsrPosition-Rsp-Extension ::= SEQUENCE {
   extended-reference [0] Extended-reference OPTIONAL,
   otd-MeasureInfo-5-Ext [1] OTD-MeasureInfo-5-Ext OPTIONAL,
   ulPseudoSegInd [2] UlPseudoSegInd OPTIONAL,
   ...
}
*/
typedef struct EXTERN rrlp_enc_Rel_5_MsrPosition_Rsp_Extension {
   struct {
      unsigned extended_referencePresent : 1;
      unsigned otd_MeasureInfo_5_ExtPresent : 1;
      unsigned ulPseudoSegIndPresent : 1;
   } m;
   rrlp_enc_Extended_reference extended_reference;
   rrlp_enc_OTD_MeasureInfo_5_Ext otd_MeasureInfo_5_Ext;
   rrlp_enc_UlPseudoSegInd ulPseudoSegInd;
} rrlp_enc_Rel_5_MsrPosition_Rsp_Extension;

EXTERN int asn1PE_rrlp_enc_Rel_5_MsrPosition_Rsp_Extension (OSCTXT* pctxt, rrlp_enc_Rel_5_MsrPosition_Rsp_Extension* pvalue);

EXTERN void asn1Free_rrlp_enc_Rel_5_MsrPosition_Rsp_Extension (OSCTXT *pctxt, 
   rrlp_enc_Rel_5_MsrPosition_Rsp_Extension* pvalue);

/**************************************************************/
/*                                                            */
/*  ReferenceFrame                                            */
/*                                                            */
/**************************************************************/
/*
ReferenceFrame ::= SEQUENCE {
   referenceFN [0] INTEGER (0..65535),
   referenceFNMSB [1] INTEGER (0..63) OPTIONAL
}
*/
typedef struct EXTERN rrlp_enc_ReferenceFrame {
   struct {
      unsigned referenceFNMSBPresent : 1;
   } m;
   OSUINT16 referenceFN;
   OSUINT8 referenceFNMSB;
} rrlp_enc_ReferenceFrame;

EXTERN int asn1PE_rrlp_enc_ReferenceFrame (OSCTXT* pctxt, rrlp_enc_ReferenceFrame* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSTODm                                                 */
/*                                                            */
/**************************************************************/
/*
 GANSS TOD modulo 1 hour

GANSSTODm ::= INTEGER (0..3599999)
*/
typedef OSUINT32 rrlp_enc_GANSSTODm;

EXTERN int asn1PE_rrlp_enc_GANSSTODm (OSCTXT* pctxt, rrlp_enc_GANSSTODm value);

/**************************************************************/
/*                                                            */
/*  GANSSTODUncertainty                                       */
/*                                                            */
/**************************************************************/
/*
 GANSS TOD uncertainty

GANSSTODUncertainty ::= INTEGER (0..127)
*/
typedef OSUINT8 rrlp_enc_GANSSTODUncertainty;

EXTERN int asn1PE_rrlp_enc_GANSSTODUncertainty (OSCTXT* pctxt, rrlp_enc_GANSSTODUncertainty value);

/**************************************************************/
/*                                                            */
/*  PositionData                                              */
/*                                                            */
/**************************************************************/
/*
PositionData ::= BIT STRING  { e-otd(0), gps(1), galileo(2), sbas(3), modernizedGPS(4), qzss(5), glonass(6), bds(7) } (SIZE (3..16))
*/
/* Named bit constants */

#define rrlp_enc_PositionData_rrlp_enc_e_otd                  0
#define rrlp_enc_PositionData_rrlp_enc_gps_1                  1
#define rrlp_enc_PositionData_rrlp_enc_galileo_1              2
#define rrlp_enc_PositionData_rrlp_enc_sbas_1                 3
#define rrlp_enc_PositionData_rrlp_enc_modernizedGPS_1        4
#define rrlp_enc_PositionData_rrlp_enc_qzss_1                 5
#define rrlp_enc_PositionData_rrlp_enc_glonass_1              6
#define rrlp_enc_PositionData_rrlp_enc_bds_1                  7

typedef struct rrlp_enc_PositionData {
   OSUINT32 numbits;
   OSOCTET data[2];
} rrlp_enc_PositionData;

EXTERN int asn1PE_rrlp_enc_PositionData (OSCTXT* pctxt, rrlp_enc_PositionData* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSLocationInfo                                         */
/*                                                            */
/**************************************************************/
/*
 GANSS Location Information contains location estimate, time stamp with uncertainty 
 and optionally Reference Frame field

GANSSLocationInfo ::= SEQUENCE {
   referenceFrame [0] ReferenceFrame OPTIONAL,
   ganssTODm [1] GANSSTODm OPTIONAL,
   ganssTODFrac [2] INTEGER (0..16384) OPTIONAL,
   ganssTODUncertainty [3] GANSSTODUncertainty OPTIONAL,
   ganssTimeID [4] INTEGER (0..7) OPTIONAL,
   fixType [5] FixType,
   posData [6] PositionData,
   stationaryIndication [7] INTEGER (0..1) OPTIONAL,
   posEstimate [8] Ext-GeographicalInformation,
   ...
}
*/
typedef struct EXTERN rrlp_enc_GANSSLocationInfo {
   struct {
      unsigned referenceFramePresent : 1;
      unsigned ganssTODmPresent : 1;
      unsigned ganssTODFracPresent : 1;
      unsigned ganssTODUncertaintyPresent : 1;
      unsigned ganssTimeIDPresent : 1;
      unsigned stationaryIndicationPresent : 1;
   } m;
   rrlp_enc_ReferenceFrame referenceFrame;
   rrlp_enc_GANSSTODm ganssTODm;
   OSUINT16 ganssTODFrac;
   rrlp_enc_GANSSTODUncertainty ganssTODUncertainty;
   OSUINT8 ganssTimeID;
   rrlp_enc_FixType fixType;
   rrlp_enc_PositionData posData;
   OSUINT8 stationaryIndication;
   rrlp_enc_Ext_GeographicalInformation posEstimate;
} rrlp_enc_GANSSLocationInfo;

EXTERN int asn1PE_rrlp_enc_GANSSLocationInfo (OSCTXT* pctxt, rrlp_enc_GANSSLocationInfo* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSSignalID                                             */
/*                                                            */
/**************************************************************/
/*
GANSSSignalID ::= INTEGER (0..7)
*/
typedef OSUINT8 rrlp_enc_GANSSSignalID;

EXTERN int asn1PE_rrlp_enc_GANSSSignalID (OSCTXT* pctxt, rrlp_enc_GANSSSignalID value);

/**************************************************************/
/*                                                            */
/*  SVID                                                      */
/*                                                            */
/**************************************************************/
/*
SVID ::= INTEGER (0..63)
*/
typedef OSUINT8 rrlp_enc_SVID;

EXTERN int asn1PE_rrlp_enc_SVID (OSCTXT* pctxt, rrlp_enc_SVID value);

/**************************************************************/
/*                                                            */
/*  GANSS_SgnElement                                          */
/*                                                            */
/**************************************************************/
/*
GANSS-SgnElement ::= SEQUENCE {
   svID [0] SVID,
   cNo [1] INTEGER (0..63),
   mpathDet [2] MpathIndic,
   carrierQualityInd [3] INTEGER (0..3) OPTIONAL,
   codePhase [4] INTEGER (0..2097151),
   integerCodePhase [5] INTEGER (0..127) OPTIONAL,
   codePhaseRMSError [6] INTEGER (0..63),
   doppler [7] INTEGER (-32768..32767) OPTIONAL,
   adr [8] INTEGER (0..33554431) OPTIONAL
}
*/
typedef struct EXTERN rrlp_enc_GANSS_SgnElement {
   struct {
      unsigned carrierQualityIndPresent : 1;
      unsigned integerCodePhasePresent : 1;
      unsigned dopplerPresent : 1;
      unsigned adrPresent : 1;
   } m;
   rrlp_enc_SVID svID;
   OSUINT8 cNo;
   rrlp_enc_MpathIndic mpathDet;
   OSUINT8 carrierQualityInd;
   OSUINT32 codePhase;
   OSUINT8 integerCodePhase;
   OSUINT8 codePhaseRMSError;
   OSINT16 doppler;
   OSUINT32 adr;
} rrlp_enc_GANSS_SgnElement;

EXTERN int asn1PE_rrlp_enc_GANSS_SgnElement (OSCTXT* pctxt, rrlp_enc_GANSS_SgnElement* pvalue);

/**************************************************************/
/*                                                            */
/*  SeqOfGANSS_SgnElement                                     */
/*                                                            */
/**************************************************************/
/*
 Up to 16 Measurements can be returned per signal type 

SeqOfGANSS-SgnElement ::= SEQUENCE (SIZE (1..16)) OF GANSS-SgnElement
*/
typedef struct EXTERN rrlp_enc_SeqOfGANSS_SgnElement {
   OSUINT32 n;
   rrlp_enc_GANSS_SgnElement *elem;
} rrlp_enc_SeqOfGANSS_SgnElement;

EXTERN int asn1PE_rrlp_enc_SeqOfGANSS_SgnElement (OSCTXT* pctxt, rrlp_enc_SeqOfGANSS_SgnElement* pvalue);

EXTERN void asn1Free_rrlp_enc_SeqOfGANSS_SgnElement (OSCTXT *pctxt, 
   rrlp_enc_SeqOfGANSS_SgnElement* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSS_SgnTypeElement                                      */
/*                                                            */
/**************************************************************/
/*
GANSS-SgnTypeElement ::= SEQUENCE {
   ganssSignalID [0] GANSSSignalID,
   ganssCodePhaseAmbiguity [1] INTEGER (0..127) OPTIONAL,
   ganss-SgnList [2] SeqOfGANSS-SgnElement,
   ...
}
*/
typedef struct EXTERN rrlp_enc_GANSS_SgnTypeElement {
   struct {
      unsigned ganssCodePhaseAmbiguityPresent : 1;
   } m;
   rrlp_enc_GANSSSignalID ganssSignalID;
   OSUINT8 ganssCodePhaseAmbiguity;
   rrlp_enc_SeqOfGANSS_SgnElement ganss_SgnList;
} rrlp_enc_GANSS_SgnTypeElement;

EXTERN int asn1PE_rrlp_enc_GANSS_SgnTypeElement (OSCTXT* pctxt, rrlp_enc_GANSS_SgnTypeElement* pvalue);

EXTERN void asn1Free_rrlp_enc_GANSS_SgnTypeElement (OSCTXT *pctxt, 
   rrlp_enc_GANSS_SgnTypeElement* pvalue);

/**************************************************************/
/*                                                            */
/*  SeqOfGANSS_SgnTypeElement                                 */
/*                                                            */
/**************************************************************/
/*
 Measurements can be returned up to 8 different signal types
 N_SGN_TYPE can be read from number of elements of SeqOfGANSS-SgnTypeElement 
 Reporting of multiple signal types as defined in A.2.2.4g  

SeqOfGANSS-SgnTypeElement ::= SEQUENCE (SIZE (1..8)) OF GANSS-SgnTypeElement
*/
typedef struct EXTERN rrlp_enc_SeqOfGANSS_SgnTypeElement {
   OSUINT32 n;
   rrlp_enc_GANSS_SgnTypeElement *elem;
} rrlp_enc_SeqOfGANSS_SgnTypeElement;

EXTERN int asn1PE_rrlp_enc_SeqOfGANSS_SgnTypeElement (OSCTXT* pctxt, rrlp_enc_SeqOfGANSS_SgnTypeElement* pvalue);

EXTERN void asn1Free_rrlp_enc_SeqOfGANSS_SgnTypeElement (OSCTXT *pctxt, 
   rrlp_enc_SeqOfGANSS_SgnTypeElement* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSS_MsrElement                                          */
/*                                                            */
/**************************************************************/
/*
GANSS-MsrElement ::= SEQUENCE {
   ganssID [0] INTEGER (0..7) OPTIONAL,
   ganss-SgnTypeList [1] SeqOfGANSS-SgnTypeElement
}
*/
typedef struct EXTERN rrlp_enc_GANSS_MsrElement {
   struct {
      unsigned ganssIDPresent : 1;
   } m;
   OSUINT8 ganssID;
   rrlp_enc_SeqOfGANSS_SgnTypeElement ganss_SgnTypeList;
} rrlp_enc_GANSS_MsrElement;

EXTERN int asn1PE_rrlp_enc_GANSS_MsrElement (OSCTXT* pctxt, rrlp_enc_GANSS_MsrElement* pvalue);

EXTERN void asn1Free_rrlp_enc_GANSS_MsrElement (OSCTXT *pctxt, 
   rrlp_enc_GANSS_MsrElement* pvalue);

/**************************************************************/
/*                                                            */
/*  SeqOfGANSS_MsrElement                                     */
/*                                                            */
/**************************************************************/
/*
SeqOfGANSS-MsrElement ::= SEQUENCE (SIZE (1..8)) OF GANSS-MsrElement
*/
typedef struct EXTERN rrlp_enc_SeqOfGANSS_MsrElement {
   OSUINT32 n;
   rrlp_enc_GANSS_MsrElement *elem;
} rrlp_enc_SeqOfGANSS_MsrElement;

EXTERN int asn1PE_rrlp_enc_SeqOfGANSS_MsrElement (OSCTXT* pctxt, rrlp_enc_SeqOfGANSS_MsrElement* pvalue);

EXTERN void asn1Free_rrlp_enc_SeqOfGANSS_MsrElement (OSCTXT *pctxt, 
   rrlp_enc_SeqOfGANSS_MsrElement* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSS_MsrSetElement                                       */
/*                                                            */
/**************************************************************/
/*
 GANSS measurement information 1-3 times in a message

GANSS-MsrSetElement ::= SEQUENCE {
   referenceFrame [0] ReferenceFrame OPTIONAL,
   ganssTODm [1] GANSSTODm OPTIONAL,
   deltaGANSSTOD [2] INTEGER (0..127) OPTIONAL,
   ganssTODUncertainty [3] GANSSTODUncertainty OPTIONAL,
   ganss-MsrElementList [4] SeqOfGANSS-MsrElement
}
*/
typedef struct EXTERN rrlp_enc_GANSS_MsrSetElement {
   struct {
      unsigned referenceFramePresent : 1;
      unsigned ganssTODmPresent : 1;
      unsigned deltaGANSSTODPresent : 1;
      unsigned ganssTODUncertaintyPresent : 1;
   } m;
   rrlp_enc_ReferenceFrame referenceFrame;
   rrlp_enc_GANSSTODm ganssTODm;
   OSUINT8 deltaGANSSTOD;
   rrlp_enc_GANSSTODUncertainty ganssTODUncertainty;
   rrlp_enc_SeqOfGANSS_MsrElement ganss_MsrElementList;
} rrlp_enc_GANSS_MsrSetElement;

EXTERN int asn1PE_rrlp_enc_GANSS_MsrSetElement (OSCTXT* pctxt, rrlp_enc_GANSS_MsrSetElement* pvalue);

EXTERN void asn1Free_rrlp_enc_GANSS_MsrSetElement (OSCTXT *pctxt, 
   rrlp_enc_GANSS_MsrSetElement* pvalue);

/**************************************************************/
/*                                                            */
/*  SeqOfGANSS_MsrSetElement                                  */
/*                                                            */
/**************************************************************/
/*
SeqOfGANSS-MsrSetElement ::= SEQUENCE (SIZE (1..3)) OF GANSS-MsrSetElement
*/
typedef struct EXTERN rrlp_enc_SeqOfGANSS_MsrSetElement {
   OSUINT32 n;
   rrlp_enc_GANSS_MsrSetElement *elem;
} rrlp_enc_SeqOfGANSS_MsrSetElement;

EXTERN int asn1PE_rrlp_enc_SeqOfGANSS_MsrSetElement (OSCTXT* pctxt, rrlp_enc_SeqOfGANSS_MsrSetElement* pvalue);

EXTERN void asn1Free_rrlp_enc_SeqOfGANSS_MsrSetElement (OSCTXT *pctxt, 
   rrlp_enc_SeqOfGANSS_MsrSetElement* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSMeasureInfo                                          */
/*                                                            */
/**************************************************************/
/*
 GANSS Measurement Information 

GANSSMeasureInfo ::= SEQUENCE {
   ganssMsrSetList [0] SeqOfGANSS-MsrSetElement
}
*/
typedef struct EXTERN rrlp_enc_GANSSMeasureInfo {
   rrlp_enc_SeqOfGANSS_MsrSetElement ganssMsrSetList;
} rrlp_enc_GANSSMeasureInfo;

EXTERN int asn1PE_rrlp_enc_GANSSMeasureInfo (OSCTXT* pctxt, rrlp_enc_GANSSMeasureInfo* pvalue);

EXTERN void asn1Free_rrlp_enc_GANSSMeasureInfo (OSCTXT *pctxt, 
   rrlp_enc_GANSSMeasureInfo* pvalue);

/**************************************************************/
/*                                                            */
/*  Rel_7_MsrPosition_Rsp_Extension                           */
/*                                                            */
/**************************************************************/
/*
Rel-7-MsrPosition-Rsp-Extension ::= SEQUENCE {
   velEstimate [0] VelocityEstimate OPTIONAL,
   ganssLocationInfo [1] GANSSLocationInfo OPTIONAL,
   ganssMeasureInfo [2] GANSSMeasureInfo OPTIONAL,
   ...
}
*/
typedef struct EXTERN rrlp_enc_Rel_7_MsrPosition_Rsp_Extension {
   struct {
      unsigned velEstimatePresent : 1;
      unsigned ganssLocationInfoPresent : 1;
      unsigned ganssMeasureInfoPresent : 1;
   } m;
   rrlp_enc_VelocityEstimate velEstimate;
   rrlp_enc_GANSSLocationInfo ganssLocationInfo;
   rrlp_enc_GANSSMeasureInfo ganssMeasureInfo;
} rrlp_enc_Rel_7_MsrPosition_Rsp_Extension;

EXTERN int asn1PE_rrlp_enc_Rel_7_MsrPosition_Rsp_Extension (OSCTXT* pctxt, rrlp_enc_Rel_7_MsrPosition_Rsp_Extension* pvalue);

EXTERN void asn1Free_rrlp_enc_Rel_7_MsrPosition_Rsp_Extension (OSCTXT *pctxt, 
   rrlp_enc_Rel_7_MsrPosition_Rsp_Extension* pvalue);

/**************************************************************/
/*                                                            */
/*  MsrPosition_Rsp                                           */
/*                                                            */
/**************************************************************/
/*
 Measurement Position response component

MsrPosition-Rsp ::= SEQUENCE {
   multipleSets [0] MultipleSets OPTIONAL,
   referenceIdentity [1] ReferenceIdentity OPTIONAL,
   otd-MeasureInfo [2] OTD-MeasureInfo OPTIONAL,
   locationInfo [3] LocationInfo OPTIONAL,
   gps-MeasureInfo [4] GPS-MeasureInfo OPTIONAL,
   locationError [5] LocationError OPTIONAL,
   extensionContainer [6] ExtensionContainer OPTIONAL,
   ...,
   rel-98-MsrPosition-Rsp-Extension [7] Rel-98-MsrPosition-Rsp-Extension OPTIONAL,
   rel-5-MsrPosition-Rsp-Extension [8] Rel-5-MsrPosition-Rsp-Extension OPTIONAL,
   rel-7-MsrPosition-Rsp-Extension [9] Rel-7-MsrPosition-Rsp-Extension OPTIONAL
}
*/
typedef struct EXTERN rrlp_enc_MsrPosition_Rsp {
   struct {
      unsigned multipleSetsPresent : 1;
      unsigned referenceIdentityPresent : 1;
      unsigned otd_MeasureInfoPresent : 1;
      unsigned locationInfoPresent : 1;
      unsigned gps_MeasureInfoPresent : 1;
      unsigned locationErrorPresent : 1;
      unsigned extensionContainerPresent : 1;
      unsigned rel_98_MsrPosition_Rsp_ExtensionPresent : 1;
      unsigned rel_5_MsrPosition_Rsp_ExtensionPresent : 1;
      unsigned rel_7_MsrPosition_Rsp_ExtensionPresent : 1;
   } m;
   rrlp_enc_MultipleSets multipleSets;
   rrlp_enc_ReferenceIdentity referenceIdentity;
   rrlp_enc_OTD_MeasureInfo otd_MeasureInfo;
   rrlp_enc_LocationInfo locationInfo;
   rrlp_enc_GPS_MeasureInfo gps_MeasureInfo;
   rrlp_enc_LocationError locationError;
   rrlp_enc_ExtensionContainer extensionContainer;
   rrlp_enc_Rel_98_MsrPosition_Rsp_Extension rel_98_MsrPosition_Rsp_Extension;
   rrlp_enc_Rel_5_MsrPosition_Rsp_Extension rel_5_MsrPosition_Rsp_Extension;
   rrlp_enc_Rel_7_MsrPosition_Rsp_Extension rel_7_MsrPosition_Rsp_Extension;
} rrlp_enc_MsrPosition_Rsp;

EXTERN int asn1PE_rrlp_enc_MsrPosition_Rsp (OSCTXT* pctxt, rrlp_enc_MsrPosition_Rsp* pvalue);

EXTERN void asn1Free_rrlp_enc_MsrPosition_Rsp (OSCTXT *pctxt, 
   rrlp_enc_MsrPosition_Rsp* pvalue);

/**************************************************************/
/*                                                            */
/*  ErrorCodes                                                */
/*                                                            */
/**************************************************************/
/*
 Protocol Error Causes

ErrorCodes ::= ENUMERATED { unDefined(0), missingComponet(1), incorrectData(2), missingIEorComponentElement(3), messageTooShort(4), unknowReferenceNumber(5), ... }
*/
typedef enum {
   rrlp_enc_ErrorCodes_unDefined = 0,
   rrlp_enc_ErrorCodes_missingComponet = 1,
   rrlp_enc_ErrorCodes_incorrectData = 2,
   rrlp_enc_ErrorCodes_missingIEorComponentElement = 3,
   rrlp_enc_ErrorCodes_messageTooShort = 4,
   rrlp_enc_ErrorCodes_unknowReferenceNumber = 5
} rrlp_enc_ErrorCodes_Root;

typedef OSUINT32 rrlp_enc_ErrorCodes;

EXTERN int asn1PE_rrlp_enc_ErrorCodes (OSCTXT* pctxt, rrlp_enc_ErrorCodes value);

/**************************************************************/
/*                                                            */
/*  Rel_5_ProtocolError_Extension                             */
/*                                                            */
/**************************************************************/
/*
Rel-5-ProtocolError-Extension ::= SEQUENCE {
   extended-reference [0] Extended-reference OPTIONAL,
   ...
}
*/
typedef struct EXTERN rrlp_enc_Rel_5_ProtocolError_Extension {
   struct {
      unsigned extended_referencePresent : 1;
   } m;
   rrlp_enc_Extended_reference extended_reference;
} rrlp_enc_Rel_5_ProtocolError_Extension;

EXTERN int asn1PE_rrlp_enc_Rel_5_ProtocolError_Extension (OSCTXT* pctxt, rrlp_enc_Rel_5_ProtocolError_Extension* pvalue);

/**************************************************************/
/*                                                            */
/*  ProtocolError                                             */
/*                                                            */
/**************************************************************/
/*
 Protocol Error component

ProtocolError ::= SEQUENCE {
   errorCause [0] ErrorCodes,
   extensionContainer [1] ExtensionContainer OPTIONAL,
   ...,
   rel-5-ProtocolError-Extension [2] Rel-5-ProtocolError-Extension OPTIONAL
}
*/
typedef struct EXTERN rrlp_enc_ProtocolError {
   struct {
      unsigned extensionContainerPresent : 1;
      unsigned rel_5_ProtocolError_ExtensionPresent : 1;
   } m;
   rrlp_enc_ErrorCodes errorCause;
   rrlp_enc_ExtensionContainer extensionContainer;
   rrlp_enc_Rel_5_ProtocolError_Extension rel_5_ProtocolError_Extension;
} rrlp_enc_ProtocolError;

EXTERN int asn1PE_rrlp_enc_ProtocolError (OSCTXT* pctxt, rrlp_enc_ProtocolError* pvalue);

EXTERN void asn1Free_rrlp_enc_ProtocolError (OSCTXT *pctxt, 
   rrlp_enc_ProtocolError* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSPositioningMethodTypes                               */
/*                                                            */
/**************************************************************/
/*
GANSSPositioningMethodTypes ::= BIT STRING  { msAssisted(0), msBased(1), standalone(2) } (SIZE (1..8))
*/
/* Named bit constants */

#define rrlp_enc_GANSSPositioningMethodTypes_rrlp_enc_msAssisted             0
#define rrlp_enc_GANSSPositioningMethodTypes_rrlp_enc_msBased                1
#define rrlp_enc_GANSSPositioningMethodTypes_rrlp_enc_standalone             2

typedef struct rrlp_enc_GANSSPositioningMethodTypes {
   OSUINT32 numbits;
   OSOCTET data[1];
} rrlp_enc_GANSSPositioningMethodTypes;

EXTERN int asn1PE_rrlp_enc_GANSSPositioningMethodTypes (OSCTXT* pctxt, rrlp_enc_GANSSPositioningMethodTypes* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSSignals                                              */
/*                                                            */
/**************************************************************/
/*
 indicates MS support for particular GANSS signals and frequencies

GANSSSignals ::= BIT STRING  { signal1(0), signal2(1), signal3(2), signal4(3), signal5(4), signal6(5), signal7(6), signal8(7) } (SIZE (1..8))
*/
/* Named bit constants */

#define rrlp_enc_GANSSSignals_rrlp_enc_signal1                0
#define rrlp_enc_GANSSSignals_rrlp_enc_signal2                1
#define rrlp_enc_GANSSSignals_rrlp_enc_signal3                2
#define rrlp_enc_GANSSSignals_rrlp_enc_signal4                3
#define rrlp_enc_GANSSSignals_rrlp_enc_signal5                4
#define rrlp_enc_GANSSSignals_rrlp_enc_signal6                5
#define rrlp_enc_GANSSSignals_rrlp_enc_signal7                6
#define rrlp_enc_GANSSSignals_rrlp_enc_signal8                7

typedef struct rrlp_enc_GANSSSignals {
   OSUINT32 numbits;
   OSOCTET data[1];
} rrlp_enc_GANSSSignals;

EXTERN int asn1PE_rrlp_enc_GANSSSignals (OSCTXT* pctxt, rrlp_enc_GANSSSignals* pvalue);

/**************************************************************/
/*                                                            */
/*  SBASID                                                    */
/*                                                            */
/**************************************************************/
/*
SBASID ::= BIT STRING  { waas(0), egnos(1), masas(2), gagan(3) } (SIZE (1..8))
*/
/* Named bit constants */

#define rrlp_enc_SBASID_rrlp_enc_waas                   0
#define rrlp_enc_SBASID_rrlp_enc_egnos                  1
#define rrlp_enc_SBASID_rrlp_enc_masas                  2
#define rrlp_enc_SBASID_rrlp_enc_gagan                  3

typedef struct rrlp_enc_SBASID {
   OSUINT32 numbits;
   OSOCTET data[1];
} rrlp_enc_SBASID;

EXTERN int asn1PE_rrlp_enc_SBASID (OSCTXT* pctxt, rrlp_enc_SBASID* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSPositionMethod                                       */
/*                                                            */
/**************************************************************/
/*
GANSSPositionMethod ::= SEQUENCE {
   ganssID [0] INTEGER (0..7) OPTIONAL,
   gANSSPositioningMethodTypes [1] GANSSPositioningMethodTypes OPTIONAL,
   gANSSSignals [2] GANSSSignals,
   ...,
   sbasID [3] SBASID OPTIONAL
}
*/
typedef struct EXTERN rrlp_enc_GANSSPositionMethod {
   struct {
      unsigned ganssIDPresent : 1;
      unsigned gANSSPositioningMethodTypesPresent : 1;
      unsigned sbasIDPresent : 1;
   } m;
   OSUINT8 ganssID;
   rrlp_enc_GANSSPositioningMethodTypes gANSSPositioningMethodTypes;
   rrlp_enc_GANSSSignals gANSSSignals;
   rrlp_enc_SBASID sbasID;
} rrlp_enc_GANSSPositionMethod;

EXTERN int asn1PE_rrlp_enc_GANSSPositionMethod (OSCTXT* pctxt, rrlp_enc_GANSSPositionMethod* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSPositionMethods                                      */
/*                                                            */
/**************************************************************/
/*
GANSSPositionMethods ::= SEQUENCE (SIZE (1..16)) OF GANSSPositionMethod
*/
typedef struct EXTERN rrlp_enc_GANSSPositionMethods {
   OSUINT32 n;
   rrlp_enc_GANSSPositionMethod *elem;
} rrlp_enc_GANSSPositionMethods;

EXTERN int asn1PE_rrlp_enc_GANSSPositionMethods (OSCTXT* pctxt, rrlp_enc_GANSSPositionMethods* pvalue);

EXTERN void asn1Free_rrlp_enc_GANSSPositionMethods (OSCTXT *pctxt, 
   rrlp_enc_GANSSPositionMethods* pvalue);

/**************************************************************/
/*                                                            */
/*  PosCapability_Req                                         */
/*                                                            */
/**************************************************************/
/*
 Positioning Capability request component

PosCapability-Req ::= SEQUENCE {
   extended-reference [0] Extended-reference,
   gANSSPositionMethods [1] GANSSPositionMethods OPTIONAL,
   extensionContainer [2] ExtensionContainer OPTIONAL,
   ...
}
*/
typedef struct EXTERN rrlp_enc_PosCapability_Req {
   struct {
      unsigned gANSSPositionMethodsPresent : 1;
      unsigned extensionContainerPresent : 1;
   } m;
   rrlp_enc_Extended_reference extended_reference;
   rrlp_enc_GANSSPositionMethods gANSSPositionMethods;
   rrlp_enc_ExtensionContainer extensionContainer;
} rrlp_enc_PosCapability_Req;

EXTERN int asn1PE_rrlp_enc_PosCapability_Req (OSCTXT* pctxt, rrlp_enc_PosCapability_Req* pvalue);

EXTERN void asn1Free_rrlp_enc_PosCapability_Req (OSCTXT *pctxt, 
   rrlp_enc_PosCapability_Req* pvalue);

/**************************************************************/
/*                                                            */
/*  NonGANSSPositionMethods                                   */
/*                                                            */
/**************************************************************/
/*
NonGANSSPositionMethods ::= BIT STRING  { msAssistedEOTD(0), msBasedEOTD(1), msAssistedGPS(2), msBasedGPS(3), standaloneGPS(4) } (SIZE (1..16))
*/
/* Named bit constants */

#define rrlp_enc_NonGANSSPositionMethods_rrlp_enc_msAssistedEOTD         0
#define rrlp_enc_NonGANSSPositionMethods_rrlp_enc_msBasedEOTD            1
#define rrlp_enc_NonGANSSPositionMethods_rrlp_enc_msAssistedGPS          2
#define rrlp_enc_NonGANSSPositionMethods_rrlp_enc_msBasedGPS             3
#define rrlp_enc_NonGANSSPositionMethods_rrlp_enc_standaloneGPS          4

typedef struct rrlp_enc_NonGANSSPositionMethods {
   OSUINT32 numbits;
   OSOCTET data[2];
} rrlp_enc_NonGANSSPositionMethods;

EXTERN int asn1PE_rrlp_enc_NonGANSSPositionMethods (OSCTXT* pctxt, rrlp_enc_NonGANSSPositionMethods* pvalue);

/**************************************************************/
/*                                                            */
/*  MultipleMeasurementSets                                   */
/*                                                            */
/**************************************************************/
/*
 indicates MS support of multiple measurement sets for MS assisted position methods

MultipleMeasurementSets ::= BIT STRING  { eotd(0), gps(1), ganss(2) } (SIZE (1..8))
*/
/* Named bit constants */

#define rrlp_enc_MultipleMeasurementSets_rrlp_enc_eotd                   0
#define rrlp_enc_MultipleMeasurementSets_rrlp_enc_gps_2                  1
#define rrlp_enc_MultipleMeasurementSets_rrlp_enc_ganss                  2

typedef struct rrlp_enc_MultipleMeasurementSets {
   OSUINT32 numbits;
   OSOCTET data[1];
} rrlp_enc_MultipleMeasurementSets;

EXTERN int asn1PE_rrlp_enc_MultipleMeasurementSets (OSCTXT* pctxt, rrlp_enc_MultipleMeasurementSets* pvalue);

/**************************************************************/
/*                                                            */
/*  PosCapabilities                                           */
/*                                                            */
/**************************************************************/
/*
 Rel-7 Positioning Capability parameters here

PosCapabilities ::= SEQUENCE {
   nonGANSSpositionMethods [0] NonGANSSPositionMethods OPTIONAL,
   gANSSPositionMethods [1] GANSSPositionMethods OPTIONAL,
   multipleMeasurementSets [2] MultipleMeasurementSets OPTIONAL,
   ...
}
*/
typedef struct EXTERN rrlp_enc_PosCapabilities {
   struct {
      unsigned nonGANSSpositionMethodsPresent : 1;
      unsigned gANSSPositionMethodsPresent : 1;
      unsigned multipleMeasurementSetsPresent : 1;
   } m;
   rrlp_enc_NonGANSSPositionMethods nonGANSSpositionMethods;
   rrlp_enc_GANSSPositionMethods gANSSPositionMethods;
   rrlp_enc_MultipleMeasurementSets multipleMeasurementSets;
} rrlp_enc_PosCapabilities;

EXTERN int asn1PE_rrlp_enc_PosCapabilities (OSCTXT* pctxt, rrlp_enc_PosCapabilities* pvalue);

EXTERN void asn1Free_rrlp_enc_PosCapabilities (OSCTXT *pctxt, 
   rrlp_enc_PosCapabilities* pvalue);

/**************************************************************/
/*                                                            */
/*  GPSAssistance                                             */
/*                                                            */
/**************************************************************/
/*
 GPS assistance data supported

GPSAssistance ::= BIT STRING  { almanac(0), uTCmodel(1), ionosphericModel(2), navigationmodel(3), dGPScorrections(4), referenceLocation(5), referenceTime(6), acquisitionAssistance(7), realTimeIntegrity(8), ephemerisExtension(9), ephemerisExtensionCheck(10), gPSAcquisAssist-R12-Ext(11) } (SIZE (1..16))
*/
/* Named bit constants */

#define rrlp_enc_GPSAssistance_rrlp_enc_almanac                0
#define rrlp_enc_GPSAssistance_rrlp_enc_uTCmodel               1
#define rrlp_enc_GPSAssistance_rrlp_enc_ionosphericModel       2
#define rrlp_enc_GPSAssistance_rrlp_enc_navigationmodel        3
#define rrlp_enc_GPSAssistance_rrlp_enc_dGPScorrections        4
#define rrlp_enc_GPSAssistance_rrlp_enc_referenceLocation      5
#define rrlp_enc_GPSAssistance_rrlp_enc_referenceTime          6
#define rrlp_enc_GPSAssistance_rrlp_enc_acquisitionAssistance  7
#define rrlp_enc_GPSAssistance_rrlp_enc_realTimeIntegrity      8
#define rrlp_enc_GPSAssistance_rrlp_enc_ephemerisExtension     9
#define rrlp_enc_GPSAssistance_rrlp_enc_ephemerisExtensionCheck 10
#define rrlp_enc_GPSAssistance_rrlp_enc_gPSAcquisAssist_R12_Ext 11

typedef struct rrlp_enc_GPSAssistance {
   OSUINT32 numbits;
   OSOCTET data[2];
} rrlp_enc_GPSAssistance;

EXTERN int asn1PE_rrlp_enc_GPSAssistance (OSCTXT* pctxt, rrlp_enc_GPSAssistance* pvalue);

/**************************************************************/
/*                                                            */
/*  CommonGANSSAssistance                                     */
/*                                                            */
/**************************************************************/
/*
 Common GANSS assistance data supported

CommonGANSSAssistance ::= BIT STRING  { referenceTime(0), referenceLocation(1), ionosphericModel(3), addIonosphericModel(4), earthOrientationParam(5) } (SIZE (1..8))
*/
/* Named bit constants */

#define rrlp_enc_CommonGANSSAssistance_rrlp_enc_referenceTime_1        0
#define rrlp_enc_CommonGANSSAssistance_rrlp_enc_referenceLocation_1    1
#define rrlp_enc_CommonGANSSAssistance_rrlp_enc_ionosphericModel_1     3
#define rrlp_enc_CommonGANSSAssistance_rrlp_enc_addIonosphericModel    4
#define rrlp_enc_CommonGANSSAssistance_rrlp_enc_earthOrientationParam  5

typedef struct rrlp_enc_CommonGANSSAssistance {
   OSUINT32 numbits;
   OSOCTET data[1];
} rrlp_enc_CommonGANSSAssistance;

EXTERN int asn1PE_rrlp_enc_CommonGANSSAssistance (OSCTXT* pctxt, rrlp_enc_CommonGANSSAssistance* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSAssistance                                           */
/*                                                            */
/**************************************************************/
/*
 specific GANSS assistance data supported

GANSSAssistance ::= BIT STRING  { realTimeIntegrity(0), differentialCorrections(1), almanac(2), referenceMeasurementInformation(3), navigationModel(4), timeModelGNSS-UTC(5), timeModelGNSS-GNSS(6), databitassistance(7), ephemerisExtension(8), ephemerisExtensionCheck(9), addUTCmodel(10), auxiliaryInformation(11), gANSSRefMeasurementAssist-R12-Ext(12), bdsDifferentialCorrections-r12(13), bdsGridModel-r12(14) } (SIZE (1..16))
*/
/* Named bit constants */

#define rrlp_enc_GANSSAssistance_rrlp_enc_realTimeIntegrity_1    0
#define rrlp_enc_GANSSAssistance_rrlp_enc_differentialCorrections 1
#define rrlp_enc_GANSSAssistance_rrlp_enc_almanac_1              2
#define rrlp_enc_GANSSAssistance_rrlp_enc_referenceMeasurementInformation 3
#define rrlp_enc_GANSSAssistance_rrlp_enc_navigationModel        4
#define rrlp_enc_GANSSAssistance_rrlp_enc_timeModelGNSS_UTC      5
#define rrlp_enc_GANSSAssistance_rrlp_enc_timeModelGNSS_GNSS     6
#define rrlp_enc_GANSSAssistance_rrlp_enc_databitassistance      7
#define rrlp_enc_GANSSAssistance_rrlp_enc_ephemerisExtension_1   8
#define rrlp_enc_GANSSAssistance_rrlp_enc_ephemerisExtensionCheck_1 9
#define rrlp_enc_GANSSAssistance_rrlp_enc_addUTCmodel            10
#define rrlp_enc_GANSSAssistance_rrlp_enc_auxiliaryInformation   11
#define rrlp_enc_GANSSAssistance_rrlp_enc_gANSSRefMeasurementAssist_R12_Ext 12
#define rrlp_enc_GANSSAssistance_rrlp_enc_bdsDifferentialCorrections_r12 13
#define rrlp_enc_GANSSAssistance_rrlp_enc_bdsGridModel_r12       14

typedef struct rrlp_enc_GANSSAssistance {
   OSUINT32 numbits;
   OSOCTET data[2];
} rrlp_enc_GANSSAssistance;

EXTERN int asn1PE_rrlp_enc_GANSSAssistance (OSCTXT* pctxt, rrlp_enc_GANSSAssistance* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSAssistanceForOneGANSS                                */
/*                                                            */
/**************************************************************/
/*
 assistance data supported for a particular GANSS system

GANSSAssistanceForOneGANSS ::= SEQUENCE {
   ganssID [0] INTEGER (0..7) OPTIONAL,
   gANSSAssistance [1] GANSSAssistance,
   ...
}
*/
typedef struct EXTERN rrlp_enc_GANSSAssistanceForOneGANSS {
   struct {
      unsigned ganssIDPresent : 1;
   } m;
   OSUINT8 ganssID;
   rrlp_enc_GANSSAssistance gANSSAssistance;
} rrlp_enc_GANSSAssistanceForOneGANSS;

EXTERN int asn1PE_rrlp_enc_GANSSAssistanceForOneGANSS (OSCTXT* pctxt, rrlp_enc_GANSSAssistanceForOneGANSS* pvalue);

/**************************************************************/
/*                                                            */
/*  SpecificGANSSAssistance                                   */
/*                                                            */
/**************************************************************/
/*
SpecificGANSSAssistance ::= SEQUENCE (SIZE (1..16)) OF GANSSAssistanceForOneGANSS
*/
typedef struct EXTERN rrlp_enc_SpecificGANSSAssistance {
   OSUINT32 n;
   rrlp_enc_GANSSAssistanceForOneGANSS *elem;
} rrlp_enc_SpecificGANSSAssistance;

EXTERN int asn1PE_rrlp_enc_SpecificGANSSAssistance (OSCTXT* pctxt, rrlp_enc_SpecificGANSSAssistance* pvalue);

EXTERN void asn1Free_rrlp_enc_SpecificGANSSAssistance (OSCTXT *pctxt, 
   rrlp_enc_SpecificGANSSAssistance* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSAssistanceSet                                        */
/*                                                            */
/**************************************************************/
/*
 GANSS assistance data supported

GANSSAssistanceSet ::= SEQUENCE {
   commonGANSSAssistance [0] CommonGANSSAssistance,
   specificGANSSAssistance [1] SpecificGANSSAssistance,
   ...
}
*/
typedef struct EXTERN rrlp_enc_GANSSAssistanceSet {
   rrlp_enc_CommonGANSSAssistance commonGANSSAssistance;
   rrlp_enc_SpecificGANSSAssistance specificGANSSAssistance;
} rrlp_enc_GANSSAssistanceSet;

EXTERN int asn1PE_rrlp_enc_GANSSAssistanceSet (OSCTXT* pctxt, rrlp_enc_GANSSAssistanceSet* pvalue);

EXTERN void asn1Free_rrlp_enc_GANSSAssistanceSet (OSCTXT *pctxt, 
   rrlp_enc_GANSSAssistanceSet* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSModelID                                              */
/*                                                            */
/**************************************************************/
/*
GANSSModelID ::= BIT STRING  { model1(0), model2(1), model3(2), model4(3), model5(4), model6(5), model7(6), model8(7) } (SIZE (1..8))
*/
/* Named bit constants */

#define rrlp_enc_GANSSModelID_rrlp_enc_model1                 0
#define rrlp_enc_GANSSModelID_rrlp_enc_model2                 1
#define rrlp_enc_GANSSModelID_rrlp_enc_model3                 2
#define rrlp_enc_GANSSModelID_rrlp_enc_model4                 3
#define rrlp_enc_GANSSModelID_rrlp_enc_model5                 4
#define rrlp_enc_GANSSModelID_rrlp_enc_model6                 5
#define rrlp_enc_GANSSModelID_rrlp_enc_model7                 6
#define rrlp_enc_GANSSModelID_rrlp_enc_model8                 7

typedef struct rrlp_enc_GANSSModelID {
   OSUINT32 numbits;
   OSOCTET data[1];
} rrlp_enc_GANSSModelID;

EXTERN int asn1PE_rrlp_enc_GANSSModelID (OSCTXT* pctxt, rrlp_enc_GANSSModelID* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSAdditionalAssistanceChoicesForOneGANSS               */
/*                                                            */
/**************************************************************/
/*
GANSSAdditionalAssistanceChoicesForOneGANSS ::= SEQUENCE {
   ganssID [0] INTEGER (0..7) OPTIONAL,
   ganssClockModelChoice [1] GANSSModelID OPTIONAL,
   gannsOrbitModelChoice [2] GANSSModelID OPTIONAL,
   ganssAlmanacModelChoice [3] GANSSModelID OPTIONAL,
   ganssAdditionalUTCModelChoice [4] GANSSModelID OPTIONAL,
   ...
}
*/
typedef struct EXTERN rrlp_enc_GANSSAdditionalAssistanceChoicesForOneGANSS {
   struct {
      unsigned ganssIDPresent : 1;
      unsigned ganssClockModelChoicePresent : 1;
      unsigned gannsOrbitModelChoicePresent : 1;
      unsigned ganssAlmanacModelChoicePresent : 1;
      unsigned ganssAdditionalUTCModelChoicePresent : 1;
   } m;
   OSUINT8 ganssID;
   rrlp_enc_GANSSModelID ganssClockModelChoice;
   rrlp_enc_GANSSModelID gannsOrbitModelChoice;
   rrlp_enc_GANSSModelID ganssAlmanacModelChoice;
   rrlp_enc_GANSSModelID ganssAdditionalUTCModelChoice;
} rrlp_enc_GANSSAdditionalAssistanceChoicesForOneGANSS;

EXTERN int asn1PE_rrlp_enc_GANSSAdditionalAssistanceChoicesForOneGANSS (OSCTXT* pctxt, rrlp_enc_GANSSAdditionalAssistanceChoicesForOneGANSS* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSAdditionalAssistanceChoices                          */
/*                                                            */
/**************************************************************/
/*
GANSSAdditionalAssistanceChoices ::= SEQUENCE (SIZE (1..16)) OF GANSSAdditionalAssistanceChoicesForOneGANSS
*/
typedef struct EXTERN rrlp_enc_GANSSAdditionalAssistanceChoices {
   OSUINT32 n;
   rrlp_enc_GANSSAdditionalAssistanceChoicesForOneGANSS *elem;
} rrlp_enc_GANSSAdditionalAssistanceChoices;

EXTERN int asn1PE_rrlp_enc_GANSSAdditionalAssistanceChoices (OSCTXT* pctxt, rrlp_enc_GANSSAdditionalAssistanceChoices* pvalue);

EXTERN void asn1Free_rrlp_enc_GANSSAdditionalAssistanceChoices (OSCTXT *pctxt, 
   rrlp_enc_GANSSAdditionalAssistanceChoices* pvalue);

/**************************************************************/
/*                                                            */
/*  AssistanceSupported                                       */
/*                                                            */
/**************************************************************/
/*
 indicates MS support of different types of assistance data

AssistanceSupported ::= SEQUENCE {
   gpsAssistance [0] GPSAssistance OPTIONAL,
   gANSSAssistanceSet [1] GANSSAssistanceSet OPTIONAL,
   ...,
   gANSSAdditionalAssistanceChoices [2] GANSSAdditionalAssistanceChoices OPTIONAL
}
*/
typedef struct EXTERN rrlp_enc_AssistanceSupported {
   struct {
      unsigned gpsAssistancePresent : 1;
      unsigned gANSSAssistanceSetPresent : 1;
      unsigned gANSSAdditionalAssistanceChoicesPresent : 1;
   } m;
   rrlp_enc_GPSAssistance gpsAssistance;
   rrlp_enc_GANSSAssistanceSet gANSSAssistanceSet;
   rrlp_enc_GANSSAdditionalAssistanceChoices gANSSAdditionalAssistanceChoices;
} rrlp_enc_AssistanceSupported;

EXTERN int asn1PE_rrlp_enc_AssistanceSupported (OSCTXT* pctxt, rrlp_enc_AssistanceSupported* pvalue);

EXTERN void asn1Free_rrlp_enc_AssistanceSupported (OSCTXT *pctxt, 
   rrlp_enc_AssistanceSupported* pvalue);

/**************************************************************/
/*                                                            */
/*  AssistanceNeeded                                          */
/*                                                            */
/**************************************************************/
/*
 indicates assistance data that may be needed by the MS
 These elements are coded as defined in TS 49.031 with the exceptions defined in section A.8.2.3

AssistanceNeeded ::= SEQUENCE {
   gpsAssistanceData [0] GPSAssistanceData OPTIONAL,
   ganssAssistanceData [1] GANSSAssistanceData OPTIONAL,
   ...
}
*/
typedef struct EXTERN rrlp_enc_AssistanceNeeded {
   struct {
      unsigned gpsAssistanceDataPresent : 1;
      unsigned ganssAssistanceDataPresent : 1;
   } m;
   rrlp_enc_GPSAssistanceData gpsAssistanceData;
   rrlp_enc_GANSSAssistanceData ganssAssistanceData;
} rrlp_enc_AssistanceNeeded;

EXTERN int asn1PE_rrlp_enc_AssistanceNeeded (OSCTXT* pctxt, rrlp_enc_AssistanceNeeded* pvalue);

/**************************************************************/
/*                                                            */
/*  PosCapability_Rsp                                         */
/*                                                            */
/**************************************************************/
/*
 Positioning Capability response component

PosCapability-Rsp ::= SEQUENCE {
   extended-reference [0] Extended-reference,
   posCapabilities [1] PosCapabilities,
   assistanceSupported [2] AssistanceSupported OPTIONAL,
   assistanceNeeded [3] AssistanceNeeded OPTIONAL,
   extensionContainer [4] ExtensionContainer OPTIONAL,
   ...
}
*/
typedef struct EXTERN rrlp_enc_PosCapability_Rsp {
   struct {
      unsigned assistanceSupportedPresent : 1;
      unsigned assistanceNeededPresent : 1;
      unsigned extensionContainerPresent : 1;
   } m;
   rrlp_enc_Extended_reference extended_reference;
   rrlp_enc_PosCapabilities posCapabilities;
   rrlp_enc_AssistanceSupported assistanceSupported;
   rrlp_enc_AssistanceNeeded assistanceNeeded;
   rrlp_enc_ExtensionContainer extensionContainer;
} rrlp_enc_PosCapability_Rsp;

EXTERN int asn1PE_rrlp_enc_PosCapability_Rsp (OSCTXT* pctxt, rrlp_enc_PosCapability_Rsp* pvalue);

EXTERN void asn1Free_rrlp_enc_PosCapability_Rsp (OSCTXT *pctxt, 
   rrlp_enc_PosCapability_Rsp* pvalue);

/**************************************************************/
/*                                                            */
/*  RelDistance                                               */
/*                                                            */
/**************************************************************/
/*
 Relative north/east distance

RelDistance ::= INTEGER (-200000..200000)
*/
typedef OSINT32 rrlp_enc_RelDistance;

EXTERN int asn1PE_rrlp_enc_RelDistance (OSCTXT* pctxt, rrlp_enc_RelDistance value);

/**************************************************************/
/*                                                            */
/*  RelativeAlt                                               */
/*                                                            */
/**************************************************************/
/*
 Relative altitude

RelativeAlt ::= INTEGER (-4000..4000)
*/
typedef OSINT16 rrlp_enc_RelativeAlt;

EXTERN int asn1PE_rrlp_enc_RelativeAlt (OSCTXT* pctxt, rrlp_enc_RelativeAlt value);

/**************************************************************/
/*                                                            */
/*  GPSTOW23b                                                 */
/*                                                            */
/**************************************************************/
/*
 GPSTOW, range 0-604799.92, resolution 0.08 sec, 23-bit presentation

GPSTOW23b ::= INTEGER (0..7559999)
*/
typedef OSUINT32 rrlp_enc_GPSTOW23b;

EXTERN int asn1PE_rrlp_enc_GPSTOW23b (OSCTXT* pctxt, rrlp_enc_GPSTOW23b value);

/**************************************************************/
/*                                                            */
/*  GPSWeek                                                   */
/*                                                            */
/**************************************************************/
/*
 GPS week number

GPSWeek ::= INTEGER (0..1023)
*/
typedef OSUINT16 rrlp_enc_GPSWeek;

EXTERN int asn1PE_rrlp_enc_GPSWeek (OSCTXT* pctxt, rrlp_enc_GPSWeek value);

/**************************************************************/
/*                                                            */
/*  TLMWord                                                   */
/*                                                            */
/**************************************************************/
/*
 TLM Word, 14 bits

TLMWord ::= INTEGER (0..16383)
*/
typedef OSUINT16 rrlp_enc_TLMWord;

EXTERN int asn1PE_rrlp_enc_TLMWord (OSCTXT* pctxt, rrlp_enc_TLMWord value);

/**************************************************************/
/*                                                            */
/*  AntiSpoofFlag                                             */
/*                                                            */
/**************************************************************/
/*
 Anti-Spoof flag

AntiSpoofFlag ::= INTEGER (0..1)
*/
typedef OSUINT8 rrlp_enc_AntiSpoofFlag;

EXTERN int asn1PE_rrlp_enc_AntiSpoofFlag (OSCTXT* pctxt, rrlp_enc_AntiSpoofFlag value);

/**************************************************************/
/*                                                            */
/*  AlertFlag                                                 */
/*                                                            */
/**************************************************************/
/*
 Alert flag

AlertFlag ::= INTEGER (0..1)
*/
typedef OSUINT8 rrlp_enc_AlertFlag;

EXTERN int asn1PE_rrlp_enc_AlertFlag (OSCTXT* pctxt, rrlp_enc_AlertFlag value);

/**************************************************************/
/*                                                            */
/*  TLMReservedBits                                           */
/*                                                            */
/**************************************************************/
/*
 Reserved bits in TLM word, MSB occurs earlier in TLM Word transmitted by satellite

TLMReservedBits ::= INTEGER (0..3)
*/
typedef OSUINT8 rrlp_enc_TLMReservedBits;

EXTERN int asn1PE_rrlp_enc_TLMReservedBits (OSCTXT* pctxt, rrlp_enc_TLMReservedBits value);

/**************************************************************/
/*                                                            */
/*  FrameNumber                                               */
/*                                                            */
/**************************************************************/
/*
 Frame number

FrameNumber ::= INTEGER (0..2097151)
*/
typedef OSUINT32 rrlp_enc_FrameNumber;

EXTERN int asn1PE_rrlp_enc_FrameNumber (OSCTXT* pctxt, rrlp_enc_FrameNumber value);

/**************************************************************/
/*                                                            */
/*  TimeSlot                                                  */
/*                                                            */
/**************************************************************/
/*
 Time slot number

TimeSlot ::= INTEGER (0..7)
*/
typedef OSUINT8 rrlp_enc_TimeSlot;

EXTERN int asn1PE_rrlp_enc_TimeSlot (OSCTXT* pctxt, rrlp_enc_TimeSlot value);

/**************************************************************/
/*                                                            */
/*  BitNumber                                                 */
/*                                                            */
/**************************************************************/
/*
 Bit number

BitNumber ::= INTEGER (0..156)
*/
typedef OSUINT8 rrlp_enc_BitNumber;

EXTERN int asn1PE_rrlp_enc_BitNumber (OSCTXT* pctxt, rrlp_enc_BitNumber value);

/**************************************************************/
/*                                                            */
/*  GANSSTOD                                                  */
/*                                                            */
/**************************************************************/
/*
 GANSS TOD integer seconds

GANSSTOD ::= INTEGER (0..86399)
*/
typedef OSUINT32 rrlp_enc_GANSSTOD;

EXTERN int asn1PE_rrlp_enc_GANSSTOD (OSCTXT* pctxt, rrlp_enc_GANSSTOD value);

/**************************************************************/
/*                                                            */
/*  FrameDrift                                                */
/*                                                            */
/**************************************************************/
/*
 Frame drift

FrameDrift ::= INTEGER (-64..63)
*/
typedef OSINT8 rrlp_enc_FrameDrift;

EXTERN int asn1PE_rrlp_enc_FrameDrift (OSCTXT* pctxt, rrlp_enc_FrameDrift value);

/**************************************************************/
/*                                                            */
/*  GANSSRefMeasurement_R12_Ext_Element_dopplerUncertaintyEx  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'GANSSRefMeasurement-R12-Ext-Element'
*/
typedef enum {
   rrlp_enc_GANSSRefMeasurement_R12_Ext_Element_dopplerUncertaintyExt_d60 = 0,
   rrlp_enc_GANSSRefMeasurement_R12_Ext_Element_dopplerUncertaintyExt_d80 = 1,
   rrlp_enc_GANSSRefMeasurement_R12_Ext_Element_dopplerUncertaintyExt_d100 = 2,
   rrlp_enc_GANSSRefMeasurement_R12_Ext_Element_dopplerUncertaintyExt_d120 = 3,
   rrlp_enc_GANSSRefMeasurement_R12_Ext_Element_dopplerUncertaintyExt_noInformation = 4
} rrlp_enc_GANSSRefMeasurement_R12_Ext_Element_dopplerUncertaintyExt_Root;

typedef OSUINT32 rrlp_enc_GANSSRefMeasurement_R12_Ext_Element_dopplerUncertaintyExt;

EXTERN int asn1PE_rrlp_enc_GANSSRefMeasurement_R12_Ext_Element_dopplerUncertaintyExt (OSCTXT* pctxt, rrlp_enc_GANSSRefMeasurement_R12_Ext_Element_dopplerUncertaintyExt value);

/**************************************************************/
/*                                                            */
/*  GANSSDeltaElementList_element                             */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'GANSSDeltaElementList'
*/
typedef struct EXTERN rrlp_enc_GANSSDeltaElementList_element {
   OSUINT32 numocts;
   OSOCTET data[49];
} rrlp_enc_GANSSDeltaElementList_element;

EXTERN int asn1PE_rrlp_enc_GANSSDeltaElementList_element (OSCTXT* pctxt, rrlp_enc_GANSSDeltaElementList_element* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSSatEventsInfo_eventOccured                           */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'GANSSSatEventsInfo'
*/
typedef struct rrlp_enc_GANSSSatEventsInfo_eventOccured {
   OSUINT32 numbits;
   OSOCTET data[8];
} rrlp_enc_GANSSSatEventsInfo_eventOccured;

EXTERN int asn1PE_rrlp_enc_GANSSSatEventsInfo_eventOccured (OSCTXT* pctxt, rrlp_enc_GANSSSatEventsInfo_eventOccured* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSSatEventsInfo_futureEventNoted                       */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'GANSSSatEventsInfo'
*/
typedef struct rrlp_enc_GANSSSatEventsInfo_futureEventNoted {
   OSUINT32 numbits;
   OSOCTET data[8];
} rrlp_enc_GANSSSatEventsInfo_futureEventNoted;

EXTERN int asn1PE_rrlp_enc_GANSSSatEventsInfo_futureEventNoted (OSCTXT* pctxt, rrlp_enc_GANSSSatEventsInfo_futureEventNoted* pvalue);

/**************************************************************/
/*                                                            */
/*  GPSDeltaElementList_element                               */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'GPSDeltaElementList'
*/
typedef struct EXTERN rrlp_enc_GPSDeltaElementList_element {
   OSUINT32 numocts;
   OSOCTET data[47];
} rrlp_enc_GPSDeltaElementList_element;

EXTERN int asn1PE_rrlp_enc_GPSDeltaElementList_element (OSCTXT* pctxt, rrlp_enc_GPSDeltaElementList_element* pvalue);

/**************************************************************/
/*                                                            */
/*  GPSAcquisAssist_R12_Ext_Element_dopplerUncertaintyExt     */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'GPSAcquisAssist-R12-Ext-Element'
*/
typedef enum {
   rrlp_enc_GPSAcquisAssist_R12_Ext_Element_dopplerUncertaintyExt_d300 = 0,
   rrlp_enc_GPSAcquisAssist_R12_Ext_Element_dopplerUncertaintyExt_d400 = 1,
   rrlp_enc_GPSAcquisAssist_R12_Ext_Element_dopplerUncertaintyExt_d500 = 2,
   rrlp_enc_GPSAcquisAssist_R12_Ext_Element_dopplerUncertaintyExt_d600 = 3,
   rrlp_enc_GPSAcquisAssist_R12_Ext_Element_dopplerUncertaintyExt_noInformation = 4
} rrlp_enc_GPSAcquisAssist_R12_Ext_Element_dopplerUncertaintyExt_Root;

typedef OSUINT32 rrlp_enc_GPSAcquisAssist_R12_Ext_Element_dopplerUncertaintyExt;

EXTERN int asn1PE_rrlp_enc_GPSAcquisAssist_R12_Ext_Element_dopplerUncertaintyExt (OSCTXT* pctxt, rrlp_enc_GPSAcquisAssist_R12_Ext_Element_dopplerUncertaintyExt value);

/**************************************************************/
/*                                                            */
/*  GPSTime                                                   */
/*                                                            */
/**************************************************************/
/*
 GPS Time includes week number and time-of-week (TOW)

GPSTime ::= SEQUENCE {
   gpsTOW23b [0] GPSTOW23b,
   gpsWeek [1] GPSWeek
}
*/
typedef struct EXTERN rrlp_enc_GPSTime {
   rrlp_enc_GPSTOW23b gpsTOW23b;
   rrlp_enc_GPSWeek gpsWeek;
} rrlp_enc_GPSTime;

EXTERN int asn1PE_rrlp_enc_GPSTime (OSCTXT* pctxt, rrlp_enc_GPSTime* pvalue);

/**************************************************************/
/*                                                            */
/*  GSMTime                                                   */
/*                                                            */
/**************************************************************/
/*
GSMTime ::= SEQUENCE {
   bcchCarrier [0] BCCHCarrier,
   bsic [1] BSIC,
   frameNumber [2] FrameNumber,
   timeSlot [3] TimeSlot,
   bitNumber [4] BitNumber
}
*/
typedef struct EXTERN rrlp_enc_GSMTime {
   rrlp_enc_BCCHCarrier bcchCarrier;
   rrlp_enc_BSIC bsic;
   rrlp_enc_FrameNumber frameNumber;
   rrlp_enc_TimeSlot timeSlot;
   rrlp_enc_BitNumber bitNumber;
} rrlp_enc_GSMTime;

EXTERN int asn1PE_rrlp_enc_GSMTime (OSCTXT* pctxt, rrlp_enc_GSMTime* pvalue);

/**************************************************************/
/*                                                            */
/*  GPSTOWAssistElement                                       */
/*                                                            */
/**************************************************************/
/*
GPSTOWAssistElement ::= SEQUENCE {
   satelliteID [0] SatelliteID,
   tlmWord [1] TLMWord,
   antiSpoof [2] AntiSpoofFlag,
   alert [3] AlertFlag,
   tlmRsvdBits [4] TLMReservedBits
}
*/
typedef struct EXTERN rrlp_enc_GPSTOWAssistElement {
   rrlp_enc_SatelliteID satelliteID;
   rrlp_enc_TLMWord tlmWord;
   rrlp_enc_AntiSpoofFlag antiSpoof;
   rrlp_enc_AlertFlag alert;
   rrlp_enc_TLMReservedBits tlmRsvdBits;
} rrlp_enc_GPSTOWAssistElement;

EXTERN int asn1PE_rrlp_enc_GPSTOWAssistElement (OSCTXT* pctxt, rrlp_enc_GPSTOWAssistElement* pvalue);

/**************************************************************/
/*                                                            */
/*  GPSTOWAssist                                              */
/*                                                            */
/**************************************************************/
/*
 GPSTOWAssist consists of TLM message, Anti-spoof flag, Alert flag, and 2 reserved bits in TLM Word
 for each visible satellite.
 N_SAT can be read from number of elements in GPSTOWAssist

GPSTOWAssist ::= SEQUENCE (SIZE (1..12)) OF GPSTOWAssistElement
*/
typedef struct EXTERN rrlp_enc_GPSTOWAssist {
   OSUINT32 n;
   rrlp_enc_GPSTOWAssistElement *elem;
} rrlp_enc_GPSTOWAssist;

EXTERN int asn1PE_rrlp_enc_GPSTOWAssist (OSCTXT* pctxt, rrlp_enc_GPSTOWAssist* pvalue);

EXTERN void asn1Free_rrlp_enc_GPSTOWAssist (OSCTXT *pctxt, 
   rrlp_enc_GPSTOWAssist* pvalue);

/**************************************************************/
/*                                                            */
/*  ReferenceTime                                             */
/*                                                            */
/**************************************************************/
/*
ReferenceTime ::= SEQUENCE {
   gpsTime [0] GPSTime,
   gsmTime [1] GSMTime OPTIONAL,
   gpsTowAssist [2] GPSTOWAssist OPTIONAL
}
*/
typedef struct EXTERN rrlp_enc_ReferenceTime {
   struct {
      unsigned gsmTimePresent : 1;
      unsigned gpsTowAssistPresent : 1;
   } m;
   rrlp_enc_GPSTime gpsTime;
   rrlp_enc_GSMTime gsmTime;
   rrlp_enc_GPSTOWAssist gpsTowAssist;
} rrlp_enc_ReferenceTime;

EXTERN int asn1PE_rrlp_enc_ReferenceTime (OSCTXT* pctxt, rrlp_enc_ReferenceTime* pvalue);

EXTERN void asn1Free_rrlp_enc_ReferenceTime (OSCTXT *pctxt, 
   rrlp_enc_ReferenceTime* pvalue);

/**************************************************************/
/*                                                            */
/*  RefLocation                                               */
/*                                                            */
/**************************************************************/
/*
 Reference Location IE

RefLocation ::= SEQUENCE {
   threeDLocation [0] Ext-GeographicalInformation
}
*/
typedef struct EXTERN rrlp_enc_RefLocation {
   rrlp_enc_Ext_GeographicalInformation threeDLocation;
} rrlp_enc_RefLocation;

EXTERN int asn1PE_rrlp_enc_RefLocation (OSCTXT* pctxt, rrlp_enc_RefLocation* pvalue);

/**************************************************************/
/*                                                            */
/*  SatElement                                                */
/*                                                            */
/**************************************************************/
/*
 number of correction for satellites

SatElement ::= SEQUENCE {
   satelliteID [0] SatelliteID,
   iode [1] INTEGER (0..239),
   udre [2] INTEGER (0..3),
   pseudoRangeCor [3] INTEGER (-2047..2047),
   rangeRateCor [4] INTEGER (-127..127),
   deltaPseudoRangeCor2 [5] INTEGER (-127..127),
   deltaRangeRateCor2 [6] INTEGER (-7..7),
   deltaPseudoRangeCor3 [7] INTEGER (-127..127),
   deltaRangeRateCor3 [8] INTEGER (-7..7)
}
*/
typedef struct EXTERN rrlp_enc_SatElement {
   rrlp_enc_SatelliteID satelliteID;
   OSUINT8 iode;
   OSUINT8 udre;
   OSINT16 pseudoRangeCor;
   OSINT8 rangeRateCor;
   OSINT8 deltaPseudoRangeCor2;
   OSINT8 deltaRangeRateCor2;
   OSINT8 deltaPseudoRangeCor3;
   OSINT8 deltaRangeRateCor3;
} rrlp_enc_SatElement;

EXTERN int asn1PE_rrlp_enc_SatElement (OSCTXT* pctxt, rrlp_enc_SatElement* pvalue);

/**************************************************************/
/*                                                            */
/*  SeqOfSatElement                                           */
/*                                                            */
/**************************************************************/
/*
SeqOfSatElement ::= SEQUENCE (SIZE (1..16)) OF SatElement
*/
typedef struct EXTERN rrlp_enc_SeqOfSatElement {
   OSUINT32 n;
   rrlp_enc_SatElement *elem;
} rrlp_enc_SeqOfSatElement;

EXTERN int asn1PE_rrlp_enc_SeqOfSatElement (OSCTXT* pctxt, rrlp_enc_SeqOfSatElement* pvalue);

EXTERN void asn1Free_rrlp_enc_SeqOfSatElement (OSCTXT *pctxt, 
   rrlp_enc_SeqOfSatElement* pvalue);

/**************************************************************/
/*                                                            */
/*  ExpectedOTD                                               */
/*                                                            */
/**************************************************************/
/*
 Expected OTD value between nbor base station and reference BTS
 at MS's current estimated location.

ExpectedOTD ::= INTEGER (0..1250)
*/
typedef OSUINT16 rrlp_enc_ExpectedOTD;

EXTERN int asn1PE_rrlp_enc_ExpectedOTD (OSCTXT* pctxt, rrlp_enc_ExpectedOTD value);

/**************************************************************/
/*                                                            */
/*  ExpOTDUncertainty                                         */
/*                                                            */
/**************************************************************/
/*
 The ExpectedOTD value 1250 shall not be encoded by the transmitting entity and
 shall be treated by the receiving entity as 0.
 Uncertainty of Exptected OTD in bits

ExpOTDUncertainty ::= INTEGER (0..7)
*/
typedef OSUINT8 rrlp_enc_ExpOTDUncertainty;

EXTERN int asn1PE_rrlp_enc_ExpOTDUncertainty (OSCTXT* pctxt, rrlp_enc_ExpOTDUncertainty value);

/**************************************************************/
/*                                                            */
/*  AssistBTSData_R98_ExpOTD                                  */
/*                                                            */
/**************************************************************/
/*
 This element completes AssistBTSData IE

AssistBTSData-R98-ExpOTD ::= SEQUENCE {
   expectedOTD [0] ExpectedOTD,
   expOTDuncertainty [1] ExpOTDUncertainty
}
*/
typedef struct EXTERN rrlp_enc_AssistBTSData_R98_ExpOTD {
   rrlp_enc_ExpectedOTD expectedOTD;
   rrlp_enc_ExpOTDUncertainty expOTDuncertainty;
} rrlp_enc_AssistBTSData_R98_ExpOTD;

EXTERN int asn1PE_rrlp_enc_AssistBTSData_R98_ExpOTD (OSCTXT* pctxt, rrlp_enc_AssistBTSData_R98_ExpOTD* pvalue);

/**************************************************************/
/*                                                            */
/*  SystemInfoAssistBTS_R98_ExpOTD                            */
/*                                                            */
/**************************************************************/
/*
 whether n.th is present or not ?

SystemInfoAssistBTS-R98-ExpOTD ::= CHOICE {
   notPresent [0] NULL,
   present [1] AssistBTSData-R98-ExpOTD
}
*/
/* Choice tag constants */

#define T_rrlp_enc_SystemInfoAssistBTS_R98_ExpOTD_notPresent 1
#define T_rrlp_enc_SystemInfoAssistBTS_R98_ExpOTD_present 2

typedef struct EXTERN rrlp_enc_SystemInfoAssistBTS_R98_ExpOTD {
   OSUINT32 t;
   union {
      /* t = 1 */
      /* t = 2 */
      rrlp_enc_AssistBTSData_R98_ExpOTD *present;
   } u;
} rrlp_enc_SystemInfoAssistBTS_R98_ExpOTD;

EXTERN int asn1PE_rrlp_enc_SystemInfoAssistBTS_R98_ExpOTD (OSCTXT* pctxt, rrlp_enc_SystemInfoAssistBTS_R98_ExpOTD* pvalue);

EXTERN void asn1Free_rrlp_enc_SystemInfoAssistBTS_R98_ExpOTD (OSCTXT *pctxt, 
   rrlp_enc_SystemInfoAssistBTS_R98_ExpOTD* pvalue);

/**************************************************************/
/*                                                            */
/*  SeqOfSystemInfoAssistBTS_R98_ExpOTD                       */
/*                                                            */
/**************************************************************/
/*
 SeqOfSystemInfoAssistBTS-R98-ExpOTD index refer to SeqOfSystemInfoAssistBTS
 If the index exceeds the SegOfSystemInfoAssistBTS range or if there is other
 inconsistencies between the BTS indices, the MS shall apply protocol
 error cause incorrectData

SeqOfSystemInfoAssistBTS-R98-ExpOTD ::= SEQUENCE (SIZE (1..32)) OF SystemInfoAssistBTS-R98-ExpOTD
*/
typedef struct EXTERN rrlp_enc_SeqOfSystemInfoAssistBTS_R98_ExpOTD {
   OSUINT32 n;
   rrlp_enc_SystemInfoAssistBTS_R98_ExpOTD *elem;
} rrlp_enc_SeqOfSystemInfoAssistBTS_R98_ExpOTD;

EXTERN int asn1PE_rrlp_enc_SeqOfSystemInfoAssistBTS_R98_ExpOTD (OSCTXT* pctxt, rrlp_enc_SeqOfSystemInfoAssistBTS_R98_ExpOTD* pvalue);

EXTERN void asn1Free_rrlp_enc_SeqOfSystemInfoAssistBTS_R98_ExpOTD (OSCTXT *pctxt, 
   rrlp_enc_SeqOfSystemInfoAssistBTS_R98_ExpOTD* pvalue);

/**************************************************************/
/*                                                            */
/*  SystemInfoAssistData_R98_ExpOTD                           */
/*                                                            */
/**************************************************************/
/*
 SystemInfoAssistData R98 extension

SystemInfoAssistData-R98-ExpOTD ::= SEQUENCE {
   systemInfoAssistListR98-ExpOTD [0] SeqOfSystemInfoAssistBTS-R98-ExpOTD
}
*/
typedef struct EXTERN rrlp_enc_SystemInfoAssistData_R98_ExpOTD {
   rrlp_enc_SeqOfSystemInfoAssistBTS_R98_ExpOTD systemInfoAssistListR98_ExpOTD;
} rrlp_enc_SystemInfoAssistData_R98_ExpOTD;

EXTERN int asn1PE_rrlp_enc_SystemInfoAssistData_R98_ExpOTD (OSCTXT* pctxt, rrlp_enc_SystemInfoAssistData_R98_ExpOTD* pvalue);

EXTERN void asn1Free_rrlp_enc_SystemInfoAssistData_R98_ExpOTD (OSCTXT *pctxt, 
   rrlp_enc_SystemInfoAssistData_R98_ExpOTD* pvalue);

/**************************************************************/
/*                                                            */
/*  StandardClockModelElement                                 */
/*                                                            */
/**************************************************************/
/*
StandardClockModelElement ::= SEQUENCE {
   stanClockToc [0] INTEGER (0..16383),
   stanClockAF2 [1] INTEGER (-32..31),
   stanClockAF1 [2] INTEGER (-1048576..1048575),
   stanClockAF0 [3] INTEGER (-1073741824..1073741823),
   stanClockTgd [4] INTEGER (-512..511) OPTIONAL,
   stanModelID [5] INTEGER (0..1) OPTIONAL,
   ...
}
*/
typedef struct EXTERN rrlp_enc_StandardClockModelElement {
   struct {
      unsigned stanClockTgdPresent : 1;
      unsigned stanModelIDPresent : 1;
   } m;
   OSUINT16 stanClockToc;
   OSINT8 stanClockAF2;
   OSINT32 stanClockAF1;
   OSINT32 stanClockAF0;
   OSINT16 stanClockTgd;
   OSUINT8 stanModelID;
} rrlp_enc_StandardClockModelElement;

EXTERN int asn1PE_rrlp_enc_StandardClockModelElement (OSCTXT* pctxt, rrlp_enc_StandardClockModelElement* pvalue);

/**************************************************************/
/*                                                            */
/*  UTCmodelSet5_r12                                          */
/*                                                            */
/**************************************************************/
/*
UTCmodelSet5-r12 ::= SEQUENCE {
   utcA0-r12 [0] INTEGER (-2147483648..2147483647),
   utcA1-r12 [1] INTEGER (-8388608..8388607),
   utcDeltaTls-r12 [2] INTEGER (-128..127),
   utcWNlsf-r12 [3] INTEGER (0..255),
   utcDN-r12 [4] INTEGER (0..255),
   utcDeltaTlsf-r12 [5] INTEGER (-128..127)
}
*/
typedef struct EXTERN rrlp_enc_UTCmodelSet5_r12 {
   OSINT32 utcA0_r12;
   OSINT32 utcA1_r12;
   OSINT8 utcDeltaTls_r12;
   OSUINT8 utcWNlsf_r12;
   OSUINT8 utcDN_r12;
   OSINT8 utcDeltaTlsf_r12;
} rrlp_enc_UTCmodelSet5_r12;

EXTERN int asn1PE_rrlp_enc_UTCmodelSet5_r12 (OSCTXT* pctxt, rrlp_enc_UTCmodelSet5_r12* pvalue);

/**************************************************************/
/*                                                            */
/*  GPSReferenceTime_R10_Ext                                  */
/*                                                            */
/**************************************************************/
/*
 GPS Reference Time Rel-10 Extension:

GPSReferenceTime-R10-Ext ::= SEQUENCE {
   gpsWeekCycleNumber [0] INTEGER (0..7)
}
*/
typedef struct EXTERN rrlp_enc_GPSReferenceTime_R10_Ext {
   OSUINT8 gpsWeekCycleNumber;
} rrlp_enc_GPSReferenceTime_R10_Ext;

EXTERN int asn1PE_rrlp_enc_GPSReferenceTime_R10_Ext (OSCTXT* pctxt, rrlp_enc_GPSReferenceTime_R10_Ext* pvalue);

/* Value definitions */

#define ASN1V_maxGPSAssistanceData 40
#define ASN1V_maxGANSSAssistanceData 40

/**
 * Header file for ASN.1 module RRLP-Messages
 */
/**************************************************************/
/*                                                            */
/*  RRLP_Component                                            */
/*                                                            */
/**************************************************************/
/*
RRLP-Component ::= CHOICE {
   msrPositionReq [0] NULL,
   msrPositionRsp [1] MsrPosition-Rsp,
   assistanceData [2] NULL,
   assistanceDataAck [3] NULL,
   protocolError [4] ProtocolError,
   ...,
   posCapabilityReq [5] PosCapability-Req,
   posCapabilityRsp [6] PosCapability-Rsp
}
*/
/* Choice tag constants */

#define T_rrlp_enc_RRLP_Component_msrPositionReq 1
#define T_rrlp_enc_RRLP_Component_msrPositionRsp 2
#define T_rrlp_enc_RRLP_Component_assistanceData 3
#define T_rrlp_enc_RRLP_Component_assistanceDataAck 4
#define T_rrlp_enc_RRLP_Component_protocolError 5
#define T_rrlp_enc_RRLP_Component_posCapabilityReq 6
#define T_rrlp_enc_RRLP_Component_posCapabilityRsp 7
#define T_rrlp_enc_RRLP_Component_extElem1 8

typedef struct EXTERN rrlp_enc_RRLP_Component {
   OSUINT32 t;
   union {
      /* t = 1 */
      /* t = 2 */
      rrlp_enc_MsrPosition_Rsp *msrPositionRsp;
      /* t = 3 */
      /* t = 4 */
      /* t = 5 */
      rrlp_enc_ProtocolError *protocolError;
      /* t = 6 */
      rrlp_enc_PosCapability_Req *posCapabilityReq;
      /* t = 7 */
      rrlp_enc_PosCapability_Rsp *posCapabilityRsp;
      /* t = 8 */
   } u;
} rrlp_enc_RRLP_Component;

EXTERN int asn1PE_rrlp_enc_RRLP_Component (OSCTXT* pctxt, rrlp_enc_RRLP_Component* pvalue);

EXTERN void asn1Free_rrlp_enc_RRLP_Component (OSCTXT *pctxt, 
   rrlp_enc_RRLP_Component* pvalue);

/**************************************************************/
/*                                                            */
/*  PDU                                                       */
/*                                                            */
/**************************************************************/
/*
PDU ::= SEQUENCE {
   referenceNumber [0] INTEGER (0..7),
   component [1] RRLP-Component
}
*/
typedef struct EXTERN rrlp_enc_PDU {
   OSUINT8 referenceNumber;
   rrlp_enc_RRLP_Component component;
} rrlp_enc_PDU;

EXTERN int asn1PE_rrlp_enc_PDU (OSCTXT* pctxt, rrlp_enc_PDU* pvalue);

EXTERN void asn1Free_rrlp_enc_PDU (OSCTXT *pctxt, rrlp_enc_PDU* pvalue);

#ifdef __cplusplus
}
#endif

#endif
