
# -------------------------------------------------------------------------------- #
#                 G N S S _ S M _ F D M. S C O N S
#
# DESCRIPTION
#   SCons file for the GNSS SM LDM subsystem.
#
#
# INITIALIZATION AND SEQUENCING REQUIREMENTS
#   None.
#
#  Copyright (c) 2016 Qualcomm Technologies, Inc. 
#  Qualcomm Technologies Confidential and Proprietary. All Rights Reserved.
#
# All Rights Reserved. Qualcomm Confidential and Proprietary
# Export of this technology or software is regulated by the U.S. Government.
# Diversion contrary to U.S. law prohibited.
#
# All ideas, data and information contained in or disclosed by
# this document are confidential and proprietary information of
# Qualcomm Technologies Incorporated and all rights therein are expressly reserved.
# By accepting this material the recipient agrees that this material
# and the information contained therein are held in confidence and in
# trust and will not be used, copied, reproduced in whole or in part,
# nor its contents revealed in any manner to others without the express
# written permission of Qualcomm Technologies Incorporated.
# --------------------------------------------------------------------------------- #
#
# $Header: //components/rel/gnss8.mpss/9.5.1.1/gnss/sm/tm/ldm/build/smtm_ldm.scons#1 $
# $DateTime: 2020/07/21 21:23:44 $
# $Author: pwbldsvc $ 
# 
# --------------------------------------------------------------------------------- #

#--------------------------------------------------------------------------------
# Import and clone the SCons environment
#--------------------------------------------------------------------------------
Import('gps_env')
from glob import glob
from os.path import join, basename

#--------------------------------------------------------------------------------
# Require own Public API
#--------------------------------------------------------------------------------
gps_env.RequirePublicApi('LDM', area='GPS')

#--------------------------------------------------------------------------------
# Define and Require Internal API
#--------------------------------------------------------------------------------
gps_env.PublishProtectedApi('GPS_LDM', ['${GPS_ROOT}/gnss/sm/tm/ldm/inc',
                                     '${GPS_ROOT}/gnss/sm/tm/ldm/src',
                                    ])
gps_env.RequireProtectedApi(['GPS_LDM'])

#--------------------------------------------------------------------------------
# Build the files into a library
#--------------------------------------------------------------------------------
SRCPATH = '../src'
gps_env.VariantDir('${BUILDPATH}', SRCPATH, duplicate=0)
LIB_TARGET = '${BUILDPATH}/' + 'smtm_ldm'
IMAGES = ['MODEM_MODEM']

BINARY_LIB_CPP_SOURCES = gps_env.GenerateCompileList(SRCPATH, '*.cpp')

gps_env.AddGPSFullBinaryLibrary(IMAGES, 
                         (LIB_TARGET + '_pvt'),
                         BINARY_LIB_CPP_SOURCES)

#--------------------------------------------------------------------------------
# Compile the sub-modules
#--------------------------------------------------------------------------------
gps_env.LoadSoftwareUnits()
