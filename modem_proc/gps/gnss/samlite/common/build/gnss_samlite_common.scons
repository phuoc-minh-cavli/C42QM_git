# -------------------------------------------------------------------------------- #
#                   G N S S _ S L I M _ P R O V I D E R . S C O N S
#
# DESCRIPTION
#   SCons file for the GNSS SLIM Provider subsystem.
#
#
# INITIALIZATION AND SEQUENCING REQUIREMENTS
#   None.
#
#
# Copyright (c) 2014 Qualcomm Atheros, Inc. 
# All Rights Reserved. 
# Qualcomm Atheros Confidential and Proprietary.  
#
# Export of this technology or software is regulated by the U.S. Government.
# Diversion contrary to U.S. law prohibited.
#
# All ideas, data and information contained in or disclosed by
# this document are confidential and proprietary information of
# Qualcomm Technologies Incorporated and all rights therein are expressly reserved.
# By accepting this material the recipient agrees that this material
# and the information contained therein are held in confidence and in
# trust and will not be used, copied, reproduced in whole or in part,
# nor its contents revealed in any manner to others without the express
# written permission of Qualcomm Technologies Incorporated.
# --------------------------------------------------------------------------------- #

# --------------------------------------------------------------------------------- #
#
#                      EDIT HISTORY FOR FILE
#
# This section contains comments describing changes made to this file.
# Notice that changes are listed in reverse chronological order.
#
# $Header: //components/rel/gnss8.mpss/9.5.1.1/gnss/samlite/common/build/gnss_samlite_common.scons#1 $
# $DateTime: 2020/07/21 21:23:44 $
# $Author: pwbldsvc $
# 
# when          who     what, where, why
# ----------    ---     ------------------------------------------------------------
# 2014/03/12     tf     Initial version
#
# --------------------------------------------------------------------------------- #

#--------------------------------------------------------------------------------
# Import and clone the SCons environment
#--------------------------------------------------------------------------------
Import('gps_env')

#--------------------------------------------------------------------------------
# Check USES flags and return if library isn't needed
#--------------------------------------------------------------------------------
if 'USES_CGPS' not in gps_env:
   Return()

gps_env.LoadSoftwareUnits()