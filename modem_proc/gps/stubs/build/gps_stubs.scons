# -------------------------------------------------------------------------------- #
#                     G P S _ S T U B S . S C O N S
#
# DESCRIPTION
#   SCons file to remove the GPS Subsystem
#
#
# INITIALIZATION AND SEQUENCING REQUIREMENTS
#   None.
#
# Copyright (c) 2018 Qualcomm Technologies, Inc.
# Qualcomm Technologies Confidential and Proprietary. All Rights Reserved. 
#
# Export of this technology or software is regulated by the U.S. Government.
# Diversion contrary to U.S. law prohibited.
#
# All ideas, data and information contained in or disclosed by
# this document are confidential and proprietary information of
# Qualcomm Technologies Incorporated and all rights therein are expressly reserved.
# By accepting this material the recipient agrees that this material
# and the information contained therein are held in confidence and in
# trust and will not be used, copied, reproduced in whole or in part,
# nor its contents revealed in any manner to others without the express
# written permission of Qualcomm Technologies Incorporated.
#
# $Header: //components/rel/gnss8.mpss/9.5.1.1/stubs/build/gps_stubs.scons#2 $
# $DateTime: 2022/11/30 17:39:13 $
# $Author: pwbldsvc $ 
# --------------------------------------------------------------------------------- #

#--------------------------------------------------------------------------------
# Import the SCons environment
#--------------------------------------------------------------------------------
Import('gps_env')
#Import('gps_stub_libs')
from glob import glob
from os.path import join, basename

#--------------------------------------------------------------------------------
# Check USES flags and return if library isn't needed
#--------------------------------------------------------------------------------
# This check should be removed is dynamic library stub out feature is enabled
if 'USES_NO_GPS_GNSS' not in gps_env:
    # Non-Unified builds must clean out the GPS files properly
    if 'USES_UNIFIED_SP_BUILD' not in gps_env:
        gps_env.CleanPack('CLEANPACK_TARGET', gps_env.FindFiles('*', '..'))
    
    Return()
    
gps_env.PrintInfo("No GPS Supported on this build.  GPS Stubs Library available to Linker")

# Remove all source files from shipped build
gps_env.CleanPack('CLEANPACK_TARGET', gps_env.FindFiles('*.c', '..'))

#--------------------------------------------------------------------------------
# Setup source PATH
#--------------------------------------------------------------------------------
SRCPATH = '../src'
gps_env.VariantDir('${BUILDPATH}', SRCPATH, duplicate=0)

#--------------------------------------------------------------------------------
# Name of the subsystem to which this unit belongs
#--------------------------------------------------------------------------------
LIB_TARGET = '${BUILDPATH}/' + 'gps_stubs'

#--------------------------------------------------------------------------------
# Images that this VU is added
#--------------------------------------------------------------------------------
IMAGES = ['MODEM_MODEM']

#--------------------------------------------------------------------------------
# Generate the library and add to an image
#--------------------------------------------------------------------------------
BINARY_LIB_SOURCES = ['${BUILDPATH}/' + basename(fname)
                      for fname in glob(join(gps_env.subst(SRCPATH), '*.c'))]

#--------------------------------------------------------------------------------
# Ship our code as binary library and add it to the Modem image
#--------------------------------------------------------------------------------
#libs = gps_env.AddBinaryLibrary(IMAGES,
#                                (LIB_TARGET + '_pvt'),
#                                BINARY_LIB_SOURCES,
#                                add_to_list=False)
#gps_stub_libs.append(libs)
gps_env.AddBinaryLibrary(IMAGES,
                         (LIB_TARGET + '_pvt'),
                         BINARY_LIB_SOURCES)