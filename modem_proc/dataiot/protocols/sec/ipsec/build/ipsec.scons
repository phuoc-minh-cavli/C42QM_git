#===============================================================================
#
# ipsec Libs
#
# GENERAL DESCRIPTION
#    build script
#
#   Copyright (c) 2018 - 2019 Qualcomm Technologies, Inc.  All Rights Reserved.
#   Qualcomm Technologies Proprietary and Confidential.
#
#-------------------------------------------------------------------------------
#
#  $Header: //components/rel/dataiot.mpss/2.0/protocols/sec/ipsec/build/ipsec.scons#1 $
#  $DateTime: 2020/03/17 08:03:16 $
#  $Author: pwbldsvc $
#  $Change: 22996532 $
#                      EDIT HISTORY FOR FILE
#
#  This section contains comments describing changes made to the module.
#  Notice that changes are listed in reverse chronological order.
#
# when       who     what, where, why
# --------   ---     ---------------------------------------------------------
# 02/11/19   ds      Code cleanup related changes.
# 09/28/18    ds     Code changes for IOT.
# 10/24/13   jk      Sec - Modified file(s) to be compatible with new SRC-Debug reference builds
# 02/19/10   nk      IPSec CoreImage support
#===============================================================================
Import('env')
env = env.Clone()

#-------------------------------------------------------------------------------
# Source PATH
#-------------------------------------------------------------------------------
SRCPATH = "../src"

env.VariantDir('${BUILDPATH}', SRCPATH, duplicate=0)

#-------------------------------------------------------------------------------
# External depends outside CoreBSP
#-------------------------------------------------------------------------------
env.RequireExternalApi([
   'BREW',
   'CS',
   'DSM',
   'MODEM_API',
   'MULTIMEDIA',
   'MULTIMEDIA_CORE',
   'MULTIMEDIA_AUDIO',
])

MODEM_API = [
   'DATA',
   'HDR',
   'DATACOMMON',
   'DSM',
   'MCS',
   'GPS',
   'IPSEC',
]

env.RequirePublicApi(MODEM_API, 'modem')

#-------------------------------------------------------------------------------
# Internal depends within CoreBSP
#-------------------------------------------------------------------------------
CBSP_API = [
   'DAL',
   'DEBUGTOOLS',
   'HAL',
   'MPROC',
   'SECUREMSM',
   'SERVICES',
   'STORAGE',
   'SYSTEMDRIVERS',
   'HWENGINES',
   'POWER',

   # needs to be last also contains wrong comdef.h
   'KERNEL',
]

env.RequirePublicApi(CBSP_API, 'core')
env.RequireRestrictedApi(CBSP_API)

#env.RequireRestrictedApi('IPSEC')
#env.RequireProtectedApi('SEC')
#SME_PROTECTED_API = [
#    'SME_DRMCOM', 'SME_DRMOMA', 'SME_SMECOM', 'SME_CHDLRCOM', 'SME_SMESQL', 'X509',
#]
#env.RequireProtectedApi(SME_PROTECTED_API)

#-------------------------------------------------------------------------------
# Compiler, object, and linker definitions
#-------------------------------------------------------------------------------

#-------------------------------------------------------------------------------
# Sources, libraries
#-------------------------------------------------------------------------------

#----------------------------------------------------------------------------
# IP Security (IPSec)
#----------------------------------------------------------------------------
SEC_IPSEC_LIB_SOURCES = [
	'${BUILDPATH}/secipsesp.c', 
	'${BUILDPATH}/secipsah.c', 
	'${BUILDPATH}/secipscrypto.c', 	
 	'${BUILDPATH}/secipsspi_ex.c',
 	'${BUILDPATH}/secaesutils.c',
 	'${BUILDPATH}/secdsm.c',
]

build_image_tags = [
    'SINGLE_IMAGE', 'CBSP_SINGLE_IMAGE', 'MODEM_IMAGE', 'CBSP_MODEM_IMAGE',
    'APPS_IMAGE', 'CBSP_APPS_IMAGE', 'QDSP6_SW_IMAGE', 'CBSP_QDSP6_SW_IMAGE'
    ]

#--------------------------------------------------------------------------------
# Ship code as binary library. Build using source code if pack_exception is 
# True or if this in an internal build.
#--------------------------------------------------------------------------------
if env.has_key('USES_SEC'):
    if env.has_key('USES_IPSEC'):
        env.AddBinaryLibrary(build_image_tags, '${BUILDPATH}/ipsec', 
            SEC_IPSEC_LIB_SOURCES, pack_exception=['USES_CUSTOMER_GENERATE_LIBS'])

#----------------------------------------------------------------------------
# IxIPSec Interface
#----------------------------------------------------------------------------
IXIPSEC_CPP_SOURCES = [
	'${BUILDPATH}/IxIPSecSP.cpp',
	'${BUILDPATH}/IxIPSecSA.cpp',
	'${BUILDPATH}/IxIPSecSPDB.cpp',
	'${BUILDPATH}/IxIPSecSADB.cpp',
]
#--------------------------------------------------------------------------------
# Ship code as binary library. Build using source code if pack_exception is 
# True or if this in an internal build.
#--------------------------------------------------------------------------------
if env.has_key('USES_SEC'):
    if env.has_key('USES_IPSEC'):
         env.AddBinaryLibrary(build_image_tags, '${BUILDPATH}/ixipsec', 
         IXIPSEC_CPP_SOURCES)

#---------------------------------------------------------------------------
# Setup the constants for document title and the DCN number for Agile
#---------------------------------------------------------------------------

env['DOCTITLE']="IP Security (IPsec) API"
env['DOCREVISION']="80-xxxx-TBD Rev A"

DOCSRCPATH = "${BUILD_ROOT}/core/api/securemsm/ipsec/"
env.Replace(DOCSRCPATH = DOCSRCPATH)
DOCIMGPATH = "${BUILD_ROOT}/core/securemsm/ipsec/docs/images/"
env.Replace(DOCIMGPATH = DOCIMGPATH)

#---------------------------------------------------------------------------
# List of Header files that contain doxygen tags + List of TeX files that
# contain documentation to be merged with doxygen generated TeX files
#---------------------------------------------------------------------------
ipsecdocsrcfiles = [
    '${DOCSRCPATH}/IxIPSec.h',
    '${DOCSRCPATH}/secips.h',
    '${DOCSRCPATH}/secipssp.h',
    '${DOCSRCPATH}/introduction.tex',
    '${DOCSRCPATH}/overview.tex',
    '${DOCSRCPATH}/IPsec_MainPage.h',
    '${DOCIMGPATH}/tunnelmode.jpg',
    '${DOCIMGPATH}/transport.jpg',
    '${DOCIMGPATH}/ESProtect.jpg'

     ]

env.AddBinaryLibrary(['MODEM_MODEM', 'MOB_DATAMODEM' ],'${BUILDPATH}/ipsec',SEC_IPSEC_LIB_SOURCES)
env.AddBinaryLibrary(['MODEM_MODEM', 'MOB_DATAMODEM' ],'${BUILDPATH}/ixipsec',IXIPSEC_CPP_SOURCES)

env.LoadSoftwareUnits()