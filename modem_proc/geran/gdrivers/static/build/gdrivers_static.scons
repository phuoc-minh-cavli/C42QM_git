#===============================================================================
#
#       G E R A N    G D R I V E R S   S T A T I C   S C O N S   
#
# GENERAL DESCRIPTION
#    SCons build script for the GDRIVERS STATIC VU
#
# Copyright (c) 2010-2015 Qualcomm Technologies, Inc.
# All Rights Reserved.
# QUALCOMM Proprietary/GTDR
#
#-------------------------------------------------------------------------------
#
#  $Header: //components/rel/geran.mpss/5.2.0/gdrivers/static/build/gdrivers_static.scons#1 $
#  $DateTime: 2018/04/30 09:42:45 $
#
#                      EDIT HISTORY FOR FILE
#
#  This section contains comments describing changes made to the module.
#  Notice that changes are listed in reverse chronological order.
#
# when       who     what, where, why
# --------   ---     ---------------------------------------------------------
# 09/01/18   hd       CR2167422 : FR 46686: Support GERAN as dynamic module using DMM/External paging framework 
#===============================================================================
import sys

def main(env):
  # If USES_WPLT is set this library is required
  if 'USES_WPLT' not in env:
    # Otherwise verify that USES_GSM or USES_UMTS is set, if not bail out now
    if 'USES_GSM' not in env and 'USES_UMTS' not in env:
      return()


  ################################################################
  ################################################################
  # SIMPLE CONFIGURABLE ITEMS:
  #-------------------------------------------------------------------------------
  # Name of the subsystem to which this unit belongs
  #-------------------------------------------------------------------------------
  SU_NAME = 'GERAN'

  #-------------------------------------------------------------------------------
  # Name of this unit
  #-------------------------------------------------------------------------------
  UNIT_NAME = 'GDRIVERS_STATIC'

  #-------------------------------------------------------------------------------
  # Source path
  #-------------------------------------------------------------------------------
  # The path to the source files
  SRCPATH = '../src'

  #-------------------------------------------------------------------------------
  # Source files
  #-------------------------------------------------------------------------------
  # The source files. Either '*.c' or list the files individually.
  # If listing the files individually, include any private files, they will be stripped later
  # e.g. SRC_FILES = ['foo.c', 'bar.c']

  if env.has_key('USES_WPLT'):
    SRC_FILES = [
    ]
  else:
    SRC_FILES = '*.c'

  PRIVATE_SRC_FILES = []

  # List of the files not to be cleaned by cleanpack
  PUBLISHED_HDR_FILES = [
  ]

  #-------------------------------------------------------------------------------
  # Required internal APIs
  #-------------------------------------------------------------------------------
  REQUIRED_SU_APIS = [
      'GCOMMON',
      'GDIAG',
      'GDRIVERS',
      'GDRIVERS_STAT',
      'GL1',
      'GL2',
      'GLLC',
      'GMAC',
      'GMDSP',
      'GRLC',
      'GRR',
      'GSNDCP',
      'GPLT'
      ]
  #-------------------------------------------------------------------------------
  # Images the SU will be loaded into (MODEM_APPS and/or MODEM_MODEM)
  #-------------------------------------------------------------------------------
  IMAGES = ['MODEM_MODEM', 'MOB_GERAN']

  ################################################################
  ################################################################



  ################################################################
  # UNIT-SPECIFIC SCONS MAGIC
  ################################################################
  # (for build specialists to play their tricks)

  ################################################################
  # DATA ASSEMBLED, PUT IT INTO ACTION USING THE SHARED
  # FUNCTIONS IN build/geran_build_tools.py
  ################################################################
  sys.path.append('${GERAN_BUILD_TOOLS}')
  import geran_build_tools

  geran_build_tools.set_up_component_build_config(
    env,
    SU_NAME=                  SU_NAME,
    UNIT_NAME=                UNIT_NAME,
    SRCPATH=                  SRCPATH,
    SRC_FILES=                SRC_FILES,
    PRIVATE_SRC_FILES=        PRIVATE_SRC_FILES,
    REQUIRED_SU_APIS=         REQUIRED_SU_APIS,
    IMAGES=                   IMAGES,
    PUBLISHED_HDR_FILES=      PUBLISHED_HDR_FILES,
    MSG_BT_SSID_DFLT=         'MSG_SSID_GSM_L1',      # Doesn't use the standard naming convention
    DELIVER_SOURCE =          False                   # GL1 is delivered as a binary to some customers
  )

  env.LoadSoftwareUnits()

try:
  Import('env') # Fails if used from SCons test harness
  _usingTestHarness = False
except:
  _usingTestHarness = True

if not _usingTestHarness:
  main(env)
#else: test harness calls main() directly with its own env

