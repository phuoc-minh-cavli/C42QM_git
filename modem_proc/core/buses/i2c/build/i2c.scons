#===============================================================================
#
# I2C Libs
#
# GENERAL DESCRIPTION
#    Public build script for I2C BUS driver.
#
# Copyright (c) 2015 by Qualcomm Technologies, Incorporated.
# All Rights Reserved.
# QUALCOMM Proprietary/GTDR
#
#-------------------------------------------------------------------------------
#
#  $Header: //components/rel/core.mpss/3.10/buses/i2c/build/i2c.scons#3 $
#  $DateTime: 2019/08/14 00:45:33 $
#  $Author: pwbldsvc $
#  $Change: 20199023 $
#                      EDIT HISTORY FOR FILE
#
#  This section contains comments describing changes made to the module.
#  Notice that changes are listed in reverse chronological order.
#  
# when       who     what, where, why
# --------   ---     ---------------------------------------------------------
# 09/30/15   vg      Added support for  9205
# 08/25/15   vg      Initial release
#
#===============================================================================
Import('env')
#-------------------------------------------------------------------------------
# Load sub scripts
#-------------------------------------------------------------------------------
env.LoadSoftwareUnits()


#-------------------------------------------------------------------------------
# Source PATH
#-------------------------------------------------------------------------------
env = env.Clone()
#print env
# Additional defines
env.Append(CPPDEFINES = ["FEATURE_LIBRARY_ONLY"])   
#env.Append(CCFLAGS = " -O3 ")

SRCPATH = ".."

IMAGES = []
env.VariantDir('${BUILDPATH}', SRCPATH, duplicate=0) 
CBSP_APIS = []
I2C_CONFIG_XML = []

#-------------------------------------------------------------------------------
# Publish Private APIs
#-------------------------------------------------------------------------------
env.PublishPrivateApi('BUSES_I2C_DEVICE', [
   '${INC_ROOT}/core/buses/i2c/src/dev',
   '${INC_ROOT}/core/buses/i2c/src/drv',
   '${INC_ROOT}/core/buses/i2c/src/logs/inc',
])

#-------------------------------------------------------------------------------
# Internal depends within CoreBSP
#-------------------------------------------------------------------------------
CBSP_APIS += [
   'BUSES',
   'DAL',
   'HAL',
   'SYSTEMDRIVERS',
   'HWENGINES',
   'KERNEL',   
   'SERVICES',
   'POWER',
   'DEBUGTRACE',
   'DEBUGTOOLS'
]

env.RequirePublicApi(CBSP_APIS)
env.RequireRestrictedApi(CBSP_APIS)

     


#-------------------------------------------------------------------------------
# Sources, libraries
#-------------------------------------------------------------------------------
#I2C_DEVICE_GLOB_FILES = env.GlobFiles('../src/*/*.c', posix=True)

I2C_SRC = [
   '${BUILDPATH}/src/dev/I2cDeviceInit.c'    ,
   '${BUILDPATH}/src/drv/I2cBsp.c'           ,
   '${BUILDPATH}/src/drv/I2cDriverInit.c'    ,
   '${BUILDPATH}/src/drv/I2cPlatSvcInit.c'   ,
   '${BUILDPATH}/src/drv/I2cDriverDalFwk.c'  ,
   '${BUILDPATH}/src/drv/I2cDriverDalInfo.c' ,
   '${BUILDPATH}/src/drv/I2cPlatConfig.c'    ,
   '${BUILDPATH}/src/logs/I2cUlog.c'         ,
#   '${BUILDPATH}/src/drv/I2cTest.c'          ,
]


I2C_ISLAND_SRC = [
   '${BUILDPATH}/src/dev/I2cDevice.c'        ,
   '${BUILDPATH}/src/drv/I2cDriver.c'        ,
   '${BUILDPATH}/src/drv/I2cPlatSvc.c'       ,
   '${BUILDPATH}/src/drv/I2cSys.c'           ,
]
 
#GLOB returns the relative path name, it needs to replaced with correct build location
#I2C_DEVICE_SOURCES = [path.replace(SRCPATH, '${BUILDPATH}') for path in I2C_DEVICE_GLOB_FILES]

if env.has_key('MODEM_PROC') and env['MSM_ID'] in ['9205','9607']:
   IMAGES = ['QDSP6_SW_IMAGE', 'CBSP_QDSP6_SW_IMAGE', 'CORE_QDSP6_SW','CORE_QDSP6_SENSOR_SW','MODEM_SENSORONLY']

#-------------------------------------------------------------------------------
# Add Libraries to image
# env.AddLibrary is a new API, only if the IMAGES is valid in the build env
# the objects will built and added to the image.
#-------------------------------------------------------------------------------

if 'USES_ISLAND' in env:
    U_IMG_LIB = env.AddLibrary(
      ['CBSP_QDSP6_SW_IMAGE', 'CORE_QDSP6_SENSOR_SW','MODEM_SENSORONLY'],
      '${BUILDPATH}/I2cDriver_UImg', I2C_ISLAND_SRC)
    env.AddIslandLibrary(['CORE_QDSP6_SENSOR_SW'], U_IMG_LIB)
else:
    I2C_SRC.append(I2C_ISLAND_SRC)

BIG_IMG_LIB = env.AddLibrary(IMAGES, '${BUILDPATH}/I2cDriver', I2C_SRC)



tags = ['CORE_QDSP6_SW']


#---------------------------------------------------------------------------
# Device Config
#---------------------------------------------------------------------------
if 'USES_DEVCFG' in env or 'USES_DEVCFG_SENSORONLY' in env:
   DAL_DEVCFG_IMG = ['DAL_DEVCFG_IMG','DAL_DEVCFG_SENSORONLY_IMG']
   env.AddDevCfgInfo(DAL_DEVCFG_IMG, 
   {
      '9205_xml'    : ['${BUILD_ROOT}/core/buses/i2c/config/i2c_mpss_mdm9205.xml'],
      '9607_xml'    : ['${BUILD_ROOT}/core/buses/i2c/config/i2c_mpss_mdm9607.xml']
      
   })

#if 'USES_RCINIT' in env:
#  RCINIT_IMG = ['CORE_MODEM', 'CORE_QDSP6_SW','MODEM_SENSORONLY']
#  env.AddRCInitTask(           # 
#   RCINIT_IMG,                 
#   {
#     'sequence_group'             : 'RCINIT_GROUP_7',                # required
#     'thread_name'                : 'i2ctest',                            # required
#     'thread_entry'               : 'i2c_test_srv_task',
#     'stack_size_bytes'           : '8192',
#     'priority_amss_order'        : 'SHARED_BACKGROUND_PRI_ORDER',
#     'cpu_affinity'               : 'REX_ANY_SMT_MASK',
#   })
	  