#===============================================================================
#  Copyright (c) 2019 Qualcomm Technologies Incorporated.
#  All Rights Reserved.
#  QUALCOMM Proprietary/GTDR
#===============================================================================

# HAL GPIOINT Libs
#-------------------------------------------------------------------------------
Import('env')
env = env.Clone()

env.PublishPrivateApi("SYSTEMDRIVERS_HAL_GPIOINT_INC", [
   "${INC_ROOT}/core/systemdrivers/hal/gpioint/inc",
   "${INC_ROOT}/core/systemdrivers/hal/gpioint/src"
  ])

#-------------------------------------------------------------------------------
# Source PATH
#-------------------------------------------------------------------------------

SRCPATH = "${BUILD_ROOT}/core/systemdrivers/hal/gpioint"

env.VariantDir('${BUILDPATH}', SRCPATH, duplicate=0) 

CBSP_API = [
   'DAL',
   'SERVICES',
   'SYSTEMDRIVERS',

   # needs to be last also contains wrong comdef.h
   'KERNEL',
]

env.RequirePublicApi(CBSP_API)
env.RequireRestrictedApi(CBSP_API)


#-------------------------------------------------------------------------------
# Internal depends within CoreBSP
#-------------------------------------------------------------------------------
env.UsesInc([
   "${HAL_API}",
   "${SERVICES_API}",
   "${SYSTEMDRIVERS}",
   "${SYSTEMDRIVERS_API}",
   "${KERNEL_API}",
])

env.UsesInc([
   "${HAL_LEGACY}",
   # needs to be last also contains wrong comdef.h
   "${KERNEL_LEGACY}",
])

#-------------------------------------------------------------------------------
# Sources, libraries
#-------------------------------------------------------------------------------

GPIO_SOURCES =  [
     '${BUILDPATH}/hw/${CHIPSET}/HALgpiointPlatform.c',
     '${BUILDPATH}/src/HALgpioint.c'  
   ]

#-------------------------------------------------------------------------------
# Add Libraries to image
#-------------------------------------------------------------------------------

env.AddLibrary(
  ['MODEM_IMAGE', 'CBSP_MODEM_IMAGE','QDSP6_SW_IMAGE','CBSP_QDSP6_SW_IMAGE','MODEM_SENSORONLY','MODEM_PAGEONLY'],
  '${BUILDPATH}/HALgpioint_modem', 
  GPIO_SOURCES )

#-------------------------------------------------------------------------------
# Pack out files
#-------------------------------------------------------------------------------

# Remove target hw files
ALL_HW_FILES = env.FindFiles(
  ['*'],
  '../hw/')
MY_HW_FILES = env.FindFiles(
  ['*'],
  '../hw/${CHIPSET}')
PACK_HW_FILES = list(set(ALL_HW_FILES) - set(MY_HW_FILES))
env.CleanPack(['MODEM_IMAGE', 'CBSP_MODEM_IMAGE','QDSP6_SW_IMAGE','CBSP_QDSP6_SW_IMAGE','MODEM_PAGEONLY'], 
              PACK_HW_FILES)

# ============================================================================
# HWIO
# ============================================================================

if env.has_key('HWIO_IMAGE'):

  env.AddHWIOFile('HWIO', [
    {
      'filename': '${INC_ROOT}/core/systemdrivers/hal/gpioint/hw/${CHIPSET}/HALgpiointHWIO.h',
      'bases': ['TLMM_TLMM'],
      'filter-include': ['GPIO_INTR', 'DIR_CONN'],
      'filter-exclude': ['ACR'],
      'header': 'extern uint32 nGPIOIntBaseAddress;\n' +
                '#define TLMM_TLMM_BASE nGPIOIntBaseAddress\n'
    }
  ])
