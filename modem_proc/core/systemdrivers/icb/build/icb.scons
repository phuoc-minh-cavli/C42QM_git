#===============================================================================
#
#                             Edit History
#
# $Header$
# when         who     what, where, why
# ----------   ---     ---------------------------------------------------------
# 2015/01/19   tb      Added 8952
# 2014/09/04   sds     Add clk_regime dependency explicitly
# 2014/08/07   tb      Updated for only 8909
# 2014/07/11   ddk     Added changes to support multiple build variant for mba.
# 2014/07/01   ddk     Added changes to support ICB CFG Query in Modem.
# 2014/06/17   vg      Added changes to support ICB CFG Query in MBA
# 2013/06/11   jc      Added 8926
# 2013/05/26   pm      Added 8084
# 2013/05/24   jc      Added 8962
# 2012/11/06   jc      Added 8x26 and 8x10
# 2012/07/24   jc      Added APPS ThinUI image
# 2012/06/25   jc      Added 9x25
# 2012/05/31   av      Added ABT driver
# 2012/04/02   dj      Move icbarb_init to RCINIT group 0
# 2012/03/20   av      Added BOOT image
# 2012/03/02   pm      Changes for WCNSS PRONTO
# 2011/12/12   sds     Initial Creation
#
#===============================================================================
#                    Copyright (c) 2016 Qualcomm Technologies Incorporated.
#                              All Rights Reserved.
#                            QUALCOMM Proprietary/GTDR
#===============================================================================
Import('env')
env = env.Clone()

#-------------------------------------------------------------------------------
# Python library imports
#-------------------------------------------------------------------------------
import glob, os

#-------------------------------------------------------------------------------
# Source PATH
#-------------------------------------------------------------------------------
BUILDPATH = '..'
env.VariantDir('${BUILDPATH}', BUILDPATH, duplicate=0)
SRCPATH = os.path.join( BUILDPATH, 'src' )

#-------------------------------------------------------------------------------
# Internal depends within CoreBSP
#-------------------------------------------------------------------------------
CBSP_APIS = [
  'HAL',
  'POWER',
  'RPM',
  'DAL',
  'SYSTEMDRIVERS',
  'SERVICES',
  'DEBUGTOOLS',
  'SECUREMSM',
  'KERNEL',
]

env.RequirePublicApi(CBSP_APIS)
env.RequireRestrictedApi(CBSP_APIS)


if env.CheckAlias('devcfg_img'):
   env.Append(CFLAGS = ' -Wno-unused-function')  

#-------------------------------------------------------------------------------
# Private depends within ICB
#-------------------------------------------------------------------------------
env.PublishPrivateApi('ICB_API', [ os.path.join(SRCPATH, 'common') ])

NONADSP_BEAR_TARGETS = ['9205' '9607']
#-------------------------------------------------------------------------------
# Build products for RCINIT
#-------------------------------------------------------------------------------
if 'USES_RCINIT' in env and env['MSM_ID'] in ['9205', '9607']:
  RCINIT_IMG = ['CORE_MODEM', 'CORE_QDSP6_SW', 
                'WCN_IMAGE', 'CBSP_WCN_IMAGE', 'CORE_WCN',
                'APPS_IMAGE','CBSP_APPS_IMAGE','MODEM_SENSORONLY']

  RCINIT_INIT_ICBARB = {
    'sequence_group' : 'RCINIT_GROUP_0', # required
    'init_name'      : 'icbarb',         # required
    'init_function'  : 'icbarb_init',    # required
    'dependencies'   : ['npa','rpm','clk_regime'],    # opt [python list]
  }
  env.AddRCInitFunc( RCINIT_IMG, RCINIT_INIT_ICBARB )

  RCINIT_ABT_IMG = ['CORE_MODEM', 'CORE_QDSP6_SW','MODEM_SENSORONLY']

  if env['MSM_ID'] in NONADSP_BEAR_TARGETS:
    RCINIT_INIT_ABT = {
      'sequence_group' : 'RCINIT_GROUP_0', # required
      'init_name'      : 'abt',            # required
      'init_function'  : 'ABT_Init',       # required
      'dependencies'   : ['dalsys','clk_regime','adsppm_ultaudioreset_grp0'], # opt [python list]
    }
  else:
    RCINIT_INIT_ABT = {
      'sequence_group' : 'RCINIT_GROUP_0', # required
      'init_name'      : 'abt',            # required
      'init_function'  : 'ABT_Init',       # required
      'dependencies'   : ['dalsys','clk_regime'],    # opt [python list]
    }
  env.AddRCInitFunc( RCINIT_ABT_IMG, RCINIT_INIT_ABT )

#-------------------------------------------------------------------------------
# Common Sources, but differentiate between core and mba
#-------------------------------------------------------------------------------
icb_src = []
icb_src_abt = []
if env.GetUsesFlag('USES_MBA') is True:   
  # Look for data and xml file for the current MSM_ID   
  icb_cfg_src = os.path.exists( os.path.join(SRCPATH, env['MSM_ID'], 'icbcfg_data.c') )   
  icb_config_xml = os.path.exists( '../config/icbcfg_mba_%s.xml' % env['MSM_ID'] )   
  
  # If we have both, add to device configuration library   
  if icb_cfg_src and icb_config_xml:      
    DEVCFG_MBA_IMG = ['DEVCFG_MBA_CORE_SW']      
    env.AddDevCfgInfo(DEVCFG_MBA_IMG,{
                      'soc_xml' : ['${BUILD_ROOT}/core/systemdrivers/icb/config/icbcfg_mba_%s.xml' % env['MSM_ID']]
      }      
    )      
    icb_src = ['${BUILDPATH}/src/common/icbcfg_query.c',
               '${BUILDPATH}/src/common/HALbimc.c',
               '${BUILDPATH}/src/common/HALbimcImpl.c',	       
               '${BUILDPATH}/src/${MSM_ID}/icbcfg_data.c' ]
else:
#-------------------------------------------------------------------------------
# Common Sources - core
#-------------------------------------------------------------------------------

  if env.GetUsesFlag('USES_BUILD_PAGEONLY_IMAGE') is True:
   icb_src_abt = ['${BUILDPATH}/src/common/ABT_dal.c',
              '${BUILDPATH}/src/common/ABT_qurt_interrupt.c',
              '${BUILDPATH}/src/common/ABTimeout.c' ]
              
  icb_src = glob.glob( os.path.join(SRCPATH, 'common', '*.c') )

   # Prepend build path
  icb_src = ['${BUILDPATH}' + filename[2:] for filename in icb_src]
#-------------------------------------------------------------------------------
# Device Configuration Sources
#-------------------------------------------------------------------------------
if 'USES_DEVCFG' in env or 'USES_DEVCFG_SENSORONLY' in env :
  env.AddDevCfgInfo(['DAL_DEVCFG_IMG','DAL_DEVCFG_SENSORONLY_IMG'],{
                    
                    '9205_xml' : ['${BUILD_ROOT}/core/systemdrivers/icb/config/icbcfg_mpss_9205.xml','${BUILD_ROOT}/core/systemdrivers/icb/src/9205/ul_data.c',
                                  '${BUILD_ROOT}/core/systemdrivers/icb/config/icbcfg_mba_9205.xml','${BUILD_ROOT}/core/systemdrivers/icb/src/9205/icbcfg_data.c',
                                  '${BUILD_ROOT}/core/systemdrivers/icb/src/9205/ABT_data.c','${BUILD_ROOT}/core/systemdrivers/icb/config/ABT_modem_9205.xml'],
                    '9607_xml' : ['${BUILD_ROOT}/core/systemdrivers/icb/config/icbcfg_mpss_9607.xml','${BUILD_ROOT}/core/systemdrivers/icb/src/9607/ul_data.c',
                                  '${BUILD_ROOT}/core/systemdrivers/icb/config/icbcfg_mba_9607.xml','${BUILD_ROOT}/core/systemdrivers/icb/src/9607/icbcfg_data.c',
                                  '${BUILD_ROOT}/core/systemdrivers/icb/src/9607/ABT_data.c','${BUILD_ROOT}/core/systemdrivers/icb/config/ABT_modem_9607.xml'],
                    }
                    )
elif 'USES_DEVCFG_PAGEONLY' in env:
  env.AddDevCfgInfo(['DAL_DEVCFG_PAGEONLY_IMG'],{               
                    '9205_xml' : ['${BUILD_ROOT}/core/systemdrivers/icb/src/9205/ABT_data.c','${BUILD_ROOT}/core/systemdrivers/icb/config/ABT_modem_9205.xml'],
                    }
                    )
#-------------------------------------------------------------------------------
# Images 
#-------------------------------------------------------------------------------
if env.GetUsesFlag('USES_BUILD_PAGEONLY_IMAGE') is True:
    env.AddLibrary(
	['MODEM_PAGEONLY'],
	'${BUILDPATH}/icb', icb_src_abt)

env.AddLibrary(
   ['MODEM_IMAGE','CBSP_MODEM_IMAGE',
   'CORE_QDSP6_SW', 'QDSP6_SW_IMAGE', 'CBSP_QDSP6_SW_IMAGE', 
   'WCN_IMAGE', 'CBSP_WCN_IMAGE', 'CORE_WCN', 'TZOS_IMAGE',
   'BUSES_AHB_BOOT_DRIVER', 'APPS_IMAGE','CBSP_APPS_IMAGE','MBA_CORE_SW','MODEM_SENSORONLY'],
   '${BUILDPATH}/icb', icb_src)
