#===============================================================================
#
# Glink Tracer Packet
#
# GENERAL DESCRIPTION
#    build script
#
# Copyright (c) 2015,2018,2019 by QUALCOMM Technologies, Inc.
# All Rights Reserved.
# QUALCOMM Proprietary
#
#-------------------------------------------------------------------------------
#
#  $Header: //components/rel/core.mpss/3.10/mproc/glink/glink_tracer/build/glink_tracer.scons#2 $
#  $DateTime: 2019/04/09 05:59:03 $
#  $Author: pwbldsvc $
#  $Change: 18838573 $
#                      EDIT HISTORY FOR FILE
#
#  This section contains comments describing changes made to the module.
#  Notice that changes are listed in reverse chronological order.
#
# when       who     what, where, why
# --------   ---     ---------------------------------------------------------
# 03/06/19   ss      Moved UART,SIO,RDM Drivers from Wiredconnectivity to Buses.
# 02/04/15   bc      Initial version for tracer packet
#
#===============================================================================
Import('env')
env = env.Clone()

#-------------------------------------------------------------------------------
# Source PATH
#-------------------------------------------------------------------------------
SRCPATH = "${BUILD_ROOT}/core/mproc/glink/glink_tracer/src"

env.VariantDir('${BUILDPATH}', SRCPATH, duplicate=0)

#-------------------------------------------------------------------------------
# Images
#-------------------------------------------------------------------------------
APPS_IMAGES = ['CBSP_APPS_IMAGE', 'APPS_IMAGE']

ROOT_IMAGES = ['CORE_QDSP6_SW', 'CORE_MPSS_ROOT', 'CORE_ADSP_ROOT', 'WCN_IMAGE',
               'CORE_SLPI_ROOT', 'CORE_ADSP_SLPI_ROOT', 'CORE_CDSP_ROOT']

USER_IMAGES = ['CORE_ADSP_USER', 'CORE_SLPI_USER', 'CORE_ADSP_SSC_USER']

#-------------------------------------------------------------------------------
# Check if this feature is required or not
#-------------------------------------------------------------------------------
if 'FEATURE_TRACER_PACKET' not in env:
  PACK_OUT = env.FindFiles(['*.h', '*.c', '*.s'], SRCPATH)
  env.CleanPack(ROOT_IMAGES + USER_IMAGES, PACK_OUT)
  Return()
  
#-------------------------------------------------------------------------------
#  Publish Private APIs
#-------------------------------------------------------------------------------
env.PublishPrivateApi('MPROC_GLINK', [
   "${BUILD_ROOT}/core/mproc/glink/os/inc",
   "${BUILD_ROOT}/core/mproc/glink/glink_tracer/inc"
] )

#-------------------------------------------------------------------------------
# Internal depends within CoreBSP
#-------------------------------------------------------------------------------
CBSP_API = [
   'BOOT',
   'DEBUGTOOLS',
   'HAL',
   'DAL',
   'HWENGINES',
   'MPROC',
   'MEMORY',
   'POWER',
   'SERVICES',
   'SYSTEMDRIVERS',
   'WIREDCONNECTIVITY',
   'BUSES',

   # needs to be last also contains wrong comdef.h
   'KERNEL',
]

env.RequirePublicApi(CBSP_API)
env.RequireRestrictedApi(CBSP_API)

#-------------------------------------------------------------------------------
# Sources, libraries
#-------------------------------------------------------------------------------
TRACER_PKT = [ '${BUILDPATH}/glink_tracer.c' ]

#-------------------------------------------------------------------------------
# Add Libraries to image
#-------------------------------------------------------------------------------
# Add Image-specific Libraries, whose sources should be packed out.
env.AddBinaryLibrary(APPS_IMAGES + ROOT_IMAGES + USER_IMAGES, 
                     '${BUILDPATH}/glink_tracer', [TRACER_PKT])

#-------------------------------------------------------------------------------
# CleanPack (Remove) all remaining files for peripheral processors
#-------------------------------------------------------------------------------
PACK_OUT = env.FindFiles(['*.h', '*.c', '*.s'], SRCPATH)
env.CleanPack(ROOT_IMAGES + USER_IMAGES, PACK_OUT)

#-------------------------------------------------------------------------------
# RCINIT Task and Init Fields and Initialization
#-------------------------------------------------------------------------------
# No RCINIT necessary