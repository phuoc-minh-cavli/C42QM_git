#===============================================================================
#
# cryptoLibs
#
# GENERAL DESCRIPTION
#    build script
#
# Copyright (c) 2009-2011 by QUALCOMM, Incorporated.
# All Rights Reserved.
# QUALCOMM Proprietary/GTDR
#
#-------------------------------------------------------------------------------
#
#  $Header: //components/rel/core.mpss/3.10/securemsm/cryptodrivers/prng/shared/build/SConscript#4 $
#  $DateTime: 2019/08/14 00:45:33 $
#  $Author: pwbldsvc $
#  $Change: 20199023 $
#                      EDIT HISTORY FOR FILE
#
#  This section contains comments describing changes made to the module.
#  Notice that changes are listed in reverse chronological order.
#
# when       who     what, where, why
# --------   ---     ---------------------------------------------------------
# 8/21/10 YK          Initial version
#===============================================================================
Import('env')
env = env.Clone()

#-------------------------------------------------------------------------------
# Publish Private APIs
#-------------------------------------------------------------------------------
env.PublishPrivateApi('PrngML', [
   '${INC_ROOT}/core/securemsm/cryptodrivers/prng/shared/inc', 
   '${INC_ROOT}/core/securemsm/cryptodrivers/prng/chipset/${CHIPSET}/inc', 
   '${INC_ROOT}/core/securemsm/cryptodrivers/prng/environment/inc', 
   '${INC_ROOT}/core/securemsm/cryptodrivers/prng/environment/env/amss/inc',   
])

#-------------------------------------------------------------------------------
# Source PATH
#-------------------------------------------------------------------------------
SRCPATH = "${BUILD_ROOT}/core/securemsm/cryptodrivers/prng/shared/src"

env.VariantDir('${BUILDPATH}', SRCPATH, duplicate=0)

#-------------------------------------------------------------------------------
# External depends outside CoreBSP
#-------------------------------------------------------------------------------
env.RequireExternalApi([
   'BREW',
   'CS',
   'DSM',
])

#-------------------------------------------------------------------------------
# Internal depends within CoreBSP
#-------------------------------------------------------------------------------
CBSP_API = [
   'DAL',
   'DEBUGTOOLS',
   'HAL',
   'MPROC',
   'SECUREMSM',
   'SERVICES',
   'STORAGE',
   'SYSTEMDRIVERS',
   'WIREDCONNECTIVITY',
   'BOOT',

   # needs to be last also contains wrong comdef.h
   'KERNEL',
]

env.RequirePublicApi(CBSP_API)
env.RequireRestrictedApi(CBSP_API)

#-------------------------------------------------------------------------------
# Compiler, object, and linker definitions
#-------------------------------------------------------------------------------

env.Append(CPPDEFINES = ['_ARM_', '__arm', 'ARM', 'ARM_BREW_BUILD'])
env.Append(ARMCC_OPT = ' --loose_implicit_cast ')
env.Append(ARMCPP_OPT = ' --loose_implicit_cast ')
if env.has_key('BUILD_BOOT_CHAIN'):
   env.Append(CPPDEFINES = ['FEATURE_LIBRARY_ONLY'])

#-------------------------------------------------------------------------------
# Sources, libraries
#-------------------------------------------------------------------------------

PrngML_LIB_SOURCES = [
        '${BUILDPATH}/PrngML.c',
]

#-------------------------------------------------------------------------------
# Add Libraries to image
#-------------------------------------------------------------------------------
env.AddBinaryLibrary(
       ['SINGLE_IMAGE', 'CBSP_SINGLE_IMAGE',
        'MODEM_IMAGE',  'CBSP_MODEM_IMAGE',
        'APPS_IMAGE',   'CBSP_APPS_IMAGE',
        'QDSP6_SW_IMAGE', 'CBSP_QDSP6_SW_IMAGE','MBA_CORE_SW','MODEM_MODEM', 'MODEM_PAGEONLY','MODEM_SENSORONLY'],
        '${BUILDPATH}/PrngML',
       [PrngML_LIB_SOURCES])

#-------------------------------------------------------------------------------
# Setup RCINIT so we call PRNG Mutex Init Function
#------------------------------------------------------------------------------- 
if 'USES_RCINIT' in env:
   RCINIT_IMG = ['SINGLE_IMAGE', 'CBSP_SINGLE_IMAGE', 'MODEM_IMAGE',  'CBSP_MODEM_IMAGE',
                 'APPS_IMAGE',   'CBSP_APPS_IMAGE',   'QDSP6_SW_IMAGE', 'CBSP_QDSP6_SW_IMAGE',
                 'MBA_CORE_SW','MODEM_MODEM', 'MODEM_PAGEONLY','MODEM_SENSORONLY']
   env.AddRCInitFunc(RCINIT_IMG,                 
    {
     'sequence_group'             : 'RCINIT_GROUP_0',                 # required
     'init_name'                  : 'prng_mutex_init',                # required
     'init_function'              : 'PrngELMutexInit',                # required
     'dependencies'               : ['clk_regime', 'npa']
    })
