#===============================================================================
#
# secmath
#
# GENERAL DESCRIPTION
#    build script
#
# Copyright (c) 20011 by QUALCOMM, Incorporated.
# All Rights Reserved.
# QUALCOMM Proprietary/GTDR
#
#-------------------------------------------------------------------------------
#
#  $Header: //components/dev/core.mpss/8.0/mkallutl.core.mpss.8.0.porting_secboot/securemsm/secmath/build/SConscript#1 $
#  $DateTime: 2018/11/02 01:39:30 $
#  $Author: mkallutl $
#  $Change: 17531063 $
#                      EDIT HISTORY FOR FILE
#
#  This section contains comments describing changes made to the module.
#  Notice that changes are listed in reverse chronological order.
#
# when       who     what, where, why
# --------   ---     ---------------------------------------------------------
# 03/12/12   mm     initial version
#===============================================================================
import os
Import('env')
env = env.Clone()


#-------------------------------------------------------------------------------
# Set search path for securemsm subsystem files
#-------------------------------------------------------------------------------
SRCPATH = "${BUILD_ROOT}/core/securemsm/secmath/"

if env['MSM_ID'] in ['24']:
	env['CHIPSET'] = 'sdx24'
if env['MSM_ID'] in ['855']:
	env['CHIPSET'] = 'sdm855'
if env['MSM_ID'] in ['1000']:
	env['CHIPSET'] = 'sdm1000'
	
env.PublishRestrictedApi('SECMATH',
                         ["${INC_ROOT}/core/securemsm/secmath/api"])
env.Append(CPPPATH = "${COREBSP_ROOT}/securemsm/secmath/api")
env.Append(CPPPATH = "${COREBSP_ROOT}/securemsm/secmath/src")
env.Append(CPPPATH = "${COREBSP_ROOT}/securemsm/secboot/inc")
env.AddUsesFlags('USES_QDSP6')

if env.has_key('USES_QDSP6'):
  env.Append(CCFLAGS = " -O3 ")
else:
  env.Append(CCFLAGS = " --restrict  -O3 -OTime ")

#-------------------------------------------------------------------------------
# External depends within CoreBSP
#-------------------------------------------------------------------------------
CBSP_API = [
   'SERVICES',

   # needs to be last also contains wrong comdef.h
   'KERNEL',
]

env.RequirePublicApi(CBSP_API)

#-------------------------------------------------------------------------------
# Source PATH
#-------------------------------------------------------------------------------
SRCPATH = "${COREBSP_ROOT}/securemsm/secmath"

#-------------------------------------------------------------------------------
# Let Scons build the object files in $(BUILDPATH} and don't copy over files
#-------------------------------------------------------------------------------
env.VariantDir('${BUILDPATH}', SRCPATH, duplicate=0)

#-------------------------------------------------------------------------------
# Compiler, object, and linker definitions
#-------------------------------------------------------------------------------



#-------------------------------------------------------------------------------
# Sources, libraries
#-------------------------------------------------------------------------------
SECMATH_SRC_SHARED = [
  '${BUILDPATH}/src/secmath_mod_exp.c',
  '${BUILDPATH}/src/secmath_montmul_ref.c',
  '${BUILDPATH}/src/secmath_montmul_utils.c',
  '${BUILDPATH}/src/secmath_barrett_reduce.c',
  '${BUILDPATH}/src/secmath_BIGINT_read_radix.c',
  '${BUILDPATH}/src/secmath_BIGINT_read_unsigned_bin.c',
  '${BUILDPATH}/src/secmath_BIGINT_to_radix.c',
  '${BUILDPATH}/src/secmath_BIGINT_to_unsigned_bin.c',
  '${BUILDPATH}/src/secmath_bin_to_hex_str.c',
  '${BUILDPATH}/src/secmath_hex_str_to_bin.c',
  '${BUILDPATH}/src/secmath_INT_read_unsigned_bin.c',
]

#-------------------------------------------------------------------------------
# Add Libraries to MBA Image
#-------------------------------------------------------------------------------
env.LoadSoftwareUnits()

SECMATH_IMAGES = [
	'SBL2_BOOT_IMAGE', 
	'TZOS_IMAGE',
	'TZEXEC_IMAGE',  
	'SBL3_BOOT_IMAGE',
	'AUTH_BOOT_DRIVER',   
	'MODEM_IMAGE',
	'CBSP_QDSP6_SW_IMAGE', 
	'MBA_CORE_SW',
]

env.AddBinaryLibrary(SECMATH_IMAGES,'${BUILDPATH}/secmath', SECMATH_SRC_SHARED)

#-------------------------------------------------------------------------------
# Pack out files
#-------------------------------------------------------------------------------

#pack src files
ALL_SRC_FILES = env.FindFiles(
  ['*'],
  '${COREBSP_ROOT}/securemsm/secmath/src/chipset')
MY_SRC_FILES = env.FindFiles(
  ['*'],
  '${COREBSP_ROOT}/securemsm/secmath/src/chipset/${CHIPSET}')
PACK_SRC_FILES = list(set(ALL_SRC_FILES) - set(MY_SRC_FILES))
env.CleanPack(['CORE_MODEM'], PACK_SRC_FILES)

ALL_INC_FILES = env.FindFiles(
  ['*'],
  '${COREBSP_ROOT}/securemsm/secmath/api/chipset')
MY_INC_FILES = env.FindFiles(
  ['*'],
  '${COREBSP_ROOT}/securemsm/secmath/api/chipset/${CHIPSET}')
PACK_INC_FILES = list(set(ALL_INC_FILES) - set(MY_INC_FILES))
env.CleanPack(['CORE_MODEM'], PACK_INC_FILES)

