#===============================================================================
#
# cryptoLibs
#
# GENERAL DESCRIPTION
#    build script
#
# Copyright (c) 2014 by QUALCOMM, Incorporated.
# All Rights Reserved.
# QUALCOMM Proprietary/GTDR
#
#-------------------------------------------------------------------------------
#
#  $Header: //components/rel/core.mpss/3.10/securemsm/unifiedcrypto/core/ecc/build/SConscript#1 $
#  $DateTime: 2018/06/26 03:18:17 $
#  $Author: pwbldsvc $
#  $Change: 16502877 $
#                      EDIT HISTORY FOR FILE
#
#  This section contains comments describing changes made to the module.
#  Notice that changes are listed in reverse chronological order.
#
# when       who     what, where, why
# --------   ---     ---------------------------------------------------------
# 07/16/13   yk	     initial version
# 04/22/14   nk       Scon cleanup 
#
#===============================================================================
Import('env')
env = env.Clone()

#-------------------------------------------------------------------------------
# Source PATH
#-------------------------------------------------------------------------------
SRCPATH = "${BUILD_ROOT}/core/securemsm/unifiedcrypto/core/ecc"

env.VariantDir('${BUILDPATH}', SRCPATH, duplicate=0)

#-------------------------------------------------------------------------------
# Internal depends within CoreBSP
#-------------------------------------------------------------------------------
CBSP_API = [
   'BOOT',
   'DAL',
   'DEBUGTOOLS',
   'HAL',
   'MPROC',
   'SECUREMSM',
   'SERVICES',
   'STORAGE',
   'SYSTEMDRIVERS',
   'HWENGINES',
   'POWER',
   # needs to be last also contains wrong comdef.h
   'KERNEL',
]

env.RequirePublicApi(CBSP_API)
env.RequireRestrictedApi(CBSP_API)
SME_PROTECTED_API = [
                      'SME_SMECOM',
]
env.RequireProtectedApi(SME_PROTECTED_API)

#-------------------------------------------------------------------------------
# Compiler, object, and linker definitions
#-------------------------------------------------------------------------------
env.Append(ARMCC_CODE = " ${ARM_SPLIT_SECTIONS}")
env.Replace(ARMLD_NOREMOVE_CMD = "")

env.Append(CPPDEFINES = ['_ARM_', '__arm', 'ARM', 'ARM_BREW_BUILD'])
env.Append(ARMCC_OPT = ' -EC --loose_implicit_cast ')
env.Append(ARMCPP_OPT = ' -EC --loose_implicit_cast ')
if env.has_key('BUILD_BOOT_CHAIN'):
   env.Append(CPPDEFINES = ['FEATURE_LIBRARY_ONLY'])

env.AddUsesFlags('USES_QDSP6')
if env.has_key('USES_MBA'):
  if env.has_key('USES_QDSP6'):
    env.Append(CCFLAGS = " -O3 ")
    env.Append(CFLAGS = " -O3 ")
  else:
    env.Append(CCFLAGS = " --restrict  -O3 -OTime ")
    env.Append(CFLAGS = " --restrict  -O3 -OTime ")
else:
  if env.has_key('USES_QDSP6'):
    env.Append(CCFLAGS = " -O2 ")
    env.Append(CFLAGS = " -O2 ")
  else:
    env.Append(CCFLAGS = " --restrict  -O2 -OTime ")
    env.Append(CFLAGS = " --restrict  -O2 -OTime ")

#-------------------------------------------------------------------------------
# Publish Private APIs
#-------------------------------------------------------------------------------
env.PublishPrivateApi('UC_CORE_ECC_API', [
   "${BUILD_ROOT}/core/securemsm/unifiedcrypto/core/ecc/inc",
])

env.PublishPrivateApi('UC_CORE_ECC', [
   '${INC_ROOT}/core/securemsm/unifiedcrypto/core/ecc/inc', 
   '${INC_ROOT}/core/securemsm/unifiedcrypto/shared/ecc/inc',
   '${INC_ROOT}/core/securemsm/unifiedcrypto/environment/amss/inc', 
   '${INC_ROOT}/core/securemsm/unifiedcrypto/environment/amss/src',
   '${INC_ROOT}/core/securemsm/unifiedcrypto/environment/inc',     
   ])

#-------------------------------------------------------------------------------
# Sources, libraries
#-------------------------------------------------------------------------------

ECC_CORE_LIB_SOURCES = [
        '${BUILDPATH}/src/montmul_std.c',
        '${BUILDPATH}/src/montmul_utils.c',
        '${BUILDPATH}/src/qrlbn_arith.c',
        '${BUILDPATH}/src/qrlbn_ecc.c',
#        '${BUILDPATH}/src/qrlbn_ecc_domain_print.c',
        '${BUILDPATH}/src/qrlbn_ecc_protocols.c',
        '${BUILDPATH}/src/qrlbn_inverse.c',
        '${BUILDPATH}/src/qrlbn_random.c',
        '${BUILDPATH}/src/qrlbn_utils.c',
]

#-------------------------------------------------------------------------------
# Add Libraries to image
#-------------------------------------------------------------------------------

env.AddBinaryLibrary(['SINGLE_IMAGE',
                      'CBSP_SINGLE_IMAGE',
                      'MODEM_IMAGE',
                      'CBSP_MODEM_IMAGE',
                      'APPS_IMAGE',
                      'CBSP_APPS_IMAGE',
                      'QDSP6_SW_IMAGE',
                      'CBSP_QDSP6_SW_IMAGE'],
                      '${BUILDPATH}/ECCCORE',
                      ECC_CORE_LIB_SOURCES)

