#===============================================================================
#
#  CBSP Build system
#
#  General Description
#     Documents Build script file for multimedia.
#
# Copyright (c) 2010-2010 by Qualcomm Technologies, Incorporated.
# All Rights Reserved.
# QUALCOMM Proprietary/GTDR
#
#-------------------------------------------------------------------------------
#
# $Header: //source/qcom/qct/core/bsp/docs/main/latest/build/docs/docs.scons#1 $
#
#===============================================================================
import os
Import('env')

env = env.Clone()

if env.has_key('PRINT_BUILD_BANNER'):
   print "\n"
   print "   ---------------------------------------------------------------------------"
   print "      Loading MM Documents build system"
   print "   ---------------------------------------------------------------------------"

#------------------------------------------------------------------------------
# Check if we need to load this script or just bail-out
#------------------------------------------------------------------------------
# alias first alias is always the target then the other possibles
aliases = [
   'mmdocs', 'amssdocs',
   'all'
]

# init environment variables
env.InitImageVars(aliases, 'doc', config='none',
    tools = [ '${BUILD_ROOT}/tools/build/scons/scripts/comcc_addt.py', 
              '${BUILD_ROOT}/core/bsp/build/scripts/doc_builder.py'
              ])

# check if we even need to build this iamge
if not env.CheckAlias(alias_list = aliases):
   Return()

#------------------------------------------------------------------------------
# Print banner
#------------------------------------------------------------------------------
env.PrintImageBanner()

#------------------------------------------------------------------------------
# Init defualt values this PROC/Image
#------------------------------------------------------------------------------
# set image type
env.Replace(MM_DOCS = env.subst('${PROC}'))

#------------------------------------------------------------------------------
# Configure and load in CBSP uses and path variables
#------------------------------------------------------------------------------
env.InitBuildConfig(target_files=False)

docs_build_units = []
#------------------------------------------------------------------------------
# Decide build steps
#------------------------------------------------------------------------------
# regular build steps (no filter) is build everything, once a user start 
# using filters we have to make decisions depending on user input.
# The LoadAUSoftwareUnits function will take care of filtering subsystem, units, 
# etc. This is to take care of what steps to enable disable from the top level
# script, such as building files specify in this script i.e. quatz, stubs, etc.
# -- Not applicable for Documentation as there isnt a single piece that ties up
#    all the documents after individual documents are created

do_local_files = True 

# get user input from command line
filter_opt = env.get('FILTER_OPT')

# make decisions
if filter_opt is not None:
   if not env.FilterMatch(os.getcwd()):
      do_local_files = False

#---------------------------------------------------------------------------
# Load Documents from Area units
#---------------------------------------------------------------------------
# Load Core BSP docs file nodes
mm_units = env.LoadAreaSoftwareUnits('multimedia')
docs_build_units.extend(mm_units.get('DOCS'))

# pair aliases with build units
for alias in aliases:
   env.Alias(alias, docs_build_units)
