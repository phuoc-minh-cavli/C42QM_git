# Build rules for libefs_async_put.

.DEFAULT: libefs_async_put.a

EFS_ASYNC_PUT_MODULES = \
        fs_async_put \
        fs_async_put_task \
        #end

# Flags for efs_async_put:
CFLAGS += -Werror
CFLAGS += -std=c99 -pedantic


if $(defined-env CALLGRAPH)
    CFLAGS += -finstrument-functions
    CFLAGS += -DENABLE_INSTRUMENT_FUNCTIONS
    CFLAGS += -D'CALLGRAPH_OUTPUT_FILE="$(EXENAME)"'
    export

INCLUDES += $(dir $(ROOT)/efs/api)
INCLUDES += $(dir $(ROOT)/efs/inc)
INCLUDES += $(dir $(ROOT)/efs_async_put/api)
INCLUDES += $(dir $(ROOT)/efs_async_put/inc)
INCLUDES += $(dir $(ROOT)/csupport)

CFLAGS_BASE = $(CFLAGS)

StaticCLibrary (libefs_async_put, $(EFS_ASYNC_PUT_MODULES))

######################################################################
# Linting.

# Lint needs the GCC specific search dirs.  To start with, just grab the
# GCC install base.
GCC_BASE = $(shell $(CC) --print-search-dirs | grep 'install:' | \
             sed 's/install: //')

LINT = flint
# Start the LINT_FLAGS with what is specified in the build-config file.
LINT_FLAGS = $(CFG_LINT_FLAGS)

LINT_DEPS =
LINT_DEPS += $(file $(ROOT)/etc/lint/co-gnu3.lnt)
LINT_DEPS += $(file $(ROOT)/efs/src/efs.lnt)
LINT_DEPS += $(file $(ROOT)/etc/lint/off-target.lnt)
LINT_DEPS += $(file $(ROOT)/etc/lint/amss_std.lnt)

LINT_FLAGS += $(LINT_DEPS)

LINT_FLAGS += -I$(dir $(ROOT)/efs/api)
LINT_FLAGS += -I$(dir $(ROOT)/efs/inc)
LINT_FLAGS += -I$(dir $(ROOT)/efs_async_put/api)
LINT_FLAGS += -I$(dir $(ROOT)/efs_async_put/inc)
LINT_FLAGS += -I$(dir $(ROOT)/csupport)
LINT_FLAGS += -I$(dir $(GCC_BASE)/include)
LINT_FLAGS += -I/usr/include

# Needed, until buffer removes the MD5 stuff.
LINT_FLAGS += -I$(OCAML_BASE)

LINT_FLAGS += -DFS_STANDALONE
LINT_FLAGS += -DFEATURE_EFS2

section
        CFILES = $(addsuffix .c, $(EFS_ASYNC_PUT_MODULES))
        efs_async_put_lint.stamp: $(CFILES) $(LINT_DEPS)
                rm -f efs_async_put_lint.stamp
                $(LINT) $(LINT_FLAGS) $(CFILES)
                touch efs_async_put_lint.stamp
######################################################################

