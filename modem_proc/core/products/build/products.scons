#	Title: Sconscript

#	License: License
#	Copyright 2010 Qualcomm Technologies Inc

#	Description: General Description
#	Sconscript for CoreBSP Products CMM scripts

#	Team: Functional Area
#	CoreBSP Products 8660

#	Target: Target
#	MSM8660

#	Author: Author
#  $Author: amcheriy $

#	Location: Perforce Revision
#  $Header: //source/qcom/qct/core/products/labtools/legacy/8660/Modem/core/products/build/SConscript $

#	Edits: Edits
#	amcheriy	: First cut for Badger MPSS 2.0			: 11/11/11
# ------------------------------------------------------------------------------------------

# Technically, the sconscript starts here	
Import('env')
env = env.Clone()

if env['MSM_ID'] in ['9607']:
  Return()

env.VariantDir('${BUILDPATH}', "${BUILD_ROOT}/core/products", duplicate=0)


#SRCPATH = env['BUILD_ROOT']+'/core/products/scripts'


#env.AddCMMScripts('MPSS',[SRCPATH],'Debug')


CBSP_API = [
   'DAL',
   'SECUREMSM',
   'BUSES',
   'SERVICES',
   'MPROC',
   'WIREDCONNECTIVITY',
   'KERNEL',
   'MEMORY',
   'DEBUGTOOLS',
   'SYSTEMDRIVERS',
   'POWER',
   'SERVICES',
   'STORAGE',
   'PRODUCTS_UTILITY',
]

env.RequirePublicApi(CBSP_API)
env.RequireRestrictedApi(CBSP_API)

env.PublishPrivateApi('PRODUCTS', 
	['${BUILD_ROOT}/core/products/dehr/inc/',]
	)

env.PublishPublicApi('PRODUCTS_UTILITY', 
	['${BUILD_ROOT}/core/api/products',]
	)

CBSP_SENSOR_ONLY_COMMON = [
   '${BUILDPATH}/products_utility.c',
]
CBSP_PAGE_ONLY_COMMON = [
   '${BUILDPATH}/corebsp_rpm.c',
   '${BUILDPATH}/products_utility.c',
]
CBSP_FULL_IMG_COMMON = [
   '${BUILDPATH}/products_utility.c',
   '${BUILDPATH}/dehr/src/dehr.c',
]

CBSP_FULL_IMG = [
   'CORE_MODEM',
   'CORE_QDSP6_SW',
   'MODEM_MODEM',
   'MBA_CORE_SW',
]

CBSP_PAGE_ONLY_IMG = [
   'MODEM_PAGEONLY',
]
CBSP_SENSOR_ONLY_IMG = [
   'MODEM_SENSORONLY',
]

#env.AddLibrary(CBSPSTUBS_IMG, '${BUILDPATH}/products', CBSPSTUBS_COMMON)

if 'USES_BUILD_PAGEONLY_IMAGE' in env :
    env.AddLibrary(CBSP_PAGE_ONLY_IMG, '${BUILDPATH}/products', CBSP_PAGE_ONLY_COMMON)

if 'USES_BUILD_SENSORONLY_IMAGE' in env :
    env.AddLibrary(CBSP_SENSOR_ONLY_IMG, '${BUILDPATH}/products', CBSP_SENSOR_ONLY_COMMON)

env.AddLibrary(CBSP_FULL_IMG, '${BUILDPATH}/products', CBSP_FULL_IMG_COMMON)

RCINIT_IMG = ['CORE_MODEM','CORE_QDSP6_SW', 'CBSP_QDSP_SW_IMAGE', 'QDSP6_SW_IMAGE']
RCINIT_IMG_1 = ['CORE_MODEM','CORE_QDSP6_SW', 'CBSP_QDSP_SW_IMAGE', 'QDSP6_SW_IMAGE','MODEM_SENSORONLY']

if 'USES_RCINIT' in env and 'USES_DISABLE_BIMC_PC' not in env :
	env.AddRCInitFunc(
		RCINIT_IMG,
		{
			'sequence_group'             : 'RCINIT_GROUP_1',         # required
			'init_name'                  : 'DEHR_init',       		 # required
			'init_function'              : 'DEHR_init'       	     # required
		})

if 'USES_RCINIT' in env :
	env.AddRCInitFunc(
		RCINIT_IMG_1,
		{
			'sequence_group'             : 'RCINIT_GROUP_2',         # required
			'init_name'                  : 'product_flash_log',       		 # required
			'init_function'              : 'product_flash_log',      	     # required
            'dependencies'               : ['time','time_init_config_function']  
		})

#-------------------------------------------------------------------------------
# Load sub scripts
#-------------------------------------------------------------------------------
env.LoadSoftwareUnits()
	
	

