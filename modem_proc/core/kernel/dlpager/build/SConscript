#===============================================================================
#
# DL PAGER Libs
#
# GENERAL DESCRIPTION
#    build script
#
# Copyright (c) 2009-2009 by QUALCOMM, Incorporated.
# All Rights Reserved.
# QUALCOMM Proprietary/GTDR
#
#-------------------------------------------------------------------------------
#
#  $Header: //components/rel/core.mpss/3.10/kernel/dlpager/build/SConscript#1 $
#  $DateTime: 2018/06/26 03:18:17 $
#  $Author: pwbldsvc $
#-------------------------------------------------------------------------------
#                      EDIT HISTORY FOR FILE
#
#  This section contains comments describing changes made to the module.
#  Notice that changes are listed in reverse chronological order.
#
# when       who     what, where, why
# --------   ---     ---------------------------------------------------------
# 03/15/2010 op     created 
#===============================================================================
Import('env')
env = env.Clone()
env.Replace(HEXAGON_WARN = "-Wpointer-arith -Wno-missing-braces")
env.Replace(HEXAGONCC_OPT = "${HEXAGON_OPT_2}")

#-------------------------------------------------------------------------------
# Source PATH
#-------------------------------------------------------------------------------
SRCPATH = "${COREBSP_ROOT}/kernel/dlpager"


env.VariantDir('${BUILDPATH}', SRCPATH, duplicate=0)
IMAGE_SOURCES = ['MODEM_MODEM','CBSP_MODEM_IMAGE','CORE_MODEM','CORE_QDSP6_SW']

#-------------------------------------------------------------------------------
# External depends within CoreBSP
#-------------------------------------------------------------------------------

#-------------------------------------------------------------------------------
# Internal depends within CoreBSP
#-------------------------------------------------------------------------------
CBSP_API = [ 'KERNEL' , 'DAL', 'POWER' , 'SERVICES', 'DEBUGTOOLS']

env.PublishPrivateApi('DLPAGER', ['${COREBSP_ROOT}/kernel/dlpager/inc'])
env.RequirePublicApi(CBSP_API)
env.RequireRestrictedApi(CBSP_API)


#-------------------------------------------------------------------------------
# Sources, libraries
#-------------------------------------------------------------------------------
DL_PAGER_LOADER_C_SOURCES = [
   #'${BUILDPATH}/src/dlpager_intf_template.c',
   '${BUILDPATH}/src/dlpager_q6zip.c',
   '${BUILDPATH}/src/dlpager_log.c',
   '${BUILDPATH}/src/dlpager_aux.c',
   '${BUILDPATH}/src/q6zip_clk.c',
   '${BUILDPATH}/src/q6zip_partial.c',
   '${BUILDPATH}/src/q6zip_uncompress2.S',
   '${BUILDPATH}/src/dlpager_cache.S',
   '${BUILDPATH}/src/rw_compress.s',
   '${BUILDPATH}/src/rw_uncompress.s',
]

DL_PAGER_LIB_C_SOURCES = [
   '${BUILDPATH}/src/memload_handler.c',   
   '${BUILDPATH}/src/dlpager_main.c',
]

#-------------------------------------------------------------------------------
# Add Libraries to image
#-------------------------------------------------------------------------------

if env.has_key('USES_QURT_DEMAND_PAGE'):
   env.AddLibrary(
      ['MODEM_MODEM','CBSP_MODEM_IMAGE','MODEM_IMAGE','CORE_MODEM','CORE_QDSP6_SW'],
      '${BUILDPATH}/dlpager', [DL_PAGER_LIB_C_SOURCES, DL_PAGER_LOADER_C_SOURCES])

RCINIT_IMG = ['CORE_MODEM', 'CORE_QDSP6_SW']
if 'USES_RCINIT' in env and 'USES_QURT_DEMAND_PAGE' in env:
   env.AddRCInitFunc(         # Code Fragment in TMC: YES
    RCINIT_IMG,               # define TMC_RCINIT_INIT_TIMER_TASK_INIT
    {
     'sequence_group'             : 'RCINIT_GROUP_0',              # required
      'init_name'                  : 'dlpager_q6zip',                          # required
      'init_function'              : 'dlpager_q6zip_init',                     # required
      'dependencies'               : ['npa','clk_regime',]
    })

   env.AddRCInitFunc(           # Code Fragment in TMC: NO
    RCINIT_IMG,                 # define RCINIT_IMG
    {
     'sequence_group'             : 'RCINIT_GROUP_0',              # required
     'init_name'                  : 'dlpager',                     # required
     'init_function'              : 'dlpager_init',                # required
     'dependencies'               : ['dlpager_q6zip',]

    })

if 'USES_CMMBUILDER' in env:
    OPTPATH=env.subst(env['BUILD_ROOT'] + "/core/kernel/dlpager/compressor")
    env.AddCMMScripts ('MPSS', [OPTPATH], { 'q6zip_t32.opt' : ['Q6ZIP Tool', 'Q6ZPATH'] }, 'Kernel')