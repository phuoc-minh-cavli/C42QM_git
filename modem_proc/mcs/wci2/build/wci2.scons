#===============================================================================
#
# MWCI2 Scons
#
# GENERAL DESCRIPTION
#    Build script for modem WCI-2 interface
#
# Copyright (c) 2013 Qualcomm Technologies Incorporated.
# All Rights Reserved.
# Qualcomm Confidential and Proprietary

# Export of this technology or software is regulated by the U.S. Government.
# Diversion contrary to U.S. law prohibited.

# All ideas, data and information contained in or disclosed by
# this document are confidential and proprietary information of
# Qualcomm Technologies Incorporated and all rights therein are expressly reserved.
# By accepting this material the recipient agrees that this material
# and the information contained therein are held in confidence and in
# trust and will not be used, copied, reproduced in whole or in part,
# nor its contents revealed in any manner to others without the express
# written permission of Qualcomm Technologies Incorporated.
#
#-------------------------------------------------------------------------------
#
#  $Header: $
#
#                      EDIT HISTORY FOR FILE
#
#  This section contains comments describing changes made to the module.
#  Notice that changes are listed in reverse chronological order.
#
# when       who     what, where, why
# --------   ---     ---------------------------------------------------------
# 08/20/18   ag      Remove !ioe check
# 10/17/14   btl     Set WCI2 CXM_UART adv HW mode on by default
# 07/14/14   btl     Remove deps on CXM Task, Remove WCI2 task
# 05/20/14   btl     Disable WCI2 subsystem when UART not present
#            ckk     Initial version.
#===============================================================================
Import('env')
env = env.Clone()
Return()

from glob import glob
from os.path import join, basename

#-------------------------------------------------------------------------------
# Need to get access to MCS Protected headers
#-------------------------------------------------------------------------------
env.RequireProtectedApi(['MCS'])

#-------------------------------------------------------------------------------
# Setup source PATH
#-------------------------------------------------------------------------------
SRCPATH = "../src"
env.VariantDir('${BUILDPATH}', SRCPATH, duplicate=0)

#-------------------------------------------------------------------------------
# Setup featurization used in WCI2
#-------------------------------------------------------------------------------
env.Append(CPPDEFINES = ["WCI2_FEATURE_ADV_UART_HW"])

#-------------------------------------------------------------------------------
# Add WCI2 task to RCInit
#-------------------------------------------------------------------------------
if 'USES_MODEM_RCINIT' in env:
  RCINIT_IMG = ['MODEM_MODEM']
  env.AddRCInitFunc(
  RCINIT_IMG,
  {
    'sequence_group'             : 'RCINIT_GROUP_3',
    'init_name'                  : 'wci2_init',          
    'init_function'              : 'wci2_main_init',
    'dependencies'               : ['timer','GPIOInt'],
    'policy_optin'               : ['default', 'ftm', ],
  })

#-------------------------------------------------------------------------------
# Generate the library and add to an image
#-------------------------------------------------------------------------------
MWCI2_SRC  = ['${BUILDPATH}/' + basename(fname)
              for fname in glob(join(env.subst(SRCPATH), '*.c'))]

# Add our library to the Modem Modem image
env.AddLibrary(['MODEM_MODEM', 'MOB_MCS_WCI2'], '${BUILDPATH}/wci2', MWCI2_SRC)
