#===============================================================================
#
# MCS LIMITSMGR DDR COEX Scons
#
# GENERAL DESCRIPTION
#    build script
#
# Copyright (c) 2013 by Qualcomm Technologies, Incorporated.
# All Rights Reserved.
# QUALCOMM Proprietary/GTDR
#
#-------------------------------------------------------------------------------
#
#  $Header: //components/rel/mcs.mpss/5.1/limitsmgr/ddr_coex/build/lmtsmgr_ddr_coex.scons#1 $
#
#                      EDIT HISTORY FOR FILE
#
#  This section contains comments describing changes made to the module.
#  Notice that changes are listed in reverse chronological order.
#
# when       who     what, where, why
# --------   ---     ---------------------------------------------------------
# 11/25/13   jm      Include in MCS MOB build
# 11/21/13   jm      Initial version.
#===============================================================================
Import('env')
env = env.Clone()

from glob import glob
from os.path import join, basename

#-------------------------------------------------------------------------------
# Setup source PATH
#-------------------------------------------------------------------------------
SRCPATH = "../src"

env.VariantDir('${BUILDPATH}', SRCPATH, duplicate=0)

#-------------------------------------------------------------------------------
# Set MSG_BT_SSID_DFLT for CXM MSG macros
#-------------------------------------------------------------------------------
env.Append(CPPDEFINES = [
    "MSG_BT_SSID_DFLT=MSG_SSID_CXM",
])

#-------------------------------------------------------------------------------
# Necessary Public and Restricted API's
#-------------------------------------------------------------------------------
env.RequirePublicApi([
               'DAL',
               'DEBUGTOOLS',
               'LTE',
               'MPROC',
               'SERVICES',
               'SYSTEMDRIVERS',
               'POWER',
               'KERNEL',          # needs to be last
               ], area='core')

# Need to get access to MOB headers
env.RequirePublicApi('QTF', area='mob')

# Need to get access to Modem Public headers
env.RequirePublicApi([ 'MCS', 
                       'MMODE',
                       'NAS',
                       'ONEX',
                       'RFA'])

# Need to get access to Modem Restricted headers
env.RequireRestrictedApi([ 'FW',
                           'MCS',
                           'MMODE',
                           'NAS',
                           'GERAN',
                           'ONEX',
                           'LTE',
                           'RFA'])

# Need to get access to MCS Protected headers
env.RequireProtectedApi(['MCS'])
	
#-------------------------------------------------------------------------------
# Generate the library and add to an image
#-------------------------------------------------------------------------------
LIMITSMGR_DDR_SRC = ['${BUILDPATH}/' + basename(fname)
                     for fname in glob(join(env.subst(SRCPATH), '*.c'))]

# Add our library to the Modem Modem image
env.AddLibrary(['MODEM_MODEM','MOB_MCS_LMTSMGR_DDR_COEX'], '${BUILDPATH}/ddr_coex', LIMITSMGR_DDR_SRC)

# Load test units
env.LoadSoftwareUnits()
