#===============================================================================
#
# Crypto Driver Chipset Library
#
# GENERAL DESCRIPTION
#    build script
#
# Copyright (c) 2015 Qualcomm Technologies Incorporated.
# All Rights Reserved.
# QUALCOMM Proprietary/GTDR
#
#-------------------------------------------------------------------------------
#
#  $Header: //components/rel/rpm.bf/2.1.3/core/securemsm/cryptodrivers/prng/chipset/mdm9x05/build/SConscript#1 $
#  $DateTime: 2018/12/26 21:36:05 $
#  $Author: pwbldsvc $
#  $Change: 17934472 $
#                      EDIT HISTORY FOR FILE
#
#  This section contains comments describing changes made to the module.
#  Notice that changes are listed in reverse chronological order.
#
# when       who     what, where, why
# --------   ---     ---------------------------------------------------------
# 01/30/14    nk     Chipset specific
# 07/04/12    nk     Initial version
#
#===============================================================================
Import('env')
env = env.Clone()

#-------------------------------------------------------------------------------
# Publish Private APIs
#-------------------------------------------------------------------------------
env.PublishPrivateApi('PrngCL', [
   '${INC_ROOT}/core/securemsm/cryptodrivers/prng/shared/inc', 
   '${INC_ROOT}/core/securemsm/cryptodrivers/prng/chipset/${CHIPSET}/inc', 
   '${INC_ROOT}/core/securemsm/cryptodrivers/prng/environment/inc',
   '${INC_ROOT}/core/securemsm/cryptodrivers/prng/environment/env/rpm/inc',
])

#-------------------------------------------------------------------------------
# Source PATH
#-------------------------------------------------------------------------------
SRCPATH = "${BUILD_ROOT}/core/securemsm/cryptodrivers/prng/chipset/${CHIPSET}/src"
HDRPATH = "${BUILD_ROOT}/core/securemsm/cryptodrivers/prng/chipset/${CHIPSET}/inc"

env.VariantDir('${BUILDPATH}', SRCPATH, duplicate=0)

#-------------------------------------------------------------------------------
# External depends outside CoreBSP
#-------------------------------------------------------------------------------
env.RequireExternalApi([
   'BREW',
   'CS',
   'DSM',
])

#-------------------------------------------------------------------------------
# Internal depends within CoreBSP
#-------------------------------------------------------------------------------
CBSP_API = [
   'DAL',
   'DEBUGTOOLS',
   'HAL',
   'MPROC',
   'SECUREMSM',
   'SERVICES',
   'STORAGE',
   'SYSTEMDRIVERS',
   'WIREDCONNECTIVITY',
   'BOOT',
   'HWENGINES',
   'POWER',
   # needs to be last also contains wrong comdef.h
   'KERNEL',
]

env.RequirePublicApi(CBSP_API)
env.RequireRestrictedApi(CBSP_API)

#-------------------------------------------------------------------------------
# Generate PRNG HWIO definitions
#-------------------------------------------------------------------------------
#if env.has_key('HWIO_IMAGE'):
   # env.AddHWIOFile('HWIO', [
   #     {
   #         'filename': '${INC_ROOT}/core/securemsm/cryptodrivers/prng/chipset/${CHIPSET}/inc/PrngCL_Msmhwioreg.h',
   #         'modules': ['PRNG_PRNG', 'GCC_CLK_CTL_REG'],
   #         'output-offsets': False,
   #         'header':
   #             '#include "msmhwiobase.h"\n\n'
   #     }
   # ])

#-------------------------------------------------------------------------------
# Compiler, object, and linker definitions
#-------------------------------------------------------------------------------
env.Append(ARMCC_CODE = " ${ARM_SPLIT_SECTIONS}")
env.Replace(ARMLD_NOREMOVE_CMD = "")

env.Append(CPPDEFINES = ['_ARM_', '__arm', 'ARM', 'ARM_BREW_BUILD'])
env.Append(ARMCC_OPT = ' --loose_implicit_cast ')
env.Append(ARMCPP_OPT = ' --loose_implicit_cast ')
if env.has_key('BUILD_BOOT_CHAIN'):
   env.Append(CPPDEFINES = ['FEATURE_LIBRARY_ONLY'])

#-------------------------------------------------------------------------------
# Sources, libraries
#-------------------------------------------------------------------------------

PrngCL_LIB_SOURCES = [
        '${BUILDPATH}/PrngCL.c',
        '${BUILDPATH}/PrngCL_DALIntf.c',
]

CLEAN_SOURCES = env.FindFiles("*", "${BUILD_ROOT}/core/securemsm/cryptodrivers/prng/chipset/msm8936/")
env.CleanPack(['RPM_IMAGE', 'CORE_RPM'], CLEAN_SOURCES)

CLEAN_SOURCES = env.FindFiles("*", "${BUILD_ROOT}/core/securemsm/cryptodrivers/prng/chipset/msm8909/")
env.CleanPack(['RPM_IMAGE', 'CORE_RPM'], CLEAN_SOURCES)

CLEAN_SOURCES = env.FindFiles("*", "${BUILD_ROOT}/core/securemsm/cryptodrivers/prng/chipset/msm8916/")
env.CleanPack(['RPM_IMAGE', 'CORE_RPM'], CLEAN_SOURCES)

CLEAN_SOURCES = env.FindFiles("*", "${BUILD_ROOT}/core/securemsm/cryptodrivers/prng/chipset/msm8952/")
env.CleanPack(['RPM_IMAGE', 'CORE_RPM'], CLEAN_SOURCES)

#-------------------------------------------------------------------------------
# Add Libraries to image
#-------------------------------------------------------------------------------
#RPM library
env.AddBinaryLibrary(['CORE_RPM'], '${BUILDPATH}/PrngCL', PrngCL_LIB_SOURCES)
