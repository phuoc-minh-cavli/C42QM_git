#===============================================================================
#
# GENERAL DESCRIPTION
#    QUP Access Control Settings
#
# Copyright (c) 2018 Qualcomm Technologies, Inc.
#            All Rights Reserved.
# Qualcomm Technologies, Inc. Confidential and Proprietary.
#
#-------------------------------------------------------------------------------
#                      EDIT HISTORY FOR FILE
#
#  This section contains comments describing changes made to the module.
#  Notice that changes are listed in reverse chronological order.
#
# when       who     what, where, why
# --------   ---     ---------------------------------------------------------
# 12/12/18   DPK     Removed unused code.
# 03/20/18   VG      Initial version.
#
#===============================================================================
import os
Import('env')

#-------------------------------------------------------------------------------
# Source PATH
#-------------------------------------------------------------------------------
env = env.Clone()
env.Append(CPPDEFINES = ["FEATURE_LIBRARY_ONLY"])   
#SRCPATH = "../src"

#env.VariantDir('${BUILDPATH}', SRCPATH, duplicate=0) 

if "USES_DEPLOY_BUILDER" in env:
   env.Deploy(['../interface/QupACCommonIds.h',
               '../build/qupac_blsp_settings.api',
               '../build/qupac_blsp_settings.scons'])
   if os.path.isfile(env.subst("${BUILD_ROOT}/core/settings/buses/qup_accesscontrol/blsp/xpuv2/interface/${MSM_ID}/TzBlspAltDeviceInfo.h")): 
      env.Deploy(['../interface/${MSM_ID}/TzBlspAltDeviceInfo.h'])

#-------------------------------------------------------------------------------
# Internal depends within CoreBSP
#-------------------------------------------------------------------------------
CBSP_APIS = [
   'DAL',
   'SYSTEMDRIVERS',
   'KERNEL',
   'SERVICES',
   'BUSES'
]

env.RequirePublicApi(CBSP_APIS, area='core')
env.RequireRestrictedApi(CBSP_APIS)

SSG_APIS = [
   'AC',
   'SECUREMSM',
   'TZCHIPSET'
]

env.RequirePublicApi(SSG_APIS, area='ssg')

#---------------------------------------------------------------------------
# Access Control Config
#--------------------------------------------------------------------------- 

#if env.has_key('DAL_DEVCFG_OEM_IMG', 'DAL_DEVCFG_IMG'): #global for both TZ & HYP
if os.path.isdir(env.subst("${BUILD_ROOT}/core/settings/buses/qup_accesscontrol/blsp/xpuv2/config/${MSM_ID}")):
   env.Replace(TARGET_DIR = '${MSM_ID}') # Common XML to both TZ & HYP
else:
   env.Replace(TARGET_DIR = 'stubs')
   env.PrintWarning("QUP devcfg not implemented... using stubs.")


#---------------------------------------------------------------------------
# Device Config
# Add access xml to TZ.
#---------------------------------------------------------------------------
if 'USES_DEVCFG' in env:
   DEVCFG_IMG = ['DAL_DEVCFG_OEM_QSEE_IMG']
   env.AddDevCfgInfo(DEVCFG_IMG, 
   {
      'devcfg_xml'    : '${BUILD_ROOT}/core/settings/buses/qup_accesscontrol/blsp/xpuv2/config/${TARGET_DIR}/QUPAC_Access.xml'
   })
   if os.path.isfile(env.subst("${BUILD_ROOT}/core/settings/buses/qup_accesscontrol/blsp/xpuv2/config/${TARGET_DIR}/QcomInternal/QUPAC_Access_Internal.xml")):
      DEVCFG_IMG = ['DAL_DEVCFG_IMG', 'DAL_DEVCFG_QSEE_IMG']
      env.AddDevCfgInfo(DEVCFG_IMG, 
      {
         'devcfg_xml'    : '${BUILD_ROOT}/core/settings/buses/qup_accesscontrol/blsp/xpuv2/config/${TARGET_DIR}/QcomInternal/QUPAC_Access_Internal.xml'
      })

